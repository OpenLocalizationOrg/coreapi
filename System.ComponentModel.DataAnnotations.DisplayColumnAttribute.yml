items:
- uid: System.ComponentModel.DataAnnotations.DisplayColumnAttribute
  commentId: T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute
  id: DisplayColumnAttribute
  parent: System.ComponentModel.DataAnnotations
  children:
  - System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String)
  - System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String,System.String)
  - System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String,System.String,System.Boolean)
  - System.ComponentModel.DataAnnotations.DisplayColumnAttribute.DisplayColumn
  - System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortColumn
  - System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortDescending
  langs:
  - csharp
  - vb
  name: DisplayColumnAttribute
  fullName: System.ComponentModel.DataAnnotations.DisplayColumnAttribute
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayColumnAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DisplayColumnAttribute
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayColumnAttribute.cs
    startLine: 10
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Specifies the column that is displayed in the referred table as a foreign-key column.</p>\n"
  remarks: "\n<p>When a column in a table contains a foreign key, Dynamic Data infers the display value for that column from the referenced table. By default, the first column of the referenced table whose type is string (or text) is used. The <xref href=\"System.ComponentModel.DataAnnotations.DisplayColumnAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute enables you to change this default behavior and to specify a different parent table column to use as the column for the foreign key field.</p>\n<p>When you apply this attribute, you must adhere to the following usage constraints:</p>\n<ul><li>\n<p>The attribute can only be applied to a class.</p>\n</li><li>\n<p>The attribute can be inherited by derived classes.</p>\n</li><li>\n<p>The attribute can be applied only one time.</p>\n</li></ul>\n"
  example:
  - "\n<p>The following example shows how to use the <xref href=\"System.ComponentModel.DataAnnotations.DisplayColumnAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute. The example performs the following tasks:</p>\n<ul><li>\n<p>Implements metadata partial classes for the Address and Customer tables, which are parent tables for the CustomerAddress table. </p>\n</li><li>\n<p>Applies the <xref href=\"System.ComponentModel.DataAnnotations.DisplayColumnAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute to the <code>Address</code> metadata partial class to specify the following:</p>\n<ul><li>\n<p>The City column from the Address table (the parent table) is displayed as the foreign-key column in the CustomerAddress child table.</p>\n</li><li>\n<p>The PostalCode column from the Address table (the parent table) is used for sorting the Address selection box in the CustomerAddress child table.</p>\n</li><li>\n<p>The sort order is set to ascending.</p>\n</li></ul>\n</li></ul>\n<p>The example applies the <xref href=\"System.ComponentModel.DataAnnotations.DisplayColumnAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute to the <code>Customer</code> metadata partial class to specify that the LastName column in displayed as the foreign-key column for the CustomerAddress table.</p>System.ComponentModel.DataAnnotations.DisplayColumnAttribute#1<p>To compile the example, you need the following:</p><ul><li><p>Visual Studio 2008 Service Pack 1 or Visual Developer 2008 Express Edition Service Pack 1. </p></li><li><p>The AdventureWorksLT sample database. For information about how to download and install the SQL Server sample database, see <see href=\"http://go.microsoft.com/fwlink/?LinkId=117483\">Microsoft SQL Server Product Samples: Database</see> on the CodePlex site. Make sure that you install the correct version of the sample database for the version of SQL Server that you are running (SQL Server 2005 or SQL Server 2008).</p></li><li><p>A dynamic data-driven Web site. This enables you to create a data context for the database and to create the class that contains the data field to customize. For more information, see Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding.</p></li></ul>"
  syntax:
    content: 'public class DisplayColumnAttribute : Attribute'
    content.vb: >-
      Public Class DisplayColumnAttribute
          Inherits Attribute
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String)
  commentId: M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.DataAnnotations.DisplayColumnAttribute
  langs:
  - csharp
  - vb
  name: DisplayColumnAttribute(String)
  fullName: System.ComponentModel.DataAnnotations.DisplayColumnAttribute.DisplayColumnAttribute(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayColumnAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayColumnAttribute.cs
    startLine: 13
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayColumnAttribute\" data-throw-if-not-resolved=\"false\"></xref> class by using the specified column. </p>\n"
  example:
  - "\n<p>The following example shows how to define the parent column to display in a page for the child table as the foreign-key column.</p>System.ComponentModel.DataAnnotations.DisplayColumnAttribute#3"
  syntax:
    content: public DisplayColumnAttribute(string displayColumn)
    content.vb: Public Sub New(displayColumn As String)
    parameters:
    - id: displayColumn
      type: System.String
      description: "\n<p>The name of the column to use as the display column.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String,System.String)
  commentId: M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.ComponentModel.DataAnnotations.DisplayColumnAttribute
  langs:
  - csharp
  - vb
  name: DisplayColumnAttribute(String, String)
  fullName: System.ComponentModel.DataAnnotations.DisplayColumnAttribute.DisplayColumnAttribute(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayColumnAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayColumnAttribute.cs
    startLine: 18
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayColumnAttribute\" data-throw-if-not-resolved=\"false\"></xref> class by using the specified display and sort columns. </p>\n"
  remarks: "\n<p>By default, the column specified in <em>sortColumn</em> will be sorted in ascending order.</p>\n"
  example:
  - 
  syntax:
    content: public DisplayColumnAttribute(string displayColumn, string sortColumn)
    content.vb: Public Sub New(displayColumn As String, sortColumn As String)
    parameters:
    - id: displayColumn
      type: System.String
      description: "\n<p>The name of the column to use as the display column.</p>\n"
    - id: sortColumn
      type: System.String
      description: "\n<p>The name of the column to use for sorting.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String,System.String,System.Boolean)
  commentId: M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.Boolean)'
  parent: System.ComponentModel.DataAnnotations.DisplayColumnAttribute
  langs:
  - csharp
  - vb
  name: DisplayColumnAttribute(String, String, Boolean)
  fullName: System.ComponentModel.DataAnnotations.DisplayColumnAttribute.DisplayColumnAttribute(System.String, System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayColumnAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayColumnAttribute.cs
    startLine: 23
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayColumnAttribute\" data-throw-if-not-resolved=\"false\"></xref> class by using the specified display column, and the specified sort column and sort order. </p>\n"
  example:
  - "\n<p>The following example shows how to define the parent column to display in a page for the child table as the foreign-key column. It sets the parent table column for sorting and also sets the sort order.</p>System.ComponentModel.DataAnnotations.DisplayColumnAttribute#2"
  syntax:
    content: public DisplayColumnAttribute(string displayColumn, string sortColumn, bool sortDescending)
    content.vb: Public Sub New(displayColumn As String, sortColumn As String, sortDescending As Boolean)
    parameters:
    - id: displayColumn
      type: System.String
      description: "\n<p>The name of the column to use as the display column.</p>\n"
    - id: sortColumn
      type: System.String
      description: "\n<p>The name of the column to use for sorting.</p>\n"
    - id: sortDescending
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to sort in descending order; otherwise, <strong>false</strong>. The default is <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayColumnAttribute.DisplayColumn
  commentId: P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.DisplayColumn
  id: DisplayColumn
  parent: System.ComponentModel.DataAnnotations.DisplayColumnAttribute
  langs:
  - csharp
  - vb
  name: DisplayColumn
  fullName: System.ComponentModel.DataAnnotations.DisplayColumnAttribute.DisplayColumn
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayColumnAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DisplayColumn
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayColumnAttribute.cs
    startLine: 30
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets the name of the column to use as the display field.</p>\n"
  example:
  - 
  syntax:
    content: public string DisplayColumn { get; }
    content.vb: Public ReadOnly Property DisplayColumn As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the display column.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortColumn
  commentId: P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortColumn
  id: SortColumn
  parent: System.ComponentModel.DataAnnotations.DisplayColumnAttribute
  langs:
  - csharp
  - vb
  name: SortColumn
  fullName: System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortColumn
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayColumnAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SortColumn
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayColumnAttribute.cs
    startLine: 32
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets the name of the column to use for sorting.</p>\n"
  example:
  - 
  syntax:
    content: public string SortColumn { get; }
    content.vb: Public ReadOnly Property SortColumn As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the sort column.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortDescending
  commentId: P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortDescending
  id: SortDescending
  parent: System.ComponentModel.DataAnnotations.DisplayColumnAttribute
  langs:
  - csharp
  - vb
  name: SortDescending
  fullName: System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortDescending
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayColumnAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SortDescending
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayColumnAttribute.cs
    startLine: 34
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets a value that indicates whether to sort in descending or ascending order.</p>\n"
  example:
  - 
  syntax:
    content: public bool SortDescending { get; }
    content.vb: Public ReadOnly Property SortDescending As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the column will be sorted in descending order; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.ComponentModel.DataAnnotations
  isExternal: false
  name: System.ComponentModel.DataAnnotations
  fullName: System.ComponentModel.DataAnnotations
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
