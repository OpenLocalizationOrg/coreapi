items:
- uid: System.Runtime.Serialization.ContractNamespaceAttribute
  commentId: T:System.Runtime.Serialization.ContractNamespaceAttribute
  id: ContractNamespaceAttribute
  parent: System.Runtime.Serialization
  children:
  - System.Runtime.Serialization.ContractNamespaceAttribute.#ctor(System.String)
  - System.Runtime.Serialization.ContractNamespaceAttribute.ClrNamespace
  - System.Runtime.Serialization.ContractNamespaceAttribute.ContractNamespace
  langs:
  - csharp
  - vb
  name: ContractNamespaceAttribute
  fullName: System.Runtime.Serialization.ContractNamespaceAttribute
  type: Class
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/ContractNamespaceAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContractNamespaceAttribute
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/ContractNamespaceAttribute.cs
    startLine: 8
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Specifies the CLR namespace and XML namespace of the data contract. </p>\n"
  remarks: "\n<p>Apply the <xref href=\"System.Runtime.Serialization.ContractNamespaceAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute to an assembly that contains types to which the <xref href=\"System.Runtime.Serialization.DataContractAttribute\" data-throw-if-not-resolved=\"false\"></xref> has been applied. The <xref href=\"System.Runtime.Serialization.ContractNamespaceAttribute\" data-throw-if-not-resolved=\"false\"></xref> enables you to set a namespace that is different than the one generated when the type is serialized. For more information about how names are generated, see Data Contract Names.</p>\n<p>If you are using a type to conform to an existing data contract, you must match the namespace of the existing contract by using the <xref href=\"System.Runtime.Serialization.ContractNamespaceAttribute\" data-throw-if-not-resolved=\"false\"></xref> (or the <xref href=\"System.Runtime.Serialization.DataContractAttribute.Namespace\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"System.Runtime.Serialization.DataContractAttribute\" data-throw-if-not-resolved=\"false\"></xref> class).</p>\n<p>In any code, you can use the word <strong>ContractNamespace</strong> instead of the longer <xref href=\"System.Runtime.Serialization.ContractNamespaceAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example shows the <xref href=\"System.Runtime.Serialization.ContractNamespaceAttribute\" data-throw-if-not-resolved=\"false\"></xref> applied to an assembly. </p>ContractNamespaceAttribute#1"
  syntax:
    content: 'public sealed class ContractNamespaceAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class ContractNamespaceAttribute
          Inherits Attribute
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.Serialization.ContractNamespaceAttribute.#ctor(System.String)
  commentId: M:System.Runtime.Serialization.ContractNamespaceAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Runtime.Serialization.ContractNamespaceAttribute
  langs:
  - csharp
  - vb
  name: ContractNamespaceAttribute(String)
  fullName: System.Runtime.Serialization.ContractNamespaceAttribute.ContractNamespaceAttribute(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/ContractNamespaceAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/ContractNamespaceAttribute.cs
    startLine: 14
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.Serialization.ContractNamespaceAttribute\" data-throw-if-not-resolved=\"false\"></xref> class using the supplied namespace. </p>\n"
  example:
  - 
  syntax:
    content: public ContractNamespaceAttribute(string contractNamespace)
    content.vb: Public Sub New(contractNamespace As String)
    parameters:
    - id: contractNamespace
      type: System.String
      description: "\n<p>The namespace of the contract.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.ContractNamespaceAttribute.ClrNamespace
  commentId: P:System.Runtime.Serialization.ContractNamespaceAttribute.ClrNamespace
  id: ClrNamespace
  parent: System.Runtime.Serialization.ContractNamespaceAttribute
  langs:
  - csharp
  - vb
  name: ClrNamespace
  fullName: System.Runtime.Serialization.ContractNamespaceAttribute.ClrNamespace
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/ContractNamespaceAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ClrNamespace
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/ContractNamespaceAttribute.cs
    startLine: 19
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets or sets the CLR namespace of the data contract type. </p>\n"
  syntax:
    content: public string ClrNamespace { get; set; }
    content.vb: Public Property ClrNamespace As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The CLR-legal namespace of a type.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.ContractNamespaceAttribute.ContractNamespace
  commentId: P:System.Runtime.Serialization.ContractNamespaceAttribute.ContractNamespace
  id: ContractNamespace
  parent: System.Runtime.Serialization.ContractNamespaceAttribute
  langs:
  - csharp
  - vb
  name: ContractNamespace
  fullName: System.Runtime.Serialization.ContractNamespaceAttribute.ContractNamespace
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/ContractNamespaceAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContractNamespace
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/ContractNamespaceAttribute.cs
    startLine: 25
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets the namespace of the data contract members.</p>\n"
  remarks: "\n<p>This property can only be set using the constructor when applying the attribute to an assembly.</p>\n"
  example:
  - 
  syntax:
    content: public string ContractNamespace { get; }
    content.vb: Public ReadOnly Property ContractNamespace As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The namespace of the data contract members.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
