items:
- uid: System.Security.Claims.ClaimsPrincipal
  id: ClaimsPrincipal
  parent: System.Security.Claims
  children:
  - System.Security.Claims.ClaimsPrincipal.#ctor
  - System.Security.Claims.ClaimsPrincipal.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  - System.Security.Claims.ClaimsPrincipal.#ctor(System.IO.BinaryReader)
  - System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IIdentity)
  - System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IPrincipal)
  - System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  - System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.ClaimsPrincipal.Claims
  - System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector
  - System.Security.Claims.ClaimsPrincipal.Clone
  - System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)
  - System.Security.Claims.ClaimsPrincipal.Current
  - System.Security.Claims.ClaimsPrincipal.CustomSerializationData
  - System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.FindAll(System.String)
  - System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)
  - System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)
  - System.Security.Claims.ClaimsPrincipal.Identities
  - System.Security.Claims.ClaimsPrincipal.Identity
  - System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)
  - System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector
  - System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)
  - System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
  type: Class
  source:
    remote: &o0
      path: src/System.Security.Claims/ref/System.Security.Claims.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 79
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: An @'System.Security.Principal.IPrincipal' implementation that supports multiple claims-based identities.
  syntax:
    content: 'public class ClaimsPrincipal : IPrincipal'
    content.vb: Public Class ClaimsPrincipal Inherits IPrincipal
  inheritance:
  - System.Object
- uid: System.Security.Claims.ClaimsPrincipal.#ctor
  id: '#ctor'
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: ClaimsPrincipal()
  fullName: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipal()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 81
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Initializes a new instance of the @'System.Security.Claims.ClaimsPrincipal' class.
  syntax:
    content: public ClaimsPrincipal()
    content.vb: Public Sub New
- uid: System.Security.Claims.ClaimsPrincipal.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})'
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: ClaimsPrincipal(Collections.Generic.IEnumerable<ClaimsIdentity>)
  name.vb: ClaimsPrincipal(Collections.Generic.IEnumerable(Of ClaimsIdentity))
  fullName: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipal(System.Collections.Generic.IEnumerable<System.Security.Claims.ClaimsIdentity>)
  fullName.vb: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipal(System.Collections.Generic.IEnumerable(Of System.Security.Claims.ClaimsIdentity))
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 82
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Initializes a new instance of the @'System.Security.Claims.ClaimsPrincipal' class using the specified claims identities.
  syntax:
    content: public ClaimsPrincipal(Collections.Generic.IEnumerable<ClaimsIdentity> identities)
    content.vb: Public Sub New(identities As Collections.Generic.IEnumerable(Of ClaimsIdentity))
    parameters:
    - id: identities
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity}
      description: The identities from which to initialize the new claims principal.
  exceptions:
  - type: System.ArgumentNullException
    description: '*identities* is null.'
- uid: System.Security.Claims.ClaimsPrincipal.#ctor(System.IO.BinaryReader)
  id: '#ctor(System.IO.BinaryReader)'
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: ClaimsPrincipal(IO.BinaryReader)
  fullName: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipal(System.IO.BinaryReader)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 83
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  syntax:
    content: public ClaimsPrincipal(IO.BinaryReader reader)
    content.vb: Public Sub New(reader As IO.BinaryReader)
    parameters:
    - id: reader
      type: System.IO.BinaryReader
- uid: System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IIdentity)
  id: '#ctor(System.Security.Principal.IIdentity)'
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: ClaimsPrincipal(IIdentity)
  fullName: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipal(System.Security.Principal.IIdentity)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 84
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Initializes a new instance of the @'System.Security.Claims.ClaimsPrincipal' class from the specified identity.
  syntax:
    content: public ClaimsPrincipal(IIdentity identity)
    content.vb: Public Sub New(identity As IIdentity)
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: The identity from which to initialize the new claims principal.
  exceptions:
  - type: System.ArgumentNullException
    description: '*identity* is null.'
- uid: System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IPrincipal)
  id: '#ctor(System.Security.Principal.IPrincipal)'
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: ClaimsPrincipal(IPrincipal)
  fullName: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipal(System.Security.Principal.IPrincipal)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 85
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Initializes a new instance of the @'System.Security.Claims.ClaimsPrincipal' class from the specified principal.
  syntax:
    content: public ClaimsPrincipal(IPrincipal principal)
    content.vb: Public Sub New(principal As IPrincipal)
    parameters:
    - id: principal
      type: System.Security.Principal.IPrincipal
      description: The principal from which to initialize the new claims principal.
  exceptions:
  - type: System.ArgumentNullException
    description: '*principal* is null.'
- uid: System.Security.Claims.ClaimsPrincipal.Claims
  id: Claims
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: Claims
  fullName: System.Security.Claims.ClaimsPrincipal.Claims
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 86
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Gets a collection that contains all of the claims from all of the claims identities associated with this claims principal.
  syntax:
    content: public virtual Collections.Generic.IEnumerable<Claim> Claims { get; }
    content.vb: Public Overridable ReadOnly Property Claims As Collections.Generic.IEnumerable(Of Claim)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: The claims associated with this principal.
- uid: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector
  id: ClaimsPrincipalSelector
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: ClaimsPrincipalSelector
  fullName: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 87
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Gets and sets the delegate used to select the claims principal returned by the @'System.Security.Claims.ClaimsPrincipal.Current' property.
  syntax:
    content: public static Func<ClaimsPrincipal> ClaimsPrincipalSelector { get; set; }
    content.vb: Public Shared Property ClaimsPrincipalSelector As Func(Of ClaimsPrincipal)
    parameters: []
    return:
      type: System.Func{System.Security.Claims.ClaimsPrincipal}
      description: The delegate. The default is null.
- uid: System.Security.Claims.ClaimsPrincipal.Current
  id: Current
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: Current
  fullName: System.Security.Claims.ClaimsPrincipal.Current
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 88
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Gets the current claims principal.
  syntax:
    content: public static ClaimsPrincipal Current { get; }
    content.vb: Public Shared ReadOnly Property Current As ClaimsPrincipal
    parameters: []
    return:
      type: System.Security.Claims.ClaimsPrincipal
      description: The current claims principal.
- uid: System.Security.Claims.ClaimsPrincipal.CustomSerializationData
  id: CustomSerializationData
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: CustomSerializationData
  fullName: System.Security.Claims.ClaimsPrincipal.CustomSerializationData
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 89
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  syntax:
    content: protected virtual byte[] CustomSerializationData { get; }
    content.vb: Protected Overridable ReadOnly Property CustomSerializationData As Byte()
    parameters: []
    return:
      type: System.Byte[]
- uid: System.Security.Claims.ClaimsPrincipal.Identities
  id: Identities
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: Identities
  fullName: System.Security.Claims.ClaimsPrincipal.Identities
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 90
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Gets a collection that contains all of the claims identities associated with this claims principal.
  syntax:
    content: public virtual Collections.Generic.IEnumerable<ClaimsIdentity> Identities { get; }
    content.vb: Public Overridable ReadOnly Property Identities As Collections.Generic.IEnumerable(Of ClaimsIdentity)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity}
      description: The collection of claims identities.
- uid: System.Security.Claims.ClaimsPrincipal.Identity
  id: Identity
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: Identity
  fullName: System.Security.Claims.ClaimsPrincipal.Identity
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 91
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Gets the primary claims identity associated with this claims principal.
  syntax:
    content: public virtual IIdentity Identity { get; }
    content.vb: Public Overridable ReadOnly Property Identity As IIdentity
    parameters: []
    return:
      type: System.Security.Principal.IIdentity
      description: The primary claims identity associated with this claims principal.
- uid: System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector
  id: PrimaryIdentitySelector
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: PrimaryIdentitySelector
  fullName: System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 92
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Gets and sets the delegate used to select the claims identity returned by the @'System.Security.Claims.ClaimsPrincipal.Identity' property.
  syntax:
    content: public static Func<Collections.Generic.IEnumerable<ClaimsIdentity>, ClaimsIdentity> PrimaryIdentitySelector { get; set; }
    content.vb: Public Shared Property PrimaryIdentitySelector As Func(Of Collections.Generic.IEnumerable(Of ClaimsIdentity), ClaimsIdentity)
    parameters: []
    return:
      type: System.Func{System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity},System.Security.Claims.ClaimsIdentity}
      description: The delegate. The default is null.
- uid: System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  id: AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: AddIdentities(Collections.Generic.IEnumerable<ClaimsIdentity>)
  name.vb: AddIdentities(Collections.Generic.IEnumerable(Of ClaimsIdentity))
  fullName: System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable<System.Security.Claims.ClaimsIdentity>)
  fullName.vb: System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable(Of System.Security.Claims.ClaimsIdentity))
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 93
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Adds the specified claims identities to this claims principal.
  syntax:
    content: public virtual void AddIdentities(Collections.Generic.IEnumerable<ClaimsIdentity> identities)
    content.vb: Public Overridable Sub AddIdentities(identities As Collections.Generic.IEnumerable(Of ClaimsIdentity))
    parameters:
    - id: identities
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity}
      description: The claims identities to add.
  exceptions:
  - type: System.ArgumentNullException
    description: '*identities* is null.'
- uid: System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)
  id: AddIdentity(System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: AddIdentity(ClaimsIdentity)
  fullName: System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 95
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Adds the specified claims identity to this claims principal.
  syntax:
    content: public virtual void AddIdentity(ClaimsIdentity identity)
    content.vb: Public Overridable Sub AddIdentity(identity As ClaimsIdentity)
    parameters:
    - id: identity
      type: System.Security.Claims.ClaimsIdentity
      description: The claims identity to add.
  exceptions:
  - type: System.ArgumentNullException
    description: '*identity* is null.'
- uid: System.Security.Claims.ClaimsPrincipal.Clone
  id: Clone
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: Clone()
  fullName: System.Security.Claims.ClaimsPrincipal.Clone()
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 97
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Returns a copy of this instance.
  syntax:
    content: public virtual ClaimsPrincipal Clone()
    content.vb: Public Overridable Function Clone As ClaimsPrincipal
    return:
      type: System.Security.Claims.ClaimsPrincipal
      description: A new copy of the @'System.Security.Claims.ClaimsPrincipal' object.
- uid: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)
  id: CreateClaimsIdentity(System.IO.BinaryReader)
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: CreateClaimsIdentity(IO.BinaryReader)
  fullName: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 98
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Creates a new claims identity.
  syntax:
    content: protected virtual ClaimsIdentity CreateClaimsIdentity(IO.BinaryReader reader)
    content.vb: Protected Overridable Function CreateClaimsIdentity(reader As IO.BinaryReader) As ClaimsIdentity
    parameters:
    - id: reader
      type: System.IO.BinaryReader
      description: The binary reader.
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: The created claims identity.
- uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})
  id: FindAll(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: FindAll(Predicate<Claim>)
  name.vb: FindAll(Predicate(Of Claim))
  fullName: System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate<System.Security.Claims.Claim>)
  fullName.vb: System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate(Of System.Security.Claims.Claim))
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 99
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Retrieves all of the claims that are matched by the specified predicate.
  syntax:
    content: public virtual Collections.Generic.IEnumerable<Claim> FindAll(Predicate<Claim> match)
    content.vb: Public Overridable Function FindAll(match As Predicate(Of Claim)) As Collections.Generic.IEnumerable(Of Claim)
    parameters:
    - id: match
      type: System.Predicate{System.Security.Claims.Claim}
      description: The function that performs the matching logic.
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: The matching claims.
  exceptions:
  - type: System.ArgumentNullException
    description: '*match* is null.'
- uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.String)
  id: FindAll(System.String)
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: FindAll(String)
  fullName: System.Security.Claims.ClaimsPrincipal.FindAll(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 100
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Retrieves all or the claims that have the specified claim type.
  syntax:
    content: public virtual Collections.Generic.IEnumerable<Claim> FindAll(string type)
    content.vb: Public Overridable Function FindAll(type As String) As Collections.Generic.IEnumerable(Of Claim)
    parameters:
    - id: type
      type: System.String
      description: The claim type against which to match claims.
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: The matching claims.
  exceptions:
  - type: System.ArgumentNullException
    description: '*type* is null.'
- uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})
  id: FindFirst(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: FindFirst(Predicate<Claim>)
  name.vb: FindFirst(Predicate(Of Claim))
  fullName: System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate<System.Security.Claims.Claim>)
  fullName.vb: System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate(Of System.Security.Claims.Claim))
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 101
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Retrieves the first claim that is matched by the specified predicate.
  syntax:
    content: public virtual Claim FindFirst(Predicate<Claim> match)
    content.vb: Public Overridable Function FindFirst(match As Predicate(Of Claim)) As Claim
    parameters:
    - id: match
      type: System.Predicate{System.Security.Claims.Claim}
      description: The function that performs the matching logic.
    return:
      type: System.Security.Claims.Claim
      description: The first matching claim or null if no match is found.
  exceptions:
  - type: System.ArgumentNullException
    description: '*match* is null.'
- uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)
  id: FindFirst(System.String)
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: FindFirst(String)
  fullName: System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 102
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Retrieves the first claim with the specified claim type.
  syntax:
    content: public virtual Claim FindFirst(string type)
    content.vb: Public Overridable Function FindFirst(type As String) As Claim
    parameters:
    - id: type
      type: System.String
      description: The claim type to match.
    return:
      type: System.Security.Claims.Claim
      description: The first matching claim or null if no match is found.
  exceptions:
  - type: System.ArgumentNullException
    description: '*type* is null.'
- uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})
  id: HasClaim(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: HasClaim(Predicate<Claim>)
  name.vb: HasClaim(Predicate(Of Claim))
  fullName: System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate<System.Security.Claims.Claim>)
  fullName.vb: System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate(Of System.Security.Claims.Claim))
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 103
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Determines whether any of the claims identities associated with this claims principal contains a claim that is matched by the specified predicate.
  syntax:
    content: public virtual bool HasClaim(Predicate<Claim> match)
    content.vb: Public Overridable Function HasClaim(match As Predicate(Of Claim)) As Boolean
    parameters:
    - id: match
      type: System.Predicate{System.Security.Claims.Claim}
      description: The function that performs the matching logic.
    return:
      type: System.Boolean
      description: true if a matching claim exists; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*match* is null.'
- uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)
  id: HasClaim(System.String,System.String)
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: HasClaim(String, String)
  fullName: System.Security.Claims.ClaimsPrincipal.HasClaim(System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 104
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Determines whether any of the claims identities associated with this claims principal contains a claim with the specified claim type and value.
  syntax:
    content: public virtual bool HasClaim(string type, string value)
    content.vb: Public Overridable Function HasClaim(type As String, value As String) As Boolean
    parameters:
    - id: type
      type: System.String
      description: The type of the claim to match.
    - id: value
      type: System.String
      description: The value of the claim to match.
    return:
      type: System.Boolean
      description: true if a matching claim exists; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*type* is null.-or-*value* is null.'
- uid: System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)
  id: IsInRole(System.String)
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: IsInRole(String)
  fullName: System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 105
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Returns a value that indicates whether the entity (user) represented by this claims principal is in the specified role.
  syntax:
    content: public virtual bool IsInRole(string role)
    content.vb: Public Overridable Function IsInRole(role As String) As Boolean
    parameters:
    - id: role
      type: System.String
      description: The role for which to check.
    return:
      type: System.Boolean
      description: true if claims principal is in the specified role; otherwise, false.
- uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)
  id: WriteTo(System.IO.BinaryWriter)
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: WriteTo(IO.BinaryWriter)
  fullName: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 106
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  syntax:
    content: public virtual void WriteTo(IO.BinaryWriter writer)
    content.vb: Public Overridable Sub WriteTo(writer As IO.BinaryWriter)
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
- uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])
  id: WriteTo(System.IO.BinaryWriter,System.Byte[])
  parent: System.Security.Claims.ClaimsPrincipal
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: WriteTo(IO.BinaryWriter, Byte[])
  name.vb: WriteTo(IO.BinaryWriter, Byte())
  fullName: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter, System.Byte[])
  fullName.vb: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter, System.Byte())
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 107
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  syntax:
    content: protected virtual void WriteTo(IO.BinaryWriter writer, byte[] userData)
    content.vb: Protected Overridable Sub WriteTo(writer As IO.BinaryWriter, userData As Byte())
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
    - id: userData
      type: System.Byte[]
references:
- uid: System.Security.Claims
  isExternal: false
  name: System.Security.Claims
  fullName: System.Security.Claims
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity}
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Security.Claims.ClaimsIdentity.yml
  name: Collections.Generic.IEnumerable<ClaimsIdentity>
  name.vb: Collections.Generic.IEnumerable(Of ClaimsIdentity)
  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.ClaimsIdentity>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Security.Claims.ClaimsIdentity)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    fullName: System.Security.Claims.ClaimsIdentity
    href: System.Security.Claims.ClaimsIdentity.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    fullName: System.Security.Claims.ClaimsIdentity
    href: System.Security.Claims.ClaimsIdentity.yml
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.IEnumerable`1.yml
  name: Collections.Generic.IEnumerable<>
  name.vb: Collections.Generic.IEnumerable(Of )
  fullName: System.Collections.Generic.IEnumerable<>
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.IO.BinaryReader
  isExternal: false
  href: System.IO.BinaryReader.yml
  name: BinaryReader
  fullName: System.IO.BinaryReader
- uid: System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: false
  href: System.Security.Principal.IIdentity.yml
  name: Principal.IIdentity
  fullName: System.Security.Principal.IIdentity
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Security.Principal.IPrincipal
  isExternal: false
  href: System.Security.Principal.IPrincipal.yml
  name: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Security.Claims.Claim.yml
  name: Collections.Generic.IEnumerable<Claims.Claim>
  name.vb: Collections.Generic.IEnumerable(Of Claims.Claim)
  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claims.Claim
    fullName: System.Security.Claims.Claim
    href: System.Security.Claims.Claim.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claims.Claim
    fullName: System.Security.Claims.Claim
    href: System.Security.Claims.Claim.yml
  - name: )
    fullName: )
- uid: System.Func{System.Security.Claims.ClaimsPrincipal}
  definition: System.Func`1
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: Func<ClaimsPrincipal>
  name.vb: Func(Of ClaimsPrincipal)
  fullName: System.Func<System.Security.Claims.ClaimsPrincipal>
  fullName.vb: System.Func(Of System.Security.Claims.ClaimsPrincipal)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    href: System.Security.Claims.ClaimsPrincipal.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    href: System.Security.Claims.ClaimsPrincipal.yml
  - name: )
    fullName: )
- uid: System.Func`1
  parent: System
  isExternal: false
  href: System.Func`1.yml
  name: Func<>
  name.vb: Func(Of )
  fullName: System.Func<>
  fullName.vb: System.Func(Of )
  spec.csharp:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    href: System.Func`1.yml
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    href: System.Func`1.yml
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: false
  href: System.Security.Claims.ClaimsPrincipal.yml
  name: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.Byte[]
  isExternal: false
  href: System.Byte.yml
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    href: System.Byte.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    href: System.Byte.yml
  - name: ()
    fullName: ()
- uid: System.Func{System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity},System.Security.Claims.ClaimsIdentity}
  definition: System.Func`2
  href: System.Security.Claims.ClaimsIdentity.yml
  name: Func<Collections.Generic.IEnumerable<ClaimsIdentity>, ClaimsIdentity>
  name.vb: Func(Of Collections.Generic.IEnumerable(Of ClaimsIdentity), ClaimsIdentity)
  fullName: System.Func<System.Collections.Generic.IEnumerable<System.Security.Claims.ClaimsIdentity>, System.Security.Claims.ClaimsIdentity>
  fullName.vb: System.Func(Of System.Collections.Generic.IEnumerable(Of System.Security.Claims.ClaimsIdentity), System.Security.Claims.ClaimsIdentity)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    fullName: System.Security.Claims.ClaimsIdentity
    href: System.Security.Claims.ClaimsIdentity.yml
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    fullName: System.Security.Claims.ClaimsIdentity
    href: System.Security.Claims.ClaimsIdentity.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    fullName: System.Security.Claims.ClaimsIdentity
    href: System.Security.Claims.ClaimsIdentity.yml
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    fullName: System.Security.Claims.ClaimsIdentity
    href: System.Security.Claims.ClaimsIdentity.yml
  - name: )
    fullName: )
- uid: System.Func`2
  isExternal: false
  href: System.Func`2.yml
  name: Func<, >
  name.vb: Func(Of , )
  fullName: System.Func<, >
  fullName.vb: System.Func(Of , )
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    href: System.Func`2.yml
  - name: <
    fullName: <
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    href: System.Func`2.yml
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: false
  href: System.Security.Claims.ClaimsIdentity.yml
  name: Claims.ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.Predicate{System.Security.Claims.Claim}
  definition: System.Predicate`1
  href: System.Security.Claims.Claim.yml
  name: Predicate<Claim>
  name.vb: Predicate(Of Claim)
  fullName: System.Predicate<System.Security.Claims.Claim>
  fullName.vb: System.Predicate(Of System.Security.Claims.Claim)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
    href: System.Security.Claims.Claim.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
    href: System.Security.Claims.Claim.yml
  - name: )
    fullName: )
- uid: System.Predicate`1
  parent: System
  isExternal: false
  href: System.Predicate`1.yml
  name: Predicate<>
  name.vb: Predicate(Of )
  fullName: System.Predicate<>
  fullName.vb: System.Predicate(Of )
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    href: System.Predicate`1.yml
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    href: System.Predicate`1.yml
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
- uid: System.Security.Claims.Claim
  parent: System.Security.Claims
  isExternal: false
  href: System.Security.Claims.Claim.yml
  name: Claim
  fullName: System.Security.Claims.Claim
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.IO.BinaryWriter
  parent: System.IO
  isExternal: false
  href: System.IO.BinaryWriter.yml
  name: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
