items:
- uid: System.Xml.XPath.Extensions
  id: Extensions
  parent: System.Xml.XPath
  children:
  - System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)
  - System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)
  - System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)
  - System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)
  - System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)
  - System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  href: System.Xml.XPath.Extensions.yml
  name: Extensions
  fullName: System.Xml.XPath.Extensions
  type: Class
  source:
    remote:
      path: src/System.Xml.XPath.XDocument/src/System/Xml/XPath/XNodeNavigator.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Xml.XPath.XDocument/src/System/Xml/XPath/XNodeNavigator.cs
    startLine: 893
  assemblies:
  - System.Xml.XPath.XDocument
  namespace: System.Xml.XPath
  summary: This class contains the LINQ to XML extension methods that enable you to evaluate XPath expressions.
  syntax:
    content: public class Extensions
    content.vb: Public Class Extensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)
  id: CreateNavigator(System.Xml.Linq.XNode)
  parent: System.Xml.XPath.Extensions
  href: System.Xml.XPath.Extensions.yml
  name: CreateNavigator(Linq.XNode)
  fullName: System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)
  type: Method
  source:
    remote: &o0
      path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
    startLine: 11
  assemblies:
  - System.Xml.XPath.XDocument
  namespace: System.Xml.XPath
  summary: Creates an @'System.Xml.XPath.XPathNavigator' for an @'System.Xml.Linq.XNode'.
  syntax:
    content: public static XPathNavigator CreateNavigator(Linq.XNode node)
    content.vb: Public Shared Function CreateNavigator(node As Linq.XNode) As XPathNavigator
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: An @'System.Xml.Linq.XNode' that can process XPath queries.
    return:
      type: System.Xml.XPath.XPathNavigator
      description: An @'System.Xml.XPath.XPathNavigator' that can process XPath queries.
- uid: System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)
  id: CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)
  parent: System.Xml.XPath.Extensions
  href: System.Xml.XPath.Extensions.yml
  name: CreateNavigator(Linq.XNode, XmlNameTable)
  fullName: System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode, System.Xml.XmlNameTable)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
    startLine: 12
  assemblies:
  - System.Xml.XPath.XDocument
  namespace: System.Xml.XPath
  summary: Creates an @'System.Xml.XPath.XPathNavigator' for an @'System.Xml.Linq.XNode'. The @'System.Xml.XmlNameTable' enables more efficient XPath expression processing.
  syntax:
    content: public static XPathNavigator CreateNavigator(Linq.XNode node, XmlNameTable nameTable)
    content.vb: Public Shared Function CreateNavigator(node As Linq.XNode, nameTable As XmlNameTable) As XPathNavigator
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: An @'System.Xml.Linq.XNode' that can process an XPath query.
    - id: nameTable
      type: System.Xml.XmlNameTable
      description: A @'System.Xml.XmlNameTable' to be used by @'System.Xml.XPath.XPathNavigator'.
    return:
      type: System.Xml.XPath.XPathNavigator
      description: An @'System.Xml.XPath.XPathNavigator' that can process XPath queries.
- uid: System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)
  id: XPathEvaluate(System.Xml.Linq.XNode,System.String)
  parent: System.Xml.XPath.Extensions
  href: System.Xml.XPath.Extensions.yml
  name: XPathEvaluate(Linq.XNode, String)
  fullName: System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode, System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
    startLine: 13
  assemblies:
  - System.Xml.XPath.XDocument
  namespace: System.Xml.XPath
  summary: Evaluates an XPath expression.
  syntax:
    content: public static object XPathEvaluate(Linq.XNode node, string expression)
    content.vb: Public Shared Function XPathEvaluate(node As Linq.XNode, expression As String) As Object
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: The @'System.Xml.Linq.XNode' on which to evaluate the XPath expression.
    - id: expression
      type: System.String
      description: A @'System.String' that contains an XPath expression.
    return:
      type: System.Object
      description: An object that can contain a bool, a double, a string, or an @'System.Collections.Generic.IEnumerable`1'.
- uid: System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  id: XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.Extensions
  href: System.Xml.XPath.Extensions.yml
  name: XPathEvaluate(Linq.XNode, String, IXmlNamespaceResolver)
  fullName: System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode, System.String, System.Xml.IXmlNamespaceResolver)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
    startLine: 14
  assemblies:
  - System.Xml.XPath.XDocument
  namespace: System.Xml.XPath
  summary: Evaluates an XPath expression, resolving namespace prefixes using the specified @'System.Xml.IXmlNamespaceResolver'.
  syntax:
    content: public static object XPathEvaluate(Linq.XNode node, string expression, IXmlNamespaceResolver resolver)
    content.vb: Public Shared Function XPathEvaluate(node As Linq.XNode, expression As String, resolver As IXmlNamespaceResolver) As Object
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: The @'System.Xml.Linq.XNode' on which to evaluate the XPath expression.
    - id: expression
      type: System.String
      description: A @'System.String' that contains an XPath expression.
    - id: resolver
      type: System.Xml.IXmlNamespaceResolver
      description: A @'System.Xml.IXmlNamespaceResolver' for the namespace prefixes in the XPath expression.
    return:
      type: System.Object
      description: An object that contains the result of evaluating the expression. The object can be a bool, a double, a string, or an @'System.Collections.Generic.IEnumerable`1'.
- uid: System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)
  id: XPathSelectElement(System.Xml.Linq.XNode,System.String)
  parent: System.Xml.XPath.Extensions
  href: System.Xml.XPath.Extensions.yml
  name: XPathSelectElement(Linq.XNode, String)
  fullName: System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode, System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
    startLine: 15
  assemblies:
  - System.Xml.XPath.XDocument
  namespace: System.Xml.XPath
  summary: Selects an @'System.Xml.Linq.XElement' using a XPath expression.
  syntax:
    content: public static Linq.XElement XPathSelectElement(Linq.XNode node, string expression)
    content.vb: Public Shared Function XPathSelectElement(node As Linq.XNode, expression As String) As Linq.XElement
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: The @'System.Xml.Linq.XNode' on which to evaluate the XPath expression.
    - id: expression
      type: System.String
      description: A @'System.String' that contains an XPath expression.
    return:
      type: System.Xml.Linq.XElement
      description: An @'System.Xml.Linq.XElement', or null.
- uid: System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  id: XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.Extensions
  href: System.Xml.XPath.Extensions.yml
  name: XPathSelectElement(Linq.XNode, String, IXmlNamespaceResolver)
  fullName: System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode, System.String, System.Xml.IXmlNamespaceResolver)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
    startLine: 16
  assemblies:
  - System.Xml.XPath.XDocument
  namespace: System.Xml.XPath
  summary: Selects an @'System.Xml.Linq.XElement' using a XPath expression, resolving namespace prefixes using the specified @'System.Xml.IXmlNamespaceResolver'.
  syntax:
    content: public static Linq.XElement XPathSelectElement(Linq.XNode node, string expression, IXmlNamespaceResolver resolver)
    content.vb: Public Shared Function XPathSelectElement(node As Linq.XNode, expression As String, resolver As IXmlNamespaceResolver) As Linq.XElement
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: The @'System.Xml.Linq.XNode' on which to evaluate the XPath expression.
    - id: expression
      type: System.String
      description: A @'System.String' that contains an XPath expression.
    - id: resolver
      type: System.Xml.IXmlNamespaceResolver
      description: An @'System.Xml.IXmlNamespaceResolver' for the namespace prefixes in the XPath expression.
    return:
      type: System.Xml.Linq.XElement
      description: An @'System.Xml.Linq.XElement', or null.
- uid: System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)
  id: XPathSelectElements(System.Xml.Linq.XNode,System.String)
  parent: System.Xml.XPath.Extensions
  href: System.Xml.XPath.Extensions.yml
  name: XPathSelectElements(Linq.XNode, String)
  fullName: System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode, System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
    startLine: 17
  assemblies:
  - System.Xml.XPath.XDocument
  namespace: System.Xml.XPath
  summary: Selects a collection of elements using an XPath expression.
  syntax:
    content: public static IEnumerable<Linq.XElement> XPathSelectElements(Linq.XNode node, string expression)
    content.vb: Public Shared Function XPathSelectElements(node As Linq.XNode, expression As String) As IEnumerable(Of Linq.XElement)
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: The @'System.Xml.Linq.XNode' on which to evaluate the XPath expression.
    - id: expression
      type: System.String
      description: A @'System.String' that contains an XPath expression.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: An @'System.Collections.Generic.IEnumerable`1' of @'System.Xml.Linq.XElement' that contains the selected elements.
- uid: System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  id: XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.Extensions
  href: System.Xml.XPath.Extensions.yml
  name: XPathSelectElements(Linq.XNode, String, IXmlNamespaceResolver)
  fullName: System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode, System.String, System.Xml.IXmlNamespaceResolver)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
    startLine: 18
  assemblies:
  - System.Xml.XPath.XDocument
  namespace: System.Xml.XPath
  summary: Selects a collection of elements using an XPath expression, resolving namespace prefixes using the specified @'System.Xml.IXmlNamespaceResolver'.
  syntax:
    content: public static IEnumerable<Linq.XElement> XPathSelectElements(Linq.XNode node, string expression, IXmlNamespaceResolver resolver)
    content.vb: Public Shared Function XPathSelectElements(node As Linq.XNode, expression As String, resolver As IXmlNamespaceResolver) As IEnumerable(Of Linq.XElement)
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: The @'System.Xml.Linq.XNode' on which to evaluate the XPath expression.
    - id: expression
      type: System.String
      description: A @'System.String' that contains an XPath expression.
    - id: resolver
      type: System.Xml.IXmlNamespaceResolver
      description: A @'System.Xml.IXmlNamespaceResolver' for the namespace prefixes in the XPath expression.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: An @'System.Collections.Generic.IEnumerable`1' of @'System.Xml.Linq.XElement' that contains the selected elements.
references:
- uid: System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  fullName: System.Xml.XPath
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Xml.Linq.XNode
  parent: System.Xml.Linq
  isExternal: false
  href: System.Xml.Linq.XNode.yml
  name: Linq.XNode
  fullName: System.Xml.Linq.XNode
  type: Class
- uid: System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: false
  href: System.Xml.XPath.XPathNavigator.yml
  name: XPath.XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
  type: Class
- uid: System.Xml.Linq
  isExternal: false
  name: System.Xml.Linq
  fullName: System.Xml.Linq
  type: Namespace
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: false
  href: System.Xml.XmlNameTable.yml
  name: XmlNameTable
  fullName: System.Xml.XmlNameTable
  type: Class
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
  type: Namespace
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
  type: Class
- uid: System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: false
  href: System.Xml.IXmlNamespaceResolver.yml
  name: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
  type: Interface
- uid: System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: false
  href: System.Xml.Linq.XElement.yml
  name: Linq.XElement
  fullName: System.Xml.Linq.XElement
  type: Class
- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Xml.Linq.XElement.yml
  name: IEnumerable<Linq.XElement>
  name.vb: IEnumerable(Of Linq.XElement)
  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Xml.Linq.XElement
    name: Linq.XElement
    fullName: System.Xml.Linq.XElement
    href: System.Xml.Linq.XElement.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Xml.Linq.XElement
    name: Linq.XElement
    fullName: System.Xml.Linq.XElement
    href: System.Xml.Linq.XElement.yml
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.IEnumerable`1.yml
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  type: Interface
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
  type: Namespace
