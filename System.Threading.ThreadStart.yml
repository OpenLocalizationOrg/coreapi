items:
- uid: System.Threading.ThreadStart
  commentId: T:System.Threading.ThreadStart
  id: ThreadStart
  parent: System.Threading
  children: []
  langs:
  - csharp
  - vb
  name: ThreadStart
  nameWithType: ThreadStart
  fullName: System.Threading.ThreadStart
  type: Delegate
  source:
    remote:
      path: src/mscorlib/src/System/Threading/ThreadStart.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ThreadStart
    path: src/mscorlib/src/System/Threading/ThreadStart.cs
    startLine: 22
  assemblies:
  - System.Threading.Thread
  namespace: System.Threading
  summary: "\n<p>Represents the method that executes on a <xref href=\"System.Threading.Thread\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>When a managed thread is created, the method that executes on the thread is represented by a <xref href=\"System.Threading.ThreadStart\" data-throw-if-not-resolved=\"false\"></xref> delegate or a <xref href=\"System.Threading.ParameterizedThreadStart\" data-throw-if-not-resolved=\"false\"></xref> delegate that is passed to the <xref href=\"System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart)\" data-throw-if-not-resolved=\"false\"></xref> constructor. The thread does not begin executing until the <xref href=\"System.Threading.Thread.Start\" data-throw-if-not-resolved=\"false\"></xref> method is called. Execution begins at the first line of the method represented by the <xref href=\"System.Threading.ThreadStart\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Threading.ParameterizedThreadStart\" data-throw-if-not-resolved=\"false\"></xref> delegate.</p>\n<p>Visual Basic and C# users can omit the <xref href=\"System.Threading.ThreadStart\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Threading.ParameterizedThreadStart\" data-throw-if-not-resolved=\"false\"></xref> delegate constructor when creating a thread. In Visual Basic, use the <strong>AddressOf</strong> operator when passing your method to the <xref href=\"System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart)\" data-throw-if-not-resolved=\"false\"></xref> constructor; for example, <code>Dim t As New Thread(AddressOf ThreadProc)</code>. In C#, simply specify the name of the thread procedure. The compiler selects the correct delegate constructor.</p>\n<p>[C++]</p>\n<p>In version 2.0 of the .NET Framework, creating a <xref href=\"System.Threading.ThreadStart\" data-throw-if-not-resolved=\"false\"></xref> delegate for a static method in C++ requires only one parameter: the address of the callback method, qualified by the class name. In earlier versions two parameters were required when creating a delegate for a static method: zero (null) and the method address. For an instance method, all versions require two parameters: the instance variable and the method address.</p>\n"
  syntax:
    content: >-
      [ComVisible(true)]

      public delegate void ThreadStart();
    content.vb: >-
      <ComVisible(True)>

      Public Delegate Sub ThreadStart
  seealso:
  - type: System.Threading.ParameterizedThreadStart
    commentId: T:System.Threading.ParameterizedThreadStart
  - type: System.Threading.Thread
    commentId: T:System.Threading.Thread
  - type: System.Threading.Thread.Start
    commentId: M:System.Threading.Thread.Start
  - type: System.AppDomain
    commentId: T:System.AppDomain
  extensionMethods:
  - System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
    ctor: System.Runtime.InteropServices.ComVisibleAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
references:
- uid: System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  commentId: N:System.Threading
- uid: System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  parent: System.Reflection.RuntimeReflectionExtensions
  definition: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  name: GetMethodInfo()
  nameWithType: RuntimeReflectionExtensions.GetMethodInfo()
  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo()
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
    name: GetMethodInfo
    nameWithType: RuntimeReflectionExtensions.GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
    name: GetMethodInfo
    nameWithType: RuntimeReflectionExtensions.GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  isExternal: true
  name: GetMethodInfo(Delegate)
  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)
  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
    name: GetMethodInfo
    nameWithType: RuntimeReflectionExtensions.GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Delegate
    name: Delegate
    nameWithType: Delegate
    fullName: System.Delegate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
    name: GetMethodInfo
    nameWithType: RuntimeReflectionExtensions.GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Delegate
    name: Delegate
    nameWithType: Delegate
    fullName: System.Delegate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
- uid: System.Reflection.RuntimeReflectionExtensions
  parent: System.Reflection
  isExternal: false
  name: RuntimeReflectionExtensions
  nameWithType: RuntimeReflectionExtensions
  fullName: System.Reflection.RuntimeReflectionExtensions
  commentId: T:System.Reflection.RuntimeReflectionExtensions
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
  commentId: N:System.Reflection
