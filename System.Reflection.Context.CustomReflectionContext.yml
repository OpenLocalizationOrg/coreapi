items:
- uid: System.Reflection.Context.CustomReflectionContext
  id: CustomReflectionContext
  parent: System.Reflection.Context
  children:
  - System.Reflection.Context.CustomReflectionContext.#ctor
  - System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)
  - System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)
  - System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})
  - System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})
  - System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})
  - System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})
  - System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)
  - System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)
  href: System.Reflection.Context.CustomReflectionContext.yml
  name: CustomReflectionContext
  fullName: System.Reflection.Context.CustomReflectionContext
  type: Class
  source:
    remote: &o0
      path: src/System.Reflection.Context/ref/System.Reflection.Context.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Reflection.Context/ref/System.Reflection.Context.cs
    startLine: 9
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: Represents a customizable reflection context.
  syntax:
    content: 'public abstract class CustomReflectionContext : ReflectionContext'
    content.vb: Public MustInherit Class CustomReflectionContext Inherits ReflectionContext
  inheritance:
  - System.Object
  - System.Reflection.ReflectionContext
  inheritedMembers:
  - System.Reflection.ReflectionContext.GetTypeForObject(System.Object)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Reflection.Context.CustomReflectionContext.#ctor
  id: '#ctor'
  parent: System.Reflection.Context.CustomReflectionContext
  href: System.Reflection.Context.CustomReflectionContext.yml
  name: CustomReflectionContext()
  fullName: System.Reflection.Context.CustomReflectionContext.CustomReflectionContext()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Reflection.Context/ref/System.Reflection.Context.cs
    startLine: 11
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: Initializes a new instance of the @'System.Reflection.Context.CustomReflectionContext' class.
  syntax:
    content: protected CustomReflectionContext()
    content.vb: Protected Sub New
- uid: System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)
  id: '#ctor(System.Reflection.ReflectionContext)'
  parent: System.Reflection.Context.CustomReflectionContext
  href: System.Reflection.Context.CustomReflectionContext.yml
  name: CustomReflectionContext(ReflectionContext)
  fullName: System.Reflection.Context.CustomReflectionContext.CustomReflectionContext(System.Reflection.ReflectionContext)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Reflection.Context/ref/System.Reflection.Context.cs
    startLine: 12
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: Initializes a new instance of the @'System.Reflection.Context.CustomReflectionContext' class with the specified reflection context as a base.
  syntax:
    content: protected CustomReflectionContext(ReflectionContext source)
    content.vb: Protected Sub New(source As ReflectionContext)
    parameters:
    - id: source
      type: System.Reflection.ReflectionContext
      description: The reflection context to use as a base.
- uid: System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)
  id: AddProperties(System.Type)
  parent: System.Reflection.Context.CustomReflectionContext
  href: System.Reflection.Context.CustomReflectionContext.yml
  name: AddProperties(Type)
  fullName: System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Context/ref/System.Reflection.Context.cs
    startLine: 13
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: When overridden in a derived class, provides a collection of additional properties for the specified type, as represented in this reflection context.
  syntax:
    content: protected virtual IEnumerable<PropertyInfo> AddProperties(Type type)
    content.vb: Protected Overridable Function AddProperties(type As Type) As IEnumerable(Of PropertyInfo)
    parameters:
    - id: type
      type: System.Type
      description: The type to add properties to.
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo}
      description: A collection of additional properties for the specified type.
- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})
  id: CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})
  parent: System.Reflection.Context.CustomReflectionContext
  href: System.Reflection.Context.CustomReflectionContext.yml
  name: CreateProperty(Type, String, Func<Object, Object>, Action<Object, Object>)
  name.vb: CreateProperty(Type, String, Func(Of Object, Object), Action(Of Object, Object))
  fullName: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type, System.String, System.Func<System.Object, System.Object>, System.Action<System.Object, System.Object>)
  fullName.vb: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type, System.String, System.Func(Of System.Object, System.Object), System.Action(Of System.Object, System.Object))
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Context/ref/System.Reflection.Context.cs
    startLine: 14
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: Creates an object that represents a property to be added to a type, to be used with the @'System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)' method.
  syntax:
    content: protected PropertyInfo CreateProperty(Type propertyType, string name, Func<object, object> getter, Action<object, object> setter)
    content.vb: Protected Function CreateProperty(propertyType As Type, name As String, getter As Func(Of Object, Object), setter As Action(Of Object, Object)) As PropertyInfo
    parameters:
    - id: propertyType
      type: System.Type
      description: The type of the property to create.
    - id: name
      type: System.String
      description: The name of the property to create.
    - id: getter
      type: System.Func{System.Object,System.Object}
      description: An object that represents the property's get accessor.
    - id: setter
      type: System.Action{System.Object,System.Object}
      description: An object that represents the property's set accessor.
    return:
      type: System.Reflection.PropertyInfo
      description: An object that represents the property.
- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})
  id: CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})
  parent: System.Reflection.Context.CustomReflectionContext
  href: System.Reflection.Context.CustomReflectionContext.yml
  name: CreateProperty(Type, String, Func<Object, Object>, Action<Object, Object>, IEnumerable<Attribute>, IEnumerable<Attribute>, IEnumerable<Attribute>)
  name.vb: CreateProperty(Type, String, Func(Of Object, Object), Action(Of Object, Object), IEnumerable(Of Attribute), IEnumerable(Of Attribute), IEnumerable(Of Attribute))
  fullName: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type, System.String, System.Func<System.Object, System.Object>, System.Action<System.Object, System.Object>, System.Collections.Generic.IEnumerable<System.Attribute>, System.Collections.Generic.IEnumerable<System.Attribute>, System.Collections.Generic.IEnumerable<System.Attribute>)
  fullName.vb: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type, System.String, System.Func(Of System.Object, System.Object), System.Action(Of System.Object, System.Object), System.Collections.Generic.IEnumerable(Of System.Attribute), System.Collections.Generic.IEnumerable(Of System.Attribute), System.Collections.Generic.IEnumerable(Of System.Attribute))
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Context/ref/System.Reflection.Context.cs
    startLine: 15
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: Creates an object that represents a property to be added to a type, to be used with the @'System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)' method and using the specified custom attributes.
  syntax:
    content: protected PropertyInfo CreateProperty(Type propertyType, string name, Func<object, object> getter, Action<object, object> setter, IEnumerable<Attribute> propertyCustomAttributes, IEnumerable<Attribute> getterCustomAttributes, IEnumerable<Attribute> setterCustomAttributes)
    content.vb: Protected Function CreateProperty(propertyType As Type, name As String, getter As Func(Of Object, Object), setter As Action(Of Object, Object), propertyCustomAttributes As IEnumerable(Of Attribute), getterCustomAttributes As IEnumerable(Of Attribute), setterCustomAttributes As IEnumerable(Of Attribute)) As PropertyInfo
    parameters:
    - id: propertyType
      type: System.Type
      description: The type of the property to create.
    - id: name
      type: System.String
      description: The name of the property to create.
    - id: getter
      type: System.Func{System.Object,System.Object}
      description: An object that represents the property's get accessor.
    - id: setter
      type: System.Action{System.Object,System.Object}
      description: An object that represents the property's set accessor.
    - id: propertyCustomAttributes
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of custom attributes to apply to the property.
    - id: getterCustomAttributes
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of custom attributes to apply to the property's get accessor.
    - id: setterCustomAttributes
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of custom attributes to apply to the property's set accessor.
    return:
      type: System.Reflection.PropertyInfo
      description: An object that represents the property.
- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})
  id: GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})
  parent: System.Reflection.Context.CustomReflectionContext
  href: System.Reflection.Context.CustomReflectionContext.yml
  name: GetCustomAttributes(MemberInfo, IEnumerable<Object>)
  name.vb: GetCustomAttributes(MemberInfo, IEnumerable(Of Object))
  fullName: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable<System.Object>)
  fullName.vb: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable(Of System.Object))
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Context/ref/System.Reflection.Context.cs
    startLine: 16
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: When overridden in a derived class, provides a list of custom attributes for the specified member, as represented in this reflection context.
  syntax:
    content: protected virtual IEnumerable<object> GetCustomAttributes(MemberInfo member, IEnumerable<object> declaredAttributes)
    content.vb: Protected Overridable Function GetCustomAttributes(member As MemberInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: The member whose custom attributes will be returned.
    - id: declaredAttributes
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: A collection of the member's attributes in its current context.
    return:
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: A collection that represents the custom attributes of the specified member in this reflection context.
- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})
  id: GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})
  parent: System.Reflection.Context.CustomReflectionContext
  href: System.Reflection.Context.CustomReflectionContext.yml
  name: GetCustomAttributes(ParameterInfo, IEnumerable<Object>)
  name.vb: GetCustomAttributes(ParameterInfo, IEnumerable(Of Object))
  fullName: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo, System.Collections.Generic.IEnumerable<System.Object>)
  fullName.vb: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo, System.Collections.Generic.IEnumerable(Of System.Object))
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Context/ref/System.Reflection.Context.cs
    startLine: 17
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: When overridden in a derived class, provides a list of custom attributes for the specified parameter, as represented in this reflection context.
  syntax:
    content: protected virtual IEnumerable<object> GetCustomAttributes(ParameterInfo parameter, IEnumerable<object> declaredAttributes)
    content.vb: Protected Overridable Function GetCustomAttributes(parameter As ParameterInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)
    parameters:
    - id: parameter
      type: System.Reflection.ParameterInfo
      description: The parameter whose custom attributes will be returned.
    - id: declaredAttributes
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: A collection of the parameter's attributes in its current context.
    return:
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: A collection that represents the custom attributes of the specified parameter in this reflection context.
- uid: System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)
  id: MapAssembly(System.Reflection.Assembly)
  parent: System.Reflection.Context.CustomReflectionContext
  href: System.Reflection.Context.CustomReflectionContext.yml
  name: MapAssembly(Assembly)
  fullName: System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Context/ref/System.Reflection.Context.cs
    startLine: 18
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  syntax:
    content: public override Assembly MapAssembly(Assembly assembly)
    content.vb: Public Overrides Function MapAssembly(assembly As Assembly) As Assembly
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
    return:
      type: System.Reflection.Assembly
  overridden: System.Reflection.ReflectionContext.MapAssembly(System.Reflection.Assembly)
- uid: System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)
  id: MapType(System.Reflection.TypeInfo)
  parent: System.Reflection.Context.CustomReflectionContext
  href: System.Reflection.Context.CustomReflectionContext.yml
  name: MapType(TypeInfo)
  fullName: System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Context/ref/System.Reflection.Context.cs
    startLine: 19
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  syntax:
    content: public override TypeInfo MapType(TypeInfo type)
    content.vb: Public Overrides Function MapType(type As TypeInfo) As TypeInfo
    parameters:
    - id: type
      type: System.Reflection.TypeInfo
    return:
      type: System.Reflection.TypeInfo
  overridden: System.Reflection.ReflectionContext.MapType(System.Reflection.TypeInfo)
references:
- uid: System.Reflection.Context
  isExternal: false
  name: System.Reflection.Context
  fullName: System.Reflection.Context
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System.Reflection.ReflectionContext
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.ReflectionContext.yml
  name: ReflectionContext
  fullName: System.Reflection.ReflectionContext
- uid: System.Reflection.ReflectionContext.GetTypeForObject(System.Object)
  parent: System.Reflection.ReflectionContext
  isExternal: true
  name: GetTypeForObject(Object)
  fullName: System.Reflection.ReflectionContext.GetTypeForObject(System.Object)
  spec.csharp:
  - uid: System.Reflection.ReflectionContext.GetTypeForObject(System.Object)
    name: GetTypeForObject
    fullName: System.Reflection.ReflectionContext.GetTypeForObject
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.ReflectionContext.GetTypeForObject(System.Object)
    name: GetTypeForObject
    fullName: System.Reflection.ReflectionContext.GetTypeForObject
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Type
  parent: System
  isExternal: false
  href: System.Type.yml
  name: Type
  fullName: System.Type
- uid: System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Reflection.PropertyInfo.yml
  name: IEnumerable<PropertyInfo>
  name.vb: IEnumerable(Of PropertyInfo)
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.PropertyInfo>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.PropertyInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    href: System.Reflection.PropertyInfo.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    href: System.Reflection.PropertyInfo.yml
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.IEnumerable`1.yml
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
- uid: System.Func{System.Object,System.Object}
  parent: System
  definition: System.Func`2
  name: Func<Object, Object>
  name.vb: Func(Of Object, Object)
  fullName: System.Func<System.Object, System.Object>
  fullName.vb: System.Func(Of System.Object, System.Object)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Action{System.Object,System.Object}
  parent: System
  definition: System.Action`2
  name: Action<Object, Object>
  name.vb: Action(Of Object, Object)
  fullName: System.Action<System.Object, System.Object>
  fullName.vb: System.Action(Of System.Object, System.Object)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    fullName: System.Action
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.PropertyInfo.yml
  name: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Func`2
  parent: System
  isExternal: false
  href: System.Func`2.yml
  name: Func<T, TResult>
  name.vb: Func(Of T, TResult)
  fullName: System.Func<T, TResult>
  fullName.vb: System.Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    href: System.Func`2.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    href: System.Func`2.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Action`2
  parent: System
  isExternal: false
  href: System.Action`2.yml
  name: Action<T1, T2>
  name.vb: Action(Of T1, T2)
  fullName: System.Action<T1, T2>
  fullName.vb: System.Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    fullName: System.Action
    href: System.Action`2.yml
  - name: <
    fullName: <
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    fullName: System.Action
    href: System.Action`2.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Attribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Attribute>
  name.vb: IEnumerable(Of Attribute)
  fullName: System.Collections.Generic.IEnumerable<System.Attribute>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Attribute)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Attribute
    name: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Attribute
    name: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Object>
  name.vb: IEnumerable(Of Object)
  fullName: System.Collections.Generic.IEnumerable<System.Object>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.ParameterInfo
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.ParameterInfo.yml
  name: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: System.Reflection.ReflectionContext.MapAssembly(System.Reflection.Assembly)
  parent: System.Reflection.ReflectionContext
  isExternal: true
  name: MapAssembly(Assembly)
  fullName: System.Reflection.ReflectionContext.MapAssembly(System.Reflection.Assembly)
  spec.csharp:
  - uid: System.Reflection.ReflectionContext.MapAssembly(System.Reflection.Assembly)
    name: MapAssembly
    fullName: System.Reflection.ReflectionContext.MapAssembly
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.ReflectionContext.MapAssembly(System.Reflection.Assembly)
    name: MapAssembly
    fullName: System.Reflection.ReflectionContext.MapAssembly
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.Assembly.yml
  name: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.ReflectionContext.MapType(System.Reflection.TypeInfo)
  parent: System.Reflection.ReflectionContext
  isExternal: true
  name: MapType(TypeInfo)
  fullName: System.Reflection.ReflectionContext.MapType(System.Reflection.TypeInfo)
  spec.csharp:
  - uid: System.Reflection.ReflectionContext.MapType(System.Reflection.TypeInfo)
    name: MapType
    fullName: System.Reflection.ReflectionContext.MapType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    fullName: System.Reflection.TypeInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.ReflectionContext.MapType(System.Reflection.TypeInfo)
    name: MapType
    fullName: System.Reflection.ReflectionContext.MapType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    fullName: System.Reflection.TypeInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.TypeInfo
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.TypeInfo.yml
  name: TypeInfo
  fullName: System.Reflection.TypeInfo
