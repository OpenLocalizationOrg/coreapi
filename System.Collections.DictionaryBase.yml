items:
- uid: System.Collections.DictionaryBase
  id: DictionaryBase
  parent: System.Collections
  children:
  - System.Collections.DictionaryBase.#ctor
  - System.Collections.DictionaryBase.Clear
  - System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)
  - System.Collections.DictionaryBase.Count
  - System.Collections.DictionaryBase.Dictionary
  - System.Collections.DictionaryBase.GetEnumerator
  - System.Collections.DictionaryBase.InnerHashtable
  - System.Collections.DictionaryBase.OnClear
  - System.Collections.DictionaryBase.OnClearComplete
  - System.Collections.DictionaryBase.OnGet(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)
  - System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)
  - System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)
  - System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize
  - System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Keys
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Values
  - System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator
  href: System.Collections.DictionaryBase.yml
  name: DictionaryBase
  fullName: System.Collections.DictionaryBase
  type: Class
  source:
    remote: &o0
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 111
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Provides the abstract base class for a strongly typed collection of key/value pairs.
  syntax:
    content: 'public abstract class DictionaryBase : IDictionary, ICollection, IEnumerable'
    content.vb: Public MustInherit Class DictionaryBase Implements IDictionary, ICollection, IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Collections.DictionaryBase.#ctor
  id: '#ctor'
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: DictionaryBase()
  fullName: System.Collections.DictionaryBase.DictionaryBase()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 113
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the @'System.Collections.DictionaryBase' class.
  syntax:
    content: protected DictionaryBase()
    content.vb: Protected Sub New
- uid: System.Collections.DictionaryBase.Count
  id: Count
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: Count
  fullName: System.Collections.DictionaryBase.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 114
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets the number of elements contained in the @'System.Collections.DictionaryBase' instance.
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of elements contained in the @'System.Collections.DictionaryBase' instance.
- uid: System.Collections.DictionaryBase.Dictionary
  id: Dictionary
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: Dictionary
  fullName: System.Collections.DictionaryBase.Dictionary
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 115
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets the list of elements contained in the @'System.Collections.DictionaryBase' instance.
  syntax:
    content: protected IDictionary Dictionary { get; }
    content.vb: Protected ReadOnly Property Dictionary As IDictionary
    parameters: []
    return:
      type: System.Collections.IDictionary
      description: An @'System.Collections.IDictionary' representing the @'System.Collections.DictionaryBase' instance itself.
- uid: System.Collections.DictionaryBase.InnerHashtable
  id: InnerHashtable
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: InnerHashtable
  fullName: System.Collections.DictionaryBase.InnerHashtable
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 116
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets the list of elements contained in the @'System.Collections.DictionaryBase' instance.
  syntax:
    content: protected Hashtable InnerHashtable { get; }
    content.vb: Protected ReadOnly Property InnerHashtable As Hashtable
    parameters: []
    return:
      type: System.Collections.Hashtable
      description: A @'System.Collections.Hashtable' representing the @'System.Collections.DictionaryBase' instance itself.
- uid: System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.DictionaryBase.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 117
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets a value indicating whether access to a @'System.Collections.DictionaryBase' object is synchronized (thread safe).
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
    parameters: []
    return:
      type: System.Boolean
      description: true if access to the @'System.Collections.DictionaryBase' object is synchronized (thread safe); otherwise, false. The default is false.
- uid: System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
  fullName: System.Collections.DictionaryBase.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 118
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets an object that can be used to synchronize access to a @'System.Collections.DictionaryBase' object.
  syntax:
    content: object ICollection.SyncRoot { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
    parameters: []
    return:
      type: System.Object
      description: An object that can be used to synchronize access to the @'System.Collections.DictionaryBase' object.
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize
  id: System#Collections#IDictionary#IsFixedSize
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: IDictionary.IsFixedSize
  name.vb: System.Collections.IDictionary.IsFixedSize
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.IsFixedSize
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 119
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets a value indicating whether a @'System.Collections.DictionaryBase' object has a fixed size.
  syntax:
    content: bool IDictionary.IsFixedSize { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.IsFixedSize As Boolean Implements IDictionary.IsFixedSize
    parameters: []
    return:
      type: System.Boolean
      description: true if the @'System.Collections.DictionaryBase' object has a fixed size; otherwise, false. The default is false.
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly
  id: System#Collections#IDictionary#IsReadOnly
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: IDictionary.IsReadOnly
  name.vb: System.Collections.IDictionary.IsReadOnly
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.IsReadOnly
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 120
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets a value indicating whether a @'System.Collections.DictionaryBase' object is read-only.
  syntax:
    content: bool IDictionary.IsReadOnly { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.IsReadOnly As Boolean Implements IDictionary.IsReadOnly
    parameters: []
    return:
      type: System.Boolean
      description: true if the @'System.Collections.DictionaryBase' object is read-only; otherwise, false. The default is false.
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)
  id: System#Collections#IDictionary#Item(System.Object)
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: IDictionary.Item[Object]
  name.vb: System.Collections.IDictionary.Item(Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Item[System.Object]
  fullName.vb: System.Collections.DictionaryBase.System.Collections.IDictionary.Item(System.Object)
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 121
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets or sets the value associated with the specified key.
  syntax:
    content: object IDictionary.this[object key] { get; set; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Item(key As Object) As Object Implements IDictionary.this
    parameters:
    - id: key
      type: System.Object
      description: The key whose value to get or set.
    return:
      type: System.Object
      description: The value associated with the specified key. If the specified key is not found, attempting to get it returns null, and attempting to set it creates a new element using the specified key.
  exceptions:
  - type: System.ArgumentNullException
    description: '*key* is null.'
  - type: System.NotSupportedException
    description: The property is set and the @'System.Collections.DictionaryBase' is read-only.-or- The property is set, *key* does not exist in the collection, and the @'System.Collections.DictionaryBase' has a fixed size.
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Keys
  id: System#Collections#IDictionary#Keys
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: IDictionary.Keys
  name.vb: System.Collections.IDictionary.Keys
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Keys
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 122
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets an @'System.Collections.ICollection' object containing the keys in the @'System.Collections.DictionaryBase' object.
  syntax:
    content: ICollection IDictionary.Keys { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Keys As ICollection Implements IDictionary.Keys
    parameters: []
    return:
      type: System.Collections.ICollection
      description: An @'System.Collections.ICollection' object containing the keys in the @'System.Collections.DictionaryBase' object.
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Values
  id: System#Collections#IDictionary#Values
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: IDictionary.Values
  name.vb: System.Collections.IDictionary.Values
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Values
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 123
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets an @'System.Collections.ICollection' object containing the values in the @'System.Collections.DictionaryBase' object.
  syntax:
    content: ICollection IDictionary.Values { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Values As ICollection Implements IDictionary.Values
    parameters: []
    return:
      type: System.Collections.ICollection
      description: An @'System.Collections.ICollection' object containing the values in the @'System.Collections.DictionaryBase' object.
- uid: System.Collections.DictionaryBase.Clear
  id: Clear
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: Clear()
  fullName: System.Collections.DictionaryBase.Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 124
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Clears the contents of the @'System.Collections.DictionaryBase' instance.
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
- uid: System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: CopyTo(Array, Int32)
  fullName: System.Collections.DictionaryBase.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 125
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Copies the @'System.Collections.DictionaryBase' elements to a one-dimensional @'System.Array' at the specified index.
  syntax:
    content: public void CopyTo(Array array, int index)
    content.vb: Public Sub CopyTo(array As Array, index As Integer)
    parameters:
    - id: array
      type: System.Array
      description: The one-dimensional @'System.Array' that is the destination of the @'System.Collections.DictionaryEntry' objects copied from the @'System.Collections.DictionaryBase' instance. The @'System.Array' must have zero-based indexing.
    - id: index
      type: System.Int32
      description: The zero-based index in *array* at which copying begins.
  exceptions:
  - type: System.ArgumentNullException
    description: '*array* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*index* is less than zero.'
  - type: System.ArgumentException
    description: '*array* is multidimensional.-or- The number of elements in the source @''System.Collections.DictionaryBase'' is greater than the available space from *index* to the end of the destination *array*.'
  - type: System.InvalidCastException
    description: The type of the source @'System.Collections.DictionaryBase' cannot be cast automatically to the type of the destination *array*.
- uid: System.Collections.DictionaryBase.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: GetEnumerator()
  fullName: System.Collections.DictionaryBase.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 126
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns an @'System.Collections.IDictionaryEnumerator' that iterates through the @'System.Collections.DictionaryBase' instance.
  syntax:
    content: public IDictionaryEnumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As IDictionaryEnumerator
    return:
      type: System.Collections.IDictionaryEnumerator
      description: An @'System.Collections.IDictionaryEnumerator' for the @'System.Collections.DictionaryBase' instance.
- uid: System.Collections.DictionaryBase.OnClear
  id: OnClear
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: OnClear()
  fullName: System.Collections.DictionaryBase.OnClear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 127
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Performs additional custom processes before clearing the contents of the @'System.Collections.DictionaryBase' instance.
  syntax:
    content: protected virtual void OnClear()
    content.vb: Protected Overridable Sub OnClear
- uid: System.Collections.DictionaryBase.OnClearComplete
  id: OnClearComplete
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: OnClearComplete()
  fullName: System.Collections.DictionaryBase.OnClearComplete()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 128
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Performs additional custom processes after clearing the contents of the @'System.Collections.DictionaryBase' instance.
  syntax:
    content: protected virtual void OnClearComplete()
    content.vb: Protected Overridable Sub OnClearComplete
- uid: System.Collections.DictionaryBase.OnGet(System.Object,System.Object)
  id: OnGet(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: OnGet(Object, Object)
  fullName: System.Collections.DictionaryBase.OnGet(System.Object, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 129
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets the element with the specified key and value in the @'System.Collections.DictionaryBase' instance.
  syntax:
    content: protected virtual object OnGet(object key, object currentValue)
    content.vb: Protected Overridable Function OnGet(key As Object, currentValue As Object) As Object
    parameters:
    - id: key
      type: System.Object
      description: The key of the element to get.
    - id: currentValue
      type: System.Object
      description: The current value of the element associated with *key*.
    return:
      type: System.Object
      description: An @'System.Object' containing the element with the specified key and value.
- uid: System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)
  id: OnInsert(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: OnInsert(Object, Object)
  fullName: System.Collections.DictionaryBase.OnInsert(System.Object, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 130
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Performs additional custom processes before inserting a new element into the @'System.Collections.DictionaryBase' instance.
  syntax:
    content: protected virtual void OnInsert(object key, object value)
    content.vb: Protected Overridable Sub OnInsert(key As Object, value As Object)
    parameters:
    - id: key
      type: System.Object
      description: The key of the element to insert.
    - id: value
      type: System.Object
      description: The value of the element to insert.
- uid: System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)
  id: OnInsertComplete(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: OnInsertComplete(Object, Object)
  fullName: System.Collections.DictionaryBase.OnInsertComplete(System.Object, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 131
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Performs additional custom processes after inserting a new element into the @'System.Collections.DictionaryBase' instance.
  syntax:
    content: protected virtual void OnInsertComplete(object key, object value)
    content.vb: Protected Overridable Sub OnInsertComplete(key As Object, value As Object)
    parameters:
    - id: key
      type: System.Object
      description: The key of the element to insert.
    - id: value
      type: System.Object
      description: The value of the element to insert.
- uid: System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)
  id: OnRemove(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: OnRemove(Object, Object)
  fullName: System.Collections.DictionaryBase.OnRemove(System.Object, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 132
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Performs additional custom processes before removing an element from the @'System.Collections.DictionaryBase' instance.
  syntax:
    content: protected virtual void OnRemove(object key, object value)
    content.vb: Protected Overridable Sub OnRemove(key As Object, value As Object)
    parameters:
    - id: key
      type: System.Object
      description: The key of the element to remove.
    - id: value
      type: System.Object
      description: The value of the element to remove.
- uid: System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)
  id: OnRemoveComplete(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: OnRemoveComplete(Object, Object)
  fullName: System.Collections.DictionaryBase.OnRemoveComplete(System.Object, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 133
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Performs additional custom processes after removing an element from the @'System.Collections.DictionaryBase' instance.
  syntax:
    content: protected virtual void OnRemoveComplete(object key, object value)
    content.vb: Protected Overridable Sub OnRemoveComplete(key As Object, value As Object)
    parameters:
    - id: key
      type: System.Object
      description: The key of the element to remove.
    - id: value
      type: System.Object
      description: The value of the element to remove.
- uid: System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)
  id: OnSet(System.Object,System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: OnSet(Object, Object, Object)
  fullName: System.Collections.DictionaryBase.OnSet(System.Object, System.Object, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 134
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Performs additional custom processes before setting a value in the @'System.Collections.DictionaryBase' instance.
  syntax:
    content: protected virtual void OnSet(object key, object oldValue, object newValue)
    content.vb: Protected Overridable Sub OnSet(key As Object, oldValue As Object, newValue As Object)
    parameters:
    - id: key
      type: System.Object
      description: The key of the element to locate.
    - id: oldValue
      type: System.Object
      description: The old value of the element associated with *key*.
    - id: newValue
      type: System.Object
      description: The new value of the element associated with *key*.
- uid: System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)
  id: OnSetComplete(System.Object,System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: OnSetComplete(Object, Object, Object)
  fullName: System.Collections.DictionaryBase.OnSetComplete(System.Object, System.Object, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 135
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Performs additional custom processes after setting a value in the @'System.Collections.DictionaryBase' instance.
  syntax:
    content: protected virtual void OnSetComplete(object key, object oldValue, object newValue)
    content.vb: Protected Overridable Sub OnSetComplete(key As Object, oldValue As Object, newValue As Object)
    parameters:
    - id: key
      type: System.Object
      description: The key of the element to locate.
    - id: oldValue
      type: System.Object
      description: The old value of the element associated with *key*.
    - id: newValue
      type: System.Object
      description: The new value of the element associated with *key*.
- uid: System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)
  id: OnValidate(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: OnValidate(Object, Object)
  fullName: System.Collections.DictionaryBase.OnValidate(System.Object, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 136
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Performs additional custom processes when validating the element with the specified key and value.
  syntax:
    content: protected virtual void OnValidate(object key, object value)
    content.vb: Protected Overridable Sub OnValidate(key As Object, value As Object)
    parameters:
    - id: key
      type: System.Object
      description: The key of the element to validate.
    - id: value
      type: System.Object
      description: The value of the element to validate.
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)
  id: System#Collections#IDictionary#Add(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: IDictionary.Add(Object, Object)
  name.vb: System.Collections.IDictionary.Add(Object, Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Add(System.Object, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 137
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Adds an element with the specified key and value into the @'System.Collections.DictionaryBase'.
  syntax:
    content: void IDictionary.Add(object key, object value)
    content.vb: Sub System.Collections.IDictionary.Add(key As Object, value As Object) Implements IDictionary.Add
    parameters:
    - id: key
      type: System.Object
      description: The key of the element to add.
    - id: value
      type: System.Object
      description: The value of the element to add.
  exceptions:
  - type: System.ArgumentNullException
    description: '*key* is null.'
  - type: System.ArgumentException
    description: An element with the same key already exists in the @'System.Collections.DictionaryBase'.
  - type: System.NotSupportedException
    description: The @'System.Collections.DictionaryBase' is read-only.-or- The @'System.Collections.DictionaryBase' has a fixed size.
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)
  id: System#Collections#IDictionary#Contains(System.Object)
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: IDictionary.Contains(Object)
  name.vb: System.Collections.IDictionary.Contains(Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Contains(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 138
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Determines whether the @'System.Collections.DictionaryBase' contains a specific key.
  syntax:
    content: bool IDictionary.Contains(object key)
    content.vb: Function System.Collections.IDictionary.Contains(key As Object) As Boolean Implements IDictionary.Contains
    parameters:
    - id: key
      type: System.Object
      description: The key to locate in the @'System.Collections.DictionaryBase'.
    return:
      type: System.Boolean
      description: true if the @'System.Collections.DictionaryBase' contains an element with the specified key; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*key* is null.'
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)
  id: System#Collections#IDictionary#Remove(System.Object)
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: IDictionary.Remove(Object)
  name.vb: System.Collections.IDictionary.Remove(Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Remove(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 139
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Removes the element with the specified key from the @'System.Collections.DictionaryBase'.
  syntax:
    content: void IDictionary.Remove(object key)
    content.vb: Sub System.Collections.IDictionary.Remove(key As Object) Implements IDictionary.Remove
    parameters:
    - id: key
      type: System.Object
      description: The key of the element to remove.
  exceptions:
  - type: System.ArgumentNullException
    description: '*key* is null.'
  - type: System.NotSupportedException
    description: The @'System.Collections.DictionaryBase' is read-only.-or- The @'System.Collections.DictionaryBase' has a fixed size.
- uid: System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.DictionaryBase
  href: System.Collections.DictionaryBase.yml
  name: IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.DictionaryBase.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 140
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns an @'System.Collections.IEnumerator' that iterates through the @'System.Collections.DictionaryBase'.
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
      description: An @'System.Collections.IEnumerator' for the @'System.Collections.DictionaryBase'.
references:
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  href: System.Collections.IDictionary.yml
  name: IDictionary
  fullName: System.Collections.IDictionary
  type: Interface
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  href: System.Collections.Hashtable.yml
  name: Hashtable
  fullName: System.Collections.Hashtable
  type: Class
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  href: System.Collections.ICollection.yml
  name: ICollection
  fullName: System.Collections.ICollection
  type: Interface
- uid: System.Array
  parent: System
  isExternal: false
  href: System.Array.yml
  name: Array
  fullName: System.Array
  type: Class
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: false
  href: System.Collections.IDictionaryEnumerator.yml
  name: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
  type: Interface
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  href: System.Collections.IEnumerator.yml
  name: IEnumerator
  fullName: System.Collections.IEnumerator
  type: Interface
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  type: Class
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  href: System.NotSupportedException.yml
  name: NotSupportedException
  fullName: System.NotSupportedException
  type: Class
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  type: Class
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  type: Class
- uid: System.InvalidCastException
  isExternal: false
  href: System.InvalidCastException.yml
  name: InvalidCastException
  fullName: System.InvalidCastException
  type: Class
  summary: The exception that is thrown for invalid casting or explicit conversion.
