items:
- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs
  id: UnobservedTaskExceptionEventArgs
  parent: System.Threading.Tasks
  children:
  - System.Threading.Tasks.UnobservedTaskExceptionEventArgs.#ctor(System.AggregateException)
  - System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception
  - System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Observed
  - System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved
  href: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.yml
  name: UnobservedTaskExceptionEventArgs
  fullName: System.Threading.Tasks.UnobservedTaskExceptionEventArgs
  type: Class
  source:
    remote: &o0
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 561
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: Provides data for the event that is raised when a faulted @'System.Threading.Tasks.Task''s exception goes unobserved.
  syntax:
    content: 'public class UnobservedTaskExceptionEventArgs : EventArgs'
    content.vb: Public Class UnobservedTaskExceptionEventArgs Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.#ctor(System.AggregateException)
  id: '#ctor(System.AggregateException)'
  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs
  href: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.yml
  name: UnobservedTaskExceptionEventArgs(AggregateException)
  fullName: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.UnobservedTaskExceptionEventArgs(System.AggregateException)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 563
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: Initializes a new instance of the @'System.Threading.Tasks.UnobservedTaskExceptionEventArgs' class with the unobserved exception.
  syntax:
    content: public UnobservedTaskExceptionEventArgs(AggregateException exception)
    content.vb: Public Sub New(exception As AggregateException)
    parameters:
    - id: exception
      type: System.AggregateException
      description: The Exception that has gone unobserved.
- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception
  id: Exception
  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs
  href: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.yml
  name: Exception
  fullName: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception
  type: Property
  source:
    remote: *o0
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 564
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: The Exception that went unobserved.
  syntax:
    content: public AggregateException Exception { get; }
    content.vb: Public ReadOnly Property Exception As AggregateException
    parameters: []
    return:
      type: System.AggregateException
      description: The Exception that went unobserved.
- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Observed
  id: Observed
  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs
  href: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.yml
  name: Observed
  fullName: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Observed
  type: Property
  source:
    remote: *o0
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 565
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: Gets whether this exception has been marked as "observed."
  syntax:
    content: public bool Observed { get; }
    content.vb: Public ReadOnly Property Observed As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if this exception has been marked as "observed"; otherwise false.
- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved
  id: SetObserved
  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs
  href: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.yml
  name: SetObserved()
  fullName: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 566
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: Marks the @'System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception' as "observed," thus preventing it from triggering exception escalation policy which, by default, terminates the process.
  syntax:
    content: public void SetObserved()
    content.vb: Public Sub SetObserved
references:
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.EventArgs
  parent: System
  isExternal: false
  href: System.EventArgs.yml
  name: EventArgs
  fullName: System.EventArgs
  type: Class
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.AggregateException
  parent: System
  isExternal: false
  href: System.AggregateException.yml
  name: AggregateException
  fullName: System.AggregateException
  type: Class
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
