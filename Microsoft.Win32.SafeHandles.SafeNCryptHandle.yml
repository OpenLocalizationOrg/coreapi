items:
- uid: Microsoft.Win32.SafeHandles.SafeNCryptHandle
  id: SafeNCryptHandle
  parent: Microsoft.Win32.SafeHandles
  children:
  - Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor
  - Microsoft.Win32.SafeHandles.SafeNCryptHandle.IsInvalid
  - Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle
  - Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle
  href: Microsoft.Win32.SafeHandles.SafeNCryptHandle.yml
  name: SafeNCryptHandle
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptHandle
  type: Class
  source:
    remote: &o0
      path: src/System.Security.Cryptography.Cng/src/Microsoft/Win32/SafeHandles/NCryptSafeHandles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Security.Cryptography.Cng/src/Microsoft/Win32/SafeHandles/NCryptSafeHandles.cs
    startLine: 36
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: Microsoft.Win32.SafeHandles
  summary: Provides a safe handle that can be used by Cryptography Next Generation (CNG) objects.
  syntax:
    content: 'public abstract class SafeNCryptHandle : SafeHandle, IDisposable'
    content.vb: Public MustInherit Class SafeNCryptHandle Inherits SafeHandle Implements IDisposable
  inheritance:
  - System.Object
  - System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  - System.Runtime.InteropServices.SafeHandle
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Runtime.InteropServices.SafeHandle.handle
  - System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)
  - System.Runtime.InteropServices.SafeHandle.DangerousGetHandle
  - System.Runtime.InteropServices.SafeHandle.Close
  - System.Runtime.InteropServices.SafeHandle.Dispose
  - System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)
  - System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid
  - System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)
  - System.Runtime.InteropServices.SafeHandle.DangerousRelease
  - System.Runtime.InteropServices.SafeHandle.IsClosed
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor
  id: '#ctor'
  parent: Microsoft.Win32.SafeHandles.SafeNCryptHandle
  href: Microsoft.Win32.SafeHandles.SafeNCryptHandle.yml
  name: SafeNCryptHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptHandle.SafeNCryptHandle()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/Microsoft/Win32/SafeHandles/NCryptSafeHandles.cs
    startLine: 64
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: Microsoft.Win32.SafeHandles
  summary: Initializes a new instance of the @'Microsoft.Win32.SafeHandles.SafeNCryptHandle' class.
  syntax:
    content: protected SafeNCryptHandle()
    content.vb: Protected Sub New
- uid: Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle
  id: ReleaseHandle
  parent: Microsoft.Win32.SafeHandles.SafeNCryptHandle
  href: Microsoft.Win32.SafeHandles.SafeNCryptHandle.yml
  name: ReleaseHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle()
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/Microsoft/Win32/SafeHandles/NCryptSafeHandles.cs
    startLine: 285
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: Microsoft.Win32.SafeHandles
  summary: Releases a handle used by a Cryptography Next Generation (CNG) object.
  syntax:
    content: protected override bool ReleaseHandle()
    content.vb: Protected Overrides Function ReleaseHandle As Boolean
    return:
      type: System.Boolean
      description: true if the handle is released successfully; otherwise, false.
  overridden: System.Runtime.InteropServices.SafeHandle.ReleaseHandle
- uid: Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle
  id: ReleaseNativeHandle
  parent: Microsoft.Win32.SafeHandles.SafeNCryptHandle
  href: Microsoft.Win32.SafeHandles.SafeNCryptHandle.yml
  name: ReleaseNativeHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle()
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/Microsoft/Win32/SafeHandles/NCryptSafeHandles.cs
    startLine: 301
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: Microsoft.Win32.SafeHandles
  summary: Releases a native handle used by a Cryptography Next Generation (CNG) object.
  syntax:
    content: protected abstract bool ReleaseNativeHandle()
    content.vb: Protected MustOverride Function ReleaseNativeHandle As Boolean
    return:
      type: System.Boolean
      description: true if the handle is released successfully; otherwise, false.
- uid: Microsoft.Win32.SafeHandles.SafeNCryptHandle.IsInvalid
  id: IsInvalid
  parent: Microsoft.Win32.SafeHandles.SafeNCryptHandle
  href: Microsoft.Win32.SafeHandles.SafeNCryptHandle.yml
  name: IsInvalid
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptHandle.IsInvalid
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/Microsoft/Win32/SafeHandles/NCryptSafeHandles.cs
    startLine: 268
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: Microsoft.Win32.SafeHandles
  syntax:
    content: public override bool IsInvalid { get; }
    content.vb: Public Overrides ReadOnly Property IsInvalid As Boolean
    parameters: []
    return:
      type: System.Boolean
  overridden: System.Runtime.InteropServices.SafeHandle.IsInvalid
references:
- uid: Microsoft.Win32.SafeHandles
  isExternal: false
  name: Microsoft.Win32.SafeHandles
  fullName: Microsoft.Win32.SafeHandles
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  parent: System.Runtime.ConstrainedExecution
  isExternal: true
  name: CriticalFinalizerObject
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: false
  href: System.Runtime.InteropServices.SafeHandle.yml
  name: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
  type: Class
- uid: System.Runtime.InteropServices.SafeHandle.handle
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  href: System.Runtime.InteropServices.SafeHandle.yml
  name: handle
  fullName: System.Runtime.InteropServices.SafeHandle.handle
- uid: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: true
  href: System.Runtime.InteropServices.SafeHandle.yml
  name: SetHandle(IntPtr)
  fullName: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)
    name: SetHandle
    fullName: System.Runtime.InteropServices.SafeHandle.SetHandle
    href: System.Runtime.InteropServices.SafeHandle.yml
  - name: (
    fullName: (
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)
    name: SetHandle
    fullName: System.Runtime.InteropServices.SafeHandle.SetHandle
    href: System.Runtime.InteropServices.SafeHandle.yml
  - name: (
    fullName: (
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
- uid: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  href: System.Runtime.InteropServices.SafeHandle.yml
  name: DangerousGetHandle()
  fullName: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle()
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle
    name: DangerousGetHandle
    fullName: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle
    href: System.Runtime.InteropServices.SafeHandle.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle
    name: DangerousGetHandle
    fullName: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle
    href: System.Runtime.InteropServices.SafeHandle.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Runtime.InteropServices.SafeHandle.Close
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: true
  name: Close()
  fullName: System.Runtime.InteropServices.SafeHandle.Close()
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeHandle.Close
    name: Close
    fullName: System.Runtime.InteropServices.SafeHandle.Close
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeHandle.Close
    name: Close
    fullName: System.Runtime.InteropServices.SafeHandle.Close
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Runtime.InteropServices.SafeHandle.Dispose
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  href: System.Runtime.InteropServices.SafeHandle.yml
  name: Dispose()
  fullName: System.Runtime.InteropServices.SafeHandle.Dispose()
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeHandle.Dispose
    name: Dispose
    fullName: System.Runtime.InteropServices.SafeHandle.Dispose
    href: System.Runtime.InteropServices.SafeHandle.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeHandle.Dispose
    name: Dispose
    fullName: System.Runtime.InteropServices.SafeHandle.Dispose
    href: System.Runtime.InteropServices.SafeHandle.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: true
  href: System.Runtime.InteropServices.SafeHandle.yml
  name: Dispose(Boolean)
  fullName: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)
    name: Dispose
    fullName: System.Runtime.InteropServices.SafeHandle.Dispose
    href: System.Runtime.InteropServices.SafeHandle.yml
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)
    name: Dispose
    fullName: System.Runtime.InteropServices.SafeHandle.Dispose
    href: System.Runtime.InteropServices.SafeHandle.yml
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  href: System.Runtime.InteropServices.SafeHandle.yml
  name: SetHandleAsInvalid()
  fullName: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid()
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid
    name: SetHandleAsInvalid
    fullName: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid
    href: System.Runtime.InteropServices.SafeHandle.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid
    name: SetHandleAsInvalid
    fullName: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid
    href: System.Runtime.InteropServices.SafeHandle.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: true
  href: System.Runtime.InteropServices.SafeHandle.yml
  name: DangerousAddRef(Boolean)
  fullName: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean)
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)
    name: DangerousAddRef
    fullName: System.Runtime.InteropServices.SafeHandle.DangerousAddRef
    href: System.Runtime.InteropServices.SafeHandle.yml
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)
    name: DangerousAddRef
    fullName: System.Runtime.InteropServices.SafeHandle.DangerousAddRef
    href: System.Runtime.InteropServices.SafeHandle.yml
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Runtime.InteropServices.SafeHandle.DangerousRelease
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  href: System.Runtime.InteropServices.SafeHandle.yml
  name: DangerousRelease()
  fullName: System.Runtime.InteropServices.SafeHandle.DangerousRelease()
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeHandle.DangerousRelease
    name: DangerousRelease
    fullName: System.Runtime.InteropServices.SafeHandle.DangerousRelease
    href: System.Runtime.InteropServices.SafeHandle.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeHandle.DangerousRelease
    name: DangerousRelease
    fullName: System.Runtime.InteropServices.SafeHandle.DangerousRelease
    href: System.Runtime.InteropServices.SafeHandle.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Runtime.InteropServices.SafeHandle.IsClosed
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  href: System.Runtime.InteropServices.SafeHandle.yml
  name: IsClosed
  fullName: System.Runtime.InteropServices.SafeHandle.IsClosed
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Runtime.ConstrainedExecution
  isExternal: false
  name: System.Runtime.ConstrainedExecution
  fullName: System.Runtime.ConstrainedExecution
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
  type: Namespace
- uid: System.Runtime.InteropServices.SafeHandle.ReleaseHandle
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  href: System.Runtime.InteropServices.SafeHandle.yml
  name: ReleaseHandle()
  fullName: System.Runtime.InteropServices.SafeHandle.ReleaseHandle()
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeHandle.ReleaseHandle
    name: ReleaseHandle
    fullName: System.Runtime.InteropServices.SafeHandle.ReleaseHandle
    href: System.Runtime.InteropServices.SafeHandle.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeHandle.ReleaseHandle
    name: ReleaseHandle
    fullName: System.Runtime.InteropServices.SafeHandle.ReleaseHandle
    href: System.Runtime.InteropServices.SafeHandle.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.Runtime.InteropServices.SafeHandle.IsInvalid
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  href: System.Runtime.InteropServices.SafeHandle.yml
  name: IsInvalid
  fullName: System.Runtime.InteropServices.SafeHandle.IsInvalid
