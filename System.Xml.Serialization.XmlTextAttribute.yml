items:
- uid: System.Xml.Serialization.XmlTextAttribute
  commentId: T:System.Xml.Serialization.XmlTextAttribute
  id: XmlTextAttribute
  parent: System.Xml.Serialization
  children:
  - System.Xml.Serialization.XmlTextAttribute.#ctor
  - System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)
  - System.Xml.Serialization.XmlTextAttribute.DataType
  - System.Xml.Serialization.XmlTextAttribute.Type
  langs:
  - csharp
  - vb
  name: XmlTextAttribute
  fullName: System.Xml.Serialization.XmlTextAttribute
  type: Class
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlTextAttribute
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 208
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Indicates to the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> that the member must be treated as XML text when the class that contains it is serialized or deserialized.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref> belongs to a family of attributes that controls how the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes and deserializes an object (through its <xref href=\"System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\" data-throw-if-not-resolved=\"false\"></xref> methods). For a complete list of similar attributes, see Attributes That Control XML Serialization.</p>\n<p>Only one instance of the <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref> class can be applied in a class.</p>\n<p>You can apply the <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref> to public fields and public read/write properties that return primitive and enumeration types.</p>\n<p>You can apply the <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a field or property that returns an array of strings. You can also apply the attribute to an array of type <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> but you must set the <xref href=\"System.Xml.Serialization.XmlTextAttribute.Type\" data-throw-if-not-resolved=\"false\"></xref> property to string. In that case, any strings inserted into the array are serialized as XML text.</p>\n<p>The <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref> can also be applied to a field that returns an <xref href=\"System.Xml.XmlNode\" data-throw-if-not-resolved=\"false\"></xref> or an array of <xref href=\"System.Xml.XmlNode\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n<p>By default, the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes a class member as an XML element. However, if you apply the <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a member, the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> translates its value into XML text. This means that the value is encoded into the content of an XML element.</p>\n<p>The XML Schema Definition Tool (Xsd.exe) occasionally generates the <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref> when creating classes from an XML Schema definition (XSD) file. This occurs when the schema contains a <code>complexType</code> with mixed content; in that case, the corresponding class contains a member that returns a string array to which the <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref> is applied. For example, when the <strong>Xml Schema Definition</strong> tool processes this schema: </p>\n<pre><code> <xs:schema attributeFormDefault=\"qualified\" elementFormDefault=\"qualified\" targetNamespace=\"\" \nxmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\n<xs:element name=\"LinkList\" type=\"LinkList\" />\n<xs:complexType name=\"LinkList\" mixed=\"true\">\n<xs:sequence>\n<xs:element minOccurs=\"1\" maxOccurs=\"1\" name=\"id\" type=\"xs:int\" />\n<xs:element minOccurs=\"0\" maxOccurs=\"1\" name=\"name\" type=\"xs:string\" />\n<xs:element minOccurs=\"0\" maxOccurs=\"1\" name=\"next\" type=\"LinkList\" />\n</xs:sequence>\n</xs:complexType>\n</xs:schema></code></pre>\n<p>the following class is generated (extra spaces and remarks have been removed): </p>XmlTextAttribute#0<p>For more information about using attributes, see Extending Metadata Using Attributes.</p><p>You can use the word <strong>XmlText</strong> in your code instead of the longer <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>"
  example:
  - Classic XmlTextAttribute Example#1
  syntax:
    content: 'public class XmlTextAttribute : Attribute'
    content.vb: >-
      Public Class XmlTextAttribute
          Inherits Attribute
  seealso:
  - type: System.Xml.Serialization.XmlAttributeOverrides
    commentId: T:System.Xml.Serialization.XmlAttributeOverrides
  - type: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  - type: System.Xml.Serialization.XmlSerializer
    commentId: T:System.Xml.Serialization.XmlSerializer
  - type: System.Xml.Serialization.XmlAttributes.XmlText
    commentId: P:System.Xml.Serialization.XmlAttributes.XmlText
  - type: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.Serialization.XmlTextAttribute.#ctor
  commentId: M:System.Xml.Serialization.XmlTextAttribute.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlTextAttribute
  langs:
  - csharp
  - vb
  name: XmlTextAttribute()
  fullName: System.Xml.Serialization.XmlTextAttribute.XmlTextAttribute()
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 211
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>You can override the way that the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes a public field or public read/write property by creating an <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref>, and setting its <xref href=\"System.Xml.Serialization.XmlAttributes.XmlText\" data-throw-if-not-resolved=\"false\"></xref> property to an <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref>. For more details, see the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example:
  - "\n<p>The following example serializes a class that contains a public field, named <strong>Comment</strong>. The example applies an <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the field, thereby overriding its serialization as an XML element, and instead serializing it as XML text.</p>Classic XmlTextAttribute.XmlTextAttribute Example#1"
  syntax:
    content: public XmlTextAttribute()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)
  commentId: M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Xml.Serialization.XmlTextAttribute
  langs:
  - csharp
  - vb
  name: XmlTextAttribute(Type)
  fullName: System.Xml.Serialization.XmlTextAttribute.XmlTextAttribute(System.Type)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 212
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>You can override the way that the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes a public field or public read/write property by creating an <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref>, and setting its <xref href=\"System.Xml.Serialization.XmlAttributes.XmlText\" data-throw-if-not-resolved=\"false\"></xref> property to an <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref>. For more details, see the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example:
  - Classic XmlTextAttribute Example#1
  syntax:
    content: public XmlTextAttribute(Type type)
    content.vb: Public Sub New(type As Type)
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the member to be serialized. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlTextAttribute.DataType
  commentId: P:System.Xml.Serialization.XmlTextAttribute.DataType
  id: DataType
  parent: System.Xml.Serialization.XmlTextAttribute
  langs:
  - csharp
  - vb
  name: DataType
  fullName: System.Xml.Serialization.XmlTextAttribute.DataType
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DataType
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 213
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets the XML Schema definition language (XSD) data type of the text generated by the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>Setting the <xref href=\"System.Xml.Serialization.XmlTextAttribute.DataType\" data-throw-if-not-resolved=\"false\"></xref> property to an XML Schema simple data type affects the format of the generated XML. For example, setting the property to \"date\" causes the generated text to be formatted in the general date style, for example: 2001-08-31. By contrast, setting the property to \"dateTime\" results in a specific instant as defined by the International Organization for Standardization document 8601, \"Representations of Dates and Times\", for example: 2001-08-15T06:59:11.0508456-07:00.</p>\n<p>The effect of setting the <xref href=\"System.Xml.Serialization.XmlTextAttribute.DataType\" data-throw-if-not-resolved=\"false\"></xref> property can also be seen when using the XML Schema Definition Tool (Xsd.exe) to generate the XML Schema for a compiled file. For more information on using the tool, see The XML Schema Definition Tool and XML Serialization. </p>\n<p>The following table lists the XML Schema simple data types with their .NET equivalents.</p>\n<p>For the XML Schema <strong>base64Binary</strong> and <strong>hexBinary</strong> data types, use an array of <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> structures, and apply a <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref> with the <xref href=\"System.Xml.Serialization.XmlTextAttribute.DataType\" data-throw-if-not-resolved=\"false\"></xref> set to \"base64Binary\" or \"hexBinary\", as appropriate. For the XML Schema <strong>time</strong> and <strong>date</strong> data types, use the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> type and apply the <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref> with the <xref href=\"System.Xml.Serialization.XmlTextAttribute.DataType\" data-throw-if-not-resolved=\"false\"></xref> set to \"date\" or \"time\".</p>\n<p>For every XML Schema data type that is mapped to a string, apply the <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref> with its <xref href=\"System.Xml.Serialization.XmlTextAttribute.DataType\" data-throw-if-not-resolved=\"false\"></xref> property set to the XML Schema data type. Note that this does not change the serialization format, only the schema for the member.</p>\n<p>The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.</p>\n<p>Passing binary data as an XML element is more efficient than passing it as an XML attribute.</p>\n<p>For more information about XML Schema data types, see the World Wide Web Consortium (www.w3.org) document named \"XML Schema Part 2: Datatypes\".</p>\n<p>XSD data type </p>\n<p>.NET data type </p>\n<table><tbody><tr><td>\n<p>anyURI </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>base64Binary </p>\n</td><td>\n<p>Array of <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> objects </p>\n</td></tr><tr><td>\n<p>boolean </p>\n</td><td>\n<p>\n<xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>byte </p>\n</td><td>\n<p>\n<xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>date </p>\n</td><td>\n<p>\n<xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>dateTime </p>\n</td><td>\n<p>\n<xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>decimal </p>\n</td><td>\n<p>\n<xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>double </p>\n</td><td>\n<p>\n<xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>ENTITY </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>ENTITIES </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>float </p>\n</td><td>\n<p>\n<xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>gDay </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>gMonth </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>gMonthDay </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>gYear </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>gYearMonth </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>hexBinary </p>\n</td><td>\n<p>Array of <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> objects </p>\n</td></tr><tr><td>\n<p>ID </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>IDREF </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>IDREFS </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>int </p>\n</td><td>\n<p>\n<xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>integer </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>language </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>long </p>\n</td><td>\n<p>\n<xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>Name </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>NCName </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>negativeInteger </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>NMTOKEN </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>NMTOKENS </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>normalizedString </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>nonNegativeInteger </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>nonPositiveInteger </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>NOTATION </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>positiveInteger </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>QName </p>\n</td><td>\n<p>\n<xref href=\"System.Xml.XmlQualifiedName\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>duration </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>string </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>short </p>\n</td><td>\n<p>\n<xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>time </p>\n</td><td>\n<p>\n<xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>token </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>unsignedByte </p>\n</td><td>\n<p>\n<xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>unsignedInt </p>\n</td><td>\n<p>\n<xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>unsignedLong </p>\n</td><td>\n<p>\n<xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>unsignedShort </p>\n</td><td>\n<p>\n<xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr></tbody></table>\n"
  example:
  - Classic XmlTextAttribute Example#1
  syntax:
    content: public string DataType { get; set; }
    content.vb: Public Property DataType As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>An XML Schema (XSD) data type, as defined by the World Wide Web Consortium (www.w3.org) document \"XML Schema Part 2: Datatypes\".</p>\n"
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "\n<p>The XML Schema data type you have specified cannot be mapped to the .NET data type. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The XML Schema data type you have specified is invalid for the property and cannot be converted to the member type. </p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlTextAttribute.Type
  commentId: P:System.Xml.Serialization.XmlTextAttribute.Type
  id: Type
  parent: System.Xml.Serialization.XmlTextAttribute
  langs:
  - csharp
  - vb
  name: Type
  fullName: System.Xml.Serialization.XmlTextAttribute.Type
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Type
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 214
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets the type of the member.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> property can only be set to primitive types and enumerations.</p>\n<p>The <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref> can also be applied to a field that returns an <xref href=\"System.Xml.XmlNode\" data-throw-if-not-resolved=\"false\"></xref> or an array of <xref href=\"System.Xml.XmlNode\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n<p>You can apply the <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a field or property that returns an array of strings. You can also apply the attribute to an array of type <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> but you must set the <xref href=\"System.Xml.Serialization.XmlTextAttribute.Type\" data-throw-if-not-resolved=\"false\"></xref> property to string. In that case, any strings inserted into the array are serialized as XML text.</p>\n"
  example:
  - Classic XmlTextAttribute Example#1
  syntax:
    content: public Type Type { get; set; }
    content.vb: Public Property Type As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the member.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Xml.Serialization
  isExternal: false
  name: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
