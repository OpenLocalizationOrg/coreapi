items:
- uid: System.ComponentModel.DefaultPropertyAttribute
  commentId: T:System.ComponentModel.DefaultPropertyAttribute
  id: DefaultPropertyAttribute
  parent: System.ComponentModel
  children:
  - System.ComponentModel.DefaultPropertyAttribute.#ctor(System.String)
  - System.ComponentModel.DefaultPropertyAttribute.Default
  - System.ComponentModel.DefaultPropertyAttribute.Equals(System.Object)
  - System.ComponentModel.DefaultPropertyAttribute.GetHashCode
  - System.ComponentModel.DefaultPropertyAttribute.Name
  langs:
  - csharp
  - vb
  name: DefaultPropertyAttribute
  fullName: System.ComponentModel.DefaultPropertyAttribute
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/DefaultPropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DefaultPropertyAttribute
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/DefaultPropertyAttribute.cs
    startLine: 9
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Specifies the default property for a component.</p>\n"
  remarks: "\n<p>Use the <xref href=\"System.ComponentModel.DefaultPropertyAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> property to get the name of the default property.</p>\n<p>For more information, see Extending Metadata Using Attributes.</p>\n"
  example:
  - "\n<p>The following example defines a control named <code>MyControl</code>. The class is marked with a <xref href=\"System.ComponentModel.DefaultPropertyAttribute\" data-throw-if-not-resolved=\"false\"></xref> that specifies <code>MyProperty</code> as the default property.</p>Classic DefaultPropertyAttribute Example#1<p>The next example creates an instance of <code>MyControl</code>. Then it gets the attributes for the class, extracts the <xref href=\"System.ComponentModel.DefaultPropertyAttribute\" data-throw-if-not-resolved=\"false\"></xref>, and prints the name of the default property.</p>Classic DefaultPropertyAttribute Example#2"
  syntax:
    content: 'public sealed class DefaultPropertyAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class DefaultPropertyAttribute
          Inherits Attribute
  seealso:
  - type: System.Attribute
    commentId: T:System.Attribute
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.ComponentModel.DefaultPropertyAttribute.Default
  commentId: F:System.ComponentModel.DefaultPropertyAttribute.Default
  id: Default
  parent: System.ComponentModel.DefaultPropertyAttribute
  langs:
  - csharp
  - vb
  name: Default
  fullName: System.ComponentModel.DefaultPropertyAttribute.Default
  type: Field
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/DefaultPropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Default
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/DefaultPropertyAttribute.cs
    startLine: 48
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Specifies the default value for the <xref href=\"System.ComponentModel.DefaultPropertyAttribute\" data-throw-if-not-resolved=\"false\"></xref>, which is <strong>null</strong>. This <strong>static</strong> field is read-only.</p>\n"
  syntax:
    content: public static readonly DefaultPropertyAttribute Default
    content.vb: Public Shared ReadOnly Default As DefaultPropertyAttribute
    return:
      type: System.ComponentModel.DefaultPropertyAttribute
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ComponentModel.DefaultPropertyAttribute.#ctor(System.String)
  commentId: M:System.ComponentModel.DefaultPropertyAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.DefaultPropertyAttribute
  langs:
  - csharp
  - vb
  name: DefaultPropertyAttribute(String)
  fullName: System.ComponentModel.DefaultPropertyAttribute.DefaultPropertyAttribute(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/DefaultPropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/DefaultPropertyAttribute.cs
    startLine: 23
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.DefaultPropertyAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public DefaultPropertyAttribute(string name)
    content.vb: Public Sub New(name As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the default property for the component this attribute is bound to. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DefaultPropertyAttribute.Equals(System.Object)
  commentId: M:System.ComponentModel.DefaultPropertyAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.DefaultPropertyAttribute
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.ComponentModel.DefaultPropertyAttribute.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/DefaultPropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/DefaultPropertyAttribute.cs
    startLine: 50
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns whether the value of the given object is equal to the current <xref href=\"System.ComponentModel.DefaultPropertyAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>The object to test the value equality of. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the value of the given object is equal to that of the current; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.DefaultPropertyAttribute.GetHashCode
  commentId: M:System.ComponentModel.DefaultPropertyAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.DefaultPropertyAttribute
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.ComponentModel.DefaultPropertyAttribute.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/DefaultPropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/DefaultPropertyAttribute.cs
    startLine: 56
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the hash code for this instance.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>A 32-bit signed integer hash code.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.DefaultPropertyAttribute.Name
  commentId: P:System.ComponentModel.DefaultPropertyAttribute.Name
  id: Name
  parent: System.ComponentModel.DefaultPropertyAttribute
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.ComponentModel.DefaultPropertyAttribute.Name
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/DefaultPropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/DefaultPropertyAttribute.cs
    startLine: 34
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets the name of the default property for the component this attribute is bound to.</p>\n"
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the default property for the component this attribute is bound to. The default value is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.ComponentModel.DefaultPropertyAttribute
  parent: System.ComponentModel
  isExternal: false
  name: DefaultPropertyAttribute
  fullName: System.ComponentModel.DefaultPropertyAttribute
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
