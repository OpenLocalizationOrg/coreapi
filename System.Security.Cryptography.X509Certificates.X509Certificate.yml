items:
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  id: X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  children:
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  - System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  - System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  - System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  - System.Security.Cryptography.X509Certificates.X509Certificate.ToString
  - System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
  type: Class
  source:
    remote: &o0
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 15
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Provides methods that help you use X.509 v.3 certificates.
  syntax:
    content: 'public class X509Certificate : IDisposable'
    content.vb: Public Class X509Certificate Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: X509Certificate()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 17
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Initializes a new instance of the @'System.Security.Cryptography.X509Certificates.X509Certificate' class.
  syntax:
    content: public X509Certificate()
    content.vb: Public Sub New
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: X509Certificate(Byte[])
  name.vb: X509Certificate(Byte())
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(System.Byte[])
  fullName.vb: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(System.Byte())
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 21
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Initializes a new instance of the @'System.Security.Cryptography.X509Certificates.X509Certificate' class defined from a sequence of bytes representing an X.509v3 certificate.
  syntax:
    content: public X509Certificate(byte[] data)
    content.vb: Public Sub New(data As Byte())
    parameters:
    - id: data
      type: System.Byte[]
      description: A byte array containing data from an X.509 certificate.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.
  - type: System.ArgumentException
    description: The *rawData* parameter is null.-or-The length of the *rawData* parameter is 0.
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)
  id: '#ctor(System.Byte[],System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: X509Certificate(Byte[], String)
  name.vb: X509Certificate(Byte(), String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(System.Byte[], System.String)
  fullName.vb: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(System.Byte(), System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 27
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Initializes a new instance of the @'System.Security.Cryptography.X509Certificates.X509Certificate' class using a byte array and a password.
  syntax:
    content: public X509Certificate(byte[] rawData, string password)
    content.vb: Public Sub New(rawData As Byte(), password As String)
    parameters:
    - id: rawData
      type: System.Byte[]
      description: A byte array containing data from an X.509 certificate.
    - id: password
      type: System.String
      description: The password required to access the X.509 certificate data.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.
  - type: System.ArgumentException
    description: The *rawData* parameter is null.-or-The length of the *rawData* parameter is 0.
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: X509Certificate(Byte[], String, X509KeyStorageFlags)
  name.vb: X509Certificate(Byte(), String, X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(System.Byte[], System.String, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  fullName.vb: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(System.Byte(), System.String, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 32
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Initializes a new instance of the @'System.Security.Cryptography.X509Certificates.X509Certificate' class using a byte array, a password, and a key storage flag.
  syntax:
    content: public X509Certificate(byte[] rawData, string password, X509KeyStorageFlags keyStorageFlags)
    content.vb: Public Sub New(rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)
    parameters:
    - id: rawData
      type: System.Byte[]
      description: A byte array containing data from an X.509 certificate.
    - id: password
      type: System.String
      description: The password required to access the X.509 certificate data.
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: A bitwise combination of the enumeration values that control where and how to import the certificate.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.
  - type: System.ArgumentException
    description: The *rawData* parameter is null.-or-The length of the *rawData* parameter is 0.
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: X509Certificate(IntPtr)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(System.IntPtr)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 42
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Initializes a new instance of the @'System.Security.Cryptography.X509Certificates.X509Certificate' class using a handle to an unmanaged PCCERT_CONTEXT structure.
  syntax:
    content: public X509Certificate(IntPtr handle)
    content.vb: Public Sub New(handle As IntPtr)
    parameters:
    - id: handle
      type: System.IntPtr
      description: A handle to an unmanaged PCCERT_CONTEXT structure.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.
  - type: System.ArgumentException
    description: The handle parameter does not represent a valid PCCERT_CONTEXT structure.
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: X509Certificate(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 53
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Initializes a new instance of the @'System.Security.Cryptography.X509Certificates.X509Certificate' class using the name of a PKCS7 signed file.
  syntax:
    content: public X509Certificate(string fileName)
    content.vb: Public Sub New(fileName As String)
    parameters:
    - id: fileName
      type: System.String
      description: The name of a PKCS7 signed file.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.
  - type: System.ArgumentException
    description: The *fileName* parameter is null.
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: X509Certificate(String, String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(System.String, System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 58
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Initializes a new instance of the @'System.Security.Cryptography.X509Certificates.X509Certificate' class using the name of a PKCS7 signed file and a password to access the certificate.
  syntax:
    content: public X509Certificate(string fileName, string password)
    content.vb: Public Sub New(fileName As String, password As String)
    parameters:
    - id: fileName
      type: System.String
      description: The name of a PKCS7 signed file.
    - id: password
      type: System.String
      description: The password required to access the X.509 certificate data.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.
  - type: System.ArgumentException
    description: The *fileName* parameter is null.
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: X509Certificate(String, String, X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(System.String, System.String, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 63
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Initializes a new instance of the @'System.Security.Cryptography.X509Certificates.X509Certificate' class using the name of a PKCS7 signed file, a password to access the certificate, and a key storage flag.
  syntax:
    content: public X509Certificate(string fileName, string password, X509KeyStorageFlags keyStorageFlags)
    content.vb: Public Sub New(fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)
    parameters:
    - id: fileName
      type: System.String
      description: The name of a PKCS7 signed file.
    - id: password
      type: System.String
      description: The password required to access the X.509 certificate data.
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: A bitwise combination of the enumeration values that control where and how to import the certificate.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.
  - type: System.ArgumentException
    description: The *fileName* parameter is null.
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  id: Handle
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: Handle
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 73
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets a handle to a Microsoft Cryptographic API certificate context described by an unmanaged PCCERT_CONTEXT structure.
  syntax:
    content: public IntPtr Handle { get; }
    content.vb: Public ReadOnly Property Handle As IntPtr
    parameters: []
    return:
      type: System.IntPtr
      description: An @'System.IntPtr' structure that represents an unmanaged PCCERT_CONTEXT structure.
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  id: Issuer
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: Issuer
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 84
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets the name of the certificate authority that issued the X.509v3 certificate.
  syntax:
    content: public string Issuer { get; }
    content.vb: Public ReadOnly Property Issuer As String
    parameters: []
    return:
      type: System.String
      description: The name of the certificate authority that issued the X.509v3 certificate.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: The certificate handle is invalid.
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  id: Subject
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: Subject
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 97
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets the subject distinguished name from the certificate.
  syntax:
    content: public string Subject { get; }
    content.vb: Public ReadOnly Property Subject As String
    parameters: []
    return:
      type: System.String
      description: The subject distinguished name from the certificate.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: The certificate handle is invalid.
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  id: Dispose
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: Dispose()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 110
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Releases all resources used by the current @'System.Security.Cryptography.X509Certificates.X509Certificate' object.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: Dispose(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 115
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Releases all of the unmanaged resources used by this @'System.Security.Cryptography.X509Certificates.X509Certificate' and optionally releases the managed resources.
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: true to release both managed and unmanaged resources; false to release only unmanaged resources.
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: Equals(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 126
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Compares two @'System.Security.Cryptography.X509Certificates.X509Certificate' objects for equality.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: An @'System.Security.Cryptography.X509Certificates.X509Certificate' object to compare to the current object.
    return:
      type: System.Boolean
      description: true if the current @'System.Security.Cryptography.X509Certificates.X509Certificate' object is equal to the object specified by the *other* parameter; otherwise, false.
  overridden: System.Object.Equals(System.Object)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: Equals(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 134
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Compares two @'System.Security.Cryptography.X509Certificates.X509Certificate' objects for equality.
  syntax:
    content: public virtual bool Equals(X509Certificate other)
    content.vb: Public Overridable Function Equals(other As X509Certificate) As Boolean
    parameters:
    - id: other
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: An @'System.Security.Cryptography.X509Certificates.X509Certificate' object to compare to the current object.
    return:
      type: System.Boolean
      description: true if the current @'System.Security.Cryptography.X509Certificates.X509Certificate' object is equal to the object specified by the *other* parameter; otherwise, false.
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: Export(X509ContentType)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 158
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Exports the current @'System.Security.Cryptography.X509Certificates.X509Certificate' object to a byte array in a format described by one of the @'System.Security.Cryptography.X509Certificates.X509ContentType' values.
  syntax:
    content: public virtual byte[] Export(X509ContentType contentType)
    content.vb: Public Overridable Function Export(contentType As X509ContentType) As Byte()
    parameters:
    - id: contentType
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: One of the @'System.Security.Cryptography.X509Certificates.X509ContentType' values that describes how to format the output data.
    return:
      type: System.Byte[]
      description: An array of bytes that represents the current @'System.Security.Cryptography.X509Certificates.X509Certificate' object.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: A value other than @'System.Security.Cryptography.X509Certificates.X509ContentType.Cert', @'System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert', or @'System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12' was passed to the *contentType* parameter.-or-The certificate could not be exported.
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: Export(X509ContentType, String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType, System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 163
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Exports the current @'System.Security.Cryptography.X509Certificates.X509Certificate' object to a byte array in a format described by one of the @'System.Security.Cryptography.X509Certificates.X509ContentType' values, and using the specified password.
  syntax:
    content: public virtual byte[] Export(X509ContentType contentType, string password)
    content.vb: Public Overridable Function Export(contentType As X509ContentType, password As String) As Byte()
    parameters:
    - id: contentType
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: One of the @'System.Security.Cryptography.X509Certificates.X509ContentType' values that describes how to format the output data.
    - id: password
      type: System.String
      description: The password required to access the X.509 certificate data.
    return:
      type: System.Byte[]
      description: An array of bytes that represents the current @'System.Security.Cryptography.X509Certificates.X509Certificate' object.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: A value other than @'System.Security.Cryptography.X509Certificates.X509ContentType.Cert', @'System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert', or @'System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12' was passed to the *contentType* parameter.-or-The certificate could not be exported.
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  id: GetCertHash
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: GetCertHash()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash()
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 177
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Returns the hash value for the X.509v3 certificate as an array of bytes.
  syntax:
    content: public virtual byte[] GetCertHash()
    content.vb: Public Overridable Function GetCertHash As Byte()
    return:
      type: System.Byte[]
      description: The hash value for the X.509 certificate.
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  id: GetFormat
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: GetFormat()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat()
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 188
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Returns the name of the format of this X.509v3 certificate.
  syntax:
    content: public virtual string GetFormat()
    content.vb: Public Overridable Function GetFormat As String
    return:
      type: System.String
      description: The format of this X.509 certificate.
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: GetHashCode()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 193
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Returns the hash code for the X.509v3 certificate as an integer.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: The hash code for the X.509 certificate as an integer.
  overridden: System.Object.GetHashCode
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  id: GetKeyAlgorithm
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: GetKeyAlgorithm()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm()
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 207
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Returns the key algorithm information for this X.509v3 certificate as a string.
  syntax:
    content: public virtual string GetKeyAlgorithm()
    content.vb: Public Overridable Function GetKeyAlgorithm As String
    return:
      type: System.String
      description: The key algorithm information for this X.509 certificate as a string.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: The certificate context is invalid.
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  id: GetKeyAlgorithmParameters
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: GetKeyAlgorithmParameters()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters()
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 217
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Returns the key algorithm parameters for the X.509v3 certificate as an array of bytes.
  syntax:
    content: public virtual byte[] GetKeyAlgorithmParameters()
    content.vb: Public Overridable Function GetKeyAlgorithmParameters As Byte()
    return:
      type: System.Byte[]
      description: The key algorithm parameters for the X.509 certificate as an array of bytes.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: The certificate context is invalid.
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  id: GetKeyAlgorithmParametersString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: GetKeyAlgorithmParametersString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString()
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 227
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Returns the key algorithm parameters for the X.509v3 certificate as a hexadecimal string.
  syntax:
    content: public virtual string GetKeyAlgorithmParametersString()
    content.vb: Public Overridable Function GetKeyAlgorithmParametersString As String
    return:
      type: System.String
      description: The key algorithm parameters for the X.509 certificate as a hexadecimal string.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: The certificate context is invalid.
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  id: GetPublicKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: GetPublicKey()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey()
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 235
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Returns the public key for the X.509v3 certificate as an array of bytes.
  syntax:
    content: public virtual byte[] GetPublicKey()
    content.vb: Public Overridable Function GetPublicKey As Byte()
    return:
      type: System.Byte[]
      description: The public key for the X.509 certificate as an array of bytes.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: The certificate context is invalid.
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  id: GetSerialNumber
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: GetSerialNumber()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber()
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 245
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Returns the serial number of the X.509v3 certificate as an array of bytes.
  syntax:
    content: public virtual byte[] GetSerialNumber()
    content.vb: Public Overridable Function GetSerialNumber As Byte()
    return:
      type: System.Byte[]
      description: The serial number of the X.509 certificate as an array of bytes.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: The certificate context is invalid.
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString
  id: ToString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: ToString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 255
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Returns a string representation of the current @'System.Security.Cryptography.X509Certificates.X509Certificate' object.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string representation of the current @'System.Security.Cryptography.X509Certificates.X509Certificate' object.
  overridden: System.Object.ToString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)
  id: ToString(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: ToString(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs
    startLine: 260
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Returns a string representation of the current @'System.Security.Cryptography.X509Certificates.X509Certificate' object, with extra information, if specified.
  syntax:
    content: public virtual string ToString(bool fVerbose)
    content.vb: Public Overridable Function ToString(fVerbose As Boolean) As String
    parameters:
    - id: fVerbose
      type: System.Boolean
      description: true to produce the verbose form of the string representation; otherwise, false.
    return:
      type: System.String
      description: A string representation of the current @'System.Security.Cryptography.X509Certificates.X509Certificate' object.
references:
- uid: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
  type: Class
- uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  href: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags.yml
  name: X509KeyStorageFlags
  fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
  type: Enum
- uid: System.IntPtr
  parent: System
  isExternal: false
  href: System.IntPtr.yml
  name: IntPtr
  fullName: System.IntPtr
  type: Struct
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  href: System.Security.Cryptography.X509Certificates.X509Certificate.yml
  name: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
  type: Class
- uid: System.Security.Cryptography.X509Certificates.X509ContentType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  href: System.Security.Cryptography.X509Certificates.X509ContentType.yml
  name: X509ContentType
  fullName: System.Security.Cryptography.X509Certificates.X509ContentType
  type: Enum
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.Cryptography.CryptographicException
  isExternal: false
  href: System.Security.Cryptography.CryptographicException.yml
  name: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
  type: Class
  summary: The exception that is thrown when an error occurs during a cryptographic operation.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  type: Class
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
