items:
- uid: System.Runtime.InteropServices.CallingConvention
  id: CallingConvention
  parent: System.Runtime.InteropServices
  children:
  - System.Runtime.InteropServices.CallingConvention.Cdecl
  - System.Runtime.InteropServices.CallingConvention.StdCall
  - System.Runtime.InteropServices.CallingConvention.ThisCall
  - System.Runtime.InteropServices.CallingConvention.Winapi
  href: System.Runtime.InteropServices.CallingConvention.yml
  name: CallingConvention
  fullName: System.Runtime.InteropServices.CallingConvention
  type: Enum
  source:
    remote: &o0
      path: src/mscorlib/src/System/Runtime/InteropServices/CallingConvention.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Runtime/InteropServices/CallingConvention.cs
    startLine: 9
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: Specifies the calling convention required to call methods implemented in unmanaged code.
  syntax:
    content: public enum CallingConvention
    content.vb: Public Enum CallingConvention
- uid: System.Runtime.InteropServices.CallingConvention.Cdecl
  id: Cdecl
  parent: System.Runtime.InteropServices.CallingConvention
  href: System.Runtime.InteropServices.CallingConvention.yml
  name: Cdecl
  fullName: System.Runtime.InteropServices.CallingConvention.Cdecl
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/InteropServices/CallingConvention.cs
    startLine: 14
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: The caller cleans the stack. This enables calling functions with varargs, which makes it appropriate to use for methods that accept a variable number of parameters, such as Printf.
  syntax:
    content: Cdecl = 2
- uid: System.Runtime.InteropServices.CallingConvention.StdCall
  id: StdCall
  parent: System.Runtime.InteropServices.CallingConvention
  href: System.Runtime.InteropServices.CallingConvention.yml
  name: StdCall
  fullName: System.Runtime.InteropServices.CallingConvention.StdCall
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/InteropServices/CallingConvention.cs
    startLine: 15
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: The callee cleans the stack. This is the default convention for calling unmanaged functions with platform invoke.
  syntax:
    content: StdCall = 3
- uid: System.Runtime.InteropServices.CallingConvention.ThisCall
  id: ThisCall
  parent: System.Runtime.InteropServices.CallingConvention
  href: System.Runtime.InteropServices.CallingConvention.yml
  name: ThisCall
  fullName: System.Runtime.InteropServices.CallingConvention.ThisCall
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/InteropServices/CallingConvention.cs
    startLine: 16
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: The first parameter is the this pointer and is stored in register ECX. Other parameters are pushed on the stack. This calling convention is used to call methods on classes exported from an unmanaged DLL.
  syntax:
    content: ThisCall = 4
- uid: System.Runtime.InteropServices.CallingConvention.Winapi
  id: Winapi
  parent: System.Runtime.InteropServices.CallingConvention
  href: System.Runtime.InteropServices.CallingConvention.yml
  name: Winapi
  fullName: System.Runtime.InteropServices.CallingConvention.Winapi
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/InteropServices/CallingConvention.cs
    startLine: 13
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: This member is not actually a calling convention, but instead uses the default platform calling convention. For example, on Windows the default is @'System.Runtime.InteropServices.CallingConvention.StdCall' and on Windows CE.NET it is @'System.Runtime.InteropServices.CallingConvention.Cdecl'.
  syntax:
    content: Winapi = 1
references:
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
