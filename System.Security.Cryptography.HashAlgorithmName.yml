items:
- uid: System.Security.Cryptography.HashAlgorithmName
  id: HashAlgorithmName
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.HashAlgorithmName.#ctor(System.String)
  - System.Security.Cryptography.HashAlgorithmName.Equals(System.Object)
  - System.Security.Cryptography.HashAlgorithmName.Equals(System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.HashAlgorithmName.GetHashCode
  - System.Security.Cryptography.HashAlgorithmName.MD5
  - System.Security.Cryptography.HashAlgorithmName.Name
  - System.Security.Cryptography.HashAlgorithmName.op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.HashAlgorithmName.op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.HashAlgorithmName.SHA1
  - System.Security.Cryptography.HashAlgorithmName.SHA256
  - System.Security.Cryptography.HashAlgorithmName.SHA384
  - System.Security.Cryptography.HashAlgorithmName.SHA512
  - System.Security.Cryptography.HashAlgorithmName.ToString
  href: System.Security.Cryptography.HashAlgorithmName.yml
  name: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
  type: Struct
  source:
    remote: &o0
      path: src/System.Security.Cryptography.Primitives/src/System/Security/Cryptography/HashAlgorithmName.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Security.Cryptography.Primitives/src/System/Security/Cryptography/HashAlgorithmName.cs
    startLine: 21
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  summary: Specifies the name of a cryptographic hash algorithm.
  syntax:
    content: 'public struct HashAlgorithmName : IEquatable<HashAlgorithmName>'
    content.vb: Public Structure HashAlgorithmName Implements IEquatable(Of HashAlgorithmName)
  implements:
  - System.IEquatable{System.Security.Cryptography.HashAlgorithmName}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: System.Security.Cryptography.HashAlgorithmName.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.HashAlgorithmName
  href: System.Security.Cryptography.HashAlgorithmName.yml
  name: HashAlgorithmName(String)
  fullName: System.Security.Cryptography.HashAlgorithmName.HashAlgorithmName(System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Primitives/src/System/Security/Cryptography/HashAlgorithmName.cs
    startLine: 57
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the @'System.Security.Cryptography.HashAlgorithmName' structure with a custom name.
  syntax:
    content: public HashAlgorithmName(string name)
    content.vb: Public Sub New(name As String)
    parameters:
    - id: name
      type: System.String
      description: The custom hash algorithm name.
- uid: System.Security.Cryptography.HashAlgorithmName.MD5
  id: MD5
  parent: System.Security.Cryptography.HashAlgorithmName
  href: System.Security.Cryptography.HashAlgorithmName.yml
  name: MD5
  fullName: System.Security.Cryptography.HashAlgorithmName.MD5
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Primitives/src/System/Security/Cryptography/HashAlgorithmName.cs
    startLine: 29
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  summary: Gets a hash algorithm name that represents "MD5".
  syntax:
    content: public static HashAlgorithmName MD5 { get; }
    content.vb: Public Shared ReadOnly Property MD5 As HashAlgorithmName
    parameters: []
    return:
      type: System.Security.Cryptography.HashAlgorithmName
      description: A hash algorithm name that represents "MD5".
- uid: System.Security.Cryptography.HashAlgorithmName.Name
  id: Name
  parent: System.Security.Cryptography.HashAlgorithmName
  href: System.Security.Cryptography.HashAlgorithmName.yml
  name: Name
  fullName: System.Security.Cryptography.HashAlgorithmName.Name
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Primitives/src/System/Security/Cryptography/HashAlgorithmName.cs
    startLine: 69
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  summary: Gets the underlying string representation of the algorithm name.
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: The string representation of the algorithm name, or null or @'System.String.Empty' if no hash algorithm is available.
- uid: System.Security.Cryptography.HashAlgorithmName.SHA1
  id: SHA1
  parent: System.Security.Cryptography.HashAlgorithmName
  href: System.Security.Cryptography.HashAlgorithmName.yml
  name: SHA1
  fullName: System.Security.Cryptography.HashAlgorithmName.SHA1
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Primitives/src/System/Security/Cryptography/HashAlgorithmName.cs
    startLine: 34
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  summary: Gets a hash algorithm name that represents "SHA1".
  syntax:
    content: public static HashAlgorithmName SHA1 { get; }
    content.vb: Public Shared ReadOnly Property SHA1 As HashAlgorithmName
    parameters: []
    return:
      type: System.Security.Cryptography.HashAlgorithmName
      description: A hash algorithm name that represents "SHA1".
- uid: System.Security.Cryptography.HashAlgorithmName.SHA256
  id: SHA256
  parent: System.Security.Cryptography.HashAlgorithmName
  href: System.Security.Cryptography.HashAlgorithmName.yml
  name: SHA256
  fullName: System.Security.Cryptography.HashAlgorithmName.SHA256
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Primitives/src/System/Security/Cryptography/HashAlgorithmName.cs
    startLine: 39
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  summary: Gets a hash algorithm name that represents "SHA256".
  syntax:
    content: public static HashAlgorithmName SHA256 { get; }
    content.vb: Public Shared ReadOnly Property SHA256 As HashAlgorithmName
    parameters: []
    return:
      type: System.Security.Cryptography.HashAlgorithmName
      description: A hash algorithm name that represents "SHA256".
- uid: System.Security.Cryptography.HashAlgorithmName.SHA384
  id: SHA384
  parent: System.Security.Cryptography.HashAlgorithmName
  href: System.Security.Cryptography.HashAlgorithmName.yml
  name: SHA384
  fullName: System.Security.Cryptography.HashAlgorithmName.SHA384
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Primitives/src/System/Security/Cryptography/HashAlgorithmName.cs
    startLine: 44
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  summary: Gets a hash algorithm name that represents "SHA384".
  syntax:
    content: public static HashAlgorithmName SHA384 { get; }
    content.vb: Public Shared ReadOnly Property SHA384 As HashAlgorithmName
    parameters: []
    return:
      type: System.Security.Cryptography.HashAlgorithmName
      description: A hash algorithm name that represents "SHA384".
- uid: System.Security.Cryptography.HashAlgorithmName.SHA512
  id: SHA512
  parent: System.Security.Cryptography.HashAlgorithmName
  href: System.Security.Cryptography.HashAlgorithmName.yml
  name: SHA512
  fullName: System.Security.Cryptography.HashAlgorithmName.SHA512
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Primitives/src/System/Security/Cryptography/HashAlgorithmName.cs
    startLine: 49
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  summary: Gets a hash algorithm name that represents "SHA512".
  syntax:
    content: public static HashAlgorithmName SHA512 { get; }
    content.vb: Public Shared ReadOnly Property SHA512 As HashAlgorithmName
    parameters: []
    return:
      type: System.Security.Cryptography.HashAlgorithmName
      description: A hash algorithm name that represents "SHA512".
- uid: System.Security.Cryptography.HashAlgorithmName.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.HashAlgorithmName
  href: System.Security.Cryptography.HashAlgorithmName.yml
  name: Equals(Object)
  fullName: System.Security.Cryptography.HashAlgorithmName.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Primitives/src/System/Security/Cryptography/HashAlgorithmName.cs
    startLine: 79
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  summary: Returns a value that indicates whether the current instance and a specified object are equal.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: true if *obj* is a @'System.Security.Cryptography.HashAlgorithmName' object and its @'System.Security.Cryptography.HashAlgorithmName.Name' property is equal to that of the current instance. The comparison is ordinal and case-sensitive.
  overridden: System.ValueType.Equals(System.Object)
- uid: System.Security.Cryptography.HashAlgorithmName.Equals(System.Security.Cryptography.HashAlgorithmName)
  id: Equals(System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.HashAlgorithmName
  href: System.Security.Cryptography.HashAlgorithmName.yml
  name: Equals(HashAlgorithmName)
  fullName: System.Security.Cryptography.HashAlgorithmName.Equals(System.Security.Cryptography.HashAlgorithmName)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Primitives/src/System/Security/Cryptography/HashAlgorithmName.cs
    startLine: 84
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  summary: Returns a value that indicates whether two @'System.Security.Cryptography.HashAlgorithmName' instances are equal.
  syntax:
    content: public bool Equals(HashAlgorithmName other)
    content.vb: Public Function Equals(other As HashAlgorithmName) As Boolean
    parameters:
    - id: other
      type: System.Security.Cryptography.HashAlgorithmName
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: true if the @'System.Security.Cryptography.HashAlgorithmName.Name' property of *other* is equal to that of the current instance. The comparison is ordinal and case-sensitive.
- uid: System.Security.Cryptography.HashAlgorithmName.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.HashAlgorithmName
  href: System.Security.Cryptography.HashAlgorithmName.yml
  name: GetHashCode()
  fullName: System.Security.Cryptography.HashAlgorithmName.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Primitives/src/System/Security/Cryptography/HashAlgorithmName.cs
    startLine: 90
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  summary: Returns the hash code for the current instance.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: The hash code for the current instance, or 0 if no *name* value was supplied to the @'System.Security.Cryptography.HashAlgorithmName' constructor.
  overridden: System.ValueType.GetHashCode
- uid: System.Security.Cryptography.HashAlgorithmName.op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)
  id: op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.HashAlgorithmName
  href: System.Security.Cryptography.HashAlgorithmName.yml
  name: Equality(HashAlgorithmName, HashAlgorithmName)
  fullName: System.Security.Cryptography.HashAlgorithmName.Equality(System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.HashAlgorithmName)
  type: Operator
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Primitives/src/System/Security/Cryptography/HashAlgorithmName.cs
    startLine: 95
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  summary: Determines whether two specified @'System.Security.Cryptography.HashAlgorithmName' objects are equal.
  syntax:
    content: public static bool operator ==(HashAlgorithmName left, HashAlgorithmName right)
    content.vb: Public Shared Operator =(left As HashAlgorithmName, right As HashAlgorithmName) As Boolean
    parameters:
    - id: left
      type: System.Security.Cryptography.HashAlgorithmName
      description: The first object to compare.
    - id: right
      type: System.Security.Cryptography.HashAlgorithmName
      description: The second object to compare.
    return:
      type: System.Boolean
      description: true if both *left* and *right* have the same @'System.Security.Cryptography.HashAlgorithmName.Name' value; otherwise, false.
- uid: System.Security.Cryptography.HashAlgorithmName.op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)
  id: op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.HashAlgorithmName
  href: System.Security.Cryptography.HashAlgorithmName.yml
  name: Inequality(HashAlgorithmName, HashAlgorithmName)
  fullName: System.Security.Cryptography.HashAlgorithmName.Inequality(System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.HashAlgorithmName)
  type: Operator
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Primitives/src/System/Security/Cryptography/HashAlgorithmName.cs
    startLine: 100
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  summary: Determines whether two specified @'System.Security.Cryptography.HashAlgorithmName' objects are not equal.
  syntax:
    content: public static bool operator !=(HashAlgorithmName left, HashAlgorithmName right)
    content.vb: Public Shared Operator <>(left As HashAlgorithmName, right As HashAlgorithmName) As Boolean
    parameters:
    - id: left
      type: System.Security.Cryptography.HashAlgorithmName
      description: The first object to compare.
    - id: right
      type: System.Security.Cryptography.HashAlgorithmName
      description: The second object to compare.
    return:
      type: System.Boolean
      description: true if both *left* and *right* do not have the same @'System.Security.Cryptography.HashAlgorithmName.Name' value; otherwise, false.
- uid: System.Security.Cryptography.HashAlgorithmName.ToString
  id: ToString
  parent: System.Security.Cryptography.HashAlgorithmName
  href: System.Security.Cryptography.HashAlgorithmName.yml
  name: ToString()
  fullName: System.Security.Cryptography.HashAlgorithmName.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Primitives/src/System/Security/Cryptography/HashAlgorithmName.cs
    startLine: 74
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  summary: Returns the string representation of the current @'System.Security.Cryptography.HashAlgorithmName' instance.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: The string representation of the current @'System.Security.Cryptography.HashAlgorithmName' instance.
  overridden: System.ValueType.ToString
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  href: System.Security.Cryptography.HashAlgorithmName.yml
  name: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: System.ValueType.yml
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    href: System.ValueType.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    href: System.ValueType.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.ValueType
  parent: System
  isExternal: false
  href: System.ValueType.yml
  name: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  href: System.ValueType.yml
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    href: System.ValueType.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    href: System.ValueType.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  href: System.ValueType.yml
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    href: System.ValueType.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    href: System.ValueType.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
