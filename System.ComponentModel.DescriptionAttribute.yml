items:
- uid: System.ComponentModel.DescriptionAttribute
  commentId: T:System.ComponentModel.DescriptionAttribute
  id: DescriptionAttribute
  parent: System.ComponentModel
  children:
  - System.ComponentModel.DescriptionAttribute.#ctor
  - System.ComponentModel.DescriptionAttribute.#ctor(System.String)
  - System.ComponentModel.DescriptionAttribute.Default
  - System.ComponentModel.DescriptionAttribute.Description
  - System.ComponentModel.DescriptionAttribute.DescriptionValue
  - System.ComponentModel.DescriptionAttribute.Equals(System.Object)
  - System.ComponentModel.DescriptionAttribute.GetHashCode
  langs:
  - csharp
  - vb
  name: DescriptionAttribute
  fullName: System.ComponentModel.DescriptionAttribute
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DescriptionAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DescriptionAttribute
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DescriptionAttribute.cs
    startLine: 10
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Specifies a description for a property or event.</p>\n"
  remarks: "\n<p>A visual designer can display the specified description when referencing the component member, such as in a Properties window. Call <xref href=\"System.ComponentModel.DescriptionAttribute.Description\" data-throw-if-not-resolved=\"false\"></xref> to access the value of this attribute.</p>\n<p>For more information, see Extending Metadata Using Attributes.</p>\n"
  example:
  - "\n<p>The following example creates the <code>MyImage</code> property. The property has two attributes, a <xref href=\"System.ComponentModel.DescriptionAttribute\" data-throw-if-not-resolved=\"false\"></xref> and a <xref href=\"System.ComponentModel.CategoryAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>Classic DescriptionAttribute Example#1<p>The next example gets the description of <code>MyImage</code>. First the code gets a <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> with all the properties for the object. Next it indexes into the <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> to get <code>MyImage</code>. Then it returns the attributes for this property and saves them in the attributes variable.</p><p>The example then prints the description by retrieving <xref href=\"System.ComponentModel.DescriptionAttribute\" data-throw-if-not-resolved=\"false\"></xref> from the <xref href=\"System.ComponentModel.AttributeCollection\" data-throw-if-not-resolved=\"false\"></xref>, and writing it to the console screen.</p>Classic DescriptionAttribute Example#2"
  syntax:
    content: 'public class DescriptionAttribute : Attribute'
    content.vb: >-
      Public Class DescriptionAttribute
          Inherits Attribute
  seealso:
  - type: System.Attribute
    commentId: T:System.Attribute
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.EventDescriptor
    commentId: T:System.ComponentModel.EventDescriptor
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ComponentModel.DescriptionAttribute.Default
  commentId: F:System.ComponentModel.DescriptionAttribute.Default
  id: Default
  parent: System.ComponentModel.DescriptionAttribute
  langs:
  - csharp
  - vb
  name: Default
  fullName: System.ComponentModel.DescriptionAttribute.Default
  type: Field
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DescriptionAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Default
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DescriptionAttribute.cs
    startLine: 17
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Specifies the default value for the <xref href=\"System.ComponentModel.DescriptionAttribute\" data-throw-if-not-resolved=\"false\"></xref>, which is an empty string (\"\"). This <strong>static</strong> field is read-only.</p>\n"
  syntax:
    content: public static readonly DescriptionAttribute Default
    content.vb: Public Shared ReadOnly Default As DescriptionAttribute
    return:
      type: System.ComponentModel.DescriptionAttribute
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ComponentModel.DescriptionAttribute.#ctor
  commentId: M:System.ComponentModel.DescriptionAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.DescriptionAttribute
  langs:
  - csharp
  - vb
  name: DescriptionAttribute()
  fullName: System.ComponentModel.DescriptionAttribute.DescriptionAttribute()
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DescriptionAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DescriptionAttribute.cs
    startLine: 22
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.DescriptionAttribute\" data-throw-if-not-resolved=\"false\"></xref> class with no parameters.</p>\n"
  syntax:
    content: public DescriptionAttribute()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DescriptionAttribute.#ctor(System.String)
  commentId: M:System.ComponentModel.DescriptionAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.DescriptionAttribute
  langs:
  - csharp
  - vb
  name: DescriptionAttribute(String)
  fullName: System.ComponentModel.DescriptionAttribute.DescriptionAttribute(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DescriptionAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DescriptionAttribute.cs
    startLine: 29
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.DescriptionAttribute\" data-throw-if-not-resolved=\"false\"></xref> class with a description.</p>\n"
  syntax:
    content: public DescriptionAttribute(string description)
    content.vb: Public Sub New(description As String)
    parameters:
    - id: description
      type: System.String
      description: "\n<p>The description text. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DescriptionAttribute.Description
  commentId: P:System.ComponentModel.DescriptionAttribute.Description
  id: Description
  parent: System.ComponentModel.DescriptionAttribute
  langs:
  - csharp
  - vb
  name: Description
  fullName: System.ComponentModel.DescriptionAttribute.Description
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DescriptionAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Description
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DescriptionAttribute.cs
    startLine: 37
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Gets the description stored in this attribute.</p>\n"
  syntax:
    content: public virtual string Description { get; }
    content.vb: Public Overridable ReadOnly Property Description As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The description stored in this attribute.</p>\n"
  seealso:
  - type: System.ComponentModel.DescriptionAttribute.DescriptionValue
    commentId: P:System.ComponentModel.DescriptionAttribute.DescriptionValue
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.ComponentModel.DescriptionAttribute.DescriptionValue
  commentId: P:System.ComponentModel.DescriptionAttribute.DescriptionValue
  id: DescriptionValue
  parent: System.ComponentModel.DescriptionAttribute
  langs:
  - csharp
  - vb
  name: DescriptionValue
  fullName: System.ComponentModel.DescriptionAttribute.DescriptionValue
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DescriptionAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DescriptionValue
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DescriptionAttribute.cs
    startLine: 44
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Gets or sets the string stored as the description.</p>\n"
  remarks: "\n<p>The default implementation of the <xref href=\"System.ComponentModel.DescriptionAttribute.Description\" data-throw-if-not-resolved=\"false\"></xref> property simply returns this value.</p>\n<p>This extra property exists so that you can derive from <xref href=\"System.ComponentModel.DescriptionAttribute\" data-throw-if-not-resolved=\"false\"></xref> and provide a localized version. The derived localizable <xref href=\"System.ComponentModel.DescriptionAttribute\" data-throw-if-not-resolved=\"false\"></xref> will maintain a private Boolean field to indicate if it has been localized. On the first access to the <xref href=\"System.ComponentModel.DescriptionAttribute.Description\" data-throw-if-not-resolved=\"false\"></xref> property, it will look up the localized string and store it back in the <xref href=\"System.ComponentModel.DescriptionAttribute.DescriptionValue\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  syntax:
    content: protected string DescriptionValue { get; set; }
    content.vb: Protected Property DescriptionValue As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The string stored as the description. The default value is an empty string (\"\").</p>\n"
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: System.ComponentModel.DescriptionAttribute.Equals(System.Object)
  commentId: M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.DescriptionAttribute
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.ComponentModel.DescriptionAttribute.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DescriptionAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DescriptionAttribute.cs
    startLine: 46
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Returns whether the value of the given object is equal to the current <xref href=\"System.ComponentModel.DescriptionAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>The object to test the value equality of. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the value of the given object is equal to that of the current; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.DescriptionAttribute.GetHashCode
  commentId: M:System.ComponentModel.DescriptionAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.DescriptionAttribute
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.ComponentModel.DescriptionAttribute.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DescriptionAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DescriptionAttribute.cs
    startLine: 57
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Returns the hash code for this instance.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>A 32-bit signed integer hash code.</p>\n"
  seealso:
  - type: System.Attribute.GetHashCode
    commentId: M:System.Attribute.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.ComponentModel.DescriptionAttribute
  parent: System.ComponentModel
  isExternal: false
  name: DescriptionAttribute
  fullName: System.ComponentModel.DescriptionAttribute
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
