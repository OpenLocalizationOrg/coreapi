items:
- uid: System.Xml.Serialization.XmlAnyElementAttribute
  commentId: T:System.Xml.Serialization.XmlAnyElementAttribute
  id: XmlAnyElementAttribute
  parent: System.Xml.Serialization
  children:
  - System.Xml.Serialization.XmlAnyElementAttribute.#ctor
  - System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)
  - System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)
  - System.Xml.Serialization.XmlAnyElementAttribute.Name
  - System.Xml.Serialization.XmlAnyElementAttribute.Namespace
  - System.Xml.Serialization.XmlAnyElementAttribute.Order
  langs:
  - csharp
  - vb
  name: XmlAnyElementAttribute
  fullName: System.Xml.Serialization.XmlAnyElementAttribute
  type: Class
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlAnyElementAttribute
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 15
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Specifies that the member (a field that returns an array of <xref href=\"System.Xml.XmlElement\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.XmlNode\" data-throw-if-not-resolved=\"false\"></xref> objects) contains objects that represent any XML element that has no corresponding member in the object being serialized or deserialized.</p>\n"
  remarks: "\n<p>When working in a portable class library, such as in Silverlight, Windows Phone or Windows Store App project, and you are using the .NET Framework 4.0.3 and above, use <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.Linq.XNode\" data-throw-if-not-resolved=\"false\"></xref> in place of <xref href=\"System.Xml.XmlElement\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Xml.XmlNode\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Use the <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> to contain arbitrary data (as XML elements) that can be sent as part of an XML document, such as metadata sent as part of the document.</p>\n<p>Apply the <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a field that returns an array of <xref href=\"System.Xml.XmlElement\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.XmlNode\" data-throw-if-not-resolved=\"false\"></xref> objects. Such a field can be used in two ways, depending on whether an object is being serialized or deserialized. When serialized, the object is generated as XML elements or nodes, even though they have no corresponding member (or members) in the object being serialized. If you specify a <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> property value when applying the attribute, all <xref href=\"System.Xml.XmlElement\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.XmlNode\" data-throw-if-not-resolved=\"false\"></xref> objects inserted into the array must have the same element name and default namespace, or an exception is thrown. If you set the <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Namespace\" data-throw-if-not-resolved=\"false\"></xref> property value, you must set the <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> property as well, and the <xref href=\"System.Xml.XmlElement\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.XmlNode\" data-throw-if-not-resolved=\"false\"></xref> objects must also have the same name and namespace values. If no <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> value is specified, the <xref href=\"System.Xml.XmlElement\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.XmlNode\" data-throw-if-not-resolved=\"false\"></xref> objects can have any element name.</p>\n<p>When you call the <xref href=\"System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\" data-throw-if-not-resolved=\"false\"></xref> method of the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> class, all elements that do not have a corresponding member in the object being deserialized are collected in the array. After deserialization, iterate through the collection of <xref href=\"System.Xml.XmlElement\" data-throw-if-not-resolved=\"false\"></xref> items to process the data. If you specify a <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> value, the array contains only XML elements with that name. If you do not specify a <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> value, the array contains all elements that have no corresponding member in the class. If a class contains more than one field to which the attribute is applied, use the <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Namespace\" data-throw-if-not-resolved=\"false\"></xref> properties to differentiate between the contents of the arrays. If such a class (with multiple fields) also contains one field that has no differentiating property values set (in other words, <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Namespace\" data-throw-if-not-resolved=\"false\"></xref>) during deserialization, this array contains any unknown XML elements that are not already contained in the other arrays. If a class contains more than one field that does not have a differentiating <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Namespace\" data-throw-if-not-resolved=\"false\"></xref> value set, the behavior during deserialization is unspecified.</p>\n<p>You can also apply the <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a field that returns a single <xref href=\"System.Xml.XmlElement\" data-throw-if-not-resolved=\"false\"></xref> object. If you do so, you must use the properties and methods of the <xref href=\"System.Xml.XmlElement\" data-throw-if-not-resolved=\"false\"></xref> class to recursively iterate through the unknown elements.</p>\n<p>You can apply multiple instances of the <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a class member, but each instance must have a distinct <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> property value. Or, if the same <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> property is set for each instance, a distinct <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Namespace\" data-throw-if-not-resolved=\"false\"></xref> property value must be set for each instance.</p>\n<p>The <xref href=\"System.Xml.Serialization.XmlSerializer.UnknownNode\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Xml.Serialization.XmlSerializer.UnknownAttribute\" data-throw-if-not-resolved=\"false\"></xref> events of the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> do not occur if you apply the <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a member of a class.</p>\n<p>You can use the word <strong>XmlAnyElement</strong> in your code instead of the longer <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>For more information about using attributes, see Extending Metadata Using Attributes.</p>\n"
  example:
  - "\n<p>The following example applies the <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a field named <strong>AllElements</strong> that returns an array of <xref href=\"System.Xml.XmlElement\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>Classic XmlAnyElementAttribute Example#1"
  syntax:
    content: 'public class XmlAnyElementAttribute : Attribute'
    content.vb: >-
      Public Class XmlAnyElementAttribute
          Inherits Attribute
  seealso:
  - type: System.Xml.Serialization.XmlAnyAttributeAttribute
    commentId: T:System.Xml.Serialization.XmlAnyAttributeAttribute
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.Serialization.XmlAnyElementAttribute.#ctor
  commentId: M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlAnyElementAttribute
  langs:
  - csharp
  - vb
  name: XmlAnyElementAttribute()
  fullName: System.Xml.Serialization.XmlAnyElementAttribute.XmlAnyElementAttribute()
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 18
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>Use the <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> constructor when you are overriding the serialization of a field. For more details about overriding serialization, see the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public XmlAnyElementAttribute()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)
  commentId: M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Xml.Serialization.XmlAnyElementAttribute
  langs:
  - csharp
  - vb
  name: XmlAnyElementAttribute(String)
  fullName: System.Xml.Serialization.XmlAnyElementAttribute.XmlAnyElementAttribute(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 19
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> class and specifies the XML element name generated in the XML document.</p>\n"
  remarks: "\n<p>Use the <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> constructor when you are overriding the serialization of a field. For more details about overriding serialization, see the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public XmlAnyElementAttribute(string name)
    content.vb: Public Sub New(name As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the XML element that the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> generates. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)
  commentId: M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Xml.Serialization.XmlAnyElementAttribute
  langs:
  - csharp
  - vb
  name: XmlAnyElementAttribute(String, String)
  fullName: System.Xml.Serialization.XmlAnyElementAttribute.XmlAnyElementAttribute(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 20
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> class and specifies the XML element name generated in the XML document and its XML namespace.</p>\n"
  remarks: "\n<p>Use the <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> constructor when you are overriding the serialization of a field. For more details about overriding serialization, see the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public XmlAnyElementAttribute(string name, string ns)
    content.vb: Public Sub New(name As String, ns As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the XML element that the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> generates. </p>\n"
    - id: ns
      type: System.String
      description: "\n<p>The XML namespace of the XML element. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlAnyElementAttribute.Name
  commentId: P:System.Xml.Serialization.XmlAnyElementAttribute.Name
  id: Name
  parent: System.Xml.Serialization.XmlAnyElementAttribute
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Xml.Serialization.XmlAnyElementAttribute.Name
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 21
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets the XML element name.</p>\n"
  remarks: "\n<p>If you specify a <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> property value when applying the attribute, all <xref href=\"System.Xml.XmlElement\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.XmlNode\" data-throw-if-not-resolved=\"false\"></xref> objects inserted into the array must have the same element name and default namespace, or an exception is thrown. If you set the <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Namespace\" data-throw-if-not-resolved=\"false\"></xref> property value, you must set the <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> property as well, and the <xref href=\"System.Xml.XmlElement\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.XmlNode\" data-throw-if-not-resolved=\"false\"></xref> objects must also have the same name and namespace values. If no <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> value is specified, the <xref href=\"System.Xml.XmlElement\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.XmlNode\" data-throw-if-not-resolved=\"false\"></xref> objects can have any element name.</p>\n<p>When you call the <xref href=\"System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\" data-throw-if-not-resolved=\"false\"></xref> method of the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> class, all attributes that do not have a corresponding member in the object being deserialized are collected in the array. If you specify a <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> value, the array contains only XML elements with that name. If you do not specify a <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> value, the array contains all elements that have no corresponding member in the class. If a class contains more than one field to which the attribute is applied, use the <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Namespace\" data-throw-if-not-resolved=\"false\"></xref> properties to differentiate between the contents of the arrays. If such a class (with multiple fields) also contains one field that has no differentiating property values set (that is, <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Namespace\" data-throw-if-not-resolved=\"false\"></xref>) during deserialization, the array contains any XML elements that are not already contained in the other arrays. If you add more than one field that does not have a differentiating <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Namespace\" data-throw-if-not-resolved=\"false\"></xref> value set, the last field in the class contains all unknown elements that are not already contained in the other arrays, and any other fields are set to <strong>null</strong>.</p>\n<p>You can apply multiple instances of the <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a class member, but each instance must have a distinct <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> property value. Or, if the same <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> property is set for each instance, a distinct <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Namespace\" data-throw-if-not-resolved=\"false\"></xref> property value must be set for each instance.</p>\n"
  example:
  - XmlAnyElementAttribute Example#1
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the XML element.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The element name of an array member does not match the element name specified by the <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlAnyElementAttribute.Namespace
  commentId: P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace
  id: Namespace
  parent: System.Xml.Serialization.XmlAnyElementAttribute
  langs:
  - csharp
  - vb
  name: Namespace
  fullName: System.Xml.Serialization.XmlAnyElementAttribute.Namespace
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Namespace
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 22
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets the XML namespace generated in the XML document.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Namespace\" data-throw-if-not-resolved=\"false\"></xref> property allows you to set a unique name for the XML attribute. The <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Namespace\" data-throw-if-not-resolved=\"false\"></xref> property conforms to the rules for creating an XML namespace as found in the World Wide Web Consortium (www.w3.org) document, \"Namespaces in XML.\" </p>\n<p>To set the <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Namespace\" data-throw-if-not-resolved=\"false\"></xref> property to a prefixed name, create an <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> that contains the namespaces and prefixes used in the XML document. Set the <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute.Namespace\" data-throw-if-not-resolved=\"false\"></xref> property to one of the namespaces in the <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref>. When the XML is generated, the attribute name is correctly prefixed with the prefix associated with the specified namespace.</p>\n"
  example:
  - XmlAnyElementAttribute Example#1
  syntax:
    content: public string Namespace { get; set; }
    content.vb: Public Property Namespace As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>An XML namespace.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlAnyElementAttribute.Order
  commentId: P:System.Xml.Serialization.XmlAnyElementAttribute.Order
  id: Order
  parent: System.Xml.Serialization.XmlAnyElementAttribute
  langs:
  - csharp
  - vb
  name: Order
  fullName: System.Xml.Serialization.XmlAnyElementAttribute.Order
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Order
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 23
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets the explicit order in which the elements are serialized or deserialized.</p>\n"
  remarks: "\n<p>Use the <xref href=\"System.Xml.Serialization.CodeGenerationOptions.GenerateOrder\" data-throw-if-not-resolved=\"false\"></xref> enumeration to instruct the <xref href=\"System.Web.Services.Description.ServiceDescriptionImporter\" data-throw-if-not-resolved=\"false\"></xref> to generate code that sets the <xref href=\"System.Xml.Serialization.XmlElementAttribute.Order\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n<p>Once the <xref href=\"System.Xml.Serialization.XmlElementAttribute.Order\" data-throw-if-not-resolved=\"false\"></xref> property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</p>\n"
  syntax:
    content: public int Order { get; set; }
    content.vb: Public Property Order As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The order of the code generation.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Xml.Serialization
  isExternal: false
  name: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
