items:
- uid: System.Nullable
  id: Nullable
  parent: System
  children:
  - System.Nullable.Compare``1(System.Nullable{``0},System.Nullable{``0})
  - System.Nullable.Equals``1(System.Nullable{``0},System.Nullable{``0})
  - System.Nullable.GetUnderlyingType(System.Type)
  href: System.Nullable.yml
  name: Nullable
  fullName: System.Nullable
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Nullable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Nullable.cs
    startLine: 102
  assemblies:
  - System.Runtime
  namespace: System
  summary: Supports a value type that can be assigned null. This class cannot be inherited.
  syntax:
    content: public class Nullable
    content.vb: Public Class Nullable
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Nullable.Compare``1(System.Nullable{``0},System.Nullable{``0})
  id: Compare``1(System.Nullable{``0},System.Nullable{``0})
  parent: System.Nullable
  href: System.Nullable.yml
  name: Compare<T>(Nullable<T>, Nullable<T>)
  name.vb: Compare(Of T)(Nullable(Of T), Nullable(Of T))
  fullName: System.Nullable.Compare<T>(System.Nullable<T>, System.Nullable<T>)
  fullName.vb: System.Nullable.Compare(Of T)(System.Nullable(Of T), System.Nullable(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Nullable.cs
    startLine: 105
  assemblies:
  - System.Runtime
  namespace: System
  summary: Compares the relative values of two @'System.Nullable`1' objects.
  syntax:
    content: 'public static int Compare<T>(Nullable<T> n1, Nullable<T> n2)where T : struct'
    content.vb: Public Shared Function Compare(Of T As Structure)(n1 As Nullable(Of T), n2 As Nullable(Of T)) As Integer
    parameters:
    - id: n1
      type: System.Nullable{{T}}
      description: A @'System.Nullable`1' object.
    - id: n2
      type: System.Nullable{{T}}
      description: A @'System.Nullable`1' object.
    typeParameters:
    - id: T
    return:
      type: System.Int32
      description: An integer that indicates the relative values of the *n1* and *n2* parameters.Return ValueDescriptionLess than zeroThe @'System.Nullable`1.HasValue' property for *n1* is false, and the @'System.Nullable`1.HasValue' property for *n2* is true.-or-The @'System.Nullable`1.HasValue' properties for *n1* and *n2* are true, and the value of the @'System.Nullable`1.Value' property for *n1* is less than the value of the @'System.Nullable`1.Value' property for *n2*.ZeroThe @'System.Nullable`1.HasValue' properties for *n1* and *n2* are false.-or-The @'System.Nullable`1.HasValue' properties for *n1* and *n2* are true, and the value of the @'System.Nullable`1.Value' property for *n1* is equal to the value of the @'System.Nullable`1.Value' property for *n2*.Greater than zeroThe @'System.Nullable`1.HasValue' property for *n1* is true, and the @'System.Nullable`1.HasValue' property for *n2* is false.-or-The @'System.Nullable`1.HasValue' properties for *n1* and *n2* are true, and the value of the @'System.Nullable`1.Value' property for *n1* is greater than the value of the @'System.Nullable`1.Value' property for *n2*.
- uid: System.Nullable.Equals``1(System.Nullable{``0},System.Nullable{``0})
  id: Equals``1(System.Nullable{``0},System.Nullable{``0})
  parent: System.Nullable
  href: System.Nullable.yml
  name: Equals<T>(Nullable<T>, Nullable<T>)
  name.vb: Equals(Of T)(Nullable(Of T), Nullable(Of T))
  fullName: System.Nullable.Equals<T>(System.Nullable<T>, System.Nullable<T>)
  fullName.vb: System.Nullable.Equals(Of T)(System.Nullable(Of T), System.Nullable(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Nullable.cs
    startLine: 116
  assemblies:
  - System.Runtime
  namespace: System
  summary: Indicates whether two specified @'System.Nullable`1' objects are equal.
  syntax:
    content: 'public static bool Equals<T>(Nullable<T> n1, Nullable<T> n2)where T : struct'
    content.vb: Public Shared Function Equals(Of T As Structure)(n1 As Nullable(Of T), n2 As Nullable(Of T)) As Boolean
    parameters:
    - id: n1
      type: System.Nullable{{T}}
      description: A @'System.Nullable`1' object.
    - id: n2
      type: System.Nullable{{T}}
      description: A @'System.Nullable`1' object.
    typeParameters:
    - id: T
    return:
      type: System.Boolean
      description: true if the *n1* parameter is equal to the *n2* parameter; otherwise, false. The return value depends on the @'System.Nullable`1.HasValue' and @'System.Nullable`1.Value' properties of the two parameters that are compared.Return ValueDescriptiontrueThe @'System.Nullable`1.HasValue' properties for *n1* and *n2* are false. -or-The @'System.Nullable`1.HasValue' properties for *n1* and *n2* are true, and the @'System.Nullable`1.Value' properties of the parameters are equal.falseThe @'System.Nullable`1.HasValue' property is true for one parameter and false for the other parameter.-or-The @'System.Nullable`1.HasValue' properties for *n1* and *n2* are true, and the @'System.Nullable`1.Value' properties of the parameters are unequal.
- uid: System.Nullable.GetUnderlyingType(System.Type)
  id: GetUnderlyingType(System.Type)
  parent: System.Nullable
  href: System.Nullable.yml
  name: GetUnderlyingType(Type)
  fullName: System.Nullable.GetUnderlyingType(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Nullable.cs
    startLine: 129
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns the underlying type argument of the specified nullable type.
  syntax:
    content: public static Type GetUnderlyingType(Type nullableType)
    content.vb: Public Shared Function GetUnderlyingType(nullableType As Type) As Type
    parameters:
    - id: nullableType
      type: System.Type
      description: A @'System.Type' object that describes a closed generic nullable type.
    return:
      type: System.Type
      description: The type argument of the *nullableType* parameter, if the *nullableType* parameter is a closed generic nullable type; otherwise, null.
  exceptions:
  - type: System.ArgumentNullException
    description: '*nullableType* is null.'
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Nullable{{T}}
  parent: System
  definition: System.Nullable`1
  href: System.Nullable`1.yml
  name: Nullable<T>
  name.vb: Nullable(Of T)
  fullName: System.Nullable<T>
  fullName.vb: System.Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    href: System.Nullable`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    href: System.Nullable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System.Nullable`1
  parent: System
  isExternal: false
  href: System.Nullable`1.yml
  name: Nullable<T>
  name.vb: Nullable(Of T)
  fullName: System.Nullable<T>
  fullName.vb: System.Nullable(Of T)
  type: Struct
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    href: System.Nullable`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    href: System.Nullable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.Type
  parent: System
  isExternal: false
  href: System.Type.yml
  name: Type
  fullName: System.Type
  type: Class
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  type: Class
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
