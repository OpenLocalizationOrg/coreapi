items:
- uid: System.ComponentModel.NotifyParentPropertyAttribute
  commentId: T:System.ComponentModel.NotifyParentPropertyAttribute
  id: NotifyParentPropertyAttribute
  parent: System.ComponentModel
  children:
  - System.ComponentModel.NotifyParentPropertyAttribute.#ctor(System.Boolean)
  - System.ComponentModel.NotifyParentPropertyAttribute.Default
  - System.ComponentModel.NotifyParentPropertyAttribute.Equals(System.Object)
  - System.ComponentModel.NotifyParentPropertyAttribute.GetHashCode
  - System.ComponentModel.NotifyParentPropertyAttribute.No
  - System.ComponentModel.NotifyParentPropertyAttribute.NotifyParent
  - System.ComponentModel.NotifyParentPropertyAttribute.Yes
  langs:
  - csharp
  - vb
  name: NotifyParentPropertyAttribute
  fullName: System.ComponentModel.NotifyParentPropertyAttribute
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/NotifyParentPropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NotifyParentPropertyAttribute
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/NotifyParentPropertyAttribute.cs
    startLine: 12
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Indicates that the parent property is notified when the value of the property that this attribute is applied to is modified. This class cannot be inherited.</p>\n"
  remarks: "\n<p>Apply <xref href=\"System.ComponentModel.NotifyParentPropertyAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a property if its parent property should receive notification of changes to the property's values. For example, in the Properties window, the <xref href=\"System.Windows.Forms.DataGridView.RowTemplate\" data-throw-if-not-resolved=\"false\"></xref> property has nested properties such as <xref href=\"System.Windows.Forms.DataGridViewRow.Height\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Windows.Forms.DataGridViewRow.DefaultCellStyle\" data-throw-if-not-resolved=\"false\"></xref>. These nested properties are marked with <strong>NotifyParentPropertyAttribute(true)</strong> so they notify the parent property to update its value and display when the property values change.</p>\n<p>For more information about using attributes, see Extending Metadata Using Attributes.</p>\n"
  example:
  - "\n<p>The following code example demonstrates how to use the <xref href=\"System.ComponentModel.NotifyParentPropertyAttribute\" data-throw-if-not-resolved=\"false\"></xref> and the <xref href=\"System.ComponentModel.ExpandableObjectConverter\" data-throw-if-not-resolved=\"false\"></xref> class to create an expandable property on a custom control. </p>System.ComponentModel.ExpandableObjectConverter#1"
  syntax:
    content: 'public sealed class NotifyParentPropertyAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class NotifyParentPropertyAttribute
          Inherits Attribute
  seealso:
  - type: System.ComponentModel.ExpandableObjectConverter
    commentId: T:System.ComponentModel.ExpandableObjectConverter
  - type: System.Attribute
    commentId: T:System.Attribute
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.ComponentModel.NotifyParentPropertyAttribute.Default
  commentId: F:System.ComponentModel.NotifyParentPropertyAttribute.Default
  id: Default
  parent: System.ComponentModel.NotifyParentPropertyAttribute
  langs:
  - csharp
  - vb
  name: Default
  fullName: System.ComponentModel.NotifyParentPropertyAttribute.Default
  type: Field
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/NotifyParentPropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Default
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/NotifyParentPropertyAttribute.cs
    startLine: 31
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Indicates the default attribute state, that the property should not notify the parent property of changes to its value. This field is read-only.</p>\n"
  syntax:
    content: public static readonly NotifyParentPropertyAttribute Default
    content.vb: Public Shared ReadOnly Default As NotifyParentPropertyAttribute
    return:
      type: System.ComponentModel.NotifyParentPropertyAttribute
  seealso:
  - type: System.ComponentModel.ExpandableObjectConverter
    commentId: T:System.ComponentModel.ExpandableObjectConverter
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ComponentModel.NotifyParentPropertyAttribute.No
  commentId: F:System.ComponentModel.NotifyParentPropertyAttribute.No
  id: No
  parent: System.ComponentModel.NotifyParentPropertyAttribute
  langs:
  - csharp
  - vb
  name: No
  fullName: System.ComponentModel.NotifyParentPropertyAttribute.No
  type: Field
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/NotifyParentPropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: No
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/NotifyParentPropertyAttribute.cs
    startLine: 25
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Indicates that the parent property is not be notified of changes to the value of the property. This field is read-only.</p>\n"
  syntax:
    content: public static readonly NotifyParentPropertyAttribute No
    content.vb: Public Shared ReadOnly No As NotifyParentPropertyAttribute
    return:
      type: System.ComponentModel.NotifyParentPropertyAttribute
  seealso:
  - type: System.ComponentModel.ExpandableObjectConverter
    commentId: T:System.ComponentModel.ExpandableObjectConverter
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ComponentModel.NotifyParentPropertyAttribute.Yes
  commentId: F:System.ComponentModel.NotifyParentPropertyAttribute.Yes
  id: Yes
  parent: System.ComponentModel.NotifyParentPropertyAttribute
  langs:
  - csharp
  - vb
  name: Yes
  fullName: System.ComponentModel.NotifyParentPropertyAttribute.Yes
  type: Field
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/NotifyParentPropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Yes
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/NotifyParentPropertyAttribute.cs
    startLine: 20
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Indicates that the parent property is notified of changes to the value of the property. This field is read-only.</p>\n"
  syntax:
    content: public static readonly NotifyParentPropertyAttribute Yes
    content.vb: Public Shared ReadOnly Yes As NotifyParentPropertyAttribute
    return:
      type: System.ComponentModel.NotifyParentPropertyAttribute
  seealso:
  - type: System.ComponentModel.ExpandableObjectConverter
    commentId: T:System.ComponentModel.ExpandableObjectConverter
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ComponentModel.NotifyParentPropertyAttribute.#ctor(System.Boolean)
  commentId: M:System.ComponentModel.NotifyParentPropertyAttribute.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ComponentModel.NotifyParentPropertyAttribute
  langs:
  - csharp
  - vb
  name: NotifyParentPropertyAttribute(Boolean)
  fullName: System.ComponentModel.NotifyParentPropertyAttribute.NotifyParentPropertyAttribute(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/NotifyParentPropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/NotifyParentPropertyAttribute.cs
    startLine: 38
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.NotifyParentPropertyAttribute\" data-throw-if-not-resolved=\"false\"></xref> class, using the specified value to determine whether the parent property is notified of changes to the value of the property.</p>\n"
  example:
  - "\n<p>The following code example demonstrates how to use the <xref href=\"System.ComponentModel.NotifyParentPropertyAttribute\" data-throw-if-not-resolved=\"false\"></xref> and the <xref href=\"System.ComponentModel.ExpandableObjectConverter\" data-throw-if-not-resolved=\"false\"></xref> class to create an expandable property on a custom control. </p>System.ComponentModel.ExpandableObjectConverter#3"
  syntax:
    content: public NotifyParentPropertyAttribute(bool notifyParent)
    content.vb: Public Sub New(notifyParent As Boolean)
    parameters:
    - id: notifyParent
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the parent should be notified of changes; otherwise, <strong>false</strong>. </p>\n"
  seealso:
  - type: System.ComponentModel.ExpandableObjectConverter
    commentId: T:System.ComponentModel.ExpandableObjectConverter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.NotifyParentPropertyAttribute.NotifyParent
  commentId: P:System.ComponentModel.NotifyParentPropertyAttribute.NotifyParent
  id: NotifyParent
  parent: System.ComponentModel.NotifyParentPropertyAttribute
  langs:
  - csharp
  - vb
  name: NotifyParent
  fullName: System.ComponentModel.NotifyParentPropertyAttribute.NotifyParent
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/NotifyParentPropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NotifyParent
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/NotifyParentPropertyAttribute.cs
    startLine: 50
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Gets or sets a value indicating whether the parent property should be notified of changes to the value of the property.</p>\n"
  syntax:
    content: public bool NotifyParent { get; }
    content.vb: Public ReadOnly Property NotifyParent As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the parent property should be notified of changes; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.ComponentModel.ExpandableObjectConverter
    commentId: T:System.ComponentModel.ExpandableObjectConverter
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.NotifyParentPropertyAttribute.Equals(System.Object)
  commentId: M:System.ComponentModel.NotifyParentPropertyAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.NotifyParentPropertyAttribute
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.ComponentModel.NotifyParentPropertyAttribute.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/NotifyParentPropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/NotifyParentPropertyAttribute.cs
    startLine: 57
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Gets a value indicating whether the specified object is the same as the current object.</p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>The object to test for equality. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the object is the same as this object; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.ComponentModel.ExpandableObjectConverter
    commentId: T:System.ComponentModel.ExpandableObjectConverter
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.NotifyParentPropertyAttribute.GetHashCode
  commentId: M:System.ComponentModel.NotifyParentPropertyAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.NotifyParentPropertyAttribute
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.ComponentModel.NotifyParentPropertyAttribute.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/NotifyParentPropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/NotifyParentPropertyAttribute.cs
    startLine: 73
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Gets the hash code for this object.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>The hash code for the object the attribute belongs to.</p>\n"
  seealso:
  - type: System.ComponentModel.ExpandableObjectConverter
    commentId: T:System.ComponentModel.ExpandableObjectConverter
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.ComponentModel.NotifyParentPropertyAttribute
  parent: System.ComponentModel
  isExternal: false
  name: NotifyParentPropertyAttribute
  fullName: System.ComponentModel.NotifyParentPropertyAttribute
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
