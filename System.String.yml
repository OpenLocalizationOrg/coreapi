items:
- uid: System.String
  id: String
  parent: System
  children:
  - System.String.#ctor(System.Char*)
  - System.String.#ctor(System.Char*,System.Int32,System.Int32)
  - System.String.#ctor(System.Char,System.Int32)
  - System.String.#ctor(System.Char[])
  - System.String.#ctor(System.Char[],System.Int32,System.Int32)
  - System.String.Chars(System.Int32)
  - System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)
  - System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)
  - System.String.Compare(System.String,System.String)
  - System.String.Compare(System.String,System.String,System.Boolean)
  - System.String.Compare(System.String,System.String,System.StringComparison)
  - System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)
  - System.String.CompareOrdinal(System.String,System.String)
  - System.String.CompareTo(System.String)
  - System.String.Concat(System.Collections.Generic.IEnumerable{System.String})
  - System.String.Concat(System.Object)
  - System.String.Concat(System.Object,System.Object)
  - System.String.Concat(System.Object,System.Object,System.Object)
  - System.String.Concat(System.Object[])
  - System.String.Concat(System.String,System.String)
  - System.String.Concat(System.String,System.String,System.String)
  - System.String.Concat(System.String,System.String,System.String,System.String)
  - System.String.Concat(System.String[])
  - System.String.Concat``1(System.Collections.Generic.IEnumerable{``0})
  - System.String.Contains(System.String)
  - System.String.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)
  - System.String.Empty
  - System.String.EndsWith(System.String)
  - System.String.EndsWith(System.String,System.StringComparison)
  - System.String.Equals(System.Object)
  - System.String.Equals(System.String)
  - System.String.Equals(System.String,System.String)
  - System.String.Equals(System.String,System.String,System.StringComparison)
  - System.String.Equals(System.String,System.StringComparison)
  - System.String.Format(System.IFormatProvider,System.String,System.Object)
  - System.String.Format(System.IFormatProvider,System.String,System.Object,System.Object)
  - System.String.Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)
  - System.String.Format(System.IFormatProvider,System.String,System.Object[])
  - System.String.Format(System.String,System.Object)
  - System.String.Format(System.String,System.Object,System.Object)
  - System.String.Format(System.String,System.Object,System.Object,System.Object)
  - System.String.Format(System.String,System.Object[])
  - System.String.GetHashCode
  - System.String.IndexOf(System.Char)
  - System.String.IndexOf(System.Char,System.Int32)
  - System.String.IndexOf(System.Char,System.Int32,System.Int32)
  - System.String.IndexOf(System.String)
  - System.String.IndexOf(System.String,System.Int32)
  - System.String.IndexOf(System.String,System.Int32,System.Int32)
  - System.String.IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)
  - System.String.IndexOf(System.String,System.Int32,System.StringComparison)
  - System.String.IndexOf(System.String,System.StringComparison)
  - System.String.IndexOfAny(System.Char[])
  - System.String.IndexOfAny(System.Char[],System.Int32)
  - System.String.IndexOfAny(System.Char[],System.Int32,System.Int32)
  - System.String.Insert(System.Int32,System.String)
  - System.String.IsNullOrEmpty(System.String)
  - System.String.IsNullOrWhiteSpace(System.String)
  - System.String.Join(System.String,System.Collections.Generic.IEnumerable{System.String})
  - System.String.Join(System.String,System.Object[])
  - System.String.Join(System.String,System.String[])
  - System.String.Join(System.String,System.String[],System.Int32,System.Int32)
  - System.String.Join``1(System.String,System.Collections.Generic.IEnumerable{``0})
  - System.String.LastIndexOf(System.Char)
  - System.String.LastIndexOf(System.Char,System.Int32)
  - System.String.LastIndexOf(System.Char,System.Int32,System.Int32)
  - System.String.LastIndexOf(System.String)
  - System.String.LastIndexOf(System.String,System.Int32)
  - System.String.LastIndexOf(System.String,System.Int32,System.Int32)
  - System.String.LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)
  - System.String.LastIndexOf(System.String,System.Int32,System.StringComparison)
  - System.String.LastIndexOf(System.String,System.StringComparison)
  - System.String.LastIndexOfAny(System.Char[])
  - System.String.LastIndexOfAny(System.Char[],System.Int32)
  - System.String.LastIndexOfAny(System.Char[],System.Int32,System.Int32)
  - System.String.Length
  - System.String.op_Equality(System.String,System.String)
  - System.String.op_Inequality(System.String,System.String)
  - System.String.PadLeft(System.Int32)
  - System.String.PadLeft(System.Int32,System.Char)
  - System.String.PadRight(System.Int32)
  - System.String.PadRight(System.Int32,System.Char)
  - System.String.Remove(System.Int32)
  - System.String.Remove(System.Int32,System.Int32)
  - System.String.Replace(System.Char,System.Char)
  - System.String.Replace(System.String,System.String)
  - System.String.Split(System.Char[])
  - System.String.Split(System.Char[],System.Int32)
  - System.String.Split(System.Char[],System.Int32,System.StringSplitOptions)
  - System.String.Split(System.Char[],System.StringSplitOptions)
  - System.String.Split(System.String[],System.Int32,System.StringSplitOptions)
  - System.String.Split(System.String[],System.StringSplitOptions)
  - System.String.StartsWith(System.String)
  - System.String.StartsWith(System.String,System.StringComparison)
  - System.String.Substring(System.Int32)
  - System.String.Substring(System.Int32,System.Int32)
  - System.String.System#Collections#IEnumerable#GetEnumerator
  - System.String.System#IComparable#CompareTo(System.Object)
  - System.String.System#IConvertible#GetTypeCode
  - System.String.System#IConvertible#ToBoolean(System.IFormatProvider)
  - System.String.System#IConvertible#ToByte(System.IFormatProvider)
  - System.String.System#IConvertible#ToChar(System.IFormatProvider)
  - System.String.System#IConvertible#ToDateTime(System.IFormatProvider)
  - System.String.System#IConvertible#ToDecimal(System.IFormatProvider)
  - System.String.System#IConvertible#ToDouble(System.IFormatProvider)
  - System.String.System#IConvertible#ToInt16(System.IFormatProvider)
  - System.String.System#IConvertible#ToInt32(System.IFormatProvider)
  - System.String.System#IConvertible#ToInt64(System.IFormatProvider)
  - System.String.System#IConvertible#ToSByte(System.IFormatProvider)
  - System.String.System#IConvertible#ToSingle(System.IFormatProvider)
  - System.String.System#IConvertible#ToString(System.IFormatProvider)
  - System.String.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  - System.String.System#IConvertible#ToUInt16(System.IFormatProvider)
  - System.String.System#IConvertible#ToUInt32(System.IFormatProvider)
  - System.String.System#IConvertible#ToUInt64(System.IFormatProvider)
  - System.String.ToCharArray
  - System.String.ToCharArray(System.Int32,System.Int32)
  - System.String.ToLower
  - System.String.ToLowerInvariant
  - System.String.ToString
  - System.String.ToUpper
  - System.String.ToUpperInvariant
  - System.String.Trim
  - System.String.Trim(System.Char[])
  - System.String.TrimEnd(System.Char[])
  - System.String.TrimStart(System.Char[])
  href: System.String.yml
  name: String
  fullName: System.String
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/String.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/String.cs
    startLine: 42
  assemblies:
  - System.Runtime
  namespace: System
  summary: Represents text as a series of Unicode characters.To browse the .NET Framework source code for this type, see the Reference Source.
  syntax:
    content: 'public sealed class String : IEnumerable<char>, IEnumerable, IComparable, IComparable<string>, IConvertible, IEquatable<string>'
    content.vb: Public NotInheritable Class String Implements IEnumerable(Of Char), IEnumerable, IComparable, IComparable(Of String), IConvertible, IEquatable(Of String)
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{System.Char}
  - System.Collections.IEnumerable
  - System.IComparable
  - System.IComparable{System.String}
  - System.IConvertible
  - System.IEquatable{System.String}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.String.Empty
  id: Empty
  parent: System.String
  href: System.String.yml
  name: Empty
  fullName: System.String.Empty
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 70
  assemblies:
  - System.Runtime
  namespace: System
  summary: Represents the empty string. This field is read-only.
  syntax:
    content: public static readonly string Empty
    content.vb: Public Shared ReadOnly Empty As String
- uid: System.String.#ctor(System.Char*)
  id: '#ctor(System.Char*)'
  parent: System.String
  href: System.String.yml
  name: String(Char*)
  fullName: System.String.String(System.Char*)
  type: Constructor
  source:
    path: mscorlib
    isExternal: true
  assemblies:
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the @'System.String' class to the value indicated by a specified pointer to an array of Unicode characters.
  syntax:
    content: public String(char *value)
    content.vb: Public Sub New(value As Char *)
    parameters:
    - id: value
      type: System.Char*
      description: A pointer to a null-terminated array of Unicode characters.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The current process does not have read access to all the addressed characters.
  - type: System.ArgumentException
    description: '*value* specifies an array that contains an invalid Unicode character, or *value* specifies an address less than 64000.'
- uid: System.String.#ctor(System.Char*,System.Int32,System.Int32)
  id: '#ctor(System.Char*,System.Int32,System.Int32)'
  parent: System.String
  href: System.String.yml
  name: String(Char*, Int32, Int32)
  fullName: System.String.String(System.Char*, System.Int32, System.Int32)
  type: Constructor
  source:
    path: mscorlib
    isExternal: true
  assemblies:
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the @'System.String' class to the value indicated by a specified pointer to an array of Unicode characters, a starting character position within that array, and a length.
  syntax:
    content: public String(char *value, int startIndex, int length)
    content.vb: Public Sub New(value As Char *, startIndex As Integer, length As Integer)
    parameters:
    - id: value
      type: System.Char*
      description: A pointer to an array of Unicode characters.
    - id: startIndex
      type: System.Int32
      description: The starting position within *value*.
    - id: length
      type: System.Int32
      description: The number of characters within *value* to use.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*startIndex* or *length* is less than zero, *value* + *startIndex* cause a pointer overflow, or the current process does not have read access to all the addressed characters.'
  - type: System.ArgumentException
    description: '*value* specifies an array that contains an invalid Unicode character, or *value* + *startIndex* specifies an address less than 64000.'
- uid: System.String.#ctor(System.Char,System.Int32)
  id: '#ctor(System.Char,System.Int32)'
  parent: System.String
  href: System.String.yml
  name: String(Char, Int32)
  fullName: System.String.String(System.Char, System.Int32)
  type: Constructor
  source:
    path: mscorlib
    isExternal: true
  assemblies:
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the @'System.String' class to the value indicated by a specified Unicode character repeated a specified number of times.
  syntax:
    content: public String(char c, int count)
    content.vb: Public Sub New(c As Char, count As Integer)
    parameters:
    - id: c
      type: System.Char
      description: A Unicode character.
    - id: count
      type: System.Int32
      description: The number of times *c* occurs.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*count* is less than zero.'
- uid: System.String.#ctor(System.Char[])
  id: '#ctor(System.Char[])'
  parent: System.String
  href: System.String.yml
  name: String(Char[])
  name.vb: String(Char())
  fullName: System.String.String(System.Char[])
  fullName.vb: System.String.String(System.Char())
  type: Constructor
  source:
    path: mscorlib
    isExternal: true
  assemblies:
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the @'System.String' class to the value indicated by an array of Unicode characters.
  syntax:
    content: public String(char[] value)
    content.vb: Public Sub New(value As Char())
    parameters:
    - id: value
      type: System.Char[]
      description: An array of Unicode characters.
- uid: System.String.#ctor(System.Char[],System.Int32,System.Int32)
  id: '#ctor(System.Char[],System.Int32,System.Int32)'
  parent: System.String
  href: System.String.yml
  name: String(Char[], Int32, Int32)
  name.vb: String(Char(), Int32, Int32)
  fullName: System.String.String(System.Char[], System.Int32, System.Int32)
  fullName.vb: System.String.String(System.Char(), System.Int32, System.Int32)
  type: Constructor
  source:
    path: mscorlib
    isExternal: true
  assemblies:
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the @'System.String' class to the value indicated by an array of Unicode characters, a starting character position within that array, and a length.
  syntax:
    content: public String(char[] value, int startIndex, int length)
    content.vb: Public Sub New(value As Char(), startIndex As Integer, length As Integer)
    parameters:
    - id: value
      type: System.Char[]
      description: An array of Unicode characters.
    - id: startIndex
      type: System.Int32
      description: The starting position within *value*.
    - id: length
      type: System.Int32
      description: The number of characters within *value* to use.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*startIndex* or *length* is less than zero.-or- The sum of *startIndex* and *length* is greater than the number of elements in *value*.'
- uid: System.String.Chars(System.Int32)
  id: Chars(System.Int32)
  parent: System.String
  href: System.String.yml
  name: Chars[Int32]
  name.vb: Chars(Int32)
  fullName: System.String.Chars[System.Int32]
  fullName.vb: System.String.Chars(System.Int32)
  type: Property
  source:
    path: mscorlib
    isExternal: true
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the @'System.Char' object at a specified position in the current @'System.String' object.
  syntax:
    content: public char this[int index] { get; }
    content.vb: Public ReadOnly Property Chars(index As Integer) As Char
    parameters:
    - id: index
      type: System.Int32
      description: A position in the current string.
    return:
      type: System.Char
      description: The object at position *index*.
  exceptions:
  - type: System.IndexOutOfRangeException
    description: '*index* is greater than or equal to the length of this object or less than zero.'
- uid: System.String.Length
  id: Length
  parent: System.String
  href: System.String.yml
  name: Length
  fullName: System.String.Length
  type: Property
  source:
    path: mscorlib
    isExternal: true
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the number of characters in the current @'System.String' object.
  syntax:
    content: public int Length { get; }
    content.vb: Public ReadOnly Property Length As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of characters in the current string.
- uid: System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)
  id: Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)
  parent: System.String
  href: System.String.yml
  name: Compare(String, Int32, String, Int32, Int32)
  fullName: System.String.Compare(System.String, System.Int32, System.String, System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 1856
  assemblies:
  - System.Runtime
  namespace: System
  summary: Compares substrings of two specified @'System.String' objects and returns an integer that indicates their relative position in the sort order.
  syntax:
    content: public static int Compare(string strA, int indexA, string strB, int indexB, int length)
    content.vb: Public Shared Function Compare(strA As String, indexA As Integer, strB As String, indexB As Integer, length As Integer) As Integer
    parameters:
    - id: strA
      type: System.String
      description: The first string to use in the comparison.
    - id: indexA
      type: System.Int32
      description: The position of the substring within *strA*.
    - id: strB
      type: System.String
      description: The second string to use in the comparison.
    - id: indexB
      type: System.Int32
      description: The position of the substring within *strB*.
    - id: length
      type: System.Int32
      description: The maximum number of characters in the substrings to compare.
    return:
      type: System.Int32
      description: A 32-bit signed integer indicating the lexical relationship between the two comparands.Value Condition Less than zero The substring in *strA* precedes the substring in *strB* in the sort order. Zero The substrings occur in the same position in the sort order, or *length* is zero. Greater than zero The substring in *strA* follows the substring in *strB* in the sort order.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*indexA* is greater than *strA*.@''System.String.Length''.-or- *indexB* is greater than *strB*.@''System.String.Length''.-or- *indexA*, *indexB*, or *length* is negative. -or-Either *indexA* or *indexB* is null, and *length* is greater than zero.'
- uid: System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)
  id: Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)
  parent: System.String
  href: System.String.yml
  name: Compare(String, Int32, String, Int32, Int32, StringComparison)
  fullName: System.String.Compare(System.String, System.Int32, System.String, System.Int32, System.Int32, System.StringComparison)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 1967
  assemblies:
  - System.Runtime
  namespace: System
  summary: Compares substrings of two specified @'System.String' objects using the specified rules, and returns an integer that indicates their relative position in the sort order.
  syntax:
    content: public static int Compare(string strA, int indexA, string strB, int indexB, int length, StringComparison comparisonType)
    content.vb: Public Shared Function Compare(strA As String, indexA As Integer, strB As String, indexB As Integer, length As Integer, comparisonType As StringComparison) As Integer
    parameters:
    - id: strA
      type: System.String
      description: The first string to use in the comparison.
    - id: indexA
      type: System.Int32
      description: The position of the substring within *strA*.
    - id: strB
      type: System.String
      description: The second string to use in the comparison.
    - id: indexB
      type: System.Int32
      description: The position of the substring within *strB*.
    - id: length
      type: System.Int32
      description: The maximum number of characters in the substrings to compare.
    - id: comparisonType
      type: System.StringComparison
      description: One of the enumeration values that specifies the rules to use in the comparison.
    return:
      type: System.Int32
      description: A 32-bit signed integer that indicates the lexical relationship between the two comparands.Value Condition Less than zero The substring in *strA* precedes the substring in *strB* in the sort order.Zero The substrings occur in the same position in the sort order, or the *length* parameter is zero. Greater than zero The substring in *strA* follllows the substring in *strB* in the sort order.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*indexA* is greater than *strA*.@''System.String.Length''.-or- *indexB* is greater than *strB*.@''System.String.Length''.-or- *indexA*, *indexB*, or *length* is negative. -or-Either *indexA* or *indexB* is null, and *length* is greater than zero.'
  - type: System.ArgumentException
    description: '*comparisonType* is not a @''System.StringComparison'' value.'
- uid: System.String.Compare(System.String,System.String)
  id: Compare(System.String,System.String)
  parent: System.String
  href: System.String.yml
  name: Compare(String, String)
  fullName: System.String.Compare(System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 1729
  assemblies:
  - System.Runtime
  namespace: System
  summary: Compares two specified @'System.String' objects and returns an integer that indicates their relative position in the sort order.
  syntax:
    content: public static int Compare(string strA, string strB)
    content.vb: Public Shared Function Compare(strA As String, strB As String) As Integer
    parameters:
    - id: strA
      type: System.String
      description: The first string to compare.
    - id: strB
      type: System.String
      description: The second string to compare.
    return:
      type: System.Int32
      description: A 32-bit signed integer that indicates the lexical relationship between the two comparands.Value Condition Less than zero *strA* precedes *strB* in the sort order. Zero *strA* occurs in the same position as *strB* in the sort order. Greater than zero *strA* follows *strB* in the sort order.
- uid: System.String.Compare(System.String,System.String,System.Boolean)
  id: Compare(System.String,System.String,System.Boolean)
  parent: System.String
  href: System.String.yml
  name: Compare(String, String, Boolean)
  fullName: System.String.Compare(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 1740
  assemblies:
  - System.Runtime
  namespace: System
  summary: Compares two specified @'System.String' objects, ignoring or honoring their case, and returns an integer that indicates their relative position in the sort order.
  syntax:
    content: public static int Compare(string strA, string strB, bool ignoreCase)
    content.vb: Public Shared Function Compare(strA As String, strB As String, ignoreCase As Boolean) As Integer
    parameters:
    - id: strA
      type: System.String
      description: The first string to compare.
    - id: strB
      type: System.String
      description: The second string to compare.
    - id: ignoreCase
      type: System.Boolean
      description: true to ignore case during the comparison; otherwise, false.
    return:
      type: System.Int32
      description: A 32-bit signed integer that indicates the lexical relationship between the two comparands.Value Condition Less than zero *strA* precedes *strB* in the sort order. Zero *strA* occurs in the same position as *strB* in the sort order. Greater than zero *strA* follows *strB* in the sort order.
- uid: System.String.Compare(System.String,System.String,System.StringComparison)
  id: Compare(System.String,System.String,System.StringComparison)
  parent: System.String
  href: System.String.yml
  name: Compare(String, String, StringComparison)
  fullName: System.String.Compare(System.String, System.String, System.StringComparison)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 1752
  assemblies:
  - System.Runtime
  namespace: System
  summary: Compares two specified @'System.String' objects using the specified rules, and returns an integer that indicates their relative position in the sort order.
  syntax:
    content: public static int Compare(string strA, string strB, StringComparison comparisonType)
    content.vb: Public Shared Function Compare(strA As String, strB As String, comparisonType As StringComparison) As Integer
    parameters:
    - id: strA
      type: System.String
      description: The first string to compare.
    - id: strB
      type: System.String
      description: The second string to compare.
    - id: comparisonType
      type: System.StringComparison
      description: One of the enumeration values that specifies the rules to use in the comparison.
    return:
      type: System.Int32
      description: A 32-bit signed integer that indicates the lexical relationship between the two comparands.Value Condition Less than zero *strA* precedes *strB* in the sort order. Zero *strA* is in the same position as *strB* in the sort order. Greater than zero *strA* follows *strB* in the sort order.
  exceptions:
  - type: System.ArgumentException
    description: '*comparisonType* is not a @''System.StringComparison'' value.'
  - type: System.NotSupportedException
    description: '@''System.StringComparison'' is not supported.'
- uid: System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)
  id: CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)
  parent: System.String
  href: System.String.yml
  name: CompareOrdinal(String, Int32, String, Int32, Int32)
  fullName: System.String.CompareOrdinal(System.String, System.Int32, System.String, System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2114
  assemblies:
  - System.Runtime
  namespace: System
  summary: Compares substrings of two specified @'System.String' objects by evaluating the numeric values of the corresponding @'System.Char' objects in each substring.
  syntax:
    content: public static int CompareOrdinal(string strA, int indexA, string strB, int indexB, int length)
    content.vb: Public Shared Function CompareOrdinal(strA As String, indexA As Integer, strB As String, indexB As Integer, length As Integer) As Integer
    parameters:
    - id: strA
      type: System.String
      description: The first string to use in the comparison.
    - id: indexA
      type: System.Int32
      description: The starting index of the substring in *strA*.
    - id: strB
      type: System.String
      description: The second string to use in the comparison.
    - id: indexB
      type: System.Int32
      description: The starting index of the substring in *strB*.
    - id: length
      type: System.Int32
      description: The maximum number of characters in the substrings to compare.
    return:
      type: System.Int32
      description: A 32-bit signed integer that indicates the lexical relationship between the two comparands.ValueCondition Less than zero The substring in *strA* is less than the substring in *strB*. Zero The substrings are equal, or *length* is zero. Greater than zero The substring in *strA* is greater than the substring in *strB*.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*strA* is not null and *indexA* is greater than *strA*.@''System.String.Length''.-or- *strB* is not null and*indexB* is greater than *strB*.@''System.String.Length''.-or- *indexA*, *indexB*, or *length* is negative.'
- uid: System.String.CompareOrdinal(System.String,System.String)
  id: CompareOrdinal(System.String,System.String)
  parent: System.String
  href: System.String.yml
  name: CompareOrdinal(String, String)
  fullName: System.String.CompareOrdinal(System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2087
  assemblies:
  - System.Runtime
  namespace: System
  summary: Compares two specified @'System.String' objects by evaluating the numeric values of the corresponding @'System.Char' objects in each string.
  syntax:
    content: public static int CompareOrdinal(string strA, string strB)
    content.vb: Public Shared Function CompareOrdinal(strA As String, strB As String) As Integer
    parameters:
    - id: strA
      type: System.String
      description: The first string to compare.
    - id: strB
      type: System.String
      description: The second string to compare.
    return:
      type: System.Int32
      description: An integer that indicates the lexical relationship between the two comparands.ValueCondition Less than zero *strA* is less than *strB*. Zero *strA* and *strB* are equal. Greater than zero *strA* is greater than *strB*.
- uid: System.String.CompareTo(System.String)
  id: CompareTo(System.String)
  parent: System.String
  href: System.String.yml
  name: CompareTo(String)
  fullName: System.String.CompareTo(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2076
  assemblies:
  - System.Runtime
  namespace: System
  summary: Compares this instance with a specified @'System.String' object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified string.
  syntax:
    content: public int CompareTo(string strB)
    content.vb: Public Function CompareTo(strB As String) As Integer
    parameters:
    - id: strB
      type: System.String
      description: The string to compare with this instance.
    return:
      type: System.Int32
      description: A 32-bit signed integer that indicates whether this instance precedes, follows, or appears in the same position in the sort order as the *strB* parameter.Value Condition Less than zero This instance precedes *strB*. Zero This instance has the same position in the sort order as *strB*. Greater than zero This instance follows *strB*.-or- *strB* is null.
- uid: System.String.Concat(System.Collections.Generic.IEnumerable{System.String})
  id: Concat(System.Collections.Generic.IEnumerable{System.String})
  parent: System.String
  href: System.String.yml
  name: Concat(IEnumerable<String>)
  name.vb: Concat(IEnumerable(Of String))
  fullName: System.String.Concat(System.Collections.Generic.IEnumerable<System.String>)
  fullName.vb: System.String.Concat(System.Collections.Generic.IEnumerable(Of System.String))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3120
  assemblies:
  - System.Runtime
  namespace: System
  summary: Concatenates the members of a constructed @'System.Collections.Generic.IEnumerable`1' collection of type @'System.String'.
  syntax:
    content: public static string Concat(IEnumerable<string> values)
    content.vb: Public Shared Function Concat(values As IEnumerable(Of String)) As String
    parameters:
    - id: values
      type: System.Collections.Generic.IEnumerable{System.String}
      description: A collection object that implements @'System.Collections.Generic.IEnumerable`1' and whose generic type argument is @'System.String'.
    return:
      type: System.String
      description: The concatenated strings in *values*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*values* is null.'
- uid: System.String.Concat(System.Object)
  id: Concat(System.Object)
  parent: System.String
  href: System.String.yml
  name: Concat(Object)
  fullName: System.String.Concat(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2998
  assemblies:
  - System.Runtime
  namespace: System
  summary: Creates the string  representation of a specified object.
  syntax:
    content: public static string Concat(object arg0)
    content.vb: Public Shared Function Concat(arg0 As Object) As String
    parameters:
    - id: arg0
      type: System.Object
      description: The object to represent, or null.
    return:
      type: System.String
      description: The string representation of the value of *arg0*, or @'System.String.Empty' if *arg0* is null.
- uid: System.String.Concat(System.Object,System.Object)
  id: Concat(System.Object,System.Object)
  parent: System.String
  href: System.String.yml
  name: Concat(Object, Object)
  fullName: System.String.Concat(System.Object, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3009
  assemblies:
  - System.Runtime
  namespace: System
  summary: Concatenates the string representations of two specified objects.
  syntax:
    content: public static string Concat(object arg0, object arg1)
    content.vb: Public Shared Function Concat(arg0 As Object, arg1 As Object) As String
    parameters:
    - id: arg0
      type: System.Object
      description: The first object to concatenate.
    - id: arg1
      type: System.Object
      description: The second object to concatenate.
    return:
      type: System.String
      description: The concatenated string representations of the values of *arg0* and *arg1*.
- uid: System.String.Concat(System.Object,System.Object,System.Object)
  id: Concat(System.Object,System.Object,System.Object)
  parent: System.String
  href: System.String.yml
  name: Concat(Object, Object, Object)
  fullName: System.String.Concat(System.Object, System.Object, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3024
  assemblies:
  - System.Runtime
  namespace: System
  summary: Concatenates the string representations of three specified objects.
  syntax:
    content: public static string Concat(object arg0, object arg1, object arg2)
    content.vb: Public Shared Function Concat(arg0 As Object, arg1 As Object, arg2 As Object) As String
    parameters:
    - id: arg0
      type: System.Object
      description: The first object to concatenate.
    - id: arg1
      type: System.Object
      description: The second object to concatenate.
    - id: arg2
      type: System.Object
      description: The third object to concatenate.
    return:
      type: System.String
      description: The concatenated string representations of the values of *arg0*, *arg1*, and *arg2*.
- uid: System.String.Concat(System.Object[])
  id: Concat(System.Object[])
  parent: System.String
  href: System.String.yml
  name: Concat(Object[])
  name.vb: Concat(Object())
  fullName: System.String.Concat(System.Object[])
  fullName.vb: System.String.Concat(System.Object())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3074
  assemblies:
  - System.Runtime
  namespace: System
  summary: Concatenates the string representations of the elements in a specified @'System.Object' array.
  syntax:
    content: public static string Concat(params object[] args)
    content.vb: Public Shared Function Concat(ParamArray args As Object()) As String
    parameters:
    - id: args
      type: System.Object[]
      description: An object array that contains the elements to concatenate.
    return:
      type: System.String
      description: The concatenated string representations of the values of the elements in *args*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*args* is null.'
  - type: System.OutOfMemoryException
    description: Out of memory.
- uid: System.String.Concat(System.String,System.String)
  id: Concat(System.String,System.String)
  parent: System.String
  href: System.String.yml
  name: Concat(String, String)
  fullName: System.String.Concat(System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3139
  assemblies:
  - System.Runtime
  namespace: System
  summary: Concatenates two specified instances of @'System.String'.
  syntax:
    content: public static string Concat(string str0, string str1)
    content.vb: Public Shared Function Concat(str0 As String, str1 As String) As String
    parameters:
    - id: str0
      type: System.String
      description: The first string to concatenate.
    - id: str1
      type: System.String
      description: The second string to concatenate.
    return:
      type: System.String
      description: The concatenation of *str0* and *str1*.
- uid: System.String.Concat(System.String,System.String,System.String)
  id: Concat(System.String,System.String,System.String)
  parent: System.String
  href: System.String.yml
  name: Concat(String, String, String)
  fullName: System.String.Concat(System.String, System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3168
  assemblies:
  - System.Runtime
  namespace: System
  summary: Concatenates three specified instances of @'System.String'.
  syntax:
    content: public static string Concat(string str0, string str1, string str2)
    content.vb: Public Shared Function Concat(str0 As String, str1 As String, str2 As String) As String
    parameters:
    - id: str0
      type: System.String
      description: The first string to concatenate.
    - id: str1
      type: System.String
      description: The second string to concatenate.
    - id: str2
      type: System.String
      description: The third string to concatenate.
    return:
      type: System.String
      description: The concatenation of *str0*, *str1*, and *str2*.
- uid: System.String.Concat(System.String,System.String,System.String,System.String)
  id: Concat(System.String,System.String,System.String,System.String)
  parent: System.String
  href: System.String.yml
  name: Concat(String, String, String, String)
  fullName: System.String.Concat(System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3203
  assemblies:
  - System.Runtime
  namespace: System
  summary: Concatenates four specified instances of @'System.String'.
  syntax:
    content: public static string Concat(string str0, string str1, string str2, string str3)
    content.vb: Public Shared Function Concat(str0 As String, str1 As String, str2 As String, str3 As String) As String
    parameters:
    - id: str0
      type: System.String
      description: The first string to concatenate.
    - id: str1
      type: System.String
      description: The second string to concatenate.
    - id: str2
      type: System.String
      description: The third string to concatenate.
    - id: str3
      type: System.String
      description: The fourth string to concatenate.
    return:
      type: System.String
      description: The concatenation of *str0*, *str1*, *str2*, and *str3*.
- uid: System.String.Concat(System.String[])
  id: Concat(System.String[])
  parent: System.String
  href: System.String.yml
  name: Concat(String[])
  name.vb: Concat(String())
  fullName: System.String.Concat(System.String[])
  fullName.vb: System.String.Concat(System.String())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3260
  assemblies:
  - System.Runtime
  namespace: System
  summary: Concatenates the elements of a specified @'System.String' array.
  syntax:
    content: public static string Concat(params string[] values)
    content.vb: Public Shared Function Concat(ParamArray values As String()) As String
    parameters:
    - id: values
      type: System.String[]
      description: An array of string instances.
    return:
      type: System.String
      description: The concatenated elements of *values*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*values* is null.'
  - type: System.OutOfMemoryException
    description: Out of memory.
- uid: System.String.Concat``1(System.Collections.Generic.IEnumerable{``0})
  id: Concat``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.String
  href: System.String.yml
  name: Concat<T>(IEnumerable<T>)
  name.vb: Concat(Of T)(IEnumerable(Of T))
  fullName: System.String.Concat<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: System.String.Concat(Of T)(System.Collections.Generic.IEnumerable(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3097
  assemblies:
  - System.Runtime
  namespace: System
  summary: Concatenates the members of an @'System.Collections.Generic.IEnumerable`1' implementation.
  syntax:
    content: public static string Concat<T>(IEnumerable<T> values)
    content.vb: Public Shared Function Concat(Of T)(values As IEnumerable(Of T)) As String
    parameters:
    - id: values
      type: System.Collections.Generic.IEnumerable{{T}}
      description: A collection object that implements the @'System.Collections.Generic.IEnumerable`1' interface.
    typeParameters:
    - id: T
    return:
      type: System.String
      description: The concatenated members in *values*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*values* is null.'
- uid: System.String.Contains(System.String)
  id: Contains(System.String)
  parent: System.String
  href: System.String.yml
  name: Contains(String)
  fullName: System.String.Contains(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2129
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a value indicating whether a specified substring occurs within this string.
  syntax:
    content: public bool Contains(string value)
    content.vb: Public Function Contains(value As String) As Boolean
    parameters:
    - id: value
      type: System.String
      description: The string to seek.
    return:
      type: System.Boolean
      description: true if the *value* parameter occurs within this string, or if *value* is the empty string (""); otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
- uid: System.String.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)
  id: CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)
  parent: System.String
  href: System.String.yml
  name: CopyTo(Int32, Char[], Int32, Int32)
  name.vb: CopyTo(Int32, Char(), Int32, Int32)
  fullName: System.String.CopyTo(System.Int32, System.Char[], System.Int32, System.Int32)
  fullName.vb: System.String.CopyTo(System.Int32, System.Char(), System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 691
  assemblies:
  - System.Runtime
  namespace: System
  summary: Copies a specified number of characters from a specified position in this instance to a specified position in an array of Unicode characters.
  syntax:
    content: public void CopyTo(int sourceIndex, char[] destination, int destinationIndex, int count)
    content.vb: Public Sub CopyTo(sourceIndex As Integer, destination As Char(), destinationIndex As Integer, count As Integer)
    parameters:
    - id: sourceIndex
      type: System.Int32
      description: The index of the first character in this instance to copy.
    - id: destination
      type: System.Char[]
      description: An array of Unicode characters to which characters in this instance are copied.
    - id: destinationIndex
      type: System.Int32
      description: The index in *destination* at which the copy operation begins.
    - id: count
      type: System.Int32
      description: The number of characters in this instance to copy to *destination*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*destination* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*sourceIndex*, *destinationIndex*, or *count* is negative -or- *sourceIndex* does not identify a position in the current instance. -or-*destinationIndex* does not identify a valid index in the *destination* array. -or-*count* is greater than the length of the substring from *startIndex* to the end of this instance -or- *count* is greater than the length of the subarray from *destinationIndex* to the end of the *destination* array.'
- uid: System.String.EndsWith(System.String)
  id: EndsWith(System.String)
  parent: System.String
  href: System.String.yml
  name: EndsWith(String)
  fullName: System.String.EndsWith(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2139
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether the end of this string instance matches the specified string.
  syntax:
    content: public bool EndsWith(string value)
    content.vb: Public Function EndsWith(value As String) As Boolean
    parameters:
    - id: value
      type: System.String
      description: The string to compare to the substring at the end of this instance.
    return:
      type: System.Boolean
      description: true if *value* matches the end of this instance; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
- uid: System.String.EndsWith(System.String,System.StringComparison)
  id: EndsWith(System.String,System.StringComparison)
  parent: System.String
  href: System.String.yml
  name: EndsWith(String, StringComparison)
  fullName: System.String.EndsWith(System.String, System.StringComparison)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2144
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether the end of this string instance matches the specified string when compared using the specified comparison option.
  syntax:
    content: public bool EndsWith(string value, StringComparison comparisonType)
    content.vb: Public Function EndsWith(value As String, comparisonType As StringComparison) As Boolean
    parameters:
    - id: value
      type: System.String
      description: The string to compare to the substring at the end of this instance.
    - id: comparisonType
      type: System.StringComparison
      description: One of the enumeration values that determines how this string and *value* are compared.
    return:
      type: System.Boolean
      description: true if the *value* parameter matches the end of this string; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
  - type: System.ArgumentException
    description: '*comparisonType* is not a @''System.StringComparison'' value.'
- uid: System.String.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.String
  href: System.String.yml
  name: Equals(Object)
  fullName: System.String.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 503
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether this instance and a specified object, which must also be a @'System.String' object, have the same value.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The string to compare to this instance.
    return:
      type: System.Boolean
      description: true if *obj* is a @'System.String' and its value is the same as this instance; otherwise, false.  If *obj* is null, the method returns false.
  overridden: System.Object.Equals(System.Object)
- uid: System.String.Equals(System.String)
  id: Equals(System.String)
  parent: System.String
  href: System.String.yml
  name: Equals(String)
  fullName: System.String.Equals(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 522
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether this instance and another specified @'System.String' object have the same value.
  syntax:
    content: public bool Equals(string value)
    content.vb: Public Function Equals(value As String) As Boolean
    parameters:
    - id: value
      type: System.String
      description: The string to compare to this instance.
    return:
      type: System.Boolean
      description: true if the value of the *value* parameter is the same as the value of this instance; otherwise, false. If *value* is null, the method returns false.
- uid: System.String.Equals(System.String,System.String)
  id: Equals(System.String,System.String)
  parent: System.String
  href: System.String.yml
  name: Equals(String, String)
  fullName: System.String.Equals(System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 596
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether two specified @'System.String' objects have the same value.
  syntax:
    content: public static bool Equals(string a, string b)
    content.vb: Public Shared Function Equals(a As String, b As String) As Boolean
    parameters:
    - id: a
      type: System.String
      description: The first string to compare, or null.
    - id: b
      type: System.String
      description: The second string to compare, or null.
    return:
      type: System.Boolean
      description: true if the value of *a* is the same as the value of *b*; otherwise, false. If both *a* and *b* are null, the method returns true.
- uid: System.String.Equals(System.String,System.String,System.StringComparison)
  id: Equals(System.String,System.String,System.StringComparison)
  parent: System.String
  href: System.String.yml
  name: Equals(String, String, StringComparison)
  fullName: System.String.Equals(System.String, System.String, System.StringComparison)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 612
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether two specified @'System.String' objects have the same value. A parameter specifies the culture, case, and sort rules used in the comparison.
  syntax:
    content: public static bool Equals(string a, string b, StringComparison comparisonType)
    content.vb: Public Shared Function Equals(a As String, b As String, comparisonType As StringComparison) As Boolean
    parameters:
    - id: a
      type: System.String
      description: The first string to compare, or null.
    - id: b
      type: System.String
      description: The second string to compare, or null.
    - id: comparisonType
      type: System.StringComparison
      description: One of the enumeration values that specifies the rules for the comparison.
    return:
      type: System.Boolean
      description: true if the value of the *a* parameter is equal to the value of the *b* parameter; otherwise, false.
  exceptions:
  - type: System.ArgumentException
    description: '*comparisonType* is not a @''System.StringComparison'' value.'
- uid: System.String.Equals(System.String,System.StringComparison)
  id: Equals(System.String,System.StringComparison)
  parent: System.String
  href: System.String.yml
  name: Equals(String, StringComparison)
  fullName: System.String.Equals(System.String, System.StringComparison)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 540
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether this string and a specified @'System.String' object have the same value. A parameter specifies the culture, case, and sort rules used in the comparison.
  syntax:
    content: public bool Equals(string value, StringComparison comparisonType)
    content.vb: Public Function Equals(value As String, comparisonType As StringComparison) As Boolean
    parameters:
    - id: value
      type: System.String
      description: The string to compare to this instance.
    - id: comparisonType
      type: System.StringComparison
      description: One of the enumeration values that specifies how the strings will be compared.
    return:
      type: System.Boolean
      description: true if the value of the *value* parameter is the same as this string; otherwise, false.
  exceptions:
  - type: System.ArgumentException
    description: '*comparisonType* is not a @''System.StringComparison'' value.'
- uid: System.String.Format(System.IFormatProvider,System.String,System.Object)
  id: Format(System.IFormatProvider,System.String,System.Object)
  parent: System.String
  href: System.String.yml
  name: Format(IFormatProvider, String, Object)
  fullName: System.String.Format(System.IFormatProvider, System.String, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2941
  assemblies:
  - System.Runtime
  namespace: System
  summary: Replaces the format item or items in a specified string with the string representation of the corresponding object. A parameter supplies culture-specific formatting information.
  syntax:
    content: public static string Format(IFormatProvider provider, string format, object arg0)
    content.vb: Public Shared Function Format(provider As IFormatProvider, format As String, arg0 As Object) As String
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    - id: format
      type: System.String
      description: A composite format string.
    - id: arg0
      type: System.Object
      description: The object to format.
    return:
      type: System.String
      description: A copy of *format* in which the format item or items have been replaced by the string representation of *arg0*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*format* or *arg0* is null.'
  - type: System.FormatException
    description: '*format* is invalid.-or- The index of a format item is less than zero, or greater than or equal to one.'
- uid: System.String.Format(System.IFormatProvider,System.String,System.Object,System.Object)
  id: Format(System.IFormatProvider,System.String,System.Object,System.Object)
  parent: System.String
  href: System.String.yml
  name: Format(IFormatProvider, String, Object, Object)
  fullName: System.String.Format(System.IFormatProvider, System.String, System.Object, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2946
  assemblies:
  - System.Runtime
  namespace: System
  summary: Replaces the format items in a specified string with the string representation of two specified objects. A parameter supplies culture-specific formatting information.
  syntax:
    content: public static string Format(IFormatProvider provider, string format, object arg0, object arg1)
    content.vb: Public Shared Function Format(provider As IFormatProvider, format As String, arg0 As Object, arg1 As Object) As String
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    - id: format
      type: System.String
      description: A composite format string.
    - id: arg0
      type: System.Object
      description: The first object to format.
    - id: arg1
      type: System.Object
      description: The second object to format.
    return:
      type: System.String
      description: A copy of *format* in which format items are replaced by the string representations of *arg0* and *arg1*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*format*, *arg0*, or *arg1* is null.'
  - type: System.FormatException
    description: '*format* is invalid.-or- The index of a format item is less than zero, or greater than or equal to two.'
- uid: System.String.Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)
  id: Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)
  parent: System.String
  href: System.String.yml
  name: Format(IFormatProvider, String, Object, Object, Object)
  fullName: System.String.Format(System.IFormatProvider, System.String, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2951
  assemblies:
  - System.Runtime
  namespace: System
  summary: Replaces the format items in a specified string with the string representation of three specified objects. An parameter supplies culture-specific formatting information.
  syntax:
    content: public static string Format(IFormatProvider provider, string format, object arg0, object arg1, object arg2)
    content.vb: Public Shared Function Format(provider As IFormatProvider, format As String, arg0 As Object, arg1 As Object, arg2 As Object) As String
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    - id: format
      type: System.String
      description: A composite format string.
    - id: arg0
      type: System.Object
      description: The first object to format.
    - id: arg1
      type: System.Object
      description: The second object to format.
    - id: arg2
      type: System.Object
      description: The third object to format.
    return:
      type: System.String
      description: A copy of *format* in which the format items have been replaced by the string representations of *arg0*, *arg1*, and *arg2*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*format*, *arg0*, *arg1*, or *arg2* is null.'
  - type: System.FormatException
    description: '*format* is invalid.-or- The index of a format item is less than zero, or greater than or equal to three.'
- uid: System.String.Format(System.IFormatProvider,System.String,System.Object[])
  id: Format(System.IFormatProvider,System.String,System.Object[])
  parent: System.String
  href: System.String.yml
  name: Format(IFormatProvider, String, Object[])
  name.vb: Format(IFormatProvider, String, Object())
  fullName: System.String.Format(System.IFormatProvider, System.String, System.Object[])
  fullName.vb: System.String.Format(System.IFormatProvider, System.String, System.Object())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2956
  assemblies:
  - System.Runtime
  namespace: System
  summary: Replaces the format items in a specified string with the string representations of corresponding objects in a specified array. A parameter supplies culture-specific formatting information.
  syntax:
    content: public static string Format(IFormatProvider provider, string format, params object[] args)
    content.vb: Public Shared Function Format(provider As IFormatProvider, format As String, ParamArray args As Object()) As String
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    - id: format
      type: System.String
      description: A composite format string.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    return:
      type: System.String
      description: A copy of *format* in which the format items have been replaced by the string representation of the corresponding objects in *args*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*format* or *args* is null.'
  - type: System.FormatException
    description: '*format* is invalid.-or- The index of a format item is less than zero, or greater than or equal to the length of the *args* array.'
- uid: System.String.Format(System.String,System.Object)
  id: Format(System.String,System.Object)
  parent: System.String
  href: System.String.yml
  name: Format(String, Object)
  fullName: System.String.Format(System.String, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2913
  assemblies:
  - System.Runtime
  namespace: System
  summary: Replaces one or more format items in a specified string with the string representation of a specified object.
  syntax:
    content: public static string Format(string format, object arg0)
    content.vb: Public Shared Function Format(format As String, arg0 As Object) As String
    parameters:
    - id: format
      type: System.String
      description: A composite format string.
    - id: arg0
      type: System.Object
      description: The object to format.
    return:
      type: System.String
      description: A copy of *format* in which any format items are replaced by the string representation of *arg0*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*format* is null.'
  - type: System.FormatException
    description: The format item in *format* is invalid.-or- The index of a format item is not zero.
- uid: System.String.Format(System.String,System.Object,System.Object)
  id: Format(System.String,System.Object,System.Object)
  parent: System.String
  href: System.String.yml
  name: Format(String, Object, Object)
  fullName: System.String.Format(System.String, System.Object, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2918
  assemblies:
  - System.Runtime
  namespace: System
  summary: Replaces the format items in a specified string with the string representation of two specified objects.
  syntax:
    content: public static string Format(string format, object arg0, object arg1)
    content.vb: Public Shared Function Format(format As String, arg0 As Object, arg1 As Object) As String
    parameters:
    - id: format
      type: System.String
      description: A composite format string.
    - id: arg0
      type: System.Object
      description: The first object to format.
    - id: arg1
      type: System.Object
      description: The second object to format.
    return:
      type: System.String
      description: A copy of *format* in which format items are replaced by the string representations of *arg0* and *arg1*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*format* is null.'
  - type: System.FormatException
    description: '*format* is invalid.-or- The index of a format item is not zero or one.'
- uid: System.String.Format(System.String,System.Object,System.Object,System.Object)
  id: Format(System.String,System.Object,System.Object,System.Object)
  parent: System.String
  href: System.String.yml
  name: Format(String, Object, Object, Object)
  fullName: System.String.Format(System.String, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2923
  assemblies:
  - System.Runtime
  namespace: System
  summary: Replaces the format items in a specified string with the string representation of three specified objects.
  syntax:
    content: public static string Format(string format, object arg0, object arg1, object arg2)
    content.vb: Public Shared Function Format(format As String, arg0 As Object, arg1 As Object, arg2 As Object) As String
    parameters:
    - id: format
      type: System.String
      description: A composite format string.
    - id: arg0
      type: System.Object
      description: The first object to format.
    - id: arg1
      type: System.Object
      description: The second object to format.
    - id: arg2
      type: System.Object
      description: The third object to format.
    return:
      type: System.String
      description: A copy of *format* in which the format items have been replaced by the string representations of *arg0*, *arg1*, and *arg2*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*format* is null.'
  - type: System.FormatException
    description: '*format* is invalid.-or- The index of a format item is less than zero, or greater than two.'
- uid: System.String.Format(System.String,System.Object[])
  id: Format(System.String,System.Object[])
  parent: System.String
  href: System.String.yml
  name: Format(String, Object[])
  name.vb: Format(String, Object())
  fullName: System.String.Format(System.String, System.Object[])
  fullName.vb: System.String.Format(System.String, System.Object())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2928
  assemblies:
  - System.Runtime
  namespace: System
  summary: Replaces the format item in a specified string with the string representation of a corresponding object in a specified array.
  syntax:
    content: public static string Format(string format, params object[] args)
    content.vb: Public Shared Function Format(format As String, ParamArray args As Object()) As String
    parameters:
    - id: format
      type: System.String
      description: A composite format string.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    return:
      type: System.String
      description: A copy of *format* in which the format items have been replaced by the string representation of the corresponding objects in *args*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*format* or *args* is null.'
  - type: System.FormatException
    description: '*format* is invalid.-or- The index of a format item is less than zero, or greater than or equal to the length of the *args* array.'
- uid: System.String.GetHashCode
  id: GetHashCode
  parent: System.String
  href: System.String.yml
  name: GetHashCode()
  fullName: System.String.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 789
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns the hash code for this string.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  overridden: System.Object.GetHashCode
- uid: System.String.IndexOf(System.Char)
  id: IndexOf(System.Char)
  parent: System.String
  href: System.String.yml
  name: IndexOf(Char)
  fullName: System.String.IndexOf(System.Char)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2226
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index of the first occurrence of the specified Unicode character in this string.
  syntax:
    content: public int IndexOf(char value)
    content.vb: Public Function IndexOf(value As Char) As Integer
    parameters:
    - id: value
      type: System.Char
      description: A Unicode character to seek.
    return:
      type: System.Int32
      description: The zero-based index position of *value* if that character is found, or -1 if it is not.
- uid: System.String.IndexOf(System.Char,System.Int32)
  id: IndexOf(System.Char,System.Int32)
  parent: System.String
  href: System.String.yml
  name: IndexOf(Char, Int32)
  fullName: System.String.IndexOf(System.Char, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2231
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index of the first occurrence of the specified Unicode character in this string. The search starts at a specified character position.
  syntax:
    content: public int IndexOf(char value, int startIndex)
    content.vb: Public Function IndexOf(value As Char, startIndex As Integer) As Integer
    parameters:
    - id: value
      type: System.Char
      description: A Unicode character to seek.
    - id: startIndex
      type: System.Int32
      description: The search starting position.
    return:
      type: System.Int32
      description: The zero-based index position of *value* if that character is found, or -1 if it is not.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*startIndex* is less than 0 (zero) or greater than the length of the string.'
- uid: System.String.IndexOf(System.Char,System.Int32,System.Int32)
  id: IndexOf(System.Char,System.Int32,System.Int32)
  parent: System.String
  href: System.String.yml
  name: IndexOf(Char, Int32, Int32)
  fullName: System.String.IndexOf(System.Char, System.Int32, System.Int32)
  type: Method
  source:
    path: mscorlib
    isExternal: true
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index of the first occurrence of the specified character in this instance. The search starts at a specified character position and examines a specified number of character positions.
  syntax:
    content: public int IndexOf(char value, int startIndex, int count)
    content.vb: Public Function IndexOf(value As Char, startIndex As Integer, count As Integer) As Integer
    parameters:
    - id: value
      type: System.Char
      description: A Unicode character to seek.
    - id: startIndex
      type: System.Int32
      description: The search starting position.
    - id: count
      type: System.Int32
      description: The number of character positions to examine.
    return:
      type: System.Int32
      description: The zero-based index position of *value* if that character is found, or -1 if it is not.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*count* or *startIndex* is negative.-or- *startIndex* is greater than the length of this string.-or-*count* is greater than the length of this string minus *startIndex*.'
- uid: System.String.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.String
  href: System.String.yml
  name: IndexOf(String)
  fullName: System.String.IndexOf(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2265
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index of the first occurrence of the specified string in this instance.
  syntax:
    content: public int IndexOf(string value)
    content.vb: Public Function IndexOf(value As String) As Integer
    parameters:
    - id: value
      type: System.String
      description: The string to seek.
    return:
      type: System.Int32
      description: The zero-based index position of *value* if that string is found, or -1 if it is not. If *value* is @'System.String.Empty', the return value is 0.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
- uid: System.String.IndexOf(System.String,System.Int32)
  id: IndexOf(System.String,System.Int32)
  parent: System.String
  href: System.String.yml
  name: IndexOf(String, Int32)
  fullName: System.String.IndexOf(System.String, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2274
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index of the first occurrence of the specified string in this instance. The search starts at a specified character position.
  syntax:
    content: public int IndexOf(string value, int startIndex)
    content.vb: Public Function IndexOf(value As String, startIndex As Integer) As Integer
    parameters:
    - id: value
      type: System.String
      description: The string to seek.
    - id: startIndex
      type: System.Int32
      description: The search starting position.
    return:
      type: System.Int32
      description: The zero-based index position of *value* if that string is found, or -1 if it is not. If *value* is @'System.String.Empty', the return value is *startIndex*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*startIndex* is less than 0 (zero) or greater than the length of this string.'
- uid: System.String.IndexOf(System.String,System.Int32,System.Int32)
  id: IndexOf(System.String,System.Int32,System.Int32)
  parent: System.String
  href: System.String.yml
  name: IndexOf(String, Int32, Int32)
  fullName: System.String.IndexOf(System.String, System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2283
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index of the first occurrence of the specified string in this instance. The search starts at a specified character position and examines a specified number of character positions.
  syntax:
    content: public int IndexOf(string value, int startIndex, int count)
    content.vb: Public Function IndexOf(value As String, startIndex As Integer, count As Integer) As Integer
    parameters:
    - id: value
      type: System.String
      description: The string to seek.
    - id: startIndex
      type: System.Int32
      description: The search starting position.
    - id: count
      type: System.Int32
      description: The number of character positions to examine.
    return:
      type: System.Int32
      description: The zero-based index position of *value* if that string is found, or -1 if it is not. If *value* is @'System.String.Empty', the return value is *startIndex*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*count* or *startIndex* is negative.-or- *startIndex* is greater than the length of this string.-or-*count* is greater than the length of this string minus *startIndex*.'
- uid: System.String.IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)
  id: IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)
  parent: System.String
  href: System.String.yml
  name: IndexOf(String, Int32, Int32, StringComparison)
  fullName: System.String.IndexOf(System.String, System.Int32, System.Int32, System.StringComparison)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2307
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index of the first occurrence of the specified string in the current @'System.String' object. Parameters specify the starting search position in the current string, the number of characters in the current string to search, and the type of search to use for the specified string.
  syntax:
    content: public int IndexOf(string value, int startIndex, int count, StringComparison comparisonType)
    content.vb: Public Function IndexOf(value As String, startIndex As Integer, count As Integer, comparisonType As StringComparison) As Integer
    parameters:
    - id: value
      type: System.String
      description: The string to seek.
    - id: startIndex
      type: System.Int32
      description: The search starting position.
    - id: count
      type: System.Int32
      description: The number of character positions to examine.
    - id: comparisonType
      type: System.StringComparison
      description: One of the enumeration values that specifies the rules for the search.
    return:
      type: System.Int32
      description: The zero-based index position of the *value* parameter if that string is found, or -1 if it is not. If *value* is @'System.String.Empty', the return value is *startIndex*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*count* or *startIndex* is negative.-or- *startIndex* is greater than the length of this instance.-or-*count* is greater than the length of this string minus *startIndex*.'
  - type: System.ArgumentException
    description: '*comparisonType* is not a valid @''System.StringComparison'' value.'
- uid: System.String.IndexOf(System.String,System.Int32,System.StringComparison)
  id: IndexOf(System.String,System.Int32,System.StringComparison)
  parent: System.String
  href: System.String.yml
  name: IndexOf(String, Int32, StringComparison)
  fullName: System.String.IndexOf(System.String, System.Int32, System.StringComparison)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2302
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index of the first occurrence of the specified string in the current @'System.String' object. Parameters specify the starting search position in the current string and the type of search to use for the specified string.
  syntax:
    content: public int IndexOf(string value, int startIndex, StringComparison comparisonType)
    content.vb: Public Function IndexOf(value As String, startIndex As Integer, comparisonType As StringComparison) As Integer
    parameters:
    - id: value
      type: System.String
      description: The string to seek.
    - id: startIndex
      type: System.Int32
      description: The search starting position.
    - id: comparisonType
      type: System.StringComparison
      description: One of the enumeration values that specifies the rules for the search.
    return:
      type: System.Int32
      description: The zero-based index position of the *value* parameter if that string is found, or -1 if it is not. If *value* is @'System.String.Empty', the return value is *startIndex*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*startIndex* is less than 0 (zero) or greater than the length of this string.'
  - type: System.ArgumentException
    description: '*comparisonType* is not a valid @''System.StringComparison'' value.'
- uid: System.String.IndexOf(System.String,System.StringComparison)
  id: IndexOf(System.String,System.StringComparison)
  parent: System.String
  href: System.String.yml
  name: IndexOf(String, StringComparison)
  fullName: System.String.IndexOf(System.String, System.StringComparison)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2297
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index of the first occurrence of the specified string in the current @'System.String' object. A parameter specifies the type of search to use for the specified string.
  syntax:
    content: public int IndexOf(string value, StringComparison comparisonType)
    content.vb: Public Function IndexOf(value As String, comparisonType As StringComparison) As Integer
    parameters:
    - id: value
      type: System.String
      description: The string to seek.
    - id: comparisonType
      type: System.StringComparison
      description: One of the enumeration values that specifies the rules for the search.
    return:
      type: System.Int32
      description: The index position of the *value* parameter if that string is found, or -1 if it is not. If *value* is @'System.String.Empty', the return value is 0.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
  - type: System.ArgumentException
    description: '*comparisonType* is not a valid @''System.StringComparison'' value.'
- uid: System.String.IndexOfAny(System.Char[])
  id: IndexOfAny(System.Char[])
  parent: System.String
  href: System.String.yml
  name: IndexOfAny(Char[])
  name.vb: IndexOfAny(Char())
  fullName: System.String.IndexOfAny(System.Char[])
  fullName.vb: System.String.IndexOfAny(System.Char())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2244
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index of the first occurrence in this instance of any character in a specified array of Unicode characters.
  syntax:
    content: public int IndexOfAny(char[] anyOf)
    content.vb: Public Function IndexOfAny(anyOf As Char()) As Integer
    parameters:
    - id: anyOf
      type: System.Char[]
      description: A Unicode character array containing one or more characters to seek.
    return:
      type: System.Int32
      description: The zero-based index position of the first occurrence in this instance where any character in *anyOf* was found; -1 if no character in *anyOf* was found.
  exceptions:
  - type: System.ArgumentNullException
    description: '*anyOf* is null.'
- uid: System.String.IndexOfAny(System.Char[],System.Int32)
  id: IndexOfAny(System.Char[],System.Int32)
  parent: System.String
  href: System.String.yml
  name: IndexOfAny(Char[], Int32)
  name.vb: IndexOfAny(Char(), Int32)
  fullName: System.String.IndexOfAny(System.Char[], System.Int32)
  fullName.vb: System.String.IndexOfAny(System.Char(), System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2249
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index of the first occurrence in this instance of any character in a specified array of Unicode characters. The search starts at a specified character position.
  syntax:
    content: public int IndexOfAny(char[] anyOf, int startIndex)
    content.vb: Public Function IndexOfAny(anyOf As Char(), startIndex As Integer) As Integer
    parameters:
    - id: anyOf
      type: System.Char[]
      description: A Unicode character array containing one or more characters to seek.
    - id: startIndex
      type: System.Int32
      description: The search starting position.
    return:
      type: System.Int32
      description: The zero-based index position of the first occurrence in this instance where any character in *anyOf* was found; -1 if no character in *anyOf* was found.
  exceptions:
  - type: System.ArgumentNullException
    description: '*anyOf* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*startIndex* is negative.-or- *startIndex* is greater than the number of characters in this instance.'
- uid: System.String.IndexOfAny(System.Char[],System.Int32,System.Int32)
  id: IndexOfAny(System.Char[],System.Int32,System.Int32)
  parent: System.String
  href: System.String.yml
  name: IndexOfAny(Char[], Int32, Int32)
  name.vb: IndexOfAny(Char(), Int32, Int32)
  fullName: System.String.IndexOfAny(System.Char[], System.Int32, System.Int32)
  fullName.vb: System.String.IndexOfAny(System.Char(), System.Int32, System.Int32)
  type: Method
  source:
    path: mscorlib
    isExternal: true
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index of the first occurrence in this instance of any character in a specified array of Unicode characters. The search starts at a specified character position and examines a specified number of character positions.
  syntax:
    content: public int IndexOfAny(char[] anyOf, int startIndex, int count)
    content.vb: Public Function IndexOfAny(anyOf As Char(), startIndex As Integer, count As Integer) As Integer
    parameters:
    - id: anyOf
      type: System.Char[]
      description: A Unicode character array containing one or more characters to seek.
    - id: startIndex
      type: System.Int32
      description: The search starting position.
    - id: count
      type: System.Int32
      description: The number of character positions to examine.
    return:
      type: System.Int32
      description: The zero-based index position of the first occurrence in this instance where any character in *anyOf* was found; -1 if no character in *anyOf* was found.
  exceptions:
  - type: System.ArgumentNullException
    description: '*anyOf* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*count* or *startIndex* is negative.-or- *count* + *startIndex* is greater than the number of characters in this instance.'
- uid: System.String.Insert(System.Int32,System.String)
  id: Insert(System.Int32,System.String)
  parent: System.String
  href: System.String.yml
  name: Insert(Int32, String)
  fullName: System.String.Insert(System.Int32, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2781
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a new string in which a specified string is inserted at a specified index position in this instance.
  syntax:
    content: public string Insert(int startIndex, string value)
    content.vb: Public Function Insert(startIndex As Integer, value As String) As String
    parameters:
    - id: startIndex
      type: System.Int32
      description: The zero-based index position of the insertion.
    - id: value
      type: System.String
      description: The string to insert.
    return:
      type: System.String
      description: A new string that is equivalent to this instance, but with *value* inserted at position *startIndex*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*startIndex* is negative or greater than the length of this instance.'
- uid: System.String.IsNullOrEmpty(System.String)
  id: IsNullOrEmpty(System.String)
  parent: System.String
  href: System.String.yml
  name: IsNullOrEmpty(String)
  fullName: System.String.IsNullOrEmpty(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 753
  assemblies:
  - System.Runtime
  namespace: System
  summary: Indicates whether the specified string is null or an @'System.String.Empty' string.
  syntax:
    content: public static bool IsNullOrEmpty(string value)
    content.vb: Public Shared Function IsNullOrEmpty(value As String) As Boolean
    parameters:
    - id: value
      type: System.String
      description: The string to test.
    return:
      type: System.Boolean
      description: true if the *value* parameter is null or an empty string (""); otherwise, false.
- uid: System.String.IsNullOrWhiteSpace(System.String)
  id: IsNullOrWhiteSpace(System.String)
  parent: System.String
  href: System.String.yml
  name: IsNullOrWhiteSpace(String)
  fullName: System.String.IsNullOrWhiteSpace(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 758
  assemblies:
  - System.Runtime
  namespace: System
  summary: Indicates whether a specified string is null, empty, or consists only of white-space characters.
  syntax:
    content: public static bool IsNullOrWhiteSpace(string value)
    content.vb: Public Shared Function IsNullOrWhiteSpace(value As String) As Boolean
    parameters:
    - id: value
      type: System.String
      description: The string to test.
    return:
      type: System.Boolean
      description: true if the *value* parameter is null or @'System.String.Empty', or if *value* consists exclusively of white-space characters.
- uid: System.String.Join(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: Join(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.String
  href: System.String.yml
  name: Join(String, IEnumerable<String>)
  name.vb: Join(String, IEnumerable(Of String))
  fullName: System.String.Join(System.String, System.Collections.Generic.IEnumerable<System.String>)
  fullName.vb: System.String.Join(System.String, System.Collections.Generic.IEnumerable(Of System.String))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 154
  assemblies:
  - System.Runtime
  namespace: System
  summary: Concatenates the members of a constructed @'System.Collections.Generic.IEnumerable`1' collection of type @'System.String', using the specified separator between each member.
  syntax:
    content: public static string Join(string separator, IEnumerable<string> values)
    content.vb: Public Shared Function Join(separator As String, values As IEnumerable(Of String)) As String
    parameters:
    - id: separator
      type: System.String
      description: The string to use as a separator. *separator* is included in the returned string only if *values* has more than one element.
    - id: values
      type: System.Collections.Generic.IEnumerable{System.String}
      description: A collection that contains the strings to concatenate.
    return:
      type: System.String
      description: A string that consists of the members of *values* delimited by the *separator* string. If *values* has no members, the method returns @'System.String.Empty'.
  exceptions:
  - type: System.ArgumentNullException
    description: '*values* is null.'
- uid: System.String.Join(System.String,System.Object[])
  id: Join(System.String,System.Object[])
  parent: System.String
  href: System.String.yml
  name: Join(String, Object[])
  name.vb: Join(String, Object())
  fullName: System.String.Join(System.String, System.Object[])
  fullName.vb: System.String.Join(System.String, System.Object())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 85
  assemblies:
  - System.Runtime
  namespace: System
  summary: Concatenates the elements of an object array, using the specified separator between each element.
  syntax:
    content: public static string Join(string separator, params object[] values)
    content.vb: Public Shared Function Join(separator As String, ParamArray values As Object()) As String
    parameters:
    - id: separator
      type: System.String
      description: The string to use as a separator. *separator* is included in the returned string only if *values* has more than one element.
    - id: values
      type: System.Object[]
      description: An array that contains the elements to concatenate.
    return:
      type: System.String
      description: A string that consists of the elements of *values* delimited by the *separator* string. If *values* is an empty array, the method returns @'System.String.Empty'.
  exceptions:
  - type: System.ArgumentNullException
    description: '*values* is null.'
- uid: System.String.Join(System.String,System.String[])
  id: Join(System.String,System.String[])
  parent: System.String
  href: System.String.yml
  name: Join(String, String[])
  name.vb: Join(String, String())
  fullName: System.String.Join(System.String, System.String[])
  fullName.vb: System.String.Join(System.String, System.String())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 78
  assemblies:
  - System.Runtime
  namespace: System
  summary: Concatenates all the elements of a string array, using the specified separator between each element.
  syntax:
    content: public static string Join(string separator, params string[] value)
    content.vb: Public Shared Function Join(separator As String, ParamArray value As String()) As String
    parameters:
    - id: separator
      type: System.String
      description: The string to use as a separator. *separator* is included in the returned string only if *value* has more than one element.
    - id: value
      type: System.String[]
      description: An array that contains the elements to concatenate.
    return:
      type: System.String
      description: A string that consists of the elements in *value* delimited by the *separator* string. If *value* is an empty array, the method returns @'System.String.Empty'.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
- uid: System.String.Join(System.String,System.String[],System.Int32,System.Int32)
  id: Join(System.String,System.String[],System.Int32,System.Int32)
  parent: System.String
  href: System.String.yml
  name: Join(String, String[], Int32, Int32)
  name.vb: Join(String, String(), Int32, Int32)
  fullName: System.String.Join(System.String, System.String[], System.Int32, System.Int32)
  fullName.vb: System.String.Join(System.String, System.String(), System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 197
  assemblies:
  - System.Runtime
  namespace: System
  summary: Concatenates the specified elements of a string array, using the specified separator between each element.
  syntax:
    content: public static string Join(string separator, string[] value, int startIndex, int count)
    content.vb: Public Shared Function Join(separator As String, value As String(), startIndex As Integer, count As Integer) As String
    parameters:
    - id: separator
      type: System.String
      description: The string to use as a separator. *separator* is included in the returned string only if *value* has more than one element.
    - id: value
      type: System.String[]
      description: An array that contains the elements to concatenate.
    - id: startIndex
      type: System.Int32
      description: The first element in *value* to use.
    - id: count
      type: System.Int32
      description: The number of elements of *value* to use.
    return:
      type: System.String
      description: A string that consists of the strings in *value* delimited by the *separator* string. -or-@'System.String.Empty' if *count* is zero, *value* has no elements, or *separator* and all the elements of *value* are @'System.String.Empty'.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*startIndex* or *count* is less than 0.-or- *startIndex* plus *count* is greater than the number of elements in *value*.'
  - type: System.OutOfMemoryException
    description: Out of memory.
- uid: System.String.Join``1(System.String,System.Collections.Generic.IEnumerable{``0})
  id: Join``1(System.String,System.Collections.Generic.IEnumerable{``0})
  parent: System.String
  href: System.String.yml
  name: Join<T>(String, IEnumerable<T>)
  name.vb: Join(Of T)(String, IEnumerable(Of T))
  fullName: System.String.Join<T>(System.String, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: System.String.Join(Of T)(System.String, System.Collections.Generic.IEnumerable(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 115
  assemblies:
  - System.Runtime
  namespace: System
  summary: Concatenates the members of a collection, using the specified separator between each member.
  syntax:
    content: public static string Join<T>(string separator, IEnumerable<T> values)
    content.vb: Public Shared Function Join(Of T)(separator As String, values As IEnumerable(Of T)) As String
    parameters:
    - id: separator
      type: System.String
      description: The string to use as a separator. *separator* is included in the returned string only if *values* has more than one element.
    - id: values
      type: System.Collections.Generic.IEnumerable{{T}}
      description: A collection that contains the objects to concatenate.
    typeParameters:
    - id: T
    return:
      type: System.String
      description: A string that consists of the members of *values* delimited by the *separator* string. If *values* has no members, the method returns @'System.String.Empty'.
  exceptions:
  - type: System.ArgumentNullException
    description: '*values* is null.'
- uid: System.String.LastIndexOf(System.Char)
  id: LastIndexOf(System.Char)
  parent: System.String
  href: System.String.yml
  name: LastIndexOf(Char)
  fullName: System.String.LastIndexOf(System.Char)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2353
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index position of the last occurrence of a specified Unicode character within this instance.
  syntax:
    content: public int LastIndexOf(char value)
    content.vb: Public Function LastIndexOf(value As Char) As Integer
    parameters:
    - id: value
      type: System.Char
      description: The Unicode character to seek.
    return:
      type: System.Int32
      description: The zero-based index position of *value* if that character is found, or -1 if it is not.
- uid: System.String.LastIndexOf(System.Char,System.Int32)
  id: LastIndexOf(System.Char,System.Int32)
  parent: System.String
  href: System.String.yml
  name: LastIndexOf(Char, Int32)
  fullName: System.String.LastIndexOf(System.Char, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2358
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index position of the last occurrence of a specified Unicode character within this instance. The search starts at a specified character position and proceeds backward toward the beginning of the string.
  syntax:
    content: public int LastIndexOf(char value, int startIndex)
    content.vb: Public Function LastIndexOf(value As Char, startIndex As Integer) As Integer
    parameters:
    - id: value
      type: System.Char
      description: The Unicode character to seek.
    - id: startIndex
      type: System.Int32
      description: The starting position of the search. The search proceeds from *startIndex* toward the beginning of this instance.
    return:
      type: System.Int32
      description: The zero-based index position of *value* if that character is found, or -1 if it is not found or if the current instance equals @'System.String.Empty'.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The current instance does not equal @'System.String.Empty', and *startIndex* is less than zero or greater than or equal to the length of this instance.
- uid: System.String.LastIndexOf(System.Char,System.Int32,System.Int32)
  id: LastIndexOf(System.Char,System.Int32,System.Int32)
  parent: System.String
  href: System.String.yml
  name: LastIndexOf(Char, Int32, Int32)
  fullName: System.String.LastIndexOf(System.Char, System.Int32, System.Int32)
  type: Method
  source:
    path: mscorlib
    isExternal: true
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index position of the last occurrence of the specified Unicode character in a substring within this instance. The search starts at a specified character position and proceeds backward toward the beginning of the string for a specified number of character positions.
  syntax:
    content: public int LastIndexOf(char value, int startIndex, int count)
    content.vb: Public Function LastIndexOf(value As Char, startIndex As Integer, count As Integer) As Integer
    parameters:
    - id: value
      type: System.Char
      description: The Unicode character to seek.
    - id: startIndex
      type: System.Int32
      description: The starting position of the search. The search proceeds from *startIndex* toward the beginning of this instance.
    - id: count
      type: System.Int32
      description: The number of character positions to examine.
    return:
      type: System.Int32
      description: The zero-based index position of *value* if that character is found, or -1 if it is not found or if the current instance equals @'System.String.Empty'.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The current instance does not equal @'System.String.Empty', and *startIndex* is less than zero or greater than or equal to the length of this instance.-or-The current instance does not equal @'System.String.Empty', and *startIndex* - *count* + 1 is less than zero.
- uid: System.String.LastIndexOf(System.String)
  id: LastIndexOf(System.String)
  parent: System.String
  href: System.String.yml
  name: LastIndexOf(String)
  fullName: System.String.LastIndexOf(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2396
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index position of the last occurrence of a specified string within this instance.
  syntax:
    content: public int LastIndexOf(string value)
    content.vb: Public Function LastIndexOf(value As String) As Integer
    parameters:
    - id: value
      type: System.String
      description: The string to seek.
    return:
      type: System.Int32
      description: The zero-based starting index position of *value* if that string is found, or -1 if it is not. If *value* is @'System.String.Empty', the return value is the last index position in this instance.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
- uid: System.String.LastIndexOf(System.String,System.Int32)
  id: LastIndexOf(System.String,System.Int32)
  parent: System.String
  href: System.String.yml
  name: LastIndexOf(String, Int32)
  fullName: System.String.LastIndexOf(System.String, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2401
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index position of the last occurrence of a specified string within this instance. The search starts at a specified character position and proceeds backward toward the beginning of the string.
  syntax:
    content: public int LastIndexOf(string value, int startIndex)
    content.vb: Public Function LastIndexOf(value As String, startIndex As Integer) As Integer
    parameters:
    - id: value
      type: System.String
      description: The string to seek.
    - id: startIndex
      type: System.Int32
      description: The search starting position. The search proceeds from *startIndex* toward the beginning of this instance.
    return:
      type: System.Int32
      description: The zero-based starting index position of *value* if that string is found, or -1 if it is not found or if the current instance equals @'System.String.Empty'. If *value* is @'System.String.Empty', the return value is the smaller of *startIndex* and the last index position in this instance.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
  - type: System.ArgumentOutOfRangeException
    description: The current instance does not equal @'System.String.Empty', and *startIndex* is less than zero or greater than the length of the current instance. -or-The current instance equals @'System.String.Empty', and *startIndex* is less than -1 or greater than zero.
- uid: System.String.LastIndexOf(System.String,System.Int32,System.Int32)
  id: LastIndexOf(System.String,System.Int32,System.Int32)
  parent: System.String
  href: System.String.yml
  name: LastIndexOf(String, Int32, Int32)
  fullName: System.String.LastIndexOf(System.String, System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2406
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index position of the last occurrence of a specified string within this instance. The search starts at a specified character position and proceeds backward toward the beginning of the string for a specified number of character positions.
  syntax:
    content: public int LastIndexOf(string value, int startIndex, int count)
    content.vb: Public Function LastIndexOf(value As String, startIndex As Integer, count As Integer) As Integer
    parameters:
    - id: value
      type: System.String
      description: The string to seek.
    - id: startIndex
      type: System.Int32
      description: The search starting position. The search proceeds from *startIndex* toward the beginning of this instance.
    - id: count
      type: System.Int32
      description: The number of character positions to examine.
    return:
      type: System.Int32
      description: The zero-based starting index position of *value* if that string is found, or -1 if it is not found or if the current instance equals @'System.String.Empty'. If *value* is @'System.String.Empty', the return value is the smaller of *startIndex* and the last index position in this instance.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*count* is negative.-or-The current instance does not equal @''System.String.Empty'', and  *startIndex* is negative.-or- The current instance does not equal @''System.String.Empty'', and *startIndex* is greater than the length of this instance.-or-The current instance does not equal @''System.String.Empty'', and *startIndex* - *count* + 1 specifies a position that is not within this instance. -or-The current instance equals @''System.String.Empty'' and *start* is less than -1 or greater than zero. -or-The current instance equals @''System.String.Empty'' and *count* is greater than 1.'
- uid: System.String.LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)
  id: LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)
  parent: System.String
  href: System.String.yml
  name: LastIndexOf(String, Int32, Int32, StringComparison)
  fullName: System.String.LastIndexOf(System.String, System.Int32, System.Int32, System.StringComparison)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2426
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index position of the last occurrence of a specified string within this instance. The search starts at a specified character position and proceeds backward toward the beginning of the string for the specified number of character positions. A parameter specifies the type of comparison to perform when searching for the specified string.
  syntax:
    content: public int LastIndexOf(string value, int startIndex, int count, StringComparison comparisonType)
    content.vb: Public Function LastIndexOf(value As String, startIndex As Integer, count As Integer, comparisonType As StringComparison) As Integer
    parameters:
    - id: value
      type: System.String
      description: The string to seek.
    - id: startIndex
      type: System.Int32
      description: The search starting position. The search proceeds from *startIndex* toward the beginning of this instance.
    - id: count
      type: System.Int32
      description: The number of character positions to examine.
    - id: comparisonType
      type: System.StringComparison
      description: One of the enumeration values that specifies the rules for the search.
    return:
      type: System.Int32
      description: The zero-based starting index position of the *value* parameter if that string is found, or -1 if it is not found or if the current instance equals @'System.String.Empty'. If *value* is @'System.String.Empty', the return value is the smaller of *startIndex* and the last index position in this instance.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*count* is negative.-or-The current instance does not equal @''System.String.Empty'', and *startIndex* is negative.-or- The current instance does not equal @''System.String.Empty'', and *startIndex* is greater than the length of this instance.-or-The current instance does not equal @''System.String.Empty'', and *startIndex* + 1 - *count* specifies a position that is not within this instance. -or-The current instance equals @''System.String.Empty'' and *start* is less than -1 or greater than zero. -or-The current instance equals @''System.String.Empty'' and *count* is greater than 1.'
  - type: System.ArgumentException
    description: '*comparisonType* is not a valid @''System.StringComparison'' value.'
- uid: System.String.LastIndexOf(System.String,System.Int32,System.StringComparison)
  id: LastIndexOf(System.String,System.Int32,System.StringComparison)
  parent: System.String
  href: System.String.yml
  name: LastIndexOf(String, Int32, StringComparison)
  fullName: System.String.LastIndexOf(System.String, System.Int32, System.StringComparison)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2421
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index of the last occurrence of a specified string within the current @'System.String' object. The search starts at a specified character position and proceeds backward toward the beginning of the string. A parameter specifies the type of comparison to perform when searching for the specified string.
  syntax:
    content: public int LastIndexOf(string value, int startIndex, StringComparison comparisonType)
    content.vb: Public Function LastIndexOf(value As String, startIndex As Integer, comparisonType As StringComparison) As Integer
    parameters:
    - id: value
      type: System.String
      description: The string to seek.
    - id: startIndex
      type: System.Int32
      description: The search starting position. The search proceeds from *startIndex* toward the beginning of this instance.
    - id: comparisonType
      type: System.StringComparison
      description: One of the enumeration values that specifies the rules for the search.
    return:
      type: System.Int32
      description: The zero-based starting index position of the *value* parameter if that string is found, or -1 if it is not found or if the current instance equals @'System.String.Empty'. If *value* is @'System.String.Empty', the return value is the smaller of *startIndex* and the last index position in this instance.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
  - type: System.ArgumentOutOfRangeException
    description: The current instance does not equal @'System.String.Empty', and *startIndex* is less than zero or greater than the length of the current instance. -or-The current instance equals @'System.String.Empty', and *startIndex* is less than -1 or greater than zero.
  - type: System.ArgumentException
    description: '*comparisonType* is not a valid @''System.StringComparison'' value.'
- uid: System.String.LastIndexOf(System.String,System.StringComparison)
  id: LastIndexOf(System.String,System.StringComparison)
  parent: System.String
  href: System.String.yml
  name: LastIndexOf(String, StringComparison)
  fullName: System.String.LastIndexOf(System.String, System.StringComparison)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2416
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index of the last occurrence of a specified string within the current @'System.String' object. A parameter specifies the type of search to use for the specified string.
  syntax:
    content: public int LastIndexOf(string value, StringComparison comparisonType)
    content.vb: Public Function LastIndexOf(value As String, comparisonType As StringComparison) As Integer
    parameters:
    - id: value
      type: System.String
      description: The string to seek.
    - id: comparisonType
      type: System.StringComparison
      description: One of the enumeration values that specifies the rules for the search.
    return:
      type: System.Int32
      description: The zero-based starting index position of the *value* parameter if that string is found, or -1 if it is not. If *value* is @'System.String.Empty', the return value is the last index position in this instance.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
  - type: System.ArgumentException
    description: '*comparisonType* is not a valid @''System.StringComparison'' value.'
- uid: System.String.LastIndexOfAny(System.Char[])
  id: LastIndexOfAny(System.Char[])
  parent: System.String
  href: System.String.yml
  name: LastIndexOfAny(Char[])
  name.vb: LastIndexOfAny(Char())
  fullName: System.String.LastIndexOfAny(System.Char[])
  fullName.vb: System.String.LastIndexOfAny(System.Char())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2375
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index position of the last occurrence in this instance of one or more characters specified in a Unicode array.
  syntax:
    content: public int LastIndexOfAny(char[] anyOf)
    content.vb: Public Function LastIndexOfAny(anyOf As Char()) As Integer
    parameters:
    - id: anyOf
      type: System.Char[]
      description: A Unicode character array containing one or more characters to seek.
    return:
      type: System.Int32
      description: The index position of the last occurrence in this instance where any character in *anyOf* was found; -1 if no character in *anyOf* was found.
  exceptions:
  - type: System.ArgumentNullException
    description: '*anyOf* is null.'
- uid: System.String.LastIndexOfAny(System.Char[],System.Int32)
  id: LastIndexOfAny(System.Char[],System.Int32)
  parent: System.String
  href: System.String.yml
  name: LastIndexOfAny(Char[], Int32)
  name.vb: LastIndexOfAny(Char(), Int32)
  fullName: System.String.LastIndexOfAny(System.Char[], System.Int32)
  fullName.vb: System.String.LastIndexOfAny(System.Char(), System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2380
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index position of the last occurrence in this instance of one or more characters specified in a Unicode array. The search starts at a specified character position and proceeds backward toward the beginning of the string.
  syntax:
    content: public int LastIndexOfAny(char[] anyOf, int startIndex)
    content.vb: Public Function LastIndexOfAny(anyOf As Char(), startIndex As Integer) As Integer
    parameters:
    - id: anyOf
      type: System.Char[]
      description: A Unicode character array containing one or more characters to seek.
    - id: startIndex
      type: System.Int32
      description: The search starting position. The search proceeds from *startIndex* toward the beginning of this instance.
    return:
      type: System.Int32
      description: The index position of the last occurrence in this instance where any character in *anyOf* was found; -1 if no character in *anyOf* was found or if the current instance equals @'System.String.Empty'.
  exceptions:
  - type: System.ArgumentNullException
    description: '*anyOf* is null.'
  - type: System.ArgumentOutOfRangeException
    description: The current instance does not equal @'System.String.Empty', and *startIndex* specifies a position that is not within this instance.
- uid: System.String.LastIndexOfAny(System.Char[],System.Int32,System.Int32)
  id: LastIndexOfAny(System.Char[],System.Int32,System.Int32)
  parent: System.String
  href: System.String.yml
  name: LastIndexOfAny(Char[], Int32, Int32)
  name.vb: LastIndexOfAny(Char(), Int32, Int32)
  fullName: System.String.LastIndexOfAny(System.Char[], System.Int32, System.Int32)
  fullName.vb: System.String.LastIndexOfAny(System.Char(), System.Int32, System.Int32)
  type: Method
  source:
    path: mscorlib
    isExternal: true
  assemblies:
  - System.Runtime
  namespace: System
  summary: Reports the zero-based index position of the last occurrence in this instance of one or more characters specified in a Unicode array. The search starts at a specified character position and proceeds backward toward the beginning of the string for a specified number of character positions.
  syntax:
    content: public int LastIndexOfAny(char[] anyOf, int startIndex, int count)
    content.vb: Public Function LastIndexOfAny(anyOf As Char(), startIndex As Integer, count As Integer) As Integer
    parameters:
    - id: anyOf
      type: System.Char[]
      description: A Unicode character array containing one or more characters to seek.
    - id: startIndex
      type: System.Int32
      description: The search starting position. The search proceeds from *startIndex* toward the beginning of this instance.
    - id: count
      type: System.Int32
      description: The number of character positions to examine.
    return:
      type: System.Int32
      description: The index position of the last occurrence in this instance where any character in *anyOf* was found; -1 if no character in *anyOf* was found or if the current instance equals @'System.String.Empty'.
  exceptions:
  - type: System.ArgumentNullException
    description: '*anyOf* is null.'
  - type: System.ArgumentOutOfRangeException
    description: The current instance does not equal @'System.String.Empty', and *count* or *startIndex* is negative.-or- The current instance does not equal @'System.String.Empty', and *startIndex* minus *count* + 1 is less than zero.
- uid: System.String.op_Equality(System.String,System.String)
  id: op_Equality(System.String,System.String)
  parent: System.String
  href: System.String.yml
  name: Equality(String, String)
  fullName: System.String.Equality(System.String, System.String)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 668
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether two specified strings have the same value.
  syntax:
    content: public static bool operator ==(string a, string b)
    content.vb: Public Shared Operator =(a As String, b As String) As Boolean
    parameters:
    - id: a
      type: System.String
      description: The first string to compare, or null.
    - id: b
      type: System.String
      description: The second string to compare, or null.
    return:
      type: System.Boolean
      description: true if the value of *a* is the same as the value of *b*; otherwise, false.
- uid: System.String.op_Inequality(System.String,System.String)
  id: op_Inequality(System.String,System.String)
  parent: System.String
  href: System.String.yml
  name: Inequality(String, String)
  fullName: System.String.Inequality(System.String, System.String)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 672
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether two specified strings have different values.
  syntax:
    content: public static bool operator !=(string a, string b)
    content.vb: Public Shared Operator <>(a As String, b As String) As Boolean
    parameters:
    - id: a
      type: System.String
      description: The first string to compare, or null.
    - id: b
      type: System.String
      description: The second string to compare, or null.
    return:
      type: System.Boolean
      description: true if the value of *a* is different from the value of *b*; otherwise, false.
- uid: System.String.PadLeft(System.Int32)
  id: PadLeft(System.Int32)
  parent: System.String
  href: System.String.yml
  name: PadLeft(Int32)
  fullName: System.String.PadLeft(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2485
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a new string that right-aligns the characters in this instance by padding them with spaces on the left, for a specified total length.
  syntax:
    content: public string PadLeft(int totalWidth)
    content.vb: Public Function PadLeft(totalWidth As Integer) As String
    parameters:
    - id: totalWidth
      type: System.Int32
      description: The number of characters in the resulting string, equal to the number of original characters plus any additional padding characters.
    return:
      type: System.String
      description: A new string that is equivalent to this instance, but right-aligned and padded on the left with as many spaces as needed to create a length of *totalWidth*. However, if *totalWidth* is less than the length of this instance, the method returns a reference to the existing instance. If *totalWidth* is equal to the length of this instance, the method returns a new string that is identical to this instance.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*totalWidth* is less than zero.'
- uid: System.String.PadLeft(System.Int32,System.Char)
  id: PadLeft(System.Int32,System.Char)
  parent: System.String
  href: System.String.yml
  name: PadLeft(Int32, Char)
  fullName: System.String.PadLeft(System.Int32, System.Char)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2490
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total length.
  syntax:
    content: public string PadLeft(int totalWidth, char paddingChar)
    content.vb: Public Function PadLeft(totalWidth As Integer, paddingChar As Char) As String
    parameters:
    - id: totalWidth
      type: System.Int32
      description: The number of characters in the resulting string, equal to the number of original characters plus any additional padding characters.
    - id: paddingChar
      type: System.Char
      description: A Unicode padding character.
    return:
      type: System.String
      description: A new string that is equivalent to this instance, but right-aligned and padded on the left with as many *paddingChar* characters as needed to create a length of *totalWidth*. However, if *totalWidth* is less than the length of this instance, the method returns a reference to the existing instance. If *totalWidth* is equal to the length of this instance, the method returns a new string that is identical to this instance.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*totalWidth* is less than zero.'
- uid: System.String.PadRight(System.Int32)
  id: PadRight(System.Int32)
  parent: System.String
  href: System.String.yml
  name: PadRight(Int32)
  fullName: System.String.PadRight(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2495
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a new string that left-aligns the characters in this string by padding them with spaces on the right, for a specified total length.
  syntax:
    content: public string PadRight(int totalWidth)
    content.vb: Public Function PadRight(totalWidth As Integer) As String
    parameters:
    - id: totalWidth
      type: System.Int32
      description: The number of characters in the resulting string, equal to the number of original characters plus any additional padding characters.
    return:
      type: System.String
      description: A new string that is equivalent to this instance, but left-aligned and padded on the right with as many spaces as needed to create a length of *totalWidth*. However, if *totalWidth* is less than the length of this instance, the method returns a reference to the existing instance. If *totalWidth* is equal to the length of this instance, the method returns a new string that is identical to this instance.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*totalWidth* is less than zero.'
- uid: System.String.PadRight(System.Int32,System.Char)
  id: PadRight(System.Int32,System.Char)
  parent: System.String
  href: System.String.yml
  name: PadRight(Int32, Char)
  fullName: System.String.PadRight(System.Int32, System.Char)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2500
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a new string that left-aligns the characters in this string by padding them on the right with a specified Unicode character, for a specified total length.
  syntax:
    content: public string PadRight(int totalWidth, char paddingChar)
    content.vb: Public Function PadRight(totalWidth As Integer, paddingChar As Char) As String
    parameters:
    - id: totalWidth
      type: System.Int32
      description: The number of characters in the resulting string, equal to the number of original characters plus any additional padding characters.
    - id: paddingChar
      type: System.Char
      description: A Unicode padding character.
    return:
      type: System.String
      description: A new string that is equivalent to this instance, but left-aligned and padded on the right with as many *paddingChar* characters as needed to create a length of *totalWidth*.  However, if *totalWidth* is less than the length of this instance, the method returns a reference to the existing instance. If *totalWidth* is equal to the length of this instance, the method returns a new string that is identical to this instance.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*totalWidth* is less than zero.'
- uid: System.String.Remove(System.Int32)
  id: Remove(System.Int32)
  parent: System.String
  href: System.String.yml
  name: Remove(Int32)
  fullName: System.String.Remove(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2896
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a new string in which all the characters in the current instance, beginning at a specified position and continuing through the last position, have been deleted.
  syntax:
    content: public string Remove(int startIndex)
    content.vb: Public Function Remove(startIndex As Integer) As String
    parameters:
    - id: startIndex
      type: System.Int32
      description: The zero-based position to begin deleting characters.
    return:
      type: System.String
      description: A new string that is equivalent to this string except for the removed characters.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*startIndex* is less than zero.-or- *startIndex* specifies a position that is not within this string.'
- uid: System.String.Remove(System.Int32,System.Int32)
  id: Remove(System.Int32,System.Int32)
  parent: System.String
  href: System.String.yml
  name: Remove(Int32, Int32)
  fullName: System.String.Remove(System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2862
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a new string in which a specified number of characters in the current instance beginning at a specified position have been deleted.
  syntax:
    content: public string Remove(int startIndex, int count)
    content.vb: Public Function Remove(startIndex As Integer, count As Integer) As String
    parameters:
    - id: startIndex
      type: System.Int32
      description: The zero-based position to begin deleting characters.
    - id: count
      type: System.Int32
      description: The number of characters to delete.
    return:
      type: System.String
      description: A new string that is equivalent to this instance except for the removed characters.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: Either *startIndex* or *count* is less than zero.-or- *startIndex* plus *count* specify a position outside this instance.
- uid: System.String.Replace(System.Char,System.Char)
  id: Replace(System.Char,System.Char)
  parent: System.String
  href: System.String.yml
  name: Replace(Char, Char)
  fullName: System.String.Replace(System.Char, System.Char)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2822
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a new string in which all occurrences of a specified Unicode character in this instance are replaced with another specified Unicode character.
  syntax:
    content: public string Replace(char oldChar, char newChar)
    content.vb: Public Function Replace(oldChar As Char, newChar As Char) As String
    parameters:
    - id: oldChar
      type: System.Char
      description: The Unicode character to be replaced.
    - id: newChar
      type: System.Char
      description: The Unicode character to replace all occurrences of *oldChar*.
    return:
      type: System.String
      description: A string that is equivalent to this instance except that all instances of *oldChar* are replaced with *newChar*. If *oldChar* is not found in the current instance, the method returns the current instance unchanged.
- uid: System.String.Replace(System.String,System.String)
  id: Replace(System.String,System.String)
  parent: System.String
  href: System.String.yml
  name: Replace(String, String)
  fullName: System.String.Replace(System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2837
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a new string in which all occurrences of a specified string in the current instance are replaced with another specified string.
  syntax:
    content: public string Replace(string oldValue, string newValue)
    content.vb: Public Function Replace(oldValue As String, newValue As String) As String
    parameters:
    - id: oldValue
      type: System.String
      description: The string to be replaced.
    - id: newValue
      type: System.String
      description: The string to replace all occurrences of *oldValue*.
    return:
      type: System.String
      description: A string that is equivalent to the current string except that all instances of *oldValue* are replaced with *newValue*. If *oldValue* is not found in the current instance, the method returns the current instance unchanged.
  exceptions:
  - type: System.ArgumentNullException
    description: '*oldValue* is null.'
  - type: System.ArgumentException
    description: '*oldValue* is the empty string ("").'
- uid: System.String.Split(System.Char[])
  id: Split(System.Char[])
  parent: System.String
  href: System.String.yml
  name: Split(Char[])
  name.vb: Split(Char())
  fullName: System.String.Split(System.Char[])
  fullName.vb: System.String.Split(System.Char())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 932
  assemblies:
  - System.Runtime
  namespace: System
  summary: Splits a string into substrings that are based on the characters in an array.
  syntax:
    content: public string[] Split(params char[] separator)
    content.vb: Public Function Split(ParamArray separator As Char()) As String()
    parameters:
    - id: separator
      type: System.Char[]
      description: A character array that delimits the substrings in this string, an empty array that contains no delimiters, or null.
    return:
      type: System.String[]
      description: An array whose elements contain the substrings from this instance that are delimited by one or more characters in *separator*. For more information, see the Remarks section.
- uid: System.String.Split(System.Char[],System.Int32)
  id: Split(System.Char[],System.Int32)
  parent: System.String
  href: System.String.yml
  name: Split(Char[], Int32)
  name.vb: Split(Char(), Int32)
  fullName: System.String.Split(System.Char[], System.Int32)
  fullName.vb: System.String.Split(System.Char(), System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 948
  assemblies:
  - System.Runtime
  namespace: System
  summary: Splits a string into a maximum number of substrings based on the characters in an array. You also specify the maximum number of substrings to return.
  syntax:
    content: public string[] Split(char[] separator, int count)
    content.vb: Public Function Split(separator As Char(), count As Integer) As String()
    parameters:
    - id: separator
      type: System.Char[]
      description: A character array that delimits the substrings in this string, an empty array that contains no delimiters, or null.
    - id: count
      type: System.Int32
      description: The maximum number of substrings to return.
    return:
      type: System.String[]
      description: An array whose elements contain the substrings in this instance that are delimited by one or more characters in *separator*. For more information, see the Remarks section.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*count* is negative.'
- uid: System.String.Split(System.Char[],System.Int32,System.StringSplitOptions)
  id: Split(System.Char[],System.Int32,System.StringSplitOptions)
  parent: System.String
  href: System.String.yml
  name: Split(Char[], Int32, StringSplitOptions)
  name.vb: Split(Char(), Int32, StringSplitOptions)
  fullName: System.String.Split(System.Char[], System.Int32, System.StringSplitOptions)
  fullName.vb: System.String.Split(System.Char(), System.Int32, System.StringSplitOptions)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 959
  assemblies:
  - System.Runtime
  namespace: System
  summary: Splits a string into a maximum number of substrings based on the characters in an array.
  syntax:
    content: public string[] Split(char[] separator, int count, StringSplitOptions options)
    content.vb: Public Function Split(separator As Char(), count As Integer, options As StringSplitOptions) As String()
    parameters:
    - id: separator
      type: System.Char[]
      description: A character array that delimits the substrings in this string, an empty array that contains no delimiters, or null.
    - id: count
      type: System.Int32
      description: The maximum number of substrings to return.
    - id: options
      type: System.StringSplitOptions
      description: '@''System.StringSplitOptions.RemoveEmptyEntries'' to omit empty array elements from the array returned; or @''System.StringSplitOptions.None'' to include empty array elements in the array returned.'
    return:
      type: System.String[]
      description: An array whose elements contain the substrings in this string that are delimited by one or more characters in *separator*. For more information, see the Remarks section.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*count* is negative.'
  - type: System.ArgumentException
    description: '*options* is not one of the @''System.StringSplitOptions'' values.'
- uid: System.String.Split(System.Char[],System.StringSplitOptions)
  id: Split(System.Char[],System.StringSplitOptions)
  parent: System.String
  href: System.String.yml
  name: Split(Char[], StringSplitOptions)
  name.vb: Split(Char(), StringSplitOptions)
  fullName: System.String.Split(System.Char[], System.StringSplitOptions)
  fullName.vb: System.String.Split(System.Char(), System.StringSplitOptions)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 953
  assemblies:
  - System.Runtime
  namespace: System
  summary: Splits a string into substrings based on the characters in an array. You can specify whether the substrings include empty array elements.
  syntax:
    content: public string[] Split(char[] separator, StringSplitOptions options)
    content.vb: Public Function Split(separator As Char(), options As StringSplitOptions) As String()
    parameters:
    - id: separator
      type: System.Char[]
      description: A character array that delimits the substrings in this string, an empty array that contains no delimiters, or null.
    - id: options
      type: System.StringSplitOptions
      description: '@''System.StringSplitOptions.RemoveEmptyEntries'' to omit empty array elements from the array returned; or @''System.StringSplitOptions.None'' to include empty array elements in the array returned.'
    return:
      type: System.String[]
      description: An array whose elements contain the substrings in this string that are delimited by one or more characters in *separator*. For more information, see the Remarks section.
  exceptions:
  - type: System.ArgumentException
    description: '*options* is not one of the @''System.StringSplitOptions'' values.'
- uid: System.String.Split(System.String[],System.Int32,System.StringSplitOptions)
  id: Split(System.String[],System.Int32,System.StringSplitOptions)
  parent: System.String
  href: System.String.yml
  name: Split(String[], Int32, StringSplitOptions)
  name.vb: Split(String(), Int32, StringSplitOptions)
  fullName: System.String.Split(System.String[], System.Int32, System.StringSplitOptions)
  fullName.vb: System.String.Split(System.String(), System.Int32, System.StringSplitOptions)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 1020
  assemblies:
  - System.Runtime
  namespace: System
  summary: Splits a string into a maximum number of substrings based on the strings in an array. You can specify whether the substrings include empty array elements.
  syntax:
    content: public string[] Split(string[] separator, int count, StringSplitOptions options)
    content.vb: Public Function Split(separator As String(), count As Integer, options As StringSplitOptions) As String()
    parameters:
    - id: separator
      type: System.String[]
      description: A string array that delimits the substrings in this string, an empty array that contains no delimiters, or null.
    - id: count
      type: System.Int32
      description: The maximum number of substrings to return.
    - id: options
      type: System.StringSplitOptions
      description: '@''System.StringSplitOptions.RemoveEmptyEntries'' to omit empty array elements from the array returned; or @''System.StringSplitOptions.None'' to include empty array elements in the array returned.'
    return:
      type: System.String[]
      description: An array whose elements contain the substrings in this string that are delimited by one or more strings in *separator*. For more information, see the Remarks section.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*count* is negative.'
  - type: System.ArgumentException
    description: '*options* is not one of the @''System.StringSplitOptions'' values.'
- uid: System.String.Split(System.String[],System.StringSplitOptions)
  id: Split(System.String[],System.StringSplitOptions)
  parent: System.String
  href: System.String.yml
  name: Split(String[], StringSplitOptions)
  name.vb: Split(String(), StringSplitOptions)
  fullName: System.String.Split(System.String[], System.StringSplitOptions)
  fullName.vb: System.String.Split(System.String(), System.StringSplitOptions)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 1014
  assemblies:
  - System.Runtime
  namespace: System
  summary: Splits a string into substrings based on the strings in an array. You can specify whether the substrings include empty array elements.
  syntax:
    content: public string[] Split(string[] separator, StringSplitOptions options)
    content.vb: Public Function Split(separator As String(), options As StringSplitOptions) As String()
    parameters:
    - id: separator
      type: System.String[]
      description: A string array that delimits the substrings in this string, an empty array that contains no delimiters, or null.
    - id: options
      type: System.StringSplitOptions
      description: '@''System.StringSplitOptions.RemoveEmptyEntries'' to omit empty array elements from the array returned; or @''System.StringSplitOptions.None'' to include empty array elements in the array returned.'
    return:
      type: System.String[]
      description: An array whose elements contain the substrings in this string that are delimited by one or more strings in *separator*. For more information, see the Remarks section.
  exceptions:
  - type: System.ArgumentException
    description: '*options* is not one of the @''System.StringSplitOptions'' values.'
- uid: System.String.StartsWith(System.String)
  id: StartsWith(System.String)
  parent: System.String
  href: System.String.yml
  name: StartsWith(String)
  fullName: System.String.StartsWith(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2512
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether the beginning of this string instance matches the specified string.
  syntax:
    content: public bool StartsWith(string value)
    content.vb: Public Function StartsWith(value As String) As Boolean
    parameters:
    - id: value
      type: System.String
      description: The string to compare.
    return:
      type: System.Boolean
      description: true if *value* matches the beginning of this string; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
- uid: System.String.StartsWith(System.String,System.StringComparison)
  id: StartsWith(System.String,System.StringComparison)
  parent: System.String
  href: System.String.yml
  name: StartsWith(String, StringComparison)
  fullName: System.String.StartsWith(System.String, System.StringComparison)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2521
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether the beginning of this string instance matches the specified string when compared using the specified comparison option.
  syntax:
    content: public bool StartsWith(string value, StringComparison comparisonType)
    content.vb: Public Function StartsWith(value As String, comparisonType As StringComparison) As Boolean
    parameters:
    - id: value
      type: System.String
      description: The string to compare.
    - id: comparisonType
      type: System.StringComparison
      description: One of the enumeration values that determines how this string and *value* are compared.
    return:
      type: System.Boolean
      description: true if this instance begins with *value*; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
  - type: System.ArgumentException
    description: '*comparisonType* is not a @''System.StringComparison'' value.'
- uid: System.String.Substring(System.Int32)
  id: Substring(System.Int32)
  parent: System.String
  href: System.String.yml
  name: Substring(Int32)
  fullName: System.String.Substring(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 1237
  assemblies:
  - System.Runtime
  namespace: System
  summary: Retrieves a substring from this instance. The substring starts at a specified character position and continues to the end of the string.
  syntax:
    content: public string Substring(int startIndex)
    content.vb: Public Function Substring(startIndex As Integer) As String
    parameters:
    - id: startIndex
      type: System.Int32
      description: The zero-based starting character position of a substring in this instance.
    return:
      type: System.String
      description: A string that is equivalent to the substring that begins at *startIndex* in this instance, or @'System.String.Empty' if *startIndex* is equal to the length of this instance.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*startIndex* is less than zero or greater than the length of this instance.'
- uid: System.String.Substring(System.Int32,System.Int32)
  id: Substring(System.Int32,System.Int32)
  parent: System.String
  href: System.String.yml
  name: Substring(Int32, Int32)
  fullName: System.String.Substring(System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 1243
  assemblies:
  - System.Runtime
  namespace: System
  summary: Retrieves a substring from this instance. The substring starts at a specified character position and has a specified length.
  syntax:
    content: public string Substring(int startIndex, int length)
    content.vb: Public Function Substring(startIndex As Integer, length As Integer) As String
    parameters:
    - id: startIndex
      type: System.Int32
      description: The zero-based starting character position of a substring in this instance.
    - id: length
      type: System.Int32
      description: The number of characters in the substring.
    return:
      type: System.String
      description: A string that is equivalent to the substring of length *length* that begins at *startIndex* in this instance, or @'System.String.Empty' if *startIndex* is equal to the length of this instance and *length* is zero.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*startIndex* plus *length* indicates a position not within this instance.-or- *startIndex* or *length* is less than zero.'
- uid: System.String.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  parent: System.String
  href: System.String.yml
  name: IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: System.String.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3428
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns an enumerator that iterates through the current @'System.String' object.
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
      description: An enumerator that can be used to iterate through the current string.
- uid: System.String.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  parent: System.String
  href: System.String.yml
  name: IComparable.CompareTo(Object)
  name.vb: System.IComparable.CompareTo(Object)
  fullName: System.String.System.IComparable.CompareTo(System.Object)
  type: Method
  source:
    remote: &o1
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1593
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: int IComparable.CompareTo(object value)
    content.vb: Function System.IComparable.CompareTo(value As Object) As Integer Implements IComparable.CompareTo
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
- uid: System.String.System#IConvertible#GetTypeCode
  id: System#IConvertible#GetTypeCode
  parent: System.String
  href: System.String.yml
  name: IConvertible.GetTypeCode()
  name.vb: System.IConvertible.GetTypeCode()
  fullName: System.String.System.IConvertible.GetTypeCode()
  type: Method
  source:
    remote: *o1
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1594
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: TypeCode IConvertible.GetTypeCode()
    content.vb: Function System.IConvertible.GetTypeCode As TypeCode Implements IConvertible.GetTypeCode
    return:
      type: System.TypeCode
- uid: System.String.System#IConvertible#ToBoolean(System.IFormatProvider)
  id: System#IConvertible#ToBoolean(System.IFormatProvider)
  parent: System.String
  href: System.String.yml
  name: IConvertible.ToBoolean(IFormatProvider)
  name.vb: System.IConvertible.ToBoolean(IFormatProvider)
  fullName: System.String.System.IConvertible.ToBoolean(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3318
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see @'System.IConvertible.ToBoolean(System.IFormatProvider)'.
  syntax:
    content: bool IConvertible.ToBoolean(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToBoolean(provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: This parameter is ignored.
    return:
      type: System.Boolean
      description: true if the value of the current string is @'System.Boolean.TrueString'; false if the value of the current string is @'System.Boolean.FalseString'.
  exceptions:
  - type: System.FormatException
    description: The value of the current string is not @'System.Boolean.TrueString' or @'System.Boolean.FalseString'.
- uid: System.String.System#IConvertible#ToByte(System.IFormatProvider)
  id: System#IConvertible#ToByte(System.IFormatProvider)
  parent: System.String
  href: System.String.yml
  name: IConvertible.ToByte(IFormatProvider)
  name.vb: System.IConvertible.ToByte(IFormatProvider)
  fullName: System.String.System.IConvertible.ToByte(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3333
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see @'System.IConvertible.ToByte(System.IFormatProvider)'.
  syntax:
    content: byte IConvertible.ToByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToByte(provider As IFormatProvider) As Byte Implements IConvertible.ToByte
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that provides culture-specific formatting information.
    return:
      type: System.Byte
      description: The converted value of the current @'System.String' object.
  exceptions:
  - type: System.FormatException
    description: The value of the current @'System.String' object cannot be parsed.
  - type: System.OverflowException
    description: The value of the current @'System.String' object is a number greater than @'System.Byte.MaxValue' or less than @'System.Byte.MinValue'.
- uid: System.String.System#IConvertible#ToChar(System.IFormatProvider)
  id: System#IConvertible#ToChar(System.IFormatProvider)
  parent: System.String
  href: System.String.yml
  name: IConvertible.ToChar(IFormatProvider)
  name.vb: System.IConvertible.ToChar(IFormatProvider)
  fullName: System.String.System.IConvertible.ToChar(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3323
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see @'System.IConvertible.ToChar(System.IFormatProvider)'.
  syntax:
    content: char IConvertible.ToChar(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToChar(provider As IFormatProvider) As Char Implements IConvertible.ToChar
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that provides culture-specific formatting information.
    return:
      type: System.Char
      description: The character at index 0 in the current @'System.String' object.
- uid: System.String.System#IConvertible#ToDateTime(System.IFormatProvider)
  id: System#IConvertible#ToDateTime(System.IFormatProvider)
  parent: System.String
  href: System.String.yml
  name: IConvertible.ToDateTime(IFormatProvider)
  name.vb: System.IConvertible.ToDateTime(IFormatProvider)
  fullName: System.String.System.IConvertible.ToDateTime(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3383
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see @'System.IConvertible.ToDateTime(System.IFormatProvider)'.
  syntax:
    content: DateTime IConvertible.ToDateTime(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDateTime(provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that provides culture-specific formatting information.
    return:
      type: System.DateTime
      description: The converted value of the current @'System.String' object.
- uid: System.String.System#IConvertible#ToDecimal(System.IFormatProvider)
  id: System#IConvertible#ToDecimal(System.IFormatProvider)
  parent: System.String
  href: System.String.yml
  name: IConvertible.ToDecimal(IFormatProvider)
  name.vb: System.IConvertible.ToDecimal(IFormatProvider)
  fullName: System.String.System.IConvertible.ToDecimal(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3378
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see @'System.IConvertible.ToDecimal(System.IFormatProvider)'.
  syntax:
    content: decimal IConvertible.ToDecimal(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDecimal(provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that provides culture-specific formatting information.
    return:
      type: System.Decimal
      description: The converted value of the current @'System.String' object.
  exceptions:
  - type: System.FormatException
    description: The value of the current @'System.String' object cannot be parsed.
  - type: System.OverflowException
    description: The value of the current @'System.String' object is a number less than @'System.Decimal.MinValue' or than @'System.Decimal.MaxValue' greater.
- uid: System.String.System#IConvertible#ToDouble(System.IFormatProvider)
  id: System#IConvertible#ToDouble(System.IFormatProvider)
  parent: System.String
  href: System.String.yml
  name: IConvertible.ToDouble(IFormatProvider)
  name.vb: System.IConvertible.ToDouble(IFormatProvider)
  fullName: System.String.System.IConvertible.ToDouble(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3373
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see @'System.IConvertible.ToDouble(System.IFormatProvider)'.
  syntax:
    content: double IConvertible.ToDouble(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDouble(provider As IFormatProvider) As Double Implements IConvertible.ToDouble
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that provides culture-specific formatting information.
    return:
      type: System.Double
      description: The converted value of the current @'System.String' object.
  exceptions:
  - type: System.FormatException
    description: The value of the current @'System.String' object cannot be parsed.
  - type: System.OverflowException
    description: The value of the current @'System.String' object is a number less than @'System.Double.MinValue' or greater than @'System.Double.MaxValue'.
- uid: System.String.System#IConvertible#ToInt16(System.IFormatProvider)
  id: System#IConvertible#ToInt16(System.IFormatProvider)
  parent: System.String
  href: System.String.yml
  name: IConvertible.ToInt16(IFormatProvider)
  name.vb: System.IConvertible.ToInt16(IFormatProvider)
  fullName: System.String.System.IConvertible.ToInt16(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3338
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see @'System.IConvertible.ToInt16(System.IFormatProvider)'.
  syntax:
    content: short IConvertible.ToInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt16(provider As IFormatProvider) As Short Implements IConvertible.ToInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that provides culture-specific formatting information.
    return:
      type: System.Int16
      description: The converted value of the current @'System.String' object.
  exceptions:
  - type: System.FormatException
    description: The value of the current @'System.String' object cannot be parsed.
  - type: System.OverflowException
    description: The value of the current @'System.String' object is a number greater than @'System.Int16.MaxValue' or less than @'System.Int16.MinValue'.
- uid: System.String.System#IConvertible#ToInt32(System.IFormatProvider)
  id: System#IConvertible#ToInt32(System.IFormatProvider)
  parent: System.String
  href: System.String.yml
  name: IConvertible.ToInt32(IFormatProvider)
  name.vb: System.IConvertible.ToInt32(IFormatProvider)
  fullName: System.String.System.IConvertible.ToInt32(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3348
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see @'System.IConvertible.ToInt32(System.IFormatProvider)'.
  syntax:
    content: int IConvertible.ToInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt32(provider As IFormatProvider) As Integer Implements IConvertible.ToInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that provides culture-specific formatting information.
    return:
      type: System.Int32
      description: The converted value of the current @'System.String' object.
- uid: System.String.System#IConvertible#ToInt64(System.IFormatProvider)
  id: System#IConvertible#ToInt64(System.IFormatProvider)
  parent: System.String
  href: System.String.yml
  name: IConvertible.ToInt64(IFormatProvider)
  name.vb: System.IConvertible.ToInt64(IFormatProvider)
  fullName: System.String.System.IConvertible.ToInt64(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3358
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see @'System.IConvertible.ToInt64(System.IFormatProvider)'.
  syntax:
    content: long IConvertible.ToInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt64(provider As IFormatProvider) As Long Implements IConvertible.ToInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that provides culture-specific formatting information.
    return:
      type: System.Int64
      description: The converted value of the current @'System.String' object.
- uid: System.String.System#IConvertible#ToSByte(System.IFormatProvider)
  id: System#IConvertible#ToSByte(System.IFormatProvider)
  parent: System.String
  href: System.String.yml
  name: IConvertible.ToSByte(IFormatProvider)
  name.vb: System.IConvertible.ToSByte(IFormatProvider)
  fullName: System.String.System.IConvertible.ToSByte(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3328
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see @'System.IConvertible.ToSByte(System.IFormatProvider)'.
  syntax:
    content: sbyte IConvertible.ToSByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSByte(provider As IFormatProvider) As SByte Implements IConvertible.ToSByte
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that provides culture-specific formatting information.
    return:
      type: System.SByte
      description: The converted value of the current @'System.String' object.
  exceptions:
  - type: System.FormatException
    description: The value of the current @'System.String' object cannot be parsed.
  - type: System.OverflowException
    description: The value of the current @'System.String' object is a number greater than @'System.SByte.MaxValue' or less than @'System.SByte.MinValue'.
- uid: System.String.System#IConvertible#ToSingle(System.IFormatProvider)
  id: System#IConvertible#ToSingle(System.IFormatProvider)
  parent: System.String
  href: System.String.yml
  name: IConvertible.ToSingle(IFormatProvider)
  name.vb: System.IConvertible.ToSingle(IFormatProvider)
  fullName: System.String.System.IConvertible.ToSingle(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3368
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see @'System.IConvertible.ToSingle(System.IFormatProvider)'.
  syntax:
    content: float IConvertible.ToSingle(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSingle(provider As IFormatProvider) As Single Implements IConvertible.ToSingle
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that provides culture-specific formatting information.
    return:
      type: System.Single
      description: The converted value of the current @'System.String' object.
- uid: System.String.System#IConvertible#ToString(System.IFormatProvider)
  id: System#IConvertible#ToString(System.IFormatProvider)
  parent: System.String
  href: System.String.yml
  name: IConvertible.ToString(IFormatProvider)
  name.vb: System.IConvertible.ToString(IFormatProvider)
  fullName: System.String.System.IConvertible.ToString(System.IFormatProvider)
  type: Method
  source:
    remote: *o1
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1606
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: string IConvertible.ToString(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToString(provider As IFormatProvider) As String Implements IConvertible.ToString
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.String
- uid: System.String.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  id: System#IConvertible#ToType(System.Type,System.IFormatProvider)
  parent: System.String
  href: System.String.yml
  name: IConvertible.ToType(Type, IFormatProvider)
  name.vb: System.IConvertible.ToType(Type, IFormatProvider)
  fullName: System.String.System.IConvertible.ToType(System.Type, System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3388
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see @'System.IConvertible.ToType(System.Type,System.IFormatProvider)'.
  syntax:
    content: object IConvertible.ToType(Type type, IFormatProvider provider)
    content.vb: Function System.IConvertible.ToType(type As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType
    parameters:
    - id: type
      type: System.Type
      description: The type of the returned object.
    - id: provider
      type: System.IFormatProvider
      description: An object that provides culture-specific formatting information.
    return:
      type: System.Object
      description: The converted value of the current @'System.String' object.
  exceptions:
  - type: System.ArgumentNullException
    description: '*type* is null.'
  - type: System.InvalidCastException
    description: The value of the current @'System.String' object cannot be converted to the type specified by the *type* parameter.
- uid: System.String.System#IConvertible#ToUInt16(System.IFormatProvider)
  id: System#IConvertible#ToUInt16(System.IFormatProvider)
  parent: System.String
  href: System.String.yml
  name: IConvertible.ToUInt16(IFormatProvider)
  name.vb: System.IConvertible.ToUInt16(IFormatProvider)
  fullName: System.String.System.IConvertible.ToUInt16(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3343
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see @'System.IConvertible.ToUInt16(System.IFormatProvider)'.
  syntax:
    content: ushort IConvertible.ToUInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt16(provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that provides culture-specific formatting information.
    return:
      type: System.UInt16
      description: The converted value of the current @'System.String' object.
  exceptions:
  - type: System.FormatException
    description: The value of the current @'System.String' object cannot be parsed.
  - type: System.OverflowException
    description: The value of the current @'System.String' object is a number greater than @'System.UInt16.MaxValue' or less than @'System.UInt16.MinValue'.
- uid: System.String.System#IConvertible#ToUInt32(System.IFormatProvider)
  id: System#IConvertible#ToUInt32(System.IFormatProvider)
  parent: System.String
  href: System.String.yml
  name: IConvertible.ToUInt32(IFormatProvider)
  name.vb: System.IConvertible.ToUInt32(IFormatProvider)
  fullName: System.String.System.IConvertible.ToUInt32(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3353
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see @'System.IConvertible.ToUInt32(System.IFormatProvider)'.
  syntax:
    content: uint IConvertible.ToUInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt32(provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that provides culture-specific formatting information.
    return:
      type: System.UInt32
      description: The converted value of the current @'System.String' object.
  exceptions:
  - type: System.FormatException
    description: The value of the current @'System.String' object cannot be parsed.
  - type: System.OverflowException
    description: The value of the current @'System.String' object is a number greater @'System.UInt32.MaxValue' or less than @'System.UInt32.MinValue'
- uid: System.String.System#IConvertible#ToUInt64(System.IFormatProvider)
  id: System#IConvertible#ToUInt64(System.IFormatProvider)
  parent: System.String
  href: System.String.yml
  name: IConvertible.ToUInt64(IFormatProvider)
  name.vb: System.IConvertible.ToUInt64(IFormatProvider)
  fullName: System.String.System.IConvertible.ToUInt64(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 3363
  assemblies:
  - System.Runtime
  namespace: System
  summary: For a description of this member, see @'System.IConvertible.ToUInt64(System.IFormatProvider)'.
  syntax:
    content: ulong IConvertible.ToUInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt64(provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that provides culture-specific formatting information.
    return:
      type: System.UInt64
      description: The converted value of the current @'System.String' object.
- uid: System.String.ToCharArray
  id: ToCharArray
  parent: System.String
  href: System.String.yml
  name: ToCharArray()
  fullName: System.String.ToCharArray()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 716
  assemblies:
  - System.Runtime
  namespace: System
  summary: Copies the characters in this instance to a Unicode character array.
  syntax:
    content: public char[] ToCharArray()
    content.vb: Public Function ToCharArray As Char()
    return:
      type: System.Char[]
      description: A Unicode character array whose elements are the individual characters of this instance. If this instance is an empty string, the returned array is empty and has a zero length.
- uid: System.String.ToCharArray(System.Int32,System.Int32)
  id: ToCharArray(System.Int32,System.Int32)
  parent: System.String
  href: System.String.yml
  name: ToCharArray(Int32, Int32)
  fullName: System.String.ToCharArray(System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 732
  assemblies:
  - System.Runtime
  namespace: System
  summary: Copies the characters in a specified substring in this instance to a Unicode character array.
  syntax:
    content: public char[] ToCharArray(int startIndex, int length)
    content.vb: Public Function ToCharArray(startIndex As Integer, length As Integer) As Char()
    parameters:
    - id: startIndex
      type: System.Int32
      description: The starting position of a substring in this instance.
    - id: length
      type: System.Int32
      description: The length of the substring in this instance.
    return:
      type: System.Char[]
      description: A Unicode character array whose elements are the *length* number of characters in this instance starting from character position *startIndex*.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*startIndex* or *length* is less than zero.-or- *startIndex* plus *length* is greater than the length of this instance.'
- uid: System.String.ToLower
  id: ToLower
  parent: System.String
  href: System.String.yml
  name: ToLower()
  fullName: System.String.ToLower()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2600
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a copy of this string converted to lowercase.
  syntax:
    content: public string ToLower()
    content.vb: Public Function ToLower As String
    return:
      type: System.String
      description: A string in lowercase.
- uid: System.String.ToLowerInvariant
  id: ToLowerInvariant
  parent: System.String
  href: System.String.yml
  name: ToLowerInvariant()
  fullName: System.String.ToLowerInvariant()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2619
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a copy of this @'System.String' object converted to lowercase using the casing rules of the invariant culture.
  syntax:
    content: public string ToLowerInvariant()
    content.vb: Public Function ToLowerInvariant As String
    return:
      type: System.String
      description: The lowercase equivalent of the current string.
- uid: System.String.ToString
  id: ToString
  parent: System.String
  href: System.String.yml
  name: ToString()
  fullName: System.String.ToString()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2657
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns this instance of @'System.String'; no actual conversion is performed.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: The current string.
  overridden: System.Object.ToString
- uid: System.String.ToUpper
  id: ToUpper
  parent: System.String
  href: System.String.yml
  name: ToUpper()
  fullName: System.String.ToUpper()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2627
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a copy of this string converted to uppercase.
  syntax:
    content: public string ToUpper()
    content.vb: Public Function ToUpper As String
    return:
      type: System.String
      description: The uppercase equivalent of the current string.
- uid: System.String.ToUpperInvariant
  id: ToUpperInvariant
  parent: System.String
  href: System.String.yml
  name: ToUpperInvariant()
  fullName: System.String.ToUpperInvariant()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2648
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a copy of this @'System.String' object converted to uppercase using the casing rules of the invariant culture.
  syntax:
    content: public string ToUpperInvariant()
    content.vb: Public Function ToUpperInvariant As String
    return:
      type: System.String
      description: The uppercase equivalent of the current string.
- uid: System.String.Trim
  id: Trim
  parent: System.String
  href: System.String.yml
  name: Trim()
  fullName: System.String.Trim()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 2696
  assemblies:
  - System.Runtime
  namespace: System
  summary: Removes all leading and trailing white-space characters from the current @'System.String' object.
  syntax:
    content: public string Trim()
    content.vb: Public Function Trim As String
    return:
      type: System.String
      description: The string that remains after all white-space characters are removed from the start and end of the current string. If no characters can be trimmed from the current instance, the method returns the current instance unchanged.
- uid: System.String.Trim(System.Char[])
  id: Trim(System.Char[])
  parent: System.String
  href: System.String.yml
  name: Trim(Char[])
  name.vb: Trim(Char())
  fullName: System.String.Trim(System.Char[])
  fullName.vb: System.String.Trim(System.Char())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 1292
  assemblies:
  - System.Runtime
  namespace: System
  summary: Removes all leading and trailing occurrences of a set of characters specified in an array from the current @'System.String' object.
  syntax:
    content: public string Trim(params char[] trimChars)
    content.vb: Public Function Trim(ParamArray trimChars As Char()) As String
    parameters:
    - id: trimChars
      type: System.Char[]
      description: An array of Unicode characters to remove, or null.
    return:
      type: System.String
      description: The string that remains after all occurrences of the characters in the *trimChars* parameter are removed from the start and end of the current string. If *trimChars* is null or an empty array, white-space characters are removed instead. If no characters can be trimmed from the current instance, the method returns the current instance unchanged.
- uid: System.String.TrimEnd(System.Char[])
  id: TrimEnd(System.Char[])
  parent: System.String
  href: System.String.yml
  name: TrimEnd(Char[])
  name.vb: TrimEnd(Char())
  fullName: System.String.TrimEnd(System.Char[])
  fullName.vb: System.String.TrimEnd(System.Char())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 1310
  assemblies:
  - System.Runtime
  namespace: System
  summary: Removes all trailing occurrences of a set of characters specified in an array from the current @'System.String' object.
  syntax:
    content: public string TrimEnd(params char[] trimChars)
    content.vb: Public Function TrimEnd(ParamArray trimChars As Char()) As String
    parameters:
    - id: trimChars
      type: System.Char[]
      description: An array of Unicode characters to remove, or null.
    return:
      type: System.String
      description: The string that remains after all occurrences of the characters in the *trimChars* parameter are removed from the end of the current string. If *trimChars* is null or an empty array, Unicode white-space characters are removed instead. If no characters can be trimmed from the current instance, the method returns the current instance unchanged.
- uid: System.String.TrimStart(System.Char[])
  id: TrimStart(System.Char[])
  parent: System.String
  href: System.String.yml
  name: TrimStart(Char[])
  name.vb: TrimStart(Char())
  fullName: System.String.TrimStart(System.Char[])
  fullName.vb: System.String.TrimStart(System.Char())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/String.cs
    startLine: 1301
  assemblies:
  - System.Runtime
  namespace: System
  summary: Removes all leading occurrences of a set of characters specified in an array from the current @'System.String' object.
  syntax:
    content: public string TrimStart(params char[] trimChars)
    content.vb: Public Function TrimStart(ParamArray trimChars As Char()) As String
    parameters:
    - id: trimChars
      type: System.Char[]
      description: An array of Unicode characters to remove, or null.
    return:
      type: System.String
      description: The string that remains after all occurrences of characters in the *trimChars* parameter are removed from the start of the current string. If *trimChars* is null or an empty array, white-space characters are removed instead.
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Char*
  isExternal: true
  name: Char*
  fullName: System.Char*
  spec.csharp:
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: '*'
    fullName: '*'
  spec.vb:
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: '*'
    fullName: '*'
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System.Char
  parent: System
  isExternal: false
  href: System.Char.yml
  name: Char
  fullName: System.Char
  type: Struct
- uid: System.Char[]
  isExternal: true
  name: Char[]
  name.vb: Char()
  fullName: System.Char[]
  fullName.vb: System.Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
  type: Class
- uid: System.StringComparison
  parent: System
  isExternal: false
  href: System.StringComparison.yml
  name: StringComparison
  fullName: System.StringComparison
  type: Enum
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Collections.Generic.IEnumerable`1.yml
  name: IEnumerable<String>
  name.vb: IEnumerable(Of String)
  fullName: System.Collections.Generic.IEnumerable<System.String>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.IEnumerable`1.yml
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  type: Interface
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
  type: Namespace
- uid: System.Object[]
  isExternal: true
  name: Object[]
  name.vb: Object()
  fullName: System.Object[]
  fullName.vb: System.Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.String[]
  isExternal: true
  name: String[]
  name.vb: String()
  fullName: System.String[]
  fullName.vb: System.String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Collections.Generic.IEnumerable`1.yml
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  href: System.IFormatProvider.yml
  name: IFormatProvider
  fullName: System.IFormatProvider
  type: Interface
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.StringSplitOptions
  parent: System
  isExternal: false
  href: System.StringSplitOptions.yml
  name: StringSplitOptions
  fullName: System.StringSplitOptions
  type: Enum
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  href: System.Collections.IEnumerator.yml
  name: IEnumerator
  fullName: System.Collections.IEnumerator
  type: Interface
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
  type: Namespace
- uid: System.TypeCode
  parent: System
  isExternal: false
  href: System.TypeCode.yml
  name: TypeCode
  fullName: System.TypeCode
  type: Enum
- uid: System.Byte
  parent: System
  isExternal: false
  href: System.Byte.yml
  name: Byte
  fullName: System.Byte
  type: Struct
- uid: System.DateTime
  parent: System
  isExternal: false
  href: System.DateTime.yml
  name: DateTime
  fullName: System.DateTime
  type: Struct
- uid: System.Decimal
  parent: System
  isExternal: false
  href: System.Decimal.yml
  name: Decimal
  fullName: System.Decimal
  type: Struct
- uid: System.Double
  parent: System
  isExternal: false
  href: System.Double.yml
  name: Double
  fullName: System.Double
  type: Struct
- uid: System.Int16
  parent: System
  isExternal: false
  href: System.Int16.yml
  name: Int16
  fullName: System.Int16
  type: Struct
- uid: System.Int64
  parent: System
  isExternal: false
  href: System.Int64.yml
  name: Int64
  fullName: System.Int64
  type: Struct
- uid: System.SByte
  parent: System
  isExternal: false
  href: System.SByte.yml
  name: SByte
  fullName: System.SByte
  type: Struct
- uid: System.Single
  parent: System
  isExternal: false
  href: System.Single.yml
  name: Single
  fullName: System.Single
  type: Struct
- uid: System.Type
  parent: System
  isExternal: false
  href: System.Type.yml
  name: Type
  fullName: System.Type
  type: Class
- uid: System.UInt16
  parent: System
  isExternal: false
  href: System.UInt16.yml
  name: UInt16
  fullName: System.UInt16
  type: Struct
- uid: System.UInt32
  parent: System
  isExternal: false
  href: System.UInt32.yml
  name: UInt32
  fullName: System.UInt32
  type: Struct
- uid: System.UInt64
  parent: System
  isExternal: false
  href: System.UInt64.yml
  name: UInt64
  fullName: System.UInt64
  type: Struct
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  type: Class
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  type: Class
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  type: Class
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.IndexOutOfRangeException
  isExternal: false
  href: System.IndexOutOfRangeException.yml
  name: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
  type: Class
  summary: The exception that is thrown when an attempt is made to access an element of an array or collection with an index that is outside its bounds.
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  href: System.NotSupportedException.yml
  name: NotSupportedException
  fullName: System.NotSupportedException
  type: Class
  summary: The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.
- uid: System.OutOfMemoryException
  isExternal: false
  href: System.OutOfMemoryException.yml
  name: OutOfMemoryException
  fullName: System.OutOfMemoryException
  type: Class
  summary: The exception that is thrown when there is not enough memory to continue the execution of a program.
- uid: System.FormatException
  parent: System
  isExternal: false
  href: System.FormatException.yml
  name: FormatException
  fullName: System.FormatException
  type: Class
  summary: The exception that is thrown when the format of an argument is invalid, or when a composite format string is not well formed.
- uid: System.OverflowException
  isExternal: false
  href: System.OverflowException.yml
  name: OverflowException
  fullName: System.OverflowException
  type: Class
  summary: The exception that is thrown when an arithmetic, casting, or conversion operation in a checked context results in an overflow.
- uid: System.InvalidCastException
  isExternal: false
  href: System.InvalidCastException.yml
  name: InvalidCastException
  fullName: System.InvalidCastException
  type: Class
  summary: The exception that is thrown for invalid casting or explicit conversion.
