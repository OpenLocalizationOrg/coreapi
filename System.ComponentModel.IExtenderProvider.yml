items:
- uid: System.ComponentModel.IExtenderProvider
  commentId: T:System.ComponentModel.IExtenderProvider
  id: IExtenderProvider
  parent: System.ComponentModel
  children:
  - System.ComponentModel.IExtenderProvider.CanExtend(System.Object)
  langs:
  - csharp
  - vb
  name: IExtenderProvider
  fullName: System.ComponentModel.IExtenderProvider
  type: Interface
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/IExtenderProvider.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IExtenderProvider
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/IExtenderProvider.cs
    startLine: 12
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Defines the interface for extending properties to other components in a container.</p>\n"
  example:
  - "\n<p>The following code example demonstrates how to implement the <xref href=\"System.ComponentModel.IExtenderProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. This example is part of a larger example discussed in How to: Implement a HelpLabel Extender Provider.</p>System.Windows.Forms.HelpLabel#1"
  syntax:
    content: public interface IExtenderProvider
    content.vb: Public Interface IExtenderProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  nameWithType: IExtenderProvider
- uid: System.ComponentModel.IExtenderProvider.CanExtend(System.Object)
  commentId: M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)
  id: CanExtend(System.Object)
  parent: System.ComponentModel.IExtenderProvider
  langs:
  - csharp
  - vb
  name: CanExtend(Object)
  fullName: System.ComponentModel.IExtenderProvider.CanExtend(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/IExtenderProvider.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanExtend
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/IExtenderProvider.cs
    startLine: 21
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Specifies whether this object can provide its extender properties to the specified object.</p>\n"
  example:
  - "\n<p>The following code example demonstrates how to implement the <xref href=\"System.ComponentModel.IExtenderProvider.CanExtend(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> property. This example is part of a larger example discussed in How to: Implement a HelpLabel Extender Provider.</p>System.Windows.Forms.HelpLabel#1"
  syntax:
    content: bool CanExtend(object extendee)
    content.vb: Function CanExtend(extendee As Object) As Boolean
    parameters:
    - id: extendee
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> to receive the extender properties. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if this object can provide extender properties to the specified object; otherwise, <strong>false</strong>.</p>\n"
  nameWithType: IExtenderProvider.CanExtend(Object)
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
  nameWithType: System.ComponentModel
  commentId: N:System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
