items:
- uid: System.ComponentModel.MergablePropertyAttribute
  commentId: T:System.ComponentModel.MergablePropertyAttribute
  id: MergablePropertyAttribute
  parent: System.ComponentModel
  children:
  - System.ComponentModel.MergablePropertyAttribute.#ctor(System.Boolean)
  - System.ComponentModel.MergablePropertyAttribute.AllowMerge
  - System.ComponentModel.MergablePropertyAttribute.Default
  - System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)
  - System.ComponentModel.MergablePropertyAttribute.GetHashCode
  - System.ComponentModel.MergablePropertyAttribute.No
  - System.ComponentModel.MergablePropertyAttribute.Yes
  langs:
  - csharp
  - vb
  name: MergablePropertyAttribute
  fullName: System.ComponentModel.MergablePropertyAttribute
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/MergablePropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MergablePropertyAttribute
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/MergablePropertyAttribute.cs
    startLine: 11
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Specifies that this property can be combined with properties belonging to other objects in a Properties window.</p>\n"
  remarks: "\n<p>Properties that are marked with the <xref href=\"System.ComponentModel.MergablePropertyAttribute\" data-throw-if-not-resolved=\"false\"></xref> set to <strong>true</strong> can be combined with properties belonging to other objects in a Properties window. Properties that are marked with the <xref href=\"System.ComponentModel.MergablePropertyAttribute\" data-throw-if-not-resolved=\"false\"></xref> set to <strong>false</strong> must be displayed separately. The default is <strong>true</strong>.</p>\n<p>When you mark a property with the <xref href=\"System.ComponentModel.MergablePropertyAttribute\" data-throw-if-not-resolved=\"false\"></xref> set to <strong>true</strong>, the value of this attribute is set to the constant member <xref href=\"System.ComponentModel.MergablePropertyAttribute.Yes\" data-throw-if-not-resolved=\"false\"></xref>. For a property marked with the <xref href=\"System.ComponentModel.MergablePropertyAttribute\" data-throw-if-not-resolved=\"false\"></xref> property set to <strong>false</strong>, the value is <xref href=\"System.ComponentModel.MergablePropertyAttribute.No\" data-throw-if-not-resolved=\"false\"></xref>. Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref href=\"System.ComponentModel.MergablePropertyAttribute.Yes\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.ComponentModel.MergablePropertyAttribute.No\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>For more information, see Extending Metadata Using Attributes.</p>\n"
  example:
  - "\n<p>The following example marks a property as appropriate to merge.</p>Classic MergablePropertyAttribute Example#1<p>The next example shows how to check the value of the <xref href=\"System.ComponentModel.MergablePropertyAttribute\" data-throw-if-not-resolved=\"false\"></xref> for <code>MyProperty</code>. First the code gets a <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> with all the properties for the object. Next it indexes into the <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> to get <code>MyProperty</code>. Then it returns the attributes for this property and saves them in the attributes variable.</p><p>The example presents two different ways of checking the value of the <xref href=\"System.ComponentModel.MergablePropertyAttribute\" data-throw-if-not-resolved=\"false\"></xref>. In the second code fragment, the example calls the <xref href=\"System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method with a <strong>static</strong> value. In the last code fragment, the example uses the <xref href=\"System.ComponentModel.MergablePropertyAttribute.AllowMerge\" data-throw-if-not-resolved=\"false\"></xref> property to check the value.</p>Classic MergablePropertyAttribute Example#2<p>If you marked a class with the <xref href=\"System.ComponentModel.MergablePropertyAttribute\" data-throw-if-not-resolved=\"false\"></xref>, use the following code to check the value.</p>Classic MergablePropertyAttribute Example#3"
  syntax:
    content: 'public sealed class MergablePropertyAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class MergablePropertyAttribute
          Inherits Attribute
  seealso:
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.AttributeCollection
    commentId: T:System.ComponentModel.AttributeCollection
  - type: System.ComponentModel.PropertyDescriptorCollection
    commentId: T:System.ComponentModel.PropertyDescriptorCollection
  - type: System.Attribute
    commentId: T:System.Attribute
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.ComponentModel.MergablePropertyAttribute.Default
  commentId: F:System.ComponentModel.MergablePropertyAttribute.Default
  id: Default
  parent: System.ComponentModel.MergablePropertyAttribute
  langs:
  - csharp
  - vb
  name: Default
  fullName: System.ComponentModel.MergablePropertyAttribute.Default
  type: Field
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/MergablePropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Default
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/MergablePropertyAttribute.cs
    startLine: 37
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Specifies the default value, which is <xref href=\"System.ComponentModel.MergablePropertyAttribute.Yes\" data-throw-if-not-resolved=\"false\"></xref>, that is a property can be combined with properties belonging to other objects in a Properties window. This <strong>static</strong> field is read-only.</p>\n"
  remarks: "\n<p>When you mark a property with this value, this attribute is set to the constant member <xref href=\"System.ComponentModel.MergablePropertyAttribute.No\" data-throw-if-not-resolved=\"false\"></xref>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref href=\"System.ComponentModel.MergablePropertyAttribute.No\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static readonly MergablePropertyAttribute Default
    content.vb: Public Shared ReadOnly Default As MergablePropertyAttribute
    return:
      type: System.ComponentModel.MergablePropertyAttribute
  seealso:
  - type: System.ComponentModel.MergablePropertyAttribute
    commentId: T:System.ComponentModel.MergablePropertyAttribute
  - type: System.ComponentModel.MergablePropertyAttribute.Yes
    commentId: F:System.ComponentModel.MergablePropertyAttribute.Yes
  - type: System.ComponentModel.MergablePropertyAttribute.No
    commentId: F:System.ComponentModel.MergablePropertyAttribute.No
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ComponentModel.MergablePropertyAttribute.No
  commentId: F:System.ComponentModel.MergablePropertyAttribute.No
  id: No
  parent: System.ComponentModel.MergablePropertyAttribute
  langs:
  - csharp
  - vb
  name: No
  fullName: System.ComponentModel.MergablePropertyAttribute.No
  type: Field
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/MergablePropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: No
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/MergablePropertyAttribute.cs
    startLine: 29
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Specifies that a property cannot be combined with properties belonging to other objects in a Properties window. This <strong>static</strong> field is read-only.</p>\n"
  remarks: "\n<p>When you mark a property with the <xref href=\"System.ComponentModel.MergablePropertyAttribute\" data-throw-if-not-resolved=\"false\"></xref> set to <strong>false</strong>, the value of this attribute is set to the constant member <xref href=\"System.ComponentModel.MergablePropertyAttribute.No\" data-throw-if-not-resolved=\"false\"></xref>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref href=\"System.ComponentModel.MergablePropertyAttribute.No\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static readonly MergablePropertyAttribute No
    content.vb: Public Shared ReadOnly No As MergablePropertyAttribute
    return:
      type: System.ComponentModel.MergablePropertyAttribute
  seealso:
  - type: System.ComponentModel.MergablePropertyAttribute
    commentId: T:System.ComponentModel.MergablePropertyAttribute
  - type: System.ComponentModel.MergablePropertyAttribute.Yes
    commentId: F:System.ComponentModel.MergablePropertyAttribute.Yes
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ComponentModel.MergablePropertyAttribute.Yes
  commentId: F:System.ComponentModel.MergablePropertyAttribute.Yes
  id: Yes
  parent: System.ComponentModel.MergablePropertyAttribute
  langs:
  - csharp
  - vb
  name: Yes
  fullName: System.ComponentModel.MergablePropertyAttribute.Yes
  type: Field
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/MergablePropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Yes
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/MergablePropertyAttribute.cs
    startLine: 20
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Specifies that a property can be combined with properties belonging to other objects in a Properties window. This <strong>static</strong> field is read-only.</p>\n"
  remarks: "\n<p>This field is the default setting for this attribute.</p>\n<p>When you mark a property with the <xref href=\"System.ComponentModel.MergablePropertyAttribute\" data-throw-if-not-resolved=\"false\"></xref> set to <strong>true</strong>, the value of this attribute is set to the constant member <xref href=\"System.ComponentModel.MergablePropertyAttribute.Yes\" data-throw-if-not-resolved=\"false\"></xref>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref href=\"System.ComponentModel.MergablePropertyAttribute.Yes\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static readonly MergablePropertyAttribute Yes
    content.vb: Public Shared ReadOnly Yes As MergablePropertyAttribute
    return:
      type: System.ComponentModel.MergablePropertyAttribute
  seealso:
  - type: System.ComponentModel.MergablePropertyAttribute
    commentId: T:System.ComponentModel.MergablePropertyAttribute
  - type: System.ComponentModel.MergablePropertyAttribute.No
    commentId: F:System.ComponentModel.MergablePropertyAttribute.No
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ComponentModel.MergablePropertyAttribute.#ctor(System.Boolean)
  commentId: M:System.ComponentModel.MergablePropertyAttribute.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ComponentModel.MergablePropertyAttribute
  langs:
  - csharp
  - vb
  name: MergablePropertyAttribute(Boolean)
  fullName: System.ComponentModel.MergablePropertyAttribute.MergablePropertyAttribute(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/MergablePropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/MergablePropertyAttribute.cs
    startLine: 45
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.MergablePropertyAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example:
  - "\n<p>The following example marks a property as appropriate to merge. This code creates a new <xref href=\"System.ComponentModel.MergablePropertyAttribute\" data-throw-if-not-resolved=\"false\"></xref>, sets its value to <xref href=\"System.ComponentModel.MergablePropertyAttribute.Yes\" data-throw-if-not-resolved=\"false\"></xref>, and binds it to the property.</p>Classic MergablePropertyAttribute.MergablePropertyAttribute Example#1"
  syntax:
    content: public MergablePropertyAttribute(bool allowMerge)
    content.vb: Public Sub New(allowMerge As Boolean)
    parameters:
    - id: allowMerge
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if this property can be combined with properties belonging to other objects in a Properties window; otherwise, <strong>false</strong>. </p>\n"
  seealso:
  - type: System.ComponentModel.MergablePropertyAttribute
    commentId: T:System.ComponentModel.MergablePropertyAttribute
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.MergablePropertyAttribute.AllowMerge
  commentId: P:System.ComponentModel.MergablePropertyAttribute.AllowMerge
  id: AllowMerge
  parent: System.ComponentModel.MergablePropertyAttribute
  langs:
  - csharp
  - vb
  name: AllowMerge
  fullName: System.ComponentModel.MergablePropertyAttribute.AllowMerge
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/MergablePropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AllowMerge
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/MergablePropertyAttribute.cs
    startLine: 57
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Gets a value indicating whether this property can be combined with properties belonging to other objects in a Properties window.</p>\n"
  example:
  - "\n<p>The following example checks to see whether <code>MyProperty</code> is appropriate to merge. First the code gets the attributes for <code>MyProperty</code> by: </p>\n<ul><li>\n<p>Retrieving a <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> with all the properties for the object.</p>\n</li><li>\n<p>Indexing into the <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> to get <code>MyProperty</code>.</p>\n</li><li>\n<p>Saving the attributes for this property in the attributes variable.</p>\n</li></ul>\n<p>Then the code sets <code>myAttribute</code> to the value of the <xref href=\"System.ComponentModel.MergablePropertyAttribute\" data-throw-if-not-resolved=\"false\"></xref> in the <xref href=\"System.ComponentModel.AttributeCollection\" data-throw-if-not-resolved=\"false\"></xref> and checks whether the property is appropriate to merge.</p>Classic MergablePropertyAttribute.AllowMerge Example#1"
  syntax:
    content: public bool AllowMerge { get; }
    content.vb: Public ReadOnly Property AllowMerge As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if this property can be combined with properties belonging to other objects in a Properties window; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.ComponentModel.MergablePropertyAttribute
    commentId: T:System.ComponentModel.MergablePropertyAttribute
  - type: System.Attribute
    commentId: T:System.Attribute
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.AttributeCollection
    commentId: T:System.ComponentModel.AttributeCollection
  - type: System.ComponentModel.PropertyDescriptorCollection
    commentId: T:System.ComponentModel.PropertyDescriptorCollection
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)
  commentId: M:System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.MergablePropertyAttribute
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/MergablePropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/MergablePropertyAttribute.cs
    startLine: 62
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Indicates whether this instance and a specified object are equal.</p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>Another object to compare to. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>obj</em> is equal to this instance; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.MergablePropertyAttribute.GetHashCode
  commentId: M:System.ComponentModel.MergablePropertyAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.MergablePropertyAttribute
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.ComponentModel.MergablePropertyAttribute.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/MergablePropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/MergablePropertyAttribute.cs
    startLine: 78
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Returns the hash code for this instance.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>A hash code for the current <xref href=\"System.ComponentModel.MergablePropertyAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.ComponentModel.MergablePropertyAttribute
  parent: System.ComponentModel
  isExternal: false
  name: MergablePropertyAttribute
  fullName: System.ComponentModel.MergablePropertyAttribute
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
