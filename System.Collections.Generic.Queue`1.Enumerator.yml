items:
- uid: System.Collections.Generic.Queue`1.Enumerator
  id: Queue`1.Enumerator
  parent: System.Collections.Generic
  children:
  - System.Collections.Generic.Queue`1.Enumerator.Current
  - System.Collections.Generic.Queue`1.Enumerator.Dispose
  - System.Collections.Generic.Queue`1.Enumerator.MoveNext
  href: System.Collections.Generic.Queue`1.Enumerator.yml
  name: Queue<T>.Enumerator
  name.vb: Queue(Of T).Enumerator
  fullName: System.Collections.Generic.Queue<T>.Enumerator
  fullName.vb: System.Collections.Generic.Queue(Of T).Enumerator
  type: Struct
  source:
    remote: &o0
      path: src/System.Collections/src/System/Collections/Generic/Queue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 365
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Enumerates the elements of a @'System.Collections.Generic.Queue`1'.
  syntax:
    content: 'public struct Enumerator : IEnumerator<T>, IEnumerator, IDisposable'
    content.vb: Public Structure Enumerator Implements IEnumerator(Of T), IEnumerator, IDisposable
  implements:
  - System.Collections.Generic.IEnumerator{{T}}
  - System.Collections.IEnumerator
  - System.IDisposable
- uid: System.Collections.Generic.Queue`1.Enumerator.Current
  id: Current
  parent: System.Collections.Generic.Queue`1.Enumerator
  href: System.Collections.Generic.Queue`1.Enumerator.yml
  name: Current
  fullName: System.Collections.Generic.Queue<T>.Enumerator.Current
  fullName.vb: System.Collections.Generic.Queue(Of T).Enumerator.Current
  type: Property
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 411
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Gets the element at the current position of the enumerator.
  syntax:
    content: public T Current { get; }
    content.vb: Public ReadOnly Property Current As T
    parameters: []
    return:
      type: '{T}'
      description: The element in the @'System.Collections.Generic.Queue`1' at the current position of the enumerator.
  exceptions:
  - type: System.InvalidOperationException
    description: The enumerator is positioned before the first element of the collection or after the last element.
- uid: System.Collections.Generic.Queue`1.Enumerator.Dispose
  id: Dispose
  parent: System.Collections.Generic.Queue`1.Enumerator
  href: System.Collections.Generic.Queue`1.Enumerator.yml
  name: Dispose()
  fullName: System.Collections.Generic.Queue<T>.Enumerator.Dispose()
  fullName.vb: System.Collections.Generic.Queue(Of T).Enumerator.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 383
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Releases all resources used by the @'System.Collections.Generic.Queue`1.Enumerator'.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
- uid: System.Collections.Generic.Queue`1.Enumerator.MoveNext
  id: MoveNext
  parent: System.Collections.Generic.Queue`1.Enumerator
  href: System.Collections.Generic.Queue`1.Enumerator.yml
  name: MoveNext()
  fullName: System.Collections.Generic.Queue<T>.Enumerator.MoveNext()
  fullName.vb: System.Collections.Generic.Queue(Of T).Enumerator.MoveNext()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 390
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Advances the enumerator to the next element of the @'System.Collections.Generic.Queue`1'.
  syntax:
    content: public bool MoveNext()
    content.vb: Public Function MoveNext As Boolean
    return:
      type: System.Boolean
      description: true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
  exceptions:
  - type: System.InvalidOperationException
    description: The collection was modified after the enumerator was created.
references:
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  href: System.InvalidOperationException.yml
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  summary: The exception that is thrown when a method call is invalid for the object's current state.
