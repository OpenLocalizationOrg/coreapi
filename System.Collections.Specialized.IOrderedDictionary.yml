items:
- uid: System.Collections.Specialized.IOrderedDictionary
  id: IOrderedDictionary
  parent: System.Collections.Specialized
  children:
  - System.Collections.Specialized.IOrderedDictionary.GetEnumerator
  - System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)
  - System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)
  - System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)
  href: System.Collections.Specialized.IOrderedDictionary.yml
  name: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
  type: Interface
  source:
    remote: &o0
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/IOrderedDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/IOrderedDictionary.cs
    startLine: 15
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Represents an indexed collection of key/value pairs.
  syntax:
    content: 'public interface IOrderedDictionary : ICollection, IDictionary, IEnumerable'
    content.vb: Public Interface IOrderedDictionary Inherits ICollection, IDictionary, IEnumerable
- uid: System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Specialized.IOrderedDictionary
  href: System.Collections.Specialized.IOrderedDictionary.yml
  name: Item[Int32]
  name.vb: Item(Int32)
  fullName: System.Collections.Specialized.IOrderedDictionary.Item[System.Int32]
  fullName.vb: System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/IOrderedDictionary.cs
    startLine: 21
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Gets or sets the element at the specified index.
  syntax:
    content: object this[int index] { get; set; }
    content.vb: Property Item(index As Integer) As Object
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to get or set.
    return:
      type: System.Object
      description: The element at the specified index.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*index* is less than 0.-or- *index* is equal to or greater than @''System.Collections.ICollection.Count''.'
- uid: System.Collections.Specialized.IOrderedDictionary.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Specialized.IOrderedDictionary
  href: System.Collections.Specialized.IOrderedDictionary.yml
  name: GetEnumerator()
  fullName: System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/IOrderedDictionary.cs
    startLine: 24
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Returns an enumerator that iterates through the @'System.Collections.Specialized.IOrderedDictionary' collection.
  syntax:
    content: IDictionaryEnumerator GetEnumerator()
    content.vb: Function GetEnumerator As IDictionaryEnumerator
    return:
      type: System.Collections.IDictionaryEnumerator
      description: An @'System.Collections.IDictionaryEnumerator' for the entire @'System.Collections.Specialized.IOrderedDictionary' collection.
- uid: System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)
  id: Insert(System.Int32,System.Object,System.Object)
  parent: System.Collections.Specialized.IOrderedDictionary
  href: System.Collections.Specialized.IOrderedDictionary.yml
  name: Insert(Int32, Object, Object)
  fullName: System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32, System.Object, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/IOrderedDictionary.cs
    startLine: 30
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Inserts a key/value pair into the collection at the specified index.
  syntax:
    content: void Insert(int index, object key, object value)
    content.vb: Sub Insert(index As Integer, key As Object, value As Object)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which the key/value pair should be inserted.
    - id: key
      type: System.Object
      description: The object to use as the key of the element to add.
    - id: value
      type: System.Object
      description: The object to use as the value of the element to add.  The value can be null.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*index* is less than 0.-or-*index* is greater than @''System.Collections.ICollection.Count''.'
  - type: System.ArgumentNullException
    description: '*key* is null.'
  - type: System.ArgumentException
    description: An element with the same key already exists in the @'System.Collections.Specialized.IOrderedDictionary' collection.
  - type: System.NotSupportedException
    description: The @'System.Collections.Specialized.IOrderedDictionary' collection is read-only.-or-The @'System.Collections.Specialized.IOrderedDictionary' collection has a fixed size.
- uid: System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Collections.Specialized.IOrderedDictionary
  href: System.Collections.Specialized.IOrderedDictionary.yml
  name: RemoveAt(Int32)
  fullName: System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/IOrderedDictionary.cs
    startLine: 35
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Removes the element at the specified index.
  syntax:
    content: void RemoveAt(int index)
    content.vb: Sub RemoveAt(index As Integer)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to remove.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*index* is less than 0.-or- *index* is equal to or greater than @''System.Collections.ICollection.Count''.'
  - type: System.NotSupportedException
    description: The @'System.Collections.Specialized.IOrderedDictionary' collection is read-only.-or- The @'System.Collections.Specialized.IOrderedDictionary' collection has a fixed size.
references:
- uid: System.Collections.Specialized
  isExternal: false
  name: System.Collections.Specialized
  fullName: System.Collections.Specialized
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: false
  href: System.Collections.IDictionaryEnumerator.yml
  name: Collections.IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  href: System.NotSupportedException.yml
  name: NotSupportedException
  fullName: System.NotSupportedException
  summary: The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.
