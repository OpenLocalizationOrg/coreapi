items:
- uid: System.Collections.Queue
  id: Queue
  parent: System.Collections
  children:
  - System.Collections.Queue.#ctor
  - System.Collections.Queue.#ctor(System.Collections.ICollection)
  - System.Collections.Queue.#ctor(System.Int32)
  - System.Collections.Queue.#ctor(System.Int32,System.Single)
  - System.Collections.Queue.Clear
  - System.Collections.Queue.Clone
  - System.Collections.Queue.Contains(System.Object)
  - System.Collections.Queue.CopyTo(System.Array,System.Int32)
  - System.Collections.Queue.Count
  - System.Collections.Queue.Dequeue
  - System.Collections.Queue.Enqueue(System.Object)
  - System.Collections.Queue.GetEnumerator
  - System.Collections.Queue.IsSynchronized
  - System.Collections.Queue.Peek
  - System.Collections.Queue.Synchronized(System.Collections.Queue)
  - System.Collections.Queue.SyncRoot
  - System.Collections.Queue.ToArray
  - System.Collections.Queue.TrimToSize
  href: System.Collections.Queue.yml
  name: Queue
  fullName: System.Collections.Queue
  type: Class
  source:
    remote: &o0
      path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 20
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Represents a first-in, first-out collection of objects.
  syntax:
    content: 'public class Queue : ICollection, IEnumerable'
    content.vb: Public Class Queue Implements ICollection, IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Collections.Queue.#ctor
  id: '#ctor'
  parent: System.Collections.Queue
  href: System.Collections.Queue.yml
  name: Queue()
  fullName: System.Collections.Queue.Queue()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 37
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the @'System.Collections.Queue' class that is empty, has the default initial capacity, and uses the default growth factor.
  syntax:
    content: public Queue()
    content.vb: Public Sub New
- uid: System.Collections.Queue.#ctor(System.Collections.ICollection)
  id: '#ctor(System.Collections.ICollection)'
  parent: System.Collections.Queue
  href: System.Collections.Queue.yml
  name: Queue(ICollection)
  fullName: System.Collections.Queue.Queue(System.Collections.ICollection)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 71
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the @'System.Collections.Queue' class that contains elements copied from the specified collection, has the same initial capacity as the number of elements copied, and uses the default growth factor.
  syntax:
    content: public Queue(ICollection col)
    content.vb: Public Sub New(col As ICollection)
    parameters:
    - id: col
      type: System.Collections.ICollection
      description: The @'System.Collections.ICollection' to copy elements from.
  exceptions:
  - type: System.ArgumentNullException
    description: '*col* is null.'
- uid: System.Collections.Queue.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Queue
  href: System.Collections.Queue.yml
  name: Queue(Int32)
  fullName: System.Collections.Queue.Queue(System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 45
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the @'System.Collections.Queue' class that is empty, has the specified initial capacity, and uses the default growth factor.
  syntax:
    content: public Queue(int capacity)
    content.vb: Public Sub New(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
      description: The initial number of elements that the @'System.Collections.Queue' can contain.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*capacity* is less than zero.'
- uid: System.Collections.Queue.#ctor(System.Int32,System.Single)
  id: '#ctor(System.Int32,System.Single)'
  parent: System.Collections.Queue
  href: System.Collections.Queue.yml
  name: Queue(Int32, Single)
  fullName: System.Collections.Queue.Queue(System.Int32, System.Single)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 53
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the @'System.Collections.Queue' class that is empty, has the specified initial capacity, and uses the specified growth factor.
  syntax:
    content: public Queue(int capacity, float growFactor)
    content.vb: Public Sub New(capacity As Integer, growFactor As Single)
    parameters:
    - id: capacity
      type: System.Int32
      description: The initial number of elements that the @'System.Collections.Queue' can contain.
    - id: growFactor
      type: System.Single
      description: The factor by which the capacity of the @'System.Collections.Queue' is expanded.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*capacity* is less than zero.-or- *growFactor* is less than 1.0 or greater than 10.0.'
- uid: System.Collections.Queue.Count
  id: Count
  parent: System.Collections.Queue
  href: System.Collections.Queue.yml
  name: Count
  fullName: System.Collections.Queue.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 82
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets the number of elements contained in the @'System.Collections.Queue'.
  syntax:
    content: public virtual int Count { get; }
    content.vb: Public Overridable ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of elements contained in the @'System.Collections.Queue'.
- uid: System.Collections.Queue.IsSynchronized
  id: IsSynchronized
  parent: System.Collections.Queue
  href: System.Collections.Queue.yml
  name: IsSynchronized
  fullName: System.Collections.Queue.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 103
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets a value indicating whether access to the @'System.Collections.Queue' is synchronized (thread safe).
  syntax:
    content: public virtual bool IsSynchronized { get; }
    content.vb: Public Overridable ReadOnly Property IsSynchronized As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if access to the @'System.Collections.Queue' is synchronized (thread safe); otherwise, false. The default is false.
- uid: System.Collections.Queue.SyncRoot
  id: SyncRoot
  parent: System.Collections.Queue
  href: System.Collections.Queue.yml
  name: SyncRoot
  fullName: System.Collections.Queue.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 108
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets an object that can be used to synchronize access to the @'System.Collections.Queue'.
  syntax:
    content: public virtual object SyncRoot { get; }
    content.vb: Public Overridable ReadOnly Property SyncRoot As Object
    parameters: []
    return:
      type: System.Object
      description: An object that can be used to synchronize access to the @'System.Collections.Queue'.
- uid: System.Collections.Queue.Clear
  id: Clear
  parent: System.Collections.Queue
  href: System.Collections.Queue.yml
  name: Clear()
  fullName: System.Collections.Queue.Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 121
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Removes all objects from the @'System.Collections.Queue'.
  syntax:
    content: public virtual void Clear()
    content.vb: Public Overridable Sub Clear
- uid: System.Collections.Queue.Clone
  id: Clone
  parent: System.Collections.Queue
  href: System.Collections.Queue.yml
  name: Clone()
  fullName: System.Collections.Queue.Clone()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 87
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Creates a shallow copy of the @'System.Collections.Queue'.
  syntax:
    content: public virtual object Clone()
    content.vb: Public Overridable Function Clone As Object
    return:
      type: System.Object
      description: A shallow copy of the @'System.Collections.Queue'.
- uid: System.Collections.Queue.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Collections.Queue
  href: System.Collections.Queue.yml
  name: Contains(Object)
  fullName: System.Collections.Queue.Contains(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 239
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Determines whether an element is in the @'System.Collections.Queue'.
  syntax:
    content: public virtual bool Contains(object obj)
    content.vb: Public Overridable Function Contains(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The @'System.Object' to locate in the @'System.Collections.Queue'. The value can be null.
    return:
      type: System.Boolean
      description: true if *obj* is found in the @'System.Collections.Queue'; otherwise, false.
- uid: System.Collections.Queue.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.Queue
  href: System.Collections.Queue.yml
  name: CopyTo(Array, Int32)
  fullName: System.Collections.Queue.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 144
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Copies the @'System.Collections.Queue' elements to an existing one-dimensional @'System.Array', starting at the specified array index.
  syntax:
    content: public virtual void CopyTo(Array array, int index)
    content.vb: Public Overridable Sub CopyTo(array As Array, index As Integer)
    parameters:
    - id: array
      type: System.Array
      description: The one-dimensional @'System.Array' that is the destination of the elements copied from @'System.Collections.Queue'. The @'System.Array' must have zero-based indexing.
    - id: index
      type: System.Int32
      description: The zero-based index in *array* at which copying begins.
  exceptions:
  - type: System.ArgumentNullException
    description: '*array* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*index* is less than zero.'
  - type: System.ArgumentException
    description: '*array* is multidimensional.-or- The number of elements in the source @''System.Collections.Queue'' is greater than the available space from *index* to the end of the destination *array*.'
  - type: System.ArrayTypeMismatchException
    description: The type of the source @'System.Collections.Queue' cannot be cast automatically to the type of the destination *array*.
- uid: System.Collections.Queue.Dequeue
  id: Dequeue
  parent: System.Collections.Queue
  href: System.Collections.Queue.yml
  name: Dequeue()
  fullName: System.Collections.Queue.Dequeue()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 197
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Removes and returns the object at the beginning of the @'System.Collections.Queue'.
  syntax:
    content: public virtual object Dequeue()
    content.vb: Public Overridable Function Dequeue As Object
    return:
      type: System.Object
      description: The object that is removed from the beginning of the @'System.Collections.Queue'.
  exceptions:
  - type: System.InvalidOperationException
    description: The @'System.Collections.Queue' is empty.
- uid: System.Collections.Queue.Enqueue(System.Object)
  id: Enqueue(System.Object)
  parent: System.Collections.Queue
  href: System.Collections.Queue.yml
  name: Enqueue(Object)
  fullName: System.Collections.Queue.Enqueue(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 169
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Adds an object to the end of the @'System.Collections.Queue'.
  syntax:
    content: public virtual void Enqueue(object obj)
    content.vb: Public Overridable Sub Enqueue(obj As Object)
    parameters:
    - id: obj
      type: System.Object
      description: The object to add to the @'System.Collections.Queue'. The value can be null.
- uid: System.Collections.Queue.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Queue
  href: System.Collections.Queue.yml
  name: GetEnumerator()
  fullName: System.Collections.Queue.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 190
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns an enumerator that iterates through the @'System.Collections.Queue'.
  syntax:
    content: public virtual IEnumerator GetEnumerator()
    content.vb: Public Overridable Function GetEnumerator As IEnumerator
    return:
      type: System.Collections.IEnumerator
      description: An @'System.Collections.IEnumerator' for the @'System.Collections.Queue'.
- uid: System.Collections.Queue.Peek
  id: Peek
  parent: System.Collections.Queue
  href: System.Collections.Queue.yml
  name: Peek()
  fullName: System.Collections.Queue.Peek()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 214
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns the object at the beginning of the @'System.Collections.Queue' without removing it.
  syntax:
    content: public virtual object Peek()
    content.vb: Public Overridable Function Peek As Object
    return:
      type: System.Object
      description: The object at the beginning of the @'System.Collections.Queue'.
  exceptions:
  - type: System.InvalidOperationException
    description: The @'System.Collections.Queue' is empty.
- uid: System.Collections.Queue.Synchronized(System.Collections.Queue)
  id: Synchronized(System.Collections.Queue)
  parent: System.Collections.Queue
  href: System.Collections.Queue.yml
  name: Synchronized(Queue)
  fullName: System.Collections.Queue.Synchronized(System.Collections.Queue)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 227
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns a new @'System.Collections.Queue' that wraps the original queue, and is thread safe.
  syntax:
    content: public static Queue Synchronized(Queue queue)
    content.vb: Public Shared Function Synchronized(queue As Queue) As Queue
    parameters:
    - id: queue
      type: System.Collections.Queue
      description: The @'System.Collections.Queue' to synchronize.
    return:
      type: System.Collections.Queue
      description: A @'System.Collections.Queue' wrapper that is synchronized (thread safe).
  exceptions:
  - type: System.ArgumentNullException
    description: '*queue* is null.'
- uid: System.Collections.Queue.ToArray
  id: ToArray
  parent: System.Collections.Queue
  href: System.Collections.Queue.yml
  name: ToArray()
  fullName: System.Collections.Queue.ToArray()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 270
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Copies the @'System.Collections.Queue' elements to a new array.
  syntax:
    content: public virtual object[] ToArray()
    content.vb: Public Overridable Function ToArray As Object()
    return:
      type: System.Object[]
      description: A new array containing elements copied from the @'System.Collections.Queue'.
- uid: System.Collections.Queue.TrimToSize
  id: TrimToSize
  parent: System.Collections.Queue
  href: System.Collections.Queue.yml
  name: TrimToSize()
  fullName: System.Collections.Queue.TrimToSize()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 314
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Sets the capacity to the actual number of elements in the @'System.Collections.Queue'.
  syntax:
    content: public virtual void TrimToSize()
    content.vb: Public Overridable Sub TrimToSize
  exceptions:
  - type: System.NotSupportedException
    description: The @'System.Collections.Queue' is read-only.
references:
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  href: System.Collections.ICollection.yml
  name: ICollection
  fullName: System.Collections.ICollection
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.Single
  parent: System
  isExternal: false
  href: System.Single.yml
  name: Single
  fullName: System.Single
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.Array
  parent: System
  isExternal: false
  href: System.Array.yml
  name: Array
  fullName: System.Array
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  href: System.Collections.IEnumerator.yml
  name: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Queue
  parent: System.Collections
  isExternal: false
  href: System.Collections.Queue.yml
  name: Queue
  fullName: System.Collections.Queue
- uid: System.Object[]
  isExternal: true
  name: Object[]
  name.vb: Object()
  fullName: System.Object[]
  fullName.vb: System.Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.ArrayTypeMismatchException
  isExternal: false
  href: System.ArrayTypeMismatchException.yml
  name: ArrayTypeMismatchException
  fullName: System.ArrayTypeMismatchException
  summary: The exception that is thrown when an attempt is made to store an element of the wrong type within an array.
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  href: System.InvalidOperationException.yml
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  summary: The exception that is thrown when a method call is invalid for the object's current state.
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  href: System.NotSupportedException.yml
  name: NotSupportedException
  fullName: System.NotSupportedException
  summary: The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.
