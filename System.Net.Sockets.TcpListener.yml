items:
- uid: System.Net.Sockets.TcpListener
  id: TcpListener
  parent: System.Net.Sockets
  children:
  - System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)
  - System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)
  - System.Net.Sockets.TcpListener.AcceptSocketAsync
  - System.Net.Sockets.TcpListener.AcceptTcpClientAsync
  - System.Net.Sockets.TcpListener.Active
  - System.Net.Sockets.TcpListener.ExclusiveAddressUse
  - System.Net.Sockets.TcpListener.LocalEndpoint
  - System.Net.Sockets.TcpListener.Pending
  - System.Net.Sockets.TcpListener.Server
  - System.Net.Sockets.TcpListener.Start
  - System.Net.Sockets.TcpListener.Start(System.Int32)
  - System.Net.Sockets.TcpListener.Stop
  href: System.Net.Sockets.TcpListener.yml
  name: TcpListener
  fullName: System.Net.Sockets.TcpListener
  type: Class
  source:
    remote: &o1
      path: src/System.Net.Sockets/src/System/Net/Sockets/TCPListener.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPListener.cs
    startLine: 12
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Listens for connections from TCP network clients.
  syntax:
    content: public class TcpListener
    content.vb: Public Class TcpListener
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)
  id: '#ctor(System.Net.IPAddress,System.Int32)'
  parent: System.Net.Sockets.TcpListener
  href: System.Net.Sockets.TcpListener.yml
  name: TcpListener(IPAddress, Int32)
  fullName: System.Net.Sockets.TcpListener.TcpListener(System.Net.IPAddress, System.Int32)
  type: Constructor
  source:
    remote: &o0
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 440
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Initializes a new instance of the @'System.Net.Sockets.TcpListener' class that listens for incoming connection attempts on the specified local IP address and port number.
  syntax:
    content: public TcpListener(IPAddress localaddr, int port)
    content.vb: Public Sub New(localaddr As IPAddress, port As Integer)
    parameters:
    - id: localaddr
      type: System.Net.IPAddress
      description: An @'System.Net.IPAddress' that represents the local IP address.
    - id: port
      type: System.Int32
      description: The port on which to listen for incoming connection attempts.
  exceptions:
  - type: System.ArgumentNullException
    description: '*localaddr* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*port* is not between @''System.Net.IPEndPoint.MinPort'' and @''System.Net.IPEndPoint.MaxPort''.'
- uid: System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)
  id: '#ctor(System.Net.IPEndPoint)'
  parent: System.Net.Sockets.TcpListener
  href: System.Net.Sockets.TcpListener.yml
  name: TcpListener(IPEndPoint)
  fullName: System.Net.Sockets.TcpListener.TcpListener(System.Net.IPEndPoint)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 441
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Initializes a new instance of the @'System.Net.Sockets.TcpListener' class with the specified local endpoint.
  syntax:
    content: public TcpListener(IPEndPoint localEP)
    content.vb: Public Sub New(localEP As IPEndPoint)
    parameters:
    - id: localEP
      type: System.Net.IPEndPoint
      description: An @'System.Net.IPEndPoint' that represents the local endpoint to which to bind the listener @'System.Net.Sockets.Socket'.
  exceptions:
  - type: System.ArgumentNullException
    description: '*localEP* is null.'
- uid: System.Net.Sockets.TcpListener.Active
  id: Active
  parent: System.Net.Sockets.TcpListener
  href: System.Net.Sockets.TcpListener.yml
  name: Active
  fullName: System.Net.Sockets.TcpListener.Active
  type: Property
  source:
    remote: *o1
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPListener.cs
    startLine: 76
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets a value that indicates whether @'System.Net.Sockets.TcpListener' is actively listening for client connections.
  syntax:
    content: protected bool Active { get; }
    content.vb: Protected ReadOnly Property Active As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if @'System.Net.Sockets.TcpListener' is actively listening; otherwise, false.
- uid: System.Net.Sockets.TcpListener.ExclusiveAddressUse
  id: ExclusiveAddressUse
  parent: System.Net.Sockets.TcpListener
  href: System.Net.Sockets.TcpListener.yml
  name: ExclusiveAddressUse
  fullName: System.Net.Sockets.TcpListener.ExclusiveAddressUse
  type: Property
  source:
    remote: *o1
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPListener.cs
    startLine: 93
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets a @'System.Boolean' value that specifies whether the @'System.Net.Sockets.TcpListener' allows only one underlying socket to listen to a specific port.
  syntax:
    content: public bool ExclusiveAddressUse { get; set; }
    content.vb: Public Property ExclusiveAddressUse As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the @'System.Net.Sockets.TcpListener' allows only one @'System.Net.Sockets.TcpListener' to listen to a specific port; otherwise, false. . The default is true for Windows Server 2003 and Windows XP Service Pack 2 and later, and false for all other versions.
  exceptions:
  - type: System.InvalidOperationException
    description: The @'System.Net.Sockets.TcpListener' has been started. Call the @'System.Net.Sockets.TcpListener.Stop' method and then set the @'System.Net.Sockets.Socket.ExclusiveAddressUse' property.
  - type: System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the underlying socket.
  - type: System.ObjectDisposedException
    description: The underlying @'System.Net.Sockets.Socket' has been closed.
- uid: System.Net.Sockets.TcpListener.LocalEndpoint
  id: LocalEndpoint
  parent: System.Net.Sockets.TcpListener
  href: System.Net.Sockets.TcpListener.yml
  name: LocalEndpoint
  fullName: System.Net.Sockets.TcpListener.LocalEndpoint
  type: Property
  source:
    remote: *o1
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPListener.cs
    startLine: 85
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the underlying @'System.Net.EndPoint' of the current @'System.Net.Sockets.TcpListener'.
  syntax:
    content: public EndPoint LocalEndpoint { get; }
    content.vb: Public ReadOnly Property LocalEndpoint As EndPoint
    parameters: []
    return:
      type: System.Net.EndPoint
      description: The @'System.Net.EndPoint' to which the @'System.Net.Sockets.Socket' is bound.
- uid: System.Net.Sockets.TcpListener.Server
  id: Server
  parent: System.Net.Sockets.TcpListener
  href: System.Net.Sockets.TcpListener.yml
  name: Server
  fullName: System.Net.Sockets.TcpListener.Server
  type: Property
  source:
    remote: *o1
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPListener.cs
    startLine: 66
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the underlying network @'System.Net.Sockets.Socket'.
  syntax:
    content: public Socket Server { get; }
    content.vb: Public ReadOnly Property Server As Socket
    parameters: []
    return:
      type: System.Net.Sockets.Socket
      description: The underlying @'System.Net.Sockets.Socket'.
- uid: System.Net.Sockets.TcpListener.AcceptSocketAsync
  id: AcceptSocketAsync
  parent: System.Net.Sockets.TcpListener
  href: System.Net.Sockets.TcpListener.yml
  name: AcceptSocketAsync()
  fullName: System.Net.Sockets.TcpListener.AcceptSocketAsync()
  type: Method
  source:
    remote: *o1
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPListener.cs
    startLine: 309
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Accepts a pending connection request as an asynchronous operation.
  syntax:
    content: public Task<Socket> AcceptSocketAsync()
    content.vb: Public Function AcceptSocketAsync As Task(Of Socket)
    return:
      type: System.Threading.Tasks.Task{System.Net.Sockets.Socket}
      description: Returns @'System.Threading.Tasks.Task`1'The task object representing the asynchronous operation. The @'System.Threading.Tasks.Task`1.Result' property on the task object returns a @'System.Net.Sockets.Socket' used to send and receive data.
  exceptions:
  - type: System.InvalidOperationException
    description: The listener has not been started with a call to @'System.Net.Sockets.TcpListener.Start'.
- uid: System.Net.Sockets.TcpListener.AcceptTcpClientAsync
  id: AcceptTcpClientAsync
  parent: System.Net.Sockets.TcpListener
  href: System.Net.Sockets.TcpListener.yml
  name: AcceptTcpClientAsync()
  fullName: System.Net.Sockets.TcpListener.AcceptTcpClientAsync()
  type: Method
  source:
    remote: *o1
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPListener.cs
    startLine: 317
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Accepts a pending connection request as an asynchronous operation.
  syntax:
    content: public Task<TcpClient> AcceptTcpClientAsync()
    content.vb: Public Function AcceptTcpClientAsync As Task(Of TcpClient)
    return:
      type: System.Threading.Tasks.Task{System.Net.Sockets.TcpClient}
      description: Returns @'System.Threading.Tasks.Task`1'The task object representing the asynchronous operation. The @'System.Threading.Tasks.Task`1.Result' property on the task object returns a @'System.Net.Sockets.TcpClient' used to send and receive data.
  exceptions:
  - type: System.InvalidOperationException
    description: The listener has not been started with a call to @'System.Net.Sockets.TcpListener.Start'.
  - type: System.Net.Sockets.SocketException
    description: "Use the @'System.Net.Sockets.SocketException.ErrorCode' property to obtain the specific error code. When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error."
- uid: System.Net.Sockets.TcpListener.Pending
  id: Pending
  parent: System.Net.Sockets.TcpListener
  href: System.Net.Sockets.TcpListener.yml
  name: Pending()
  fullName: System.Net.Sockets.TcpListener.Pending()
  type: Method
  source:
    remote: *o1
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPListener.cs
    startLine: 197
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Determines if there are pending connection requests.
  syntax:
    content: public bool Pending()
    content.vb: Public Function Pending As Boolean
    return:
      type: System.Boolean
      description: true if connections are pending; otherwise, false.
  exceptions:
  - type: System.InvalidOperationException
    description: The listener has not been started with a call to @'System.Net.Sockets.TcpListener.Start'.
- uid: System.Net.Sockets.TcpListener.Start
  id: Start
  parent: System.Net.Sockets.TcpListener
  href: System.Net.Sockets.TcpListener.yml
  name: Start()
  fullName: System.Net.Sockets.TcpListener.Start()
  type: Method
  source:
    remote: *o1
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPListener.cs
    startLine: 112
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Starts listening for incoming connection requests.
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  exceptions:
  - type: System.Net.Sockets.SocketException
    description: "Use the @'System.Net.Sockets.SocketException.ErrorCode' property to obtain the specific error code. When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error."
- uid: System.Net.Sockets.TcpListener.Start(System.Int32)
  id: Start(System.Int32)
  parent: System.Net.Sockets.TcpListener
  href: System.Net.Sockets.TcpListener.yml
  name: Start(Int32)
  fullName: System.Net.Sockets.TcpListener.Start(System.Int32)
  type: Method
  source:
    remote: *o1
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPListener.cs
    startLine: 117
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Starts listening for incoming connection requests with a maximum number of pending connection.
  syntax:
    content: public void Start(int backlog)
    content.vb: Public Sub Start(backlog As Integer)
    parameters:
    - id: backlog
      type: System.Int32
      description: The maximum length of the pending connections queue.
  exceptions:
  - type: System.Net.Sockets.SocketException
    description: An error occurred while accessing the socket. See the Remarks section for more information.
  - type: System.ArgumentOutOfRangeException
    description: The* backlog* parameter is less than zero or exceeds the maximum number of permitted connections.
  - type: System.InvalidOperationException
    description: The underlying @'System.Net.Sockets.Socket' is null.
- uid: System.Net.Sockets.TcpListener.Stop
  id: Stop
  parent: System.Net.Sockets.TcpListener
  href: System.Net.Sockets.TcpListener.yml
  name: Stop()
  fullName: System.Net.Sockets.TcpListener.Stop()
  type: Method
  source:
    remote: *o1
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPListener.cs
    startLine: 167
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Closes the listener.
  syntax:
    content: public void Stop()
    content.vb: Public Sub Stop
  exceptions:
  - type: System.Net.Sockets.SocketException
    description: "Use the @'System.Net.Sockets.SocketException.ErrorCode' property to obtain the specific error code. When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error."
references:
- uid: System.Net.Sockets
  isExternal: false
  name: System.Net.Sockets
  fullName: System.Net.Sockets
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: false
  href: System.Net.IPAddress.yml
  name: IPAddress
  fullName: System.Net.IPAddress
  type: Class
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
  type: Namespace
- uid: System.Net.IPEndPoint
  isExternal: false
  href: System.Net.IPEndPoint.yml
  name: IPEndPoint
  fullName: System.Net.IPEndPoint
  type: Class
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.Net.EndPoint
  parent: System.Net
  isExternal: false
  href: System.Net.EndPoint.yml
  name: EndPoint
  fullName: System.Net.EndPoint
  type: Class
- uid: System.Net.Sockets.Socket
  parent: System.Net.Sockets
  isExternal: false
  href: System.Net.Sockets.Socket.yml
  name: Socket
  fullName: System.Net.Sockets.Socket
  type: Class
- uid: System.Threading.Tasks.Task{System.Net.Sockets.Socket}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: System.Net.Sockets.Socket.yml
  name: Task<Socket>
  name.vb: Task(Of Socket)
  fullName: System.Threading.Tasks.Task<System.Net.Sockets.Socket>
  fullName.vb: System.Threading.Tasks.Task(Of System.Net.Sockets.Socket)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.Sockets.Socket
    name: Socket
    fullName: System.Net.Sockets.Socket
    href: System.Net.Sockets.Socket.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.Sockets.Socket
    name: Socket
    fullName: System.Net.Sockets.Socket
    href: System.Net.Sockets.Socket.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: false
  href: System.Threading.Tasks.Task`1.yml
  name: Task<TResult>
  name.vb: Task(Of TResult)
  fullName: System.Threading.Tasks.Task<TResult>
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  type: Class
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
  type: Namespace
- uid: System.Threading.Tasks.Task{System.Net.Sockets.TcpClient}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: System.Net.Sockets.TcpClient.yml
  name: Task<TcpClient>
  name.vb: Task(Of TcpClient)
  fullName: System.Threading.Tasks.Task<System.Net.Sockets.TcpClient>
  fullName.vb: System.Threading.Tasks.Task(Of System.Net.Sockets.TcpClient)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.Sockets.TcpClient
    name: TcpClient
    fullName: System.Net.Sockets.TcpClient
    href: System.Net.Sockets.TcpClient.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.Sockets.TcpClient
    name: TcpClient
    fullName: System.Net.Sockets.TcpClient
    href: System.Net.Sockets.TcpClient.yml
  - name: )
    fullName: )
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  type: Class
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  type: Class
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  href: System.InvalidOperationException.yml
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  type: Class
  summary: The exception that is thrown when a method call is invalid for the object's current state.
- uid: System.Net.Sockets.SocketException
  isExternal: false
  href: System.Net.Sockets.SocketException.yml
  name: SocketException
  fullName: System.Net.Sockets.SocketException
  type: Class
  summary: The exception that is thrown when a socket error occurs.
- uid: System.ObjectDisposedException
  isExternal: false
  href: System.ObjectDisposedException.yml
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
  type: Class
  summary: The exception that is thrown when an operation is performed on a disposed object.
