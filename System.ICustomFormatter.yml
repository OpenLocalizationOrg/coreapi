items:
- uid: System.ICustomFormatter
  commentId: T:System.ICustomFormatter
  id: ICustomFormatter
  parent: System
  children:
  - System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)
  langs:
  - csharp
  - vb
  name: ICustomFormatter
  fullName: System.ICustomFormatter
  type: Interface
  source:
    remote:
      path: src/mscorlib/src/System/ICustomFormatter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ICustomFormatter
    path: src/mscorlib/src/System/ICustomFormatter.cs
    startLine: 18
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines a method that supports custom formatting of the value of an object.</p>\n"
  example:
  - "\n<p>The following example implements <xref href=\"System.ICustomFormatter\" data-throw-if-not-resolved=\"false\"></xref> to allow binary, octal, and hexadecimal formatting of integral values. In this example, a single class, <code>IBinaryFormatter</code>, implements both <xref href=\"System.ICustomFormatter\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref>. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method determines whether the <em>formatType</em> parameter represents an <xref href=\"System.ICustomFormatter\" data-throw-if-not-resolved=\"false\"></xref> type. If it does, <code>BinaryFormatter</code> returns an instance of itself; otherwise, it returns <strong>null</strong>. Its <xref href=\"System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> implementation determines whether the format parameter is one of the three supported format strings (\"B\" for binary, \"O\" for octal, and \"H\" for hexadecimal) and formats the <em>arg</em> parameter appropriately. Otherwise, if <em>arg</em> is not <strong>null</strong>, it calls the <em>arg</em> parameter's <xref href=\"System.IFormattable.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> implementation, if one exists, or its parameterless <strong>ToString</strong> method, if one does not. If <em>arg</em> is <strong>null</strong>, the method returns <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>.</p>System.ICustomFormatter.Class#1<p><code>BinaryFormatter</code> can then be used to provide custom formatting by passing a <code>BinaryFormatter</code> object as the <em>provider</em> parameter of the <xref href=\"System.String.Format(System.IFormatProvider,System.String,System.Object[])\" data-throw-if-not-resolved=\"false\"></xref> method, as the following example shows.</p>System.ICustomFormatter.Class#2"
  syntax:
    content: >-
      [ComVisible(true)]

      public interface ICustomFormatter
    content.vb: >-
      <ComVisible(True)>

      Public Interface ICustomFormatter
  seealso:
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  nameWithType: ICustomFormatter
- uid: System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)
  commentId: M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)
  id: Format(System.String,System.Object,System.IFormatProvider)
  parent: System.ICustomFormatter
  langs:
  - csharp
  - vb
  name: Format(String, Object, IFormatProvider)
  fullName: System.ICustomFormatter.Format(System.String, System.Object, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/ICustomFormatter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Format
    path: src/mscorlib/src/System/ICustomFormatter.cs
    startLine: 22
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of a specified object to an equivalent string representation using specified format and culture-specific formatting information.</p>\n"
  example:
  - "\n<p>The following example implements <xref href=\"System.ICustomFormatter\" data-throw-if-not-resolved=\"false\"></xref> to allow binary, octal, and hexadecimal formatting of integral values. Its <xref href=\"System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> implementation determines whether the format parameter is one of the three supported format strings (\"B\" for binary, \"O\" for octal, and \"H\" for hexadecimal) and formats the <em>arg</em> parameter appropriately. Otherwise, if <em>arg</em> is not <strong>null</strong>, it calls the <em>arg</em> parameter's <xref href=\"System.IFormattable.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> implementation, if one exists, or its parameterless <strong>ToString</strong> method, if one does not. If <em>arg</em> is <strong>null</strong>, the method returns <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>.</p>System.ICustomFormatter.Class#1<p><code>BinaryFormatter</code> can then be used to provide custom formatting by passing a <code>BinaryFormatter</code> object as the <em>provider</em> parameter of the <xref href=\"System.String.Format(System.IFormatProvider,System.String,System.Object[])\" data-throw-if-not-resolved=\"false\"></xref> method, as the following example shows.</p>System.ICustomFormatter.Class#2"
  syntax:
    content: string Format(string format, object arg, IFormatProvider formatProvider)
    content.vb: Function Format(format As String, arg As Object, formatProvider As IFormatProvider) As String
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A format string containing formatting specifications. </p>\n"
    - id: arg
      type: System.Object
      description: "\n<p>An object to format. </p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies format information about the current instance. </p>\n"
    return:
      type: System.String
      description: "\n<p>The string representation of the value of <em>arg</em>, formatted as specified by <em>format</em> and <em>formatProvider</em>.</p>\n"
  seealso:
  - type: System.IFormattable
    commentId: T:System.IFormattable
  nameWithType: ICustomFormatter.Format(String, Object, IFormatProvider)
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  fullName: System.IFormatProvider
  nameWithType: IFormatProvider
  commentId: T:System.IFormatProvider
