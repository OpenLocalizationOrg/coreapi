items:
- uid: System.Reflection.Emit.ModuleBuilder
  id: ModuleBuilder
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.ModuleBuilder.Assembly
  - System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions
  - System.Reflection.Emit.ModuleBuilder.DefineEnum(System.String,System.Reflection.TypeAttributes,System.Type)
  - System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])
  - System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  - System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])
  - System.Reflection.Emit.ModuleBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)
  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String)
  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes)
  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type)
  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)
  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)
  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)
  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])
  - System.Reflection.Emit.ModuleBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)
  - System.Reflection.Emit.ModuleBuilder.Equals(System.Object)
  - System.Reflection.Emit.ModuleBuilder.FullyQualifiedName
  - System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])
  - System.Reflection.Emit.ModuleBuilder.GetHashCode
  - System.Reflection.Emit.ModuleBuilder.Name
  - System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  - System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: ModuleBuilder
  fullName: System.Reflection.Emit.ModuleBuilder
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
    startLine: 51
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Defines and represents a module in a dynamic assembly.
  syntax:
    content: 'public class ModuleBuilder : Module'
    content.vb: Public Class ModuleBuilder Inherits Module
  inheritance:
  - System.Object
- uid: System.Reflection.Emit.ModuleBuilder.Assembly
  id: Assembly
  parent: System.Reflection.Emit.ModuleBuilder
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: Assembly
  fullName: System.Reflection.Emit.ModuleBuilder.Assembly
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
    startLine: 1078
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Gets the dynamic assembly that defined this instance of @'System.Reflection.Emit.ModuleBuilder'.
  syntax:
    content: public override Assembly Assembly { get; }
    content.vb: Public Overrides ReadOnly Property Assembly As Assembly
    parameters: []
    return:
      type: System.Reflection.Assembly
      description: The dynamic assembly that defined the current dynamic module.
- uid: System.Reflection.Emit.ModuleBuilder.FullyQualifiedName
  id: FullyQualifiedName
  parent: System.Reflection.Emit.ModuleBuilder
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: FullyQualifiedName
  fullName: System.Reflection.Emit.ModuleBuilder.FullyQualifiedName
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
    startLine: 949
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Gets a String representing the fully qualified name and path to this module.
  syntax:
    content: public override string FullyQualifiedName { get; }
    content.vb: Public Overrides ReadOnly Property FullyQualifiedName As String
    parameters: []
    return:
      type: System.String
      description: The fully qualified module name.
- uid: System.Reflection.Emit.ModuleBuilder.Name
  id: Name
  parent: System.Reflection.Emit.ModuleBuilder
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: Name
  fullName: System.Reflection.Emit.ModuleBuilder.Name
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
    startLine: 1070
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: A string that indicates that this is an in-memory module.
  syntax:
    content: public override string Name { get; }
    content.vb: Public Overrides ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: Text that indicates that this is an in-memory module.
- uid: System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions
  id: CreateGlobalFunctions
  parent: System.Reflection.Emit.ModuleBuilder
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: CreateGlobalFunctions()
  fullName: System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
    startLine: 1527
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Completes the global function definitions and global data definitions for this dynamic module.
  syntax:
    content: public void CreateGlobalFunctions()
    content.vb: Public Sub CreateGlobalFunctions
  exceptions:
  - type: System.InvalidOperationException
    description: This method was called previously.
- uid: System.Reflection.Emit.ModuleBuilder.DefineEnum(System.String,System.Reflection.TypeAttributes,System.Type)
  id: DefineEnum(System.String,System.Reflection.TypeAttributes,System.Type)
  parent: System.Reflection.Emit.ModuleBuilder
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: DefineEnum(String, TypeAttributes, Type)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineEnum(System.String, System.Reflection.TypeAttributes, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
    startLine: 1213
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Defines an enumeration type that is a value type with a single non-static field called *value__* of the specified type.
  syntax:
    content: public EnumBuilder DefineEnum(string name, TypeAttributes visibility, Type underlyingType)
    content.vb: Public Function DefineEnum(name As String, visibility As TypeAttributes, underlyingType As Type) As EnumBuilder
    parameters:
    - id: name
      type: System.String
      description: The full path of the enumeration type. *name* cannot contain embedded nulls.
    - id: visibility
      type: System.Reflection.TypeAttributes
      description: The type attributes for the enumeration. The attributes are any bits defined by @'System.Reflection.TypeAttributes.VisibilityMask'.
    - id: underlyingType
      type: System.Type
      description: The underlying type for the enumeration. This must be a built-in integer type.
    return:
      type: System.Reflection.Emit.EnumBuilder
      description: The defined enumeration.
  exceptions:
  - type: System.ArgumentException
    description: Attributes other than visibility attributes are provided.-or- An enumeration with the given name exists in the parent assembly of this module.-or- The visibility attributes do not match the scope of the enumeration. For example, @'System.Reflection.TypeAttributes.NestedPublic' is specified for *visibility*, but the enumeration is not a nested type.
  - type: System.ArgumentNullException
    description: '*name* is null.'
- uid: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])
  id: DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])
  parent: System.Reflection.Emit.ModuleBuilder
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type[])
  name.vb: DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type())
  fullName: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[])
  fullName.vb: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
    startLine: 1427
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Defines a global method with the specified name, attributes, calling convention, return type, and parameter types.
  syntax:
    content: public MethodBuilder DefineGlobalMethod(string name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes)
    content.vb: Public Function DefineGlobalMethod(name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type()) As MethodBuilder
    parameters:
    - id: name
      type: System.String
      description: The name of the method. *name* cannot contain embedded nulls.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: The attributes of the method. *attributes* must include @'System.Reflection.MethodAttributes.Static'.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: The calling convention for the method.
    - id: returnType
      type: System.Type
      description: The return type of the method.
    - id: parameterTypes
      type: System.Type[]
      description: The types of the method's parameters.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: The defined global method.
  exceptions:
  - type: System.ArgumentException
    description: The method is not static. That is, *attributes* does not include @'System.Reflection.MethodAttributes.Static'.-or-An element in the @'System.Type' array is null.
  - type: System.ArgumentNullException
    description: '*name* is null.'
  - type: System.InvalidOperationException
    description: '@''System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions'' has been previously called.'
- uid: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  id: DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.ModuleBuilder
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])
  name.vb: DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type(), Type(), Type(), Type()(), Type()())
  fullName: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])
  fullName.vb: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type(), System.Type(), System.Type(), System.Type()(), System.Type()())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
    startLine: 1435
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Defines a global method with the specified name, attributes, calling convention, return type, custom modifiers for the return type, parameter types, and custom modifiers for the parameter types.
  syntax:
    content: public MethodBuilder DefineGlobalMethod(string name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers)
    content.vb: Public Function DefineGlobalMethod(name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, requiredReturnTypeCustomModifiers As Type(), optionalReturnTypeCustomModifiers As Type(), parameterTypes As Type(), requiredParameterTypeCustomModifiers As Type()(), optionalParameterTypeCustomModifiers As Type()()) As MethodBuilder
    parameters:
    - id: name
      type: System.String
      description: The name of the method. *name* cannot contain embedded null characters.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: The attributes of the method. *attributes* must include @'System.Reflection.MethodAttributes.Static'.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: The calling convention for the method.
    - id: returnType
      type: System.Type
      description: The return type of the method.
    - id: requiredReturnTypeCustomModifiers
      type: System.Type[]
      description: An array of types representing the required custom modifiers for the return type, such as @'System.Runtime.CompilerServices.IsConst' or @'System.Runtime.CompilerServices.IsBoxed'. If the return type has no required custom modifiers, specify null.
    - id: optionalReturnTypeCustomModifiers
      type: System.Type[]
      description: An array of types representing the optional custom modifiers for the return type, such as @'System.Runtime.CompilerServices.IsConst' or @'System.Runtime.CompilerServices.IsBoxed'. If the return type has no optional custom modifiers, specify null.
    - id: parameterTypes
      type: System.Type[]
      description: The types of the method's parameters.
    - id: requiredParameterTypeCustomModifiers
      type: System.Type[][]
      description: An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding parameter of the global method. If a particular argument has no required custom modifiers, specify null instead of an array of types. If the global method has no arguments, or if none of the arguments have required custom modifiers, specify null instead of an array of arrays.
    - id: optionalParameterTypeCustomModifiers
      type: System.Type[][]
      description: An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding parameter. If a particular argument has no optional custom modifiers, specify null instead of an array of types. If the global method has no arguments, or if none of the arguments have optional custom modifiers, specify null instead of an array of arrays.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: The defined global method.
  exceptions:
  - type: System.ArgumentException
    description: The method is not static. That is, *attributes* does not include @'System.Reflection.MethodAttributes.Static'.-or-An element in the @'System.Type' array is null.
  - type: System.ArgumentNullException
    description: '*name* is null.'
  - type: System.InvalidOperationException
    description: The @'System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions' method has been previously called.
- uid: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])
  id: DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])
  parent: System.Reflection.Emit.ModuleBuilder
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: DefineGlobalMethod(String, MethodAttributes, Type, Type[])
  name.vb: DefineGlobalMethod(String, MethodAttributes, Type, Type())
  fullName: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String, System.Reflection.MethodAttributes, System.Type, System.Type[])
  fullName.vb: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String, System.Reflection.MethodAttributes, System.Type, System.Type())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
    startLine: 1420
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Defines a global method with the specified name, attributes, return type, and parameter types.
  syntax:
    content: public MethodBuilder DefineGlobalMethod(string name, MethodAttributes attributes, Type returnType, Type[] parameterTypes)
    content.vb: Public Function DefineGlobalMethod(name As String, attributes As MethodAttributes, returnType As Type, parameterTypes As Type()) As MethodBuilder
    parameters:
    - id: name
      type: System.String
      description: The name of the method. *name* cannot contain embedded nulls.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: The attributes of the method. *attributes* must include @'System.Reflection.MethodAttributes.Static'.
    - id: returnType
      type: System.Type
      description: The return type of the method.
    - id: parameterTypes
      type: System.Type[]
      description: The types of the method's parameters.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: The defined global method.
  exceptions:
  - type: System.ArgumentException
    description: The method is not static. That is, *attributes* does not include @'System.Reflection.MethodAttributes.Static'.-or- The length of *name* is zero -or-An element in the @'System.Type' array is null.
  - type: System.ArgumentNullException
    description: '*name* is null.'
  - type: System.InvalidOperationException
    description: '@''System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions'' has been previously called.'
- uid: System.Reflection.Emit.ModuleBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)
  id: DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)
  parent: System.Reflection.Emit.ModuleBuilder
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: DefineInitializedData(String, Byte[], FieldAttributes)
  name.vb: DefineInitializedData(String, Byte(), FieldAttributes)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineInitializedData(System.String, System.Byte[], System.Reflection.FieldAttributes)
  fullName.vb: System.Reflection.Emit.ModuleBuilder.DefineInitializedData(System.String, System.Byte(), System.Reflection.FieldAttributes)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
    startLine: 1551
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Defines an initialized data field in the .sdata section of the portable executable (PE) file.
  syntax:
    content: public FieldBuilder DefineInitializedData(string name, byte[] data, FieldAttributes attributes)
    content.vb: Public Function DefineInitializedData(name As String, data As Byte(), attributes As FieldAttributes) As FieldBuilder
    parameters:
    - id: name
      type: System.String
      description: The name used to refer to the data. *name* cannot contain embedded nulls.
    - id: data
      type: System.Byte[]
      description: The binary large object (BLOB) of data.
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: The attributes for the field. The default is Static.
    return:
      type: System.Reflection.Emit.FieldBuilder
      description: A field to reference the data.
  exceptions:
  - type: System.ArgumentException
    description: The length of *name* is zero.-or- The size of *data* is less than or equal to zero or greater than or equal to 0x3f0000.
  - type: System.ArgumentNullException
    description: '*name* or *data* is null.'
  - type: System.InvalidOperationException
    description: '@''System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions'' has been previously called.'
- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String)
  id: DefineType(System.String)
  parent: System.Reflection.Emit.ModuleBuilder
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: DefineType(String)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
    startLine: 1098
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Constructs a TypeBuilder for a private type with the specified name in this module.
  syntax:
    content: public TypeBuilder DefineType(string name)
    content.vb: Public Function DefineType(name As String) As TypeBuilder
    parameters:
    - id: name
      type: System.String
      description: The full path of the type, including the namespace. *name* cannot contain embedded nulls.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: A private type with the specified name.
  exceptions:
  - type: System.ArgumentException
    description: A type with the given name exists in the parent assembly of this module.-or- Nested type attributes are set on a type that is not nested.
  - type: System.ArgumentNullException
    description: '*name* is null.'
- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes)
  id: DefineType(System.String,System.Reflection.TypeAttributes)
  parent: System.Reflection.Emit.ModuleBuilder
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: DefineType(String, TypeAttributes)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(System.String, System.Reflection.TypeAttributes)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
    startLine: 1109
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Constructs a TypeBuilder given the type name and the type attributes.
  syntax:
    content: public TypeBuilder DefineType(string name, TypeAttributes attr)
    content.vb: Public Function DefineType(name As String, attr As TypeAttributes) As TypeBuilder
    parameters:
    - id: name
      type: System.String
      description: The full path of the type. *name* cannot contain embedded nulls.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: The attributes of the defined type.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: A TypeBuilder created with all of the requested attributes.
  exceptions:
  - type: System.ArgumentException
    description: A type with the given name exists in the parent assembly of this module.-or- Nested type attributes are set on a type that is not nested.
  - type: System.ArgumentNullException
    description: '*name* is null.'
- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type)
  id: DefineType(System.String,System.Reflection.TypeAttributes,System.Type)
  parent: System.Reflection.Emit.ModuleBuilder
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: DefineType(String, TypeAttributes, Type)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(System.String, System.Reflection.TypeAttributes, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
    startLine: 1120
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Constructs a TypeBuilder given type name, its attributes, and the type that the defined type extends.
  syntax:
    content: public TypeBuilder DefineType(string name, TypeAttributes attr, Type parent)
    content.vb: Public Function DefineType(name As String, attr As TypeAttributes, parent As Type) As TypeBuilder
    parameters:
    - id: name
      type: System.String
      description: The full path of the type. *name* cannot contain embedded nulls.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: The attribute to be associated with the type.
    - id: parent
      type: System.Type
      description: The type that the defined type extends.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: A TypeBuilder created with all of the requested attributes.
  exceptions:
  - type: System.ArgumentException
    description: A type with the given name exists in the parent assembly of this module.-or- Nested type attributes are set on a type that is not nested.
  - type: System.ArgumentNullException
    description: '*name* is null.'
- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)
  id: DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)
  parent: System.Reflection.Emit.ModuleBuilder
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: DefineType(String, TypeAttributes, Type, Int32)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(System.String, System.Reflection.TypeAttributes, System.Type, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
    startLine: 1135
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Constructs a TypeBuilder given the type name, the attributes, the type that the defined type extends, and the total size of the type.
  syntax:
    content: public TypeBuilder DefineType(string name, TypeAttributes attr, Type parent, int typesize)
    content.vb: Public Function DefineType(name As String, attr As TypeAttributes, parent As Type, typesize As Integer) As TypeBuilder
    parameters:
    - id: name
      type: System.String
      description: The full path of the type. *name* cannot contain embedded nulls.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: The attributes of the defined type.
    - id: parent
      type: System.Type
      description: The type that the defined type extends.
    - id: typesize
      type: System.Int32
      description: The total size of the type.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: A TypeBuilder object.
  exceptions:
  - type: System.ArgumentException
    description: A type with the given name exists in the parent assembly of this module.-or- Nested type attributes are set on a type that is not nested.
  - type: System.ArgumentNullException
    description: '*name* is null.'
- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)
  id: DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)
  parent: System.Reflection.Emit.ModuleBuilder
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: DefineType(String, TypeAttributes, Type, PackingSize)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(System.String, System.Reflection.TypeAttributes, System.Type, System.Reflection.Emit.PackingSize)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
    startLine: 1185
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Constructs a TypeBuilder given the type name, the attributes, the type that the defined type extends, and the packing size of the type.
  syntax:
    content: public TypeBuilder DefineType(string name, TypeAttributes attr, Type parent, PackingSize packsize)
    content.vb: Public Function DefineType(name As String, attr As TypeAttributes, parent As Type, packsize As PackingSize) As TypeBuilder
    parameters:
    - id: name
      type: System.String
      description: The full path of the type. *name* cannot contain embedded nulls.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: The attributes of the defined type.
    - id: parent
      type: System.Type
      description: The type that the defined type extends.
    - id: packsize
      type: System.Reflection.Emit.PackingSize
      description: The packing size of the type.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: A TypeBuilder object.
  exceptions:
  - type: System.ArgumentException
    description: A type with the given name exists in the parent assembly of this module.-or- Nested type attributes are set on a type that is not nested.
  - type: System.ArgumentNullException
    description: '*name* is null.'
- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)
  id: DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)
  parent: System.Reflection.Emit.ModuleBuilder
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: DefineType(String, TypeAttributes, Type, PackingSize, Int32)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(System.String, System.Reflection.TypeAttributes, System.Type, System.Reflection.Emit.PackingSize, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
    startLine: 1150
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Constructs a TypeBuilder given the type name, attributes, the type that the defined type extends, the packing size of the defined type, and the total size of the defined type.
  syntax:
    content: public TypeBuilder DefineType(string name, TypeAttributes attr, Type parent, PackingSize packingSize, int typesize)
    content.vb: Public Function DefineType(name As String, attr As TypeAttributes, parent As Type, packingSize As PackingSize, typesize As Integer) As TypeBuilder
    parameters:
    - id: name
      type: System.String
      description: The full path of the type. *name* cannot contain embedded nulls.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: The attributes of the defined type.
    - id: parent
      type: System.Type
      description: The type that the defined type extends.
    - id: packingSize
      type: System.Reflection.Emit.PackingSize
      description: The packing size of the type.
    - id: typesize
      type: System.Int32
      description: The total size of the type.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: A TypeBuilder created with all of the requested attributes.
  exceptions:
  - type: System.ArgumentException
    description: A type with the given name exists in the parent assembly of this module.-or- Nested type attributes are set on a type that is not nested.
  - type: System.ArgumentNullException
    description: '*name* is null.'
- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])
  id: DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])
  parent: System.Reflection.Emit.ModuleBuilder
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: DefineType(String, TypeAttributes, Type, Type[])
  name.vb: DefineType(String, TypeAttributes, Type, Type())
  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(System.String, System.Reflection.TypeAttributes, System.Type, System.Type[])
  fullName.vb: System.Reflection.Emit.ModuleBuilder.DefineType(System.String, System.Reflection.TypeAttributes, System.Type, System.Type())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
    startLine: 1164
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Constructs a TypeBuilder given the type name, attributes, the type that the defined type extends, and the interfaces that the defined type implements.
  syntax:
    content: public TypeBuilder DefineType(string name, TypeAttributes attr, Type parent, Type[] interfaces)
    content.vb: Public Function DefineType(name As String, attr As TypeAttributes, parent As Type, interfaces As Type()) As TypeBuilder
    parameters:
    - id: name
      type: System.String
      description: The full path of the type. *name* cannot contain embedded nulls.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: The attributes to be associated with the type.
    - id: parent
      type: System.Type
      description: The type that the defined type extends.
    - id: interfaces
      type: System.Type[]
      description: The list of interfaces that the type implements.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: A TypeBuilder created with all of the requested attributes.
  exceptions:
  - type: System.ArgumentException
    description: A type with the given name exists in the parent assembly of this module.-or- Nested type attributes are set on a type that is not nested.
  - type: System.ArgumentNullException
    description: '*name* is null.'
- uid: System.Reflection.Emit.ModuleBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)
  id: DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)
  parent: System.Reflection.Emit.ModuleBuilder
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: DefineUninitializedData(String, Int32, FieldAttributes)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineUninitializedData(System.String, System.Int32, System.Reflection.FieldAttributes)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
    startLine: 1586
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Defines an uninitialized data field in the .sdata section of the portable executable (PE) file.
  syntax:
    content: public FieldBuilder DefineUninitializedData(string name, int size, FieldAttributes attributes)
    content.vb: Public Function DefineUninitializedData(name As String, size As Integer, attributes As FieldAttributes) As FieldBuilder
    parameters:
    - id: name
      type: System.String
      description: The name used to refer to the data. *name* cannot contain embedded nulls.
    - id: size
      type: System.Int32
      description: The size of the data field.
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: The attributes for the field.
    return:
      type: System.Reflection.Emit.FieldBuilder
      description: A field to reference the data.
  exceptions:
  - type: System.ArgumentException
    description: The length of *name* is zero.-or- *size* is less than or equal to zero, or greater than or equal to 0x003f0000.
  - type: System.ArgumentNullException
    description: '*name* is null.'
  - type: System.InvalidOperationException
    description: '@''System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions'' has been previously called.'
- uid: System.Reflection.Emit.ModuleBuilder.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Emit.ModuleBuilder
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: Equals(Object)
  fullName: System.Reflection.Emit.ModuleBuilder.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
    startLine: 763
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns a value that indicates whether this instance is equal to the specified object.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with this instance, or null.
    return:
      type: System.Boolean
      description: true if *obj* equals the type and value of this instance; otherwise, false.
- uid: System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])
  id: GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])
  parent: System.Reflection.Emit.ModuleBuilder
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: GetArrayMethod(Type, String, CallingConventions, Type, Type[])
  name.vb: GetArrayMethod(Type, String, CallingConventions, Type, Type())
  fullName: System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type, System.String, System.Reflection.CallingConventions, System.Type, System.Type[])
  fullName.vb: System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type, System.String, System.Reflection.CallingConventions, System.Type, System.Type())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
    startLine: 2037
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the named method on an array class.
  syntax:
    content: public MethodInfo GetArrayMethod(Type arrayClass, string methodName, CallingConventions callingConvention, Type returnType, Type[] parameterTypes)
    content.vb: Public Function GetArrayMethod(arrayClass As Type, methodName As String, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type()) As MethodInfo
    parameters:
    - id: arrayClass
      type: System.Type
      description: An array class.
    - id: methodName
      type: System.String
      description: The name of a method on the array class.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: The method's calling convention.
    - id: returnType
      type: System.Type
      description: The return type of the method.
    - id: parameterTypes
      type: System.Type[]
      description: The types of the method's parameters.
    return:
      type: System.Reflection.MethodInfo
      description: The named method on an array class.
  exceptions:
  - type: System.ArgumentException
    description: '*arrayClass* is not an array.'
  - type: System.ArgumentNullException
    description: '*arrayClass* or *methodName* is null.'
- uid: System.Reflection.Emit.ModuleBuilder.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Emit.ModuleBuilder
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: GetHashCode()
  fullName: System.Reflection.Emit.ModuleBuilder.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
    startLine: 768
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the hash code for this instance.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
- uid: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.ModuleBuilder
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: SetCustomAttribute(ConstructorInfo, Byte[])
  name.vb: SetCustomAttribute(ConstructorInfo, Byte())
  fullName: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])
  fullName.vb: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
    startLine: 2211
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Applies a custom attribute to this module by using a specified binary large object (BLOB) that represents the attribute.
  syntax:
    content: public void SetCustomAttribute(ConstructorInfo con, byte[] binaryAttribute)
    content.vb: Public Sub SetCustomAttribute(con As ConstructorInfo, binaryAttribute As Byte())
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: The constructor for the custom attribute.
    - id: binaryAttribute
      type: System.Byte[]
      description: A byte BLOB representing the attribute.
  exceptions:
  - type: System.ArgumentNullException
    description: '*con* or *binaryAttribute* is null.'
- uid: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.ModuleBuilder
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs
    startLine: 2232
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Applies a custom attribute to this module by using a custom attribute builder.
  syntax:
    content: public void SetCustomAttribute(CustomAttributeBuilder customBuilder)
    content.vb: Public Sub SetCustomAttribute(customBuilder As CustomAttributeBuilder)
    parameters:
    - id: customBuilder
      type: System.Reflection.Emit.CustomAttributeBuilder
      description: An instance of a helper class that specifies the custom attribute to apply.
  exceptions:
  - type: System.ArgumentNullException
    description: '*customBuilder* is null.'
references:
- uid: System.Reflection.Emit
  isExternal: false
  name: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.Assembly.yml
  name: Reflection.Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.TypeAttributes.yml
  name: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: System.Type
  parent: System
  isExternal: false
  href: System.Type.yml
  name: Type
  fullName: System.Type
- uid: System.Reflection.Emit.EnumBuilder
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.EnumBuilder.yml
  name: EnumBuilder
  fullName: System.Reflection.Emit.EnumBuilder
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.MethodAttributes.yml
  name: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.CallingConventions.yml
  name: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Type[]
  isExternal: false
  href: System.Type.yml
  name: Type[]
  name.vb: Type()
  fullName: System.Type[]
  fullName.vb: System.Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ()
    fullName: ()
- uid: System.Reflection.Emit.MethodBuilder
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.MethodBuilder.yml
  name: MethodBuilder
  fullName: System.Reflection.Emit.MethodBuilder
- uid: System.Type[][]
  isExternal: true
  name: Type[][]
  name.vb: Type()()
  fullName: System.Type[][]
  fullName.vb: System.Type()()
  spec.csharp:
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: ()
    fullName: ()
- uid: System.Byte[]
  isExternal: false
  href: System.Byte.yml
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    href: System.Byte.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    href: System.Byte.yml
  - name: ()
    fullName: ()
- uid: System.Reflection.FieldAttributes
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.FieldAttributes.yml
  name: FieldAttributes
  fullName: System.Reflection.FieldAttributes
- uid: System.Reflection.Emit.FieldBuilder
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.FieldBuilder.yml
  name: FieldBuilder
  fullName: System.Reflection.Emit.FieldBuilder
- uid: System.Reflection.Emit.TypeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.TypeBuilder.yml
  name: TypeBuilder
  fullName: System.Reflection.Emit.TypeBuilder
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.PackingSize
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.PackingSize.yml
  name: PackingSize
  fullName: System.Reflection.Emit.PackingSize
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.MethodInfo.yml
  name: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection.ConstructorInfo
  isExternal: false
  href: System.Reflection.ConstructorInfo.yml
  name: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Reflection.Emit.CustomAttributeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.CustomAttributeBuilder.yml
  name: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  href: System.InvalidOperationException.yml
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  summary: The exception that is thrown when a method call is invalid for the object's current state.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
