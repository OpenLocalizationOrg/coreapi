items:
- uid: System.Security.Principal.NTAccount
  id: NTAccount
  parent: System.Security.Principal
  children:
  - System.Security.Principal.NTAccount.#ctor(System.String)
  - System.Security.Principal.NTAccount.#ctor(System.String,System.String)
  - System.Security.Principal.NTAccount.Equals(System.Object)
  - System.Security.Principal.NTAccount.GetHashCode
  - System.Security.Principal.NTAccount.IsValidTargetType(System.Type)
  - System.Security.Principal.NTAccount.op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  - System.Security.Principal.NTAccount.op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  - System.Security.Principal.NTAccount.ToString
  - System.Security.Principal.NTAccount.Translate(System.Type)
  - System.Security.Principal.NTAccount.Value
  href: System.Security.Principal.NTAccount.yml
  name: NTAccount
  fullName: System.Security.Principal.NTAccount
  type: Class
  source:
    remote: &o0
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 57
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Represents a user or group account.
  syntax:
    content: 'public sealed class NTAccount : IdentityReference'
    content.vb: Public NotInheritable Class NTAccount Inherits IdentityReference
  inheritance:
  - System.Object
  - System.Security.Principal.IdentityReference
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Security.Principal.NTAccount.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Principal.NTAccount
  href: System.Security.Principal.NTAccount.yml
  name: NTAccount(String)
  fullName: System.Security.Principal.NTAccount.NTAccount(System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 59
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Initializes a new instance of the @'System.Security.Principal.NTAccount' class by using the specified name.
  syntax:
    content: public NTAccount(string name)
    content.vb: Public Sub New(name As String)
    parameters:
    - id: name
      type: System.String
      description: The name used to create the @'System.Security.Principal.NTAccount' object. This parameter cannot be null or an empty string.
  exceptions:
  - type: System.ArgumentNullException
    description: '*name* is null.'
  - type: System.ArgumentException
    description: '*name* is an empty string.-or-*name* is too long.'
- uid: System.Security.Principal.NTAccount.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Principal.NTAccount
  href: System.Security.Principal.NTAccount.yml
  name: NTAccount(String, String)
  fullName: System.Security.Principal.NTAccount.NTAccount(System.String, System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 60
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Initializes a new instance of the @'System.Security.Principal.NTAccount' class by using the specified domain name and account name.
  syntax:
    content: public NTAccount(string domainName, string accountName)
    content.vb: Public Sub New(domainName As String, accountName As String)
    parameters:
    - id: domainName
      type: System.String
      description: The name of the domain. This parameter can be null or an empty string. Domain names that are null values are treated like an empty string.
    - id: accountName
      type: System.String
      description: The name of the account. This parameter cannot be null or an empty string.
  exceptions:
  - type: System.ArgumentNullException
    description: '*accountName* is null.'
  - type: System.ArgumentException
    description: '*accountName* is an empty string.-or-*accountName* is too long.-or-*domainName* is too long.'
- uid: System.Security.Principal.NTAccount.Value
  id: Value
  parent: System.Security.Principal.NTAccount
  href: System.Security.Principal.NTAccount.yml
  name: Value
  fullName: System.Security.Principal.NTAccount.Value
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 61
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Returns an uppercase string representation of this @'System.Security.Principal.NTAccount' object.
  syntax:
    content: public override string Value { get; }
    content.vb: Public Overrides ReadOnly Property Value As String
    parameters: []
    return:
      type: System.String
      description: The uppercase string representation of this @'System.Security.Principal.NTAccount' object.
  overridden: System.Security.Principal.IdentityReference.Value
- uid: System.Security.Principal.NTAccount.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Principal.NTAccount
  href: System.Security.Principal.NTAccount.yml
  name: Equals(Object)
  fullName: System.Security.Principal.NTAccount.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 62
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Returns a value that indicates whether this @'System.Security.Principal.NTAccount' object is equal to a specified object.
  syntax:
    content: public override bool Equals(object o)
    content.vb: Public Overrides Function Equals(o As Object) As Boolean
    parameters:
    - id: o
      type: System.Object
      description: An object to compare with this @'System.Security.Principal.NTAccount' object, or null.
    return:
      type: System.Boolean
      description: true if *o* is an object with the same underlying type and value as this @'System.Security.Principal.NTAccount' object; otherwise, false.
  overridden: System.Security.Principal.IdentityReference.Equals(System.Object)
- uid: System.Security.Principal.NTAccount.GetHashCode
  id: GetHashCode
  parent: System.Security.Principal.NTAccount
  href: System.Security.Principal.NTAccount.yml
  name: GetHashCode()
  fullName: System.Security.Principal.NTAccount.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 63
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Serves as a hash function for the current @'System.Security.Principal.NTAccount' object. The @'System.Security.Principal.NTAccount.GetHashCode' method is suitable for hashing algorithms and data structures like a hash table.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A hash value for the current @'System.Security.Principal.NTAccount' object.
  overridden: System.Security.Principal.IdentityReference.GetHashCode
- uid: System.Security.Principal.NTAccount.IsValidTargetType(System.Type)
  id: IsValidTargetType(System.Type)
  parent: System.Security.Principal.NTAccount
  href: System.Security.Principal.NTAccount.yml
  name: IsValidTargetType(Type)
  fullName: System.Security.Principal.NTAccount.IsValidTargetType(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 64
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Returns a value that indicates whether the specified type is a valid translation type for the @'System.Security.Principal.NTAccount' class.
  syntax:
    content: public override bool IsValidTargetType(Type targetType)
    content.vb: Public Overrides Function IsValidTargetType(targetType As Type) As Boolean
    parameters:
    - id: targetType
      type: System.Type
      description: The type being queried for validity to serve as a conversion from @'System.Security.Principal.NTAccount'. The following target types are valid:- @'System.Security.Principal.NTAccount'- @'System.Security.Principal.SecurityIdentifier'
    return:
      type: System.Boolean
      description: true if *targetType* is a valid translation type for the @'System.Security.Principal.NTAccount' class; otherwise false.
  overridden: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
- uid: System.Security.Principal.NTAccount.op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  id: op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  parent: System.Security.Principal.NTAccount
  href: System.Security.Principal.NTAccount.yml
  name: Equality(NTAccount, NTAccount)
  fullName: System.Security.Principal.NTAccount.Equality(System.Security.Principal.NTAccount, System.Security.Principal.NTAccount)
  type: Operator
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 65
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Compares two @'System.Security.Principal.NTAccount' objects to determine whether they are equal. They are considered equal if they have the same canonical name representation as the one returned by the @'System.Security.Principal.NTAccount.Value' property or if they are both null.
  syntax:
    content: public static bool operator ==(NTAccount left, NTAccount right)
    content.vb: Public Shared Operator =(left As NTAccount, right As NTAccount) As Boolean
    parameters:
    - id: left
      type: System.Security.Principal.NTAccount
      description: The left operand to use for the equality comparison. This parameter can be null.
    - id: right
      type: System.Security.Principal.NTAccount
      description: The right operand to use for the equality comparison. This parameter can be null.
    return:
      type: System.Boolean
      description: true if *left* and *right* are equal; otherwise false.
- uid: System.Security.Principal.NTAccount.op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  id: op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  parent: System.Security.Principal.NTAccount
  href: System.Security.Principal.NTAccount.yml
  name: Inequality(NTAccount, NTAccount)
  fullName: System.Security.Principal.NTAccount.Inequality(System.Security.Principal.NTAccount, System.Security.Principal.NTAccount)
  type: Operator
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 66
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Compares two @'System.Security.Principal.NTAccount' objects to determine whether they are not equal. They are considered not equal if they have different canonical name representations than the one returned by the @'System.Security.Principal.NTAccount.Value' property or if one of the objects is null and the other is not.
  syntax:
    content: public static bool operator !=(NTAccount left, NTAccount right)
    content.vb: Public Shared Operator <>(left As NTAccount, right As NTAccount) As Boolean
    parameters:
    - id: left
      type: System.Security.Principal.NTAccount
      description: The left operand to use for the inequality comparison. This parameter can be null.
    - id: right
      type: System.Security.Principal.NTAccount
      description: The right operand to use for the inequality comparison. This parameter can be null.
    return:
      type: System.Boolean
      description: true if *left* and *right* are not equal; otherwise false.
- uid: System.Security.Principal.NTAccount.ToString
  id: ToString
  parent: System.Security.Principal.NTAccount
  href: System.Security.Principal.NTAccount.yml
  name: ToString()
  fullName: System.Security.Principal.NTAccount.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 67
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Returns the account name, in Domain\Account format, for the account represented by the @'System.Security.Principal.NTAccount' object.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: The account name, in Domain\Account format.
  overridden: System.Security.Principal.IdentityReference.ToString
- uid: System.Security.Principal.NTAccount.Translate(System.Type)
  id: Translate(System.Type)
  parent: System.Security.Principal.NTAccount
  href: System.Security.Principal.NTAccount.yml
  name: Translate(Type)
  fullName: System.Security.Principal.NTAccount.Translate(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 68
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Translates the account name represented by the @'System.Security.Principal.NTAccount' object into another @'System.Security.Principal.IdentityReference'-derived type.
  syntax:
    content: public override IdentityReference Translate(Type targetType)
    content.vb: Public Overrides Function Translate(targetType As Type) As IdentityReference
    parameters:
    - id: targetType
      type: System.Type
      description: The target type for the conversion from @'System.Security.Principal.NTAccount'. The target type must be a type that is considered valid by the @'System.Security.Principal.NTAccount.IsValidTargetType(System.Type)' method.
    return:
      type: System.Security.Principal.IdentityReference
      description: The converted identity.
  overridden: System.Security.Principal.IdentityReference.Translate(System.Type)
  exceptions:
  - type: System.ArgumentNullException
    description: '*targetType *is null.'
  - type: System.ArgumentException
    description: '*targetType *is not an @''System.Security.Principal.IdentityReference''  type.'
  - type: System.Security.Principal.IdentityNotMappedException
    description: Some or all identity references could not be translated.
  - type: System.SystemException
    description: The source account name is too long.-or-A Win32 error code was returned.
references:
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  href: System.Security.Principal.IdentityReference.yml
  name: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
- uid: System.Security.Principal.IdentityReference.Value
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  href: System.Security.Principal.IdentityReference.yml
  name: Value
  fullName: System.Security.Principal.IdentityReference.Value
- uid: System.Security.Principal.IdentityReference.Equals(System.Object)
  parent: System.Security.Principal.IdentityReference
  isExternal: true
  href: System.Security.Principal.IdentityReference.yml
  name: Equals(Object)
  fullName: System.Security.Principal.IdentityReference.Equals(System.Object)
  spec.csharp:
  - uid: System.Security.Principal.IdentityReference.Equals(System.Object)
    name: Equals
    fullName: System.Security.Principal.IdentityReference.Equals
    href: System.Security.Principal.IdentityReference.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Principal.IdentityReference.Equals(System.Object)
    name: Equals
    fullName: System.Security.Principal.IdentityReference.Equals
    href: System.Security.Principal.IdentityReference.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.Security.Principal.IdentityReference.GetHashCode
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  href: System.Security.Principal.IdentityReference.yml
  name: GetHashCode()
  fullName: System.Security.Principal.IdentityReference.GetHashCode()
  spec.csharp:
  - uid: System.Security.Principal.IdentityReference.GetHashCode
    name: GetHashCode
    fullName: System.Security.Principal.IdentityReference.GetHashCode
    href: System.Security.Principal.IdentityReference.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Principal.IdentityReference.GetHashCode
    name: GetHashCode
    fullName: System.Security.Principal.IdentityReference.GetHashCode
    href: System.Security.Principal.IdentityReference.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  parent: System.Security.Principal.IdentityReference
  isExternal: true
  href: System.Security.Principal.IdentityReference.yml
  name: IsValidTargetType(Type)
  fullName: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  spec.csharp:
  - uid: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
    name: IsValidTargetType
    fullName: System.Security.Principal.IdentityReference.IsValidTargetType
    href: System.Security.Principal.IdentityReference.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
    name: IsValidTargetType
    fullName: System.Security.Principal.IdentityReference.IsValidTargetType
    href: System.Security.Principal.IdentityReference.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Type
  parent: System
  isExternal: false
  href: System.Type.yml
  name: Type
  fullName: System.Type
- uid: System.Security.Principal.NTAccount
  parent: System.Security.Principal
  isExternal: false
  href: System.Security.Principal.NTAccount.yml
  name: NTAccount
  fullName: System.Security.Principal.NTAccount
- uid: System.Security.Principal.IdentityReference.ToString
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  href: System.Security.Principal.IdentityReference.yml
  name: ToString()
  fullName: System.Security.Principal.IdentityReference.ToString()
  spec.csharp:
  - uid: System.Security.Principal.IdentityReference.ToString
    name: ToString
    fullName: System.Security.Principal.IdentityReference.ToString
    href: System.Security.Principal.IdentityReference.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Principal.IdentityReference.ToString
    name: ToString
    fullName: System.Security.Principal.IdentityReference.ToString
    href: System.Security.Principal.IdentityReference.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.Principal.IdentityReference.Translate(System.Type)
  parent: System.Security.Principal.IdentityReference
  isExternal: true
  href: System.Security.Principal.IdentityReference.yml
  name: Translate(Type)
  fullName: System.Security.Principal.IdentityReference.Translate(System.Type)
  spec.csharp:
  - uid: System.Security.Principal.IdentityReference.Translate(System.Type)
    name: Translate
    fullName: System.Security.Principal.IdentityReference.Translate
    href: System.Security.Principal.IdentityReference.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Principal.IdentityReference.Translate(System.Type)
    name: Translate
    fullName: System.Security.Principal.IdentityReference.Translate
    href: System.Security.Principal.IdentityReference.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.Security.Principal.IdentityNotMappedException
  isExternal: false
  href: System.Security.Principal.IdentityNotMappedException.yml
  name: IdentityNotMappedException
  fullName: System.Security.Principal.IdentityNotMappedException
  summary: Represents an exception for a principal whose identity could not be mapped to a known identity.
- uid: System.SystemException
  parent: System
  isExternal: true
  name: SystemException
  fullName: System.SystemException
