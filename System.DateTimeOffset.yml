items:
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  id: DateTimeOffset
  parent: System
  children:
  - System.DateTimeOffset.#ctor(System.DateTime)
  - System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)
  - System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)
  - System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)
  - System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)
  - System.DateTimeOffset.Add(System.TimeSpan)
  - System.DateTimeOffset.AddDays(System.Double)
  - System.DateTimeOffset.AddHours(System.Double)
  - System.DateTimeOffset.AddMilliseconds(System.Double)
  - System.DateTimeOffset.AddMinutes(System.Double)
  - System.DateTimeOffset.AddMonths(System.Int32)
  - System.DateTimeOffset.AddSeconds(System.Double)
  - System.DateTimeOffset.AddTicks(System.Int64)
  - System.DateTimeOffset.AddYears(System.Int32)
  - System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.CompareTo(System.DateTimeOffset)
  - System.DateTimeOffset.Date
  - System.DateTimeOffset.DateTime
  - System.DateTimeOffset.Day
  - System.DateTimeOffset.DayOfWeek
  - System.DateTimeOffset.DayOfYear
  - System.DateTimeOffset.Equals(System.DateTimeOffset)
  - System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.Equals(System.Object)
  - System.DateTimeOffset.EqualsExact(System.DateTimeOffset)
  - System.DateTimeOffset.FromFileTime(System.Int64)
  - System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)
  - System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)
  - System.DateTimeOffset.GetHashCode
  - System.DateTimeOffset.Hour
  - System.DateTimeOffset.LocalDateTime
  - System.DateTimeOffset.MaxValue
  - System.DateTimeOffset.Millisecond
  - System.DateTimeOffset.Minute
  - System.DateTimeOffset.MinValue
  - System.DateTimeOffset.Month
  - System.DateTimeOffset.Now
  - System.DateTimeOffset.Offset
  - System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)
  - System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.op_Implicit(System.DateTime)~System.DateTimeOffset
  - System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)
  - System.DateTimeOffset.Parse(System.String)
  - System.DateTimeOffset.Parse(System.String,System.IFormatProvider)
  - System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  - System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
  - System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  - System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  - System.DateTimeOffset.Second
  - System.DateTimeOffset.Subtract(System.DateTimeOffset)
  - System.DateTimeOffset.Subtract(System.TimeSpan)
  - System.DateTimeOffset.System#IComparable#CompareTo(System.Object)
  - System.DateTimeOffset.Ticks
  - System.DateTimeOffset.TimeOfDay
  - System.DateTimeOffset.ToFileTime
  - System.DateTimeOffset.ToLocalTime
  - System.DateTimeOffset.ToOffset(System.TimeSpan)
  - System.DateTimeOffset.ToString
  - System.DateTimeOffset.ToString(System.IFormatProvider)
  - System.DateTimeOffset.ToString(System.String)
  - System.DateTimeOffset.ToString(System.String,System.IFormatProvider)
  - System.DateTimeOffset.ToUniversalTime
  - System.DateTimeOffset.ToUnixTimeMilliseconds
  - System.DateTimeOffset.ToUnixTimeSeconds
  - System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)
  - System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  - System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  - System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  - System.DateTimeOffset.UtcDateTime
  - System.DateTimeOffset.UtcNow
  - System.DateTimeOffset.UtcTicks
  - System.DateTimeOffset.Year
  langs:
  - csharp
  - vb
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DateTimeOffset
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 34
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents a point in time, typically expressed as a date and time of day, relative to Coordinated Universal Time (UTC).</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> structure includes a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value, together with an <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property that defines the difference between the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> instance's date and time and Coordinated Universal Time (UTC). Because it exactly defines a date and time relative to UTC, the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> structure does not include a <strong>Kind</strong> member, as the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> structure does. It represents dates and times with values whose UTC ranges from 12:00:00 midnight, January 1, 0001 Anno Domini (Common Era), to 11:59:59 P.M., December 31, 9999 A.D. (C.E.).</p>\n<p>The time component of a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is measured in 100-nanosecond units called ticks, and a particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D. (C.E.) in the <xref href=\"System.Globalization.GregorianCalendar\" data-throw-if-not-resolved=\"false\"></xref> calendar. A <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is always expressed in the context of an explicit or default calendar. Ticks that are attributable to leap seconds are not included in the total number of ticks.</p>\n<p>   If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <xref href=\"System.TimeSpan.TicksPerDay\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.TimeSpan.TicksPerHour\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.TimeSpan.TicksPerMinute\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.TimeSpan.TicksPerSecond\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.TimeSpan.TicksPerMillisecond\" data-throw-if-not-resolved=\"false\"></xref> constant to perform the conversion. For example, to add the number of seconds represented by a specified number of ticks to the <xref href=\"System.DateTimeOffset.Second\" data-throw-if-not-resolved=\"false\"></xref> component of a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value, you can use the expression <code>dateValue.Second + nTicks/Timespan.TicksPerSecond</code>.</p>\n<p>Although a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value includes an offset, it is not a fully time zone-aware data structure. While an offset from UTC is one characteristic of a time zone, it does not unambiguously identify a time zone. Not only do multiple time zones share the same offset from UTC, but the offset of a single time zone changes if it observes daylight saving time. This means that, as soon as a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is disassociated from its time zone, it can no longer be unambiguously linked back to its original time zone.</p>\n<p>Because <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> is a structure, a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that has been declared but not otherwise initialized contains the default values for each of its member fields. This means that its <xref href=\"System.DateTimeOffset.DateTime\" data-throw-if-not-resolved=\"false\"></xref> property is set to <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref> and its <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property is set to <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>You can create a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value by calling any of the overloads of its constructor, which are similar to the overloaded constructors for the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> structure. You can also create a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value by assigning it a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value. This is an implicit conversion; it does not require a casting operator (in C#) or call to a conversion method (in Visual Basic). You can also initialize a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value from the string representation of a date and time by calling a number of static string parsing methods, which include <xref href=\"System.DateTimeOffset.Parse(System.String)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>The members of the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> structure provide functionality in the following areas:</p>\n<ul><li>\n<p>Date and time arithmetic. </p>\n<p>You can add or subtract either dates or time intervals from a particular <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value. Arithmetic operations with <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> values, unlike those with <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> values, adjust for differences in time offsets when returning a result. For example, the following code uses <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> variables to subtract the current local time from the current UTC time. The code then uses <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> variables to perform the same operation. The subtraction with <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> values returns the local time zone's difference from UTC, while the subtraction with <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> values returns <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref>.</p>System.DateTimeOffset.Type#1</li><li>\n<p>Type conversion operations. </p>\n<p>You can convert <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> values to <xref href=\"System.DateTimeOffset.DateTime\" data-throw-if-not-resolved=\"false\"></xref> values and vice versa.</p>\n</li><li>\n<p>Time manipulation and extraction operations. </p>\n<p>You can extract either the date or the time of a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value. You can also retrieve the value of a particular <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> component, such as its year or its month.</p>\n</li><li>\n<p>Date and time conversion. </p>\n<p>You can convert any <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value to another <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value that represents the same point in time in another time zone. However, a time zone's adjustment rules are applied only in the case of the <xref href=\"System.DateTimeOffset.ToLocalTime\" data-throw-if-not-resolved=\"false\"></xref> method, which converts a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value to the date and time in the local system zone.</p>\n</li><li>\n<p>Date and time comparison. </p>\n<p>You can determine whether any particular <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is earlier than, the same as, or later than another <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value. Before the comparison is performed, all values are converted to UTC.</p>\n</li></ul>\n"
  syntax:
    content: >-
      [StructLayout(LayoutKind.Auto)]

      [Serializable]

      public struct DateTimeOffset : IComparable, IFormattable, ISerializable, IDeserializationCallback, IComparable<DateTimeOffset>, IEquatable<DateTimeOffset>
    content.vb: >-
      <StructLayout(LayoutKind.Auto)>

      <Serializable>

      Public Structure DateTimeOffset
          Implements IComparable, IFormattable, ISerializable, IDeserializationCallback, IComparable(Of DateTimeOffset), IEquatable(Of DateTimeOffset)
  implements:
  - System.IComparable
  - System.IComparable{System.DateTimeOffset}
  - System.IEquatable{System.DateTimeOffset}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.DateTimeOffset.MaxValue
  commentId: F:System.DateTimeOffset.MaxValue
  id: MaxValue
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: MaxValue
  nameWithType: DateTimeOffset.MaxValue
  fullName: System.DateTimeOffset.MaxValue
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MaxValue
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 52
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the greatest possible value of <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref>. This field is read-only.</p>\n"
  remarks: "\n<p>The value of this constant is 12/31/9999 11:59:59 PM +00:00.</p>\n<p>The <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> property is used to determine whether the value of a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object or the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value returned by an arithmetic operation is the same as or earlier than this maximum range value. If it is not, the method throws an <xref href=\"System.ArgumentOutOfRangeException\" data-throw-if-not-resolved=\"false\"></xref>. Any <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is converted to Coordinated Universal Time (UTC) before the method compares it with <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.  This means that a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value whose date and time are close to the maximum range, but whose offset is negative, may throw an exception. For example, the value 12/31/9999 11:00 PM -02:00 is out of range because it is one hour later than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> when it is converted to UTC.</p>\n<p>Some calendars, such as the <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref>, support an upper date range that is earlier than <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. In these cases, trying to access <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> in variable assignments or formatting and parsing operations can throw an <xref href=\"System.ArgumentOutOfRangeException\" data-throw-if-not-resolved=\"false\"></xref>. Instead of retrieving the value of <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>, you can retrieve the value of the specified culture's latest valid date value from the <xref href=\"System.Globalization.Calendar.MaxSupportedDateTime\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n"
  syntax:
    content: public static readonly DateTimeOffset MaxValue
    content.vb: Public Shared ReadOnly MaxValue As DateTimeOffset
    return:
      type: System.DateTimeOffset
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> is outside the range of the current or specified culture's default calendar.</p>\n"
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.DateTimeOffset.MinValue
  commentId: F:System.DateTimeOffset.MinValue
  id: MinValue
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: MinValue
  nameWithType: DateTimeOffset.MinValue
  fullName: System.DateTimeOffset.MinValue
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MinValue
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 51
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the earliest possible <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value. This field is read-only.</p>\n"
  remarks: "\n<p>The value of this constant is 1/1/0001 12:00:00 AM +00:00.</p>\n<p>The <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref> property is used to determine whether the value of a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object or the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value returned by an arithmetic operation is the same as or later than this minimum range value. If it is not, the method throws an <xref href=\"System.ArgumentOutOfRangeException\" data-throw-if-not-resolved=\"false\"></xref>. Any <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is converted to Coordinated Universal Time (UTC) before the method performs the comparison with <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.  This means that a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value whose date and time are close to the minimum range, but whose offset is positive, may throw an exception. For example, the value 1/1/0001 1:00:00 AM +02:00 is out of range because it is one hour earlier than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref> when it is converted to UTC.</p>\n"
  syntax:
    content: public static readonly DateTimeOffset MinValue
    content.vb: Public Shared ReadOnly MinValue As DateTimeOffset
    return:
      type: System.DateTimeOffset
  seealso:
  - type: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
    commentId: M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.DateTimeOffset.#ctor(System.DateTime)
  commentId: M:System.DateTimeOffset.#ctor(System.DateTime)
  id: '#ctor(System.DateTime)'
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: DateTimeOffset(DateTime)
  nameWithType: DateTimeOffset.DateTimeOffset(DateTime)
  fullName: System.DateTimeOffset.DateTimeOffset(System.DateTime)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 70
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> structure using the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  remarks: "\n<p>This constructor's behavior depends on the value of the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the <em>dateTime</em> parameter:</p>\n<ul><li>\n<p>If the value of <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>, the <xref href=\"System.DateTimeOffset.DateTime\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance is set equal to <em>dateTime</em>, and the <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property is set equal to <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n</li><li>\n<p>If the value of <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>, the <xref href=\"System.DateTimeOffset.DateTime\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance is set equal to <em>dateTime</em>, and the <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property is set equal to the offset of the local system's current time zone.</p>\n</li></ul>\n"
  syntax:
    content: public DateTimeOffset(DateTime dateTime)
    content.vb: Public Sub New(dateTime As Date)
    parameters:
    - id: dateTime
      type: System.DateTime
      description: "\n<p>A date and time.   </p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The Coordinated Universal Time (UTC) date and time that results from applying the offset is earlier than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>The UTC date and time that results from applying the offset is later than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)
  commentId: M:System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)
  id: '#ctor(System.DateTime,System.TimeSpan)'
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: DateTimeOffset(DateTime, TimeSpan)
  nameWithType: DateTimeOffset.DateTimeOffset(DateTime, TimeSpan)
  fullName: System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 86
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> structure using the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value and offset.</p>\n"
  remarks: "\n<p>This constructor's behavior depends in part on the value of the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the <em>dateTime</em> parameter:</p>\n<ul><li>\n<p>If the value of <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>, the value of the <em>offset</em> parameter must be 0 or an <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> is thrown.</p>\n</li><li>\n<p>If the value of <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>, the value of the <em>offset</em> parameter must be equal to the local time zone's offset from Coordinated Universal Time (UTC) for that particular date or an <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> is thrown.</p>\n</li><li>\n<p>If the value of <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>, the <em>offset</em> parameter can have any valid value.</p>\n</li></ul>\n"
  syntax:
    content: public DateTimeOffset(DateTime dateTime, TimeSpan offset)
    content.vb: Public Sub New(dateTime As Date, offset As TimeSpan)
    parameters:
    - id: dateTime
      type: System.DateTime
      description: "\n<p>A date and time.   </p>\n"
    - id: offset
      type: System.TimeSpan
      description: "\n<p>The time's offset from Coordinated Universal Time (UTC).</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>dateTime.Kind</em> equals <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref> and <em>offset</em> does not equal zero.</p>\n<p>-or-</p>\n<p>\n<em>dateTime.Kind</em> equals <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref> and <em>offset</em> does not equal the offset of the system's local time zone.</p>\n<p>-or-</p>\n<p>\n<em>offset</em> is not specified in whole minutes.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is less than -14 hours or greater than 14 hours.</p>\n<p>-or-</p>\n<p>\n<xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)
  commentId: M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)'
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, Int32, TimeSpan)
  nameWithType: DateTimeOffset.DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, Int32, TimeSpan)
  fullName: System.DateTimeOffset.DateTimeOffset(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 110
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> structure using the specified year, month, day, hour, minute, second, millisecond, and offset.</p>\n"
  remarks: "\n<p>This constructor interprets <em>year</em>, <em>month</em>, and <em>day</em> as a year, month, and day in the Gregorian calendar. To instantiate a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value by using the year, month, and day in another calendar, call the <xref href=\"System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>\n"
  syntax:
    content: public DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset)
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, offset As TimeSpan)
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>The year (1 through 9999).</p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>The month (1 through 12).</p>\n"
    - id: day
      type: System.Int32
      description: "\n<p>The day (1 through the number of days in <em>month</em>).</p>\n"
    - id: hour
      type: System.Int32
      description: "\n<p>The hours (0 through 23).   </p>\n"
    - id: minute
      type: System.Int32
      description: "\n<p>The minutes (0 through 59).</p>\n"
    - id: second
      type: System.Int32
      description: "\n<p>The seconds (0 through 59).</p>\n"
    - id: millisecond
      type: System.Int32
      description: "\n<p>The milliseconds (0 through 999).</p>\n"
    - id: offset
      type: System.TimeSpan
      description: "\n<p>The time's offset from Coordinated Universal Time (UTC).</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>offset</em> does not represent whole minutes.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is less than one or greater than 9999.</p>\n<p>-or-</p>\n<p>\n<em>month</em> is less than one or greater than 12.</p>\n<p>-or-</p>\n<p>\n<em>day</em> is less than one or greater than the number of days in <em>month</em>.</p>\n<p>-or-</p>\n<p>\n<em>hour</em> is less than zero or greater than 23.</p>\n<p>-or-</p>\n<p>\n<em>minute</em> is less than 0 or greater than 59.</p>\n<p>-or-</p>\n<p>\n<em>second</em> is less than 0 or greater than 59.</p>\n<p>-or-</p>\n<p>\n<em>millisecond</em> is less than 0 or greater than 999.</p>\n<p>-or-</p>\n<p>\n<em>offset</em> is less than -14 or greater than 14.</p>\n<p>-or-</p>\n<p>The <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> property is earlier than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or later than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)
  commentId: M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)'
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, TimeSpan)
  nameWithType: DateTimeOffset.DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, TimeSpan)
  fullName: System.DateTimeOffset.DateTimeOffset(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 103
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> structure using the specified year, month, day, hour, minute, second, and offset.</p>\n"
  remarks: "\n<p>This constructor interprets <em>year</em>, <em>month</em>, and <em>day</em> as a year, month, and day in the Gregorian calendar. To instantiate a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value by using the year, month, and day in another calendar, call the <xref href=\"System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>\n"
  syntax:
    content: public DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset)
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, offset As TimeSpan)
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>The year (1 through 9999).</p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>The month (1 through 12).</p>\n"
    - id: day
      type: System.Int32
      description: "\n<p>The day (1 through the number of days in <em>month</em>).</p>\n"
    - id: hour
      type: System.Int32
      description: "\n<p>The hours (0 through 23).   </p>\n"
    - id: minute
      type: System.Int32
      description: "\n<p>The minutes (0 through 59).</p>\n"
    - id: second
      type: System.Int32
      description: "\n<p>The seconds (0 through 59).</p>\n"
    - id: offset
      type: System.TimeSpan
      description: "\n<p>The time's offset from Coordinated Universal Time (UTC).</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>offset</em> does not represent whole minutes.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is less than one or greater than 9999.</p>\n<p>-or-</p>\n<p>\n<em>month</em> is less than one or greater than 12.</p>\n<p>-or-</p>\n<p>\n<em>day</em> is less than one or greater than the number of days in <em>month</em>.</p>\n<p>-or-</p>\n<p>\n<em>hour</em> is less than zero or greater than 23.</p>\n<p>-or-</p>\n<p>\n<em>minute</em> is less than 0 or greater than 59.</p>\n<p>-or-</p>\n<p>\n<em>second</em> is less than 0 or greater than 59.</p>\n<p>-or-</p>\n<p>\n<em>offset</em> is less than -14 hours or greater than 14 hours.</p>\n<p>-or-</p>\n<p>The <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> property is earlier than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or later than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)
  commentId: M:System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)
  id: '#ctor(System.Int64,System.TimeSpan)'
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: DateTimeOffset(Int64, TimeSpan)
  nameWithType: DateTimeOffset.DateTimeOffset(Int64, TimeSpan)
  fullName: System.DateTimeOffset.DateTimeOffset(System.Int64, System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 61
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> structure using the specified number of ticks and offset.</p>\n"
  remarks: "\n<p>Ordinarily, trying to call the <xref href=\"System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> constructor to instantiate a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value with a local time and an offset other than that of the local time zone throws an <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref>. You can use this overload of the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> constructor to work around this limitation. The following example uses the local time's number of ticks to instantiate a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value whose offset does not necessarily represent that of the local time:</p>System.DateTimeOffset.Constructors#4"
  syntax:
    content: public DateTimeOffset(long ticks, TimeSpan offset)
    content.vb: Public Sub New(ticks As Long, offset As TimeSpan)
    parameters:
    - id: ticks
      type: System.Int64
      description: "\n<p>A date and time expressed as the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001.</p>\n"
    - id: offset
      type: System.TimeSpan
      description: "\n<p>The time's offset from Coordinated Universal Time (UTC).</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>offset</em> is not specified in whole minutes.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> property is earlier than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or later than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>\n<em>ticks</em> is less than <strong>DateTimeOffset.MinValue.Ticks</strong> or greater than <strong>DateTimeOffset.MaxValue.Ticks</strong>.</p>\n<p>-or-</p>\n<p>\n<em>Offset</em> s less than -14 hours or greater than 14 hours.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.Date
  commentId: P:System.DateTimeOffset.Date
  id: Date
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Date
  nameWithType: DateTimeOffset.Date
  fullName: System.DateTimeOffset.Date
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Date
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 185
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value that represents the date component of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>This property removes any significant part of the time component from a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and returns only its significant date component. For example, if the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object has a date and time value of \"1/12/07 4:01pm +7:30\", the property returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value of \"1/12/07 12:00:00 AM\". The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value can then be displayed by using any of the standard or custom format specifiers that display dates only. (See the Example section for an illustration.)</p>\n<p>The value of the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is always <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. It is not affected by the value of the <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n<p>To display a date without its time component, you can also use the \"D\" or \"d\" format specifiers; for an illustration, see the Example section.</p>\n"
  syntax:
    content: public DateTime Date { get; }
    content.vb: Public ReadOnly Property Date As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>A <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value that represents the date component of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTimeOffset.DateTime
  commentId: P:System.DateTimeOffset.DateTime
  id: DateTime
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: DateTime
  nameWithType: DateTimeOffset.DateTime
  fullName: System.DateTimeOffset.DateTime
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DateTime
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 141
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value that represents the date and time of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.DateTime\" data-throw-if-not-resolved=\"false\"></xref> property is not affected by the value of the <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>This property returns both the date and the time component of a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, which makes it useful for performing <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> to <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> conversion. For example, if the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object has a date and time value of \"1/12/07 4:01pm + 7:30\", the property returns a date of \"1/12/07 4:01pm\". </p>\n<p>The value of the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public DateTime DateTime { get; }
    content.vb: Public ReadOnly Property DateTime As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>The date and time of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  seealso:
  - type: System.DateTimeOffset.LocalDateTime
    commentId: P:System.DateTimeOffset.LocalDateTime
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTimeOffset.Day
  commentId: P:System.DateTimeOffset.Day
  id: Day
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Day
  nameWithType: DateTimeOffset.Day
  fullName: System.DateTimeOffset.Day
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Day
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 194
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the day of the month represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.Day\" data-throw-if-not-resolved=\"false\"></xref> property is not affected by the value of the <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>You can also create a string representation of a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object's day component by calling the <xref href=\"System.DateTimeOffset.ToString\" data-throw-if-not-resolved=\"false\"></xref> method with the \"d\" or \"dd\" custom format specifiers.</p>\n"
  syntax:
    content: public int Day { get; }
    content.vb: Public ReadOnly Property Day As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The day component of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, expressed as a value between 1 and 31.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTimeOffset.DayOfWeek
  commentId: P:System.DateTimeOffset.DayOfWeek
  id: DayOfWeek
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: DayOfWeek
  nameWithType: DateTimeOffset.DayOfWeek
  fullName: System.DateTimeOffset.DayOfWeek
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DayOfWeek
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 207
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the day of the week represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The value of the constants in the <xref href=\"System.DayOfWeek\" data-throw-if-not-resolved=\"false\"></xref> enumeration ranges from <xref href=\"System.DayOfWeek.Sunday\" data-throw-if-not-resolved=\"false\"></xref> to <xref href=\"System.DayOfWeek.Saturday\" data-throw-if-not-resolved=\"false\"></xref>. If cast to an integer, its value ranges from zero (which indicates <xref href=\"System.DayOfWeek.Sunday\" data-throw-if-not-resolved=\"false\"></xref>) to six (which indicates <xref href=\"System.DayOfWeek.Saturday\" data-throw-if-not-resolved=\"false\"></xref>). </p>\n<p>You can also display the weekday name of a particular date by using the \"D\" format specifier or the \"dddd\" custom format specifier. For example:</p>System.DateTimeOffset.Properties#4<p>Note that the string returned by calling the <strong>ToString</strong> method of the <xref href=\"System.DayOfWeek\" data-throw-if-not-resolved=\"false\"></xref> enumeration member that is returned by this property is not localized. To extract a string that contains the weekday name of the current culture or of a specific culture, call the <xref href=\"System.DateTimeOffset.ToString\" data-throw-if-not-resolved=\"false\"></xref> method with the \"dddd\" custom format specifier. For example, the following code displays the weekday name for a date using the <strong>fr-fr</strong> culture.</p>System.DateTimeOffset.Properties#5"
  syntax:
    content: public DayOfWeek DayOfWeek { get; }
    content.vb: Public ReadOnly Property DayOfWeek As DayOfWeek
    parameters: []
    return:
      type: System.DayOfWeek
      description: "\n<p>One of the enumeration values that indicates the day of the week of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTimeOffset.DayOfYear
  commentId: P:System.DateTimeOffset.DayOfYear
  id: DayOfYear
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: DayOfYear
  nameWithType: DateTimeOffset.DayOfYear
  fullName: System.DateTimeOffset.DayOfYear
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DayOfYear
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 218
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the day of the year represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public int DayOfYear { get; }
    content.vb: Public ReadOnly Property DayOfYear As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The day of the year of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, expressed as a value between 1 and 366.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTimeOffset.Hour
  commentId: P:System.DateTimeOffset.Hour
  id: Hour
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Hour
  nameWithType: DateTimeOffset.Hour
  fullName: System.DateTimeOffset.Hour
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Hour
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 229
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the hour component of the time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.Hour\" data-throw-if-not-resolved=\"false\"></xref> property is not affected by the value of the <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n<p>You can also create a string representation of a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object's hour component by calling the <xref href=\"System.DateTimeOffset.ToString\" data-throw-if-not-resolved=\"false\"></xref> method with the \"H\", or \"HH\" custom format specifiers. </p>\n"
  syntax:
    content: public int Hour { get; }
    content.vb: Public ReadOnly Property Hour As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The hour component of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object. This property uses a 24-hour clock; the value ranges from 0 to 23.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTimeOffset.LocalDateTime
  commentId: P:System.DateTimeOffset.LocalDateTime
  id: LocalDateTime
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: LocalDateTime
  nameWithType: DateTimeOffset.LocalDateTime
  fullName: System.DateTimeOffset.LocalDateTime
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: LocalDateTime
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 155
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value that represents the local date and time of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>If necessary, the <xref href=\"System.DateTimeOffset.LocalDateTime\" data-throw-if-not-resolved=\"false\"></xref> property converts the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object's date and time to the local system's date and time. The conversion is a two-step operation:</p>\n<ol><li>\n<p>The property converts the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object's time to Coordinated Universal Time (UTC).</p>\n</li><li>\n<p>The property then converts UTC to local time.</p>\n</li></ol>\n<p>There are no invalid times and ambiguous times are mapped to the local zone's standard time. (However, the conversion can create an anomaly: if a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value that is derived from the local computer reflects an ambiguous date and time, that value can be converted to UTC and then back to a local time that differs from the original time.)  The property applies any adjustment rules in the local time zone when it performs this conversion.</p>\n<p>This property returns both the date and the time component of a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, which makes it useful for <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> to <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> conversion. In addition to performing any necessary time conversion, this property differs from the <xref href=\"System.DateTimeOffset.DateTime\" data-throw-if-not-resolved=\"false\"></xref> property by setting the value of the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public DateTime LocalDateTime { get; }
    content.vb: Public ReadOnly Property LocalDateTime As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>The local date and time of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  seealso:
  - type: System.DateTimeOffset.DateTime
    commentId: P:System.DateTimeOffset.DateTime
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTimeOffset.Millisecond
  commentId: P:System.DateTimeOffset.Millisecond
  id: Millisecond
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Millisecond
  nameWithType: DateTimeOffset.Millisecond
  fullName: System.DateTimeOffset.Millisecond
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Millisecond
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 241
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the millisecond component of the time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>You can also create a string representation of a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object's millisecond component by calling the <xref href=\"System.DateTimeOffset.ToString\" data-throw-if-not-resolved=\"false\"></xref> method with the \"fff\" custom format specifier. </p>\n<p>If you rely on properties such as <xref href=\"System.DateTimeOffset.Now\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.DateTimeOffset.UtcNow\" data-throw-if-not-resolved=\"false\"></xref> to accurately track the number of elapsed milliseconds, the precision of the time's millisecond component depends on the resolution of the system clock. On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds.</p>\n"
  syntax:
    content: public int Millisecond { get; }
    content.vb: Public ReadOnly Property Millisecond As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The millisecond component of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, expressed as an integer between 0 and 999.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTimeOffset.Minute
  commentId: P:System.DateTimeOffset.Minute
  id: Minute
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Minute
  nameWithType: DateTimeOffset.Minute
  fullName: System.DateTimeOffset.Minute
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Minute
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 252
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the minute component of the time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.Minute\" data-throw-if-not-resolved=\"false\"></xref> property is not affected by the value of the <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>You can also create a string representation of a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object's minute component by calling the <xref href=\"System.DateTimeOffset.ToString\" data-throw-if-not-resolved=\"false\"></xref> method with the \"m\", or \"mm\" custom format specifiers.</p>\n"
  syntax:
    content: public int Minute { get; }
    content.vb: Public ReadOnly Property Minute As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The minute component of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, expressed as an integer between 0 and 59.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTimeOffset.Month
  commentId: P:System.DateTimeOffset.Month
  id: Month
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Month
  nameWithType: DateTimeOffset.Month
  fullName: System.DateTimeOffset.Month
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Month
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 263
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the month component of the date represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.Month\" data-throw-if-not-resolved=\"false\"></xref> property is not affected by the value of the <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>You can also create a string representation of a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object's month component by calling the <xref href=\"System.DateTimeOffset.ToString\" data-throw-if-not-resolved=\"false\"></xref> method with the \"M\" or \"MM\" custom format specifiers.</p>\n"
  syntax:
    content: public int Month { get; }
    content.vb: Public ReadOnly Property Month As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The month component of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, expressed as an integer between 1 and 12.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTimeOffset.Now
  commentId: P:System.DateTimeOffset.Now
  id: Now
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Now
  nameWithType: DateTimeOffset.Now
  fullName: System.DateTimeOffset.Now
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Now
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 129
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that is set to the current date and time on the current computer, with the offset set to the local time's offset from Coordinated Universal Time (UTC).</p>\n"
  remarks: "\n<p>The precision of the current local time's millisecond component depends on the resolution of the system clock. On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds.</p>\n"
  syntax:
    content: public static DateTimeOffset Now { get; }
    content.vb: Public Shared ReadOnly Property Now As DateTimeOffset
    parameters: []
    return:
      type: System.DateTimeOffset
      description: "\n<p>A <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object whose date and time is the current local time and whose offset is the local time zone's offset from Coordinated Universal Time (UTC).</p>\n"
  seealso:
  - type: System.DateTimeOffset.UtcNow
    commentId: P:System.DateTimeOffset.UtcNow
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.DateTimeOffset.Offset
  commentId: P:System.DateTimeOffset.Offset
  id: Offset
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Offset
  nameWithType: DateTimeOffset.Offset
  fullName: System.DateTimeOffset.Offset
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Offset
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 270
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the time's offset from Coordinated Universal Time (UTC). </p>\n"
  remarks: "\n<p>The value of the <xref href=\"System.TimeSpan.Hours\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object can range from -14 hours to 14 hours. </p>\n<p>The value of the <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property is precise to the minute.</p>\n"
  syntax:
    content: public TimeSpan Offset { get; }
    content.vb: Public ReadOnly Property Offset As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The difference between the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object's time value and Coordinated Universal Time (UTC).</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTimeOffset.Second
  commentId: P:System.DateTimeOffset.Second
  id: Second
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Second
  nameWithType: DateTimeOffset.Second
  fullName: System.DateTimeOffset.Second
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Second
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 279
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the second component of the clock time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.Second\" data-throw-if-not-resolved=\"false\"></xref> property is not affected by the value of the <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>You can also create a string representation of a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object's second component by calling the <xref href=\"System.DateTimeOffset.ToString\" data-throw-if-not-resolved=\"false\"></xref> method with the \"s\", or \"ss\" custom format specifiers.</p>\n"
  syntax:
    content: public int Second { get; }
    content.vb: Public ReadOnly Property Second As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The second component of the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, expressed as an integer value between 0 and 59.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTimeOffset.Ticks
  commentId: P:System.DateTimeOffset.Ticks
  id: Ticks
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Ticks
  nameWithType: DateTimeOffset.Ticks
  fullName: System.DateTimeOffset.Ticks
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Ticks
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 291
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the number of ticks that represents the date and time of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object in clock time.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.Ticks\" data-throw-if-not-resolved=\"false\"></xref> property is not affected by the value of the <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>The value of the <xref href=\"System.DateTimeOffset.Ticks\" data-throw-if-not-resolved=\"false\"></xref> property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001 (the value of <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>). It does not include ticks that would be added by leap seconds. A nanosecond is one billionth of a second; there are ten million ticks in a second. The value of the <xref href=\"System.DateTimeOffset.Ticks\" data-throw-if-not-resolved=\"false\"></xref> property ranges from <strong>DateTimeOffset.MinValue.Ticks</strong> to <strong>DateTimeOffset.MaxValue.Ticks</strong>.</p>\n<p>You can assign the number of ticks to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object by using the <xref href=\"System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> constructor overload.</p>\n"
  syntax:
    content: public long Ticks { get; }
    content.vb: Public ReadOnly Property Ticks As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The number of ticks in the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object's clock time.</p>\n"
  seealso:
  - type: System.DateTimeOffset.UtcDateTime
    commentId: P:System.DateTimeOffset.UtcDateTime
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTimeOffset.TimeOfDay
  commentId: P:System.DateTimeOffset.TimeOfDay
  id: TimeOfDay
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: TimeOfDay
  nameWithType: DateTimeOffset.TimeOfDay
  fullName: System.DateTimeOffset.TimeOfDay
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TimeOfDay
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 306
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the time of day for the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.TimeOfDay\" data-throw-if-not-resolved=\"false\"></xref> property is not affected by the value of the <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>The <xref href=\"System.DateTimeOffset.TimeOfDay\" data-throw-if-not-resolved=\"false\"></xref> property returns the time component of a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object in the form of a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object. It is equivalent to the <xref href=\"System.DateTime.TimeOfDay\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  syntax:
    content: public TimeSpan TimeOfDay { get; }
    content.vb: Public ReadOnly Property TimeOfDay As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The time interval of the current date that has elapsed since midnight.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTimeOffset.UtcDateTime
  commentId: P:System.DateTimeOffset.UtcDateTime
  id: UtcDateTime
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: UtcDateTime
  nameWithType: DateTimeOffset.UtcDateTime
  fullName: System.DateTimeOffset.UtcDateTime
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: UtcDateTime
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 147
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value that represents the Coordinated Universal Time (UTC) date and time of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> property performs a dual conversion:</p>\n<ul><li>\n<p>It converts the date and time of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object to Coordinated Universal Time (UTC). The conversion is performed by subtracting the value of the <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property from the date and time of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n</li><li>\n<p>It converts the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value to a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n</li></ul>\n<p>The <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTimeOffset.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value is set to <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>Retrieving the value of the <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> property is equivalent to calling the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object's <strong>ToUniversalTime.DateTime</strong> property, except that the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the latter <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value is <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: public DateTime UtcDateTime { get; }
    content.vb: Public ReadOnly Property UtcDateTime As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>The Coordinated Universal Time (UTC) date and time of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTimeOffset.UtcNow
  commentId: P:System.DateTimeOffset.UtcNow
  id: UtcNow
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: UtcNow
  nameWithType: DateTimeOffset.UtcNow
  fullName: System.DateTimeOffset.UtcNow
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: UtcNow
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 135
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object whose date and time are set to the current Coordinated Universal Time (UTC) date and time and whose offset is <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.UtcNow\" data-throw-if-not-resolved=\"false\"></xref> property computes the current Universal Coordinated Time (UTC) based on the local system's clock time and an offset defined by the local system's time zone. </p>\n<p>The precision of the current UTC time's millisecond component depends on the resolution of the system clock. On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds.</p>\n"
  syntax:
    content: public static DateTimeOffset UtcNow { get; }
    content.vb: Public Shared ReadOnly Property UtcNow As DateTimeOffset
    parameters: []
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object whose date and time is the current Coordinated Universal Time (UTC) and whose offset is <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.DateTimeOffset.Now
    commentId: P:System.DateTimeOffset.Now
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.DateTimeOffset.UtcTicks
  commentId: P:System.DateTimeOffset.UtcTicks
  id: UtcTicks
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: UtcTicks
  nameWithType: DateTimeOffset.UtcTicks
  fullName: System.DateTimeOffset.UtcTicks
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: UtcTicks
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 297
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the number of ticks that represents the date and time of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object in Coordinated Universal Time (UTC).</p>\n"
  remarks: "\n<p>The value of the <xref href=\"System.DateTimeOffset.UtcTicks\" data-throw-if-not-resolved=\"false\"></xref> property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001 (the value of <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>). It does not include ticks that would be added by leap seconds. A nanosecond is one billionth of a second; there are ten million ticks in a second. The value of the <xref href=\"System.DateTimeOffset.UtcTicks\" data-throw-if-not-resolved=\"false\"></xref> property ranges from <strong>DateTimeOffset.MinValue.Ticks</strong> to <strong>DateTimeOffset.MaxValue.Ticks</strong>. </p>\n"
  syntax:
    content: public long UtcTicks { get; }
    content.vb: Public ReadOnly Property UtcTicks As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The number of ticks in the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object's Coordinated Universal Time (UTC).</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTimeOffset.Year
  commentId: P:System.DateTimeOffset.Year
  id: Year
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Year
  nameWithType: DateTimeOffset.Year
  fullName: System.DateTimeOffset.Year
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Year
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 315
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the year component of the date represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.Year\" data-throw-if-not-resolved=\"false\"></xref> property is not affected by the value of the <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>You can also create a string representation of a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object's year component by calling the <xref href=\"System.DateTimeOffset.ToString\" data-throw-if-not-resolved=\"false\"></xref> method with the \"y\", \"yy\", or \"yyyy\" custom format specifiers.</p>\n"
  syntax:
    content: public int Year { get; }
    content.vb: Public ReadOnly Property Year As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The year component of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, expressed as an integer value between 0 and 9999.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTimeOffset.Add(System.TimeSpan)
  commentId: M:System.DateTimeOffset.Add(System.TimeSpan)
  id: Add(System.TimeSpan)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Add(TimeSpan)
  nameWithType: DateTimeOffset.Add(TimeSpan)
  fullName: System.DateTimeOffset.Add(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Add
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 325
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that adds a specified time interval to the value of this instance.</p>\n"
  remarks: "\n<p>You can use the <xref href=\"System.DateTimeOffset.Add(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation. This method's behavior is identical to the addition operator. The <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> structure also supports specialized addition methods (such as <xref href=\"System.DateTimeOffset.AddDays(System.Double)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.DateTimeOffset.AddHours(System.Double)\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.DateTimeOffset.AddMinutes(System.Double)\" data-throw-if-not-resolved=\"false\"></xref>) for each time interval.</p>\n<p>This method returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object. It does not modify the value of the current object by adding <em>timeSpan</em> to its date and time.</p>\n<p>The <xref href=\"System.DateTimeOffset.Add(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method does not affect the value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object's <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>Because a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object does not represent the date and time in a specific time zone, the <xref href=\"System.DateTimeOffset.Add(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic. </p>\n<p>If the <em>timeSpan</em> parameter is <strong>null</strong>, this method returns the value of the original <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object unchanged.</p>\n"
  syntax:
    content: public DateTimeOffset Add(TimeSpan timeSpan)
    content.vb: Public Function Add(timeSpan As TimeSpan) As DateTimeOffset
    parameters:
    - id: timeSpan
      type: System.TimeSpan
      description: "\n<p>A <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object that represents a positive or a negative time interval.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and the time interval represented by <em>timeSpan</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)
    commentId: M:System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.AddDays(System.Double)
  commentId: M:System.DateTimeOffset.AddDays(System.Double)
  id: AddDays(System.Double)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: AddDays(Double)
  nameWithType: DateTimeOffset.AddDays(Double)
  fullName: System.DateTimeOffset.AddDays(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddDays
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 335
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that adds a specified number of whole and fractional days to the value of this instance.</p>\n"
  remarks: "\n<p>The fractional part of the <em>days</em> parameter is the fractional part of a day. For example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds, 0 milliseconds. The <em>days</em> parameter is rounded to the nearest millisecond.</p>\n<p>This method returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object. It does not modify the value of the current object by adding <em>days</em> to its date and time.</p>\n<p>Because a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object does not represent the date and time in a specific time zone, the <xref href=\"System.DateTimeOffset.AddDays(System.Double)\" data-throw-if-not-resolved=\"false\"></xref> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic. </p>\n<p>Converting time intervals of less than a day to a fraction can involve a loss of precision. If this is problematic, you can use the <xref href=\"System.DateTimeOffset.Add(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of a day.  </p>\n"
  syntax:
    content: public DateTimeOffset AddDays(double days)
    content.vb: Public Function AddDays(days As Double) As DateTimeOffset
    parameters:
    - id: days
      type: System.Double
      description: "\n<p>A number of whole and fractional days. The number can be negative or positive.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and the number of days represented by <em>days</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.AddHours(System.Double)
  commentId: M:System.DateTimeOffset.AddHours(System.Double)
  id: AddHours(System.Double)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: AddHours(Double)
  nameWithType: DateTimeOffset.AddHours(Double)
  fullName: System.DateTimeOffset.AddHours(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddHours
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 345
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that adds a specified number of whole and fractional hours to the value of this instance.</p>\n"
  remarks: "\n<p>The fractional part of the <em>hours</em> parameter is the fractional part of an hour. For example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds, 0 milliseconds. The <em>hours</em> parameter is rounded to the nearest millisecond.</p>\n<p>This method returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object. It does not modify the value of the current object by adding <em>hours</em> to its date and time.</p>\n<p>Because a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object does not represent the date and time in a specific time zone, the <xref href=\"System.DateTimeOffset.AddHours(System.Double)\" data-throw-if-not-resolved=\"false\"></xref> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic. </p>\n<p>Converting time intervals of less than an hour to a fraction can involve a loss of precision. (For example, one minute is 0.01666 of an hour.) If this is problematic, you can use the <xref href=\"System.DateTimeOffset.Add(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour. </p>\n"
  syntax:
    content: public DateTimeOffset AddHours(double hours)
    content.vb: Public Function AddHours(hours As Double) As DateTimeOffset
    parameters:
    - id: hours
      type: System.Double
      description: "\n<p>A number of whole and fractional hours. The number can be negative or positive.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and the number of hours represented by <em>hours</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.AddMilliseconds(System.Double)
  commentId: M:System.DateTimeOffset.AddMilliseconds(System.Double)
  id: AddMilliseconds(System.Double)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: AddMilliseconds(Double)
  nameWithType: DateTimeOffset.AddMilliseconds(Double)
  fullName: System.DateTimeOffset.AddMilliseconds(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddMilliseconds
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 355
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that adds a specified number of milliseconds to the value of this instance.</p>\n"
  remarks: "\n<p>The fractional part of the <em>milliseconds</em> parameter is the fractional part of a millisecond. For example, 4.5 is equivalent to 4 milliseconds and 5000 ticks, where one millisecond equals 10,000 ticks. However, <em>milliseconds</em> is rounded to the nearest millisecond; all values of .5 or greater are rounded up.</p>\n<p>This method returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object. It does not modify the value of the current object by adding <em>milliseconds</em> to its date and time.</p>\n<p>Because a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object does not represent the date and time in a specific time zone, the <xref href=\"System.DateTimeOffset.AddMilliseconds(System.Double)\" data-throw-if-not-resolved=\"false\"></xref> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic. </p>\n"
  syntax:
    content: public DateTimeOffset AddMilliseconds(double milliseconds)
    content.vb: Public Function AddMilliseconds(milliseconds As Double) As DateTimeOffset
    parameters:
    - id: milliseconds
      type: System.Double
      description: "\n<p>A number of whole and fractional milliseconds. The number can be negative or positive.   </p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and the number of whole milliseconds represented by <em>milliseconds</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.AddMinutes(System.Double)
  commentId: M:System.DateTimeOffset.AddMinutes(System.Double)
  id: AddMinutes(System.Double)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: AddMinutes(Double)
  nameWithType: DateTimeOffset.AddMinutes(Double)
  fullName: System.DateTimeOffset.AddMinutes(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddMinutes
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 365
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that adds a specified number of whole and fractional minutes to the value of this instance.</p>\n"
  remarks: "\n<p>The fractional part of the <em>minutes</em> parameter is the fractional part of a minute. For example, 4.5 is equivalent to 4 minutes, 30 seconds, 0 milliseconds. The <em>minutes</em> parameter is rounded to the nearest millisecond.</p>\n<p>This method returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object. It does not modify the value of the current object by adding <em>minutes</em> to its date and time.</p>\n<p>Because a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object does not represent the date and time in a specific time zone, the <xref href=\"System.DateTimeOffset.AddMinutes(System.Double)\" data-throw-if-not-resolved=\"false\"></xref> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic. </p>\n<p>Converting time intervals of less than a minute to a fraction can involve a loss of precision. (For example, one second is 0.01666 of a minute.) If this is problematic, you can use the <xref href=\"System.DateTimeOffset.Add(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of a minute.</p>\n"
  syntax:
    content: public DateTimeOffset AddMinutes(double minutes)
    content.vb: Public Function AddMinutes(minutes As Double) As DateTimeOffset
    parameters:
    - id: minutes
      type: System.Double
      description: "\n<p>A number of whole and fractional minutes. The number can be negative or positive.   </p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and the number of minutes represented by <em>minutes</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.AddMonths(System.Int32)
  commentId: M:System.DateTimeOffset.AddMonths(System.Int32)
  id: AddMonths(System.Int32)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: AddMonths(Int32)
  nameWithType: DateTimeOffset.AddMonths(Int32)
  fullName: System.DateTimeOffset.AddMonths(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddMonths
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 369
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that adds a specified number of months to the value of this instance.</p>\n"
  remarks: "\n<p>Unlike most of the other methods that add a single time interval unit (such as minutes or days) to a date and time value, <xref href=\"System.DateTimeOffset.AddMonths(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> does not enable you to add fractional parts of a month. To add a time that consists of other time units in addition to months to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, use the <xref href=\"System.DateTimeOffset.Add(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>This method returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object. It does not modify the value of the current object by adding <em>months</em> to its date and time.</p>\n"
  syntax:
    content: public DateTimeOffset AddMonths(int months)
    content.vb: Public Function AddMonths(months As Integer) As DateTimeOffset
    parameters:
    - id: months
      type: System.Int32
      description: "\n<p>A number of whole months. The number can be negative or positive.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and the number of months represented by <em>months</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.AddSeconds(System.Double)
  commentId: M:System.DateTimeOffset.AddSeconds(System.Double)
  id: AddSeconds(System.Double)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: AddSeconds(Double)
  nameWithType: DateTimeOffset.AddSeconds(Double)
  fullName: System.DateTimeOffset.AddSeconds(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddSeconds
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 379
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that adds a specified number of whole and fractional seconds to the value of this instance.</p>\n"
  remarks: "\n<p>The fractional part of the <em>seconds</em> parameter is the fractional part of a second. The value of fractional parts of a second are shown in the following table.</p>\n<p>Second value</p>\n<p>Equivalent</p>\n<table><tbody><tr><td>\n<p>.1 second</p>\n</td><td>\n<p>100 milliseconds</p>\n</td></tr><tr><td>\n<p>.01 second</p>\n</td><td>\n<p>10 milliseconds</p>\n</td></tr><tr><td>\n<p>.001 second</p>\n</td><td>\n<p>1 millisecond</p>\n</td></tr></tbody></table>\n<p>The <em>seconds</em> parameter is rounded to the nearest millisecond.</p>\n<p>This method returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object. It does not modify the value of the current object by adding <em>minutes</em> to its date and time.</p>\n<p>Because a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object does not represent the date and time in a specific time zone, the <xref href=\"System.DateTimeOffset.AddSeconds(System.Double)\" data-throw-if-not-resolved=\"false\"></xref> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic. </p>\n"
  syntax:
    content: public DateTimeOffset AddSeconds(double seconds)
    content.vb: Public Function AddSeconds(seconds As Double) As DateTimeOffset
    parameters:
    - id: seconds
      type: System.Double
      description: "\n<p>A number of whole and fractional seconds. The number can be negative or positive.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and the number of seconds represented by <em>seconds</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.AddTicks(System.Int64)
  commentId: M:System.DateTimeOffset.AddTicks(System.Int64)
  id: AddTicks(System.Int64)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: AddTicks(Int64)
  nameWithType: DateTimeOffset.AddTicks(Int64)
  fullName: System.DateTimeOffset.AddTicks(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddTicks
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 387
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that adds a specified number of ticks to the value of this instance.</p>\n"
  remarks: "\n<p>A tick represents 100 nanoseconds, or one-ten millionth of a second. Because a tick is a very small and precise time interval, any larger time unit can be expressed as a number of ticks without a loss of precision.</p>\n<p>This method returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object. It does not modify the value of the current object by adding <em>minutes</em> to its date and time.</p>\n<p>The following table lists the number of ticks in a particular time interval.</p>\n<p>Time interval</p>\n<p>Number of ticks</p>\n<table><tbody><tr><td>\n<p>Second</p>\n</td><td>\n<p>10,000,000</p>\n</td></tr><tr><td>\n<p>Minute</p>\n</td><td>\n<p>600,000,000</p>\n</td></tr><tr><td>\n<p>Hour</p>\n</td><td>\n<p>36,000,000,000</p>\n</td></tr><tr><td>\n<p>Day</p>\n</td><td>\n<p>864,000,000,000</p>\n</td></tr><tr><td>\n<p>Week</p>\n</td><td>\n<p>6,048,000,000,000</p>\n</td></tr><tr><td>\n<p>Month</p>\n</td><td>\n<p>Depends on number of days in the month.</p>\n</td></tr><tr><td>\n<p>Non-leap year</p>\n</td><td>\n<p>315,360,000,000,000</p>\n</td></tr><tr><td>\n<p>Leap year</p>\n</td><td>\n<p>316,224,000,000,000</p>\n</td></tr></tbody></table>\n<p>Because a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object does not represent the date and time in a specific time zone, the <xref href=\"System.DateTimeOffset.AddTicks(System.Int64)\" data-throw-if-not-resolved=\"false\"></xref> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic. </p>\n"
  syntax:
    content: public DateTimeOffset AddTicks(long ticks)
    content.vb: Public Function AddTicks(ticks As Long) As DateTimeOffset
    parameters:
    - id: ticks
      type: System.Int64
      description: "\n<p>A number of 100-nanosecond ticks. The number can be negative or positive.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and the number of ticks represented by <em>ticks</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.AddYears(System.Int32)
  commentId: M:System.DateTimeOffset.AddYears(System.Int32)
  id: AddYears(System.Int32)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: AddYears(Int32)
  nameWithType: DateTimeOffset.AddYears(Int32)
  fullName: System.DateTimeOffset.AddYears(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddYears
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 399
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that adds a specified number of years to the value of this instance.</p>\n"
  remarks: "\n<p>Unlike most of the other methods that add a single time interval unit (such as minutes or days) to a date and time value, <xref href=\"System.DateTimeOffset.AddYears(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> does not enable you to add fractional parts of a year. To add a time that consists of other time units in addition to years to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, use the <xref href=\"System.DateTimeOffset.Add(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>This method returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object. It does not modify the value of the current object by adding <em>months</em> to its date and time.</p>\n"
  syntax:
    content: public DateTimeOffset AddYears(int years)
    content.vb: Public Function AddYears(years As Integer) As DateTimeOffset
    parameters:
    - id: years
      type: System.Int32
      description: "\n<p>A number of years. The number can be negative or positive.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and the number of years represented by <em>years</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)
  id: Compare(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Compare(DateTimeOffset, DateTimeOffset)
  nameWithType: DateTimeOffset.Compare(DateTimeOffset, DateTimeOffset)
  fullName: System.DateTimeOffset.Compare(System.DateTimeOffset, System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Compare
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 406
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Compares two <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects and indicates whether the first is earlier than the second, equal to the second, or later than the second.</p>\n"
  remarks: "\n<p>In performing the comparison, the method converts both the <em>first</em> and the <em>second</em> parameters to Coordinated Universal Time (UTC) before it performs the comparison. The method is equivalent to the following:</p>System.DateTimeOffset.Syntax#1<p>In other words, the <xref href=\"System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method determines whether two <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects represent a single point in time. It directly compares neither dates and times nor offsets.</p>"
  syntax:
    content: public static int Compare(DateTimeOffset first, DateTimeOffset second)
    content.vb: Public Shared Function Compare(first As DateTimeOffset, second As DateTimeOffset) As Integer
    parameters:
    - id: first
      type: System.DateTimeOffset
      description: "\n<p>The first object to compare.</p>\n"
    - id: second
      type: System.DateTimeOffset
      description: "\n<p>The second object to compare.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>A signed integer that indicates whether the value of the <em>first</em> parameter is earlier than, later than, or the same time as the value of the <em>second</em> parameter, as the following table shows.</p>\n<p>Return value</p>\n<p>Meaning</p>\n<table><tbody><tr><td>\n<p>Less than zero</p>\n</td><td>\n<p>\n<em>first</em> is earlier than <em>second</em>.</p>\n</td></tr><tr><td>\n<p>Zero</p>\n</td><td>\n<p>\n<em>first</em> is equal to <em>second</em>.</p>\n</td></tr><tr><td>\n<p>Greater than zero</p>\n</td><td>\n<p>\n<em>first</em> is later than <em>second</em>.</p>\n</td></tr></tbody></table>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTimeOffset.CompareTo(System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.CompareTo(System.DateTimeOffset)
  id: CompareTo(System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: CompareTo(DateTimeOffset)
  nameWithType: DateTimeOffset.CompareTo(DateTimeOffset)
  fullName: System.DateTimeOffset.CompareTo(System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CompareTo
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 428
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Compares the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object to a specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and indicates whether the current object is earlier than, the same as, or later than the second <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>This method compares <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects by comparing their <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> values; that is, it determines whether the two objects represent a single point in time, and indicates whether the current object is earlier than, later than, or the same as the <em>other</em> parameter. </p>\n"
  syntax:
    content: public int CompareTo(DateTimeOffset other)
    content.vb: Public Function CompareTo(other As DateTimeOffset) As Integer
    parameters:
    - id: other
      type: System.DateTimeOffset
      description: "\n<p>An object to compare with the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>A signed integer that indicates the relationship between the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and <em>other</em>, as the following table shows.</p>\n<p>Return Value</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>Less than zero</p>\n</td><td>\n<p>The current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is earlier than <em>other</em>.</p>\n</td></tr><tr><td>\n<p>Zero</p>\n</td><td>\n<p>The current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is the same as <em>other</em>.</p>\n</td></tr><tr><td>\n<p>Greater than zero.</p>\n</td><td>\n<p>The current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is later than <em>other</em>.</p>\n</td></tr></tbody></table>\n"
  implements:
  - System.IComparable{System.DateTimeOffset}.CompareTo(System.DateTimeOffset)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.Equals(System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.Equals(System.DateTimeOffset)
  id: Equals(System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Equals(DateTimeOffset)
  nameWithType: DateTimeOffset.Equals(DateTimeOffset)
  fullName: System.DateTimeOffset.Equals(System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 449
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object represents the same point in time as a specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>Before it performs the comparison, this method converts the values of both <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects to Coordinated Universal Time (UTC). The method is equivalent to the following:</p>System.DateTimeOffset.Syntax#2<p>In other words, the <xref href=\"System.DateTimeOffset.Equals(System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method determines whether two <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects represent the same time and have the same offset value, use the <xref href=\"System.DateTimeOffset.EqualsExact(System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method.</p><p>A <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that is not <strong>null</strong> is considered to be later (or greater) than one that is <strong>null</strong>.</p><p>This overload of the <xref href=\"System.DateTimeOffset.Equals(System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method implements the <xref href=\"System.IEquatable`1.Equals(`0)\" data-throw-if-not-resolved=\"false\"></xref> method. It offers slightly better performance than the <xref href=\"System.DateTimeOffset.Equals(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> overload because the <em>other</em> parameter does not have to be converted from an object.  </p>"
  syntax:
    content: public bool Equals(DateTimeOffset other)
    content.vb: Public Function Equals(other As DateTimeOffset) As Boolean
    parameters:
    - id: other
      type: System.DateTimeOffset
      description: "\n<p>An object to compare to the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.   </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if both <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects have the same <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.DateTimeOffset.EqualsExact(System.DateTimeOffset)
    commentId: M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)
  implements:
  - System.IEquatable{System.DateTimeOffset}.Equals(System.DateTimeOffset)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)
  id: Equals(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Equals(DateTimeOffset, DateTimeOffset)
  nameWithType: DateTimeOffset.Equals(DateTimeOffset, DateTimeOffset)
  fullName: System.DateTimeOffset.Equals(System.DateTimeOffset, System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 467
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether two specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects represent the same point in time.</p>\n"
  remarks: "\n<p>Before it performs the comparison, this method converts both <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects to Coordinated Universal Time (UTC). The method is equivalent to the following:</p>System.DateTimeOffset.Syntax#4<p>In other words, the <xref href=\"System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method determines whether the two <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects represent the same time and have the same offset value, use the <xref href=\"System.DateTimeOffset.EqualsExact(System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>"
  syntax:
    content: public static bool Equals(DateTimeOffset first, DateTimeOffset second)
    content.vb: Public Shared Function Equals(first As DateTimeOffset, second As DateTimeOffset) As Boolean
    parameters:
    - id: first
      type: System.DateTimeOffset
      description: "\n<p>The first object to compare.</p>\n"
    - id: second
      type: System.DateTimeOffset
      description: "\n<p>The second object to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the two <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects have the same <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.DateTimeOffset.EqualsExact(System.DateTimeOffset)
    commentId: M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTimeOffset.Equals(System.Object)
  commentId: M:System.DateTimeOffset.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: DateTimeOffset.Equals(Object)
  fullName: System.DateTimeOffset.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 442
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object represents the same point in time as a specified object.</p>\n"
  remarks: "\n<p>Before it performs the comparison, this method converts the values of both the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and the <em>obj</em> parameter to Coordinated Universal Time (UTC). The method is equivalent to the following:</p>System.DateTimeOffset.Syntax#3<p>In other words, the <xref href=\"System.DateTimeOffset.Equals(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method determines whether the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and a specified object represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects represent the same time and have the same offset value, use the <xref href=\"System.DateTimeOffset.EqualsExact(System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method.</p><p>If <em>obj</em> is <strong>null</strong>, or if the run-time type of <em>obj</em> is not <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref>, the method returns <strong>false</strong>.</p>"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>The object to compare to the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <em>obj</em> parameter is a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and represents the same point in time as the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.ValueType.Equals(System.Object)
  seealso:
  - type: System.DateTimeOffset.EqualsExact(System.DateTimeOffset)
    commentId: M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.DateTimeOffset.EqualsExact(System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)
  id: EqualsExact(System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: EqualsExact(DateTimeOffset)
  nameWithType: DateTimeOffset.EqualsExact(DateTimeOffset)
  fullName: System.DateTimeOffset.EqualsExact(System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EqualsExact
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 453
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object represents the same time and has the same offset as a specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>Because multiple time zones share a single offset, a return value of <strong>true</strong> does not guarantee that the current and the <em>other</em> object represent times in the same time zone. </p>\n<p>Unlike the <xref href=\"System.DateTimeOffset.EqualsExact(System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method, the overloads of the <xref href=\"System.DateTimeOffset.Equals(System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method determine only whether two <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> values represent a single point in time. They do not indicate that two values have the same date and time as well as the same offset. </p>\n"
  syntax:
    content: public bool EqualsExact(DateTimeOffset other)
    content.vb: Public Function EqualsExact(other As DateTimeOffset) As Boolean
    parameters:
    - id: other
      type: System.DateTimeOffset
      description: "\n<p>The object to compare to the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and <em>other</em> have the same date and time value and the same <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> value; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.DateTimeOffset.Equals(System.DateTimeOffset)
    commentId: M:System.DateTimeOffset.Equals(System.DateTimeOffset)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.FromFileTime(System.Int64)
  commentId: M:System.DateTimeOffset.FromFileTime(System.Int64)
  id: FromFileTime(System.Int64)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: FromFileTime(Int64)
  nameWithType: DateTimeOffset.FromFileTime(Int64)
  fullName: System.DateTimeOffset.FromFileTime(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FromFileTime
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 475
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified Windows file time to an equivalent local time.</p>\n"
  remarks: "\n<p>A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file. </p>\n<p>A Windows file time is directly accessible through the Windows API by calling the <strong>GetFileTime</strong> function, which returns a <strong>FILETIME</strong> structure. The single function parameter is the handle of the file whose file time information is to be retrieved. The file handle is retrieved by calling the <strong>CreateFile</strong> function. The <strong>FILETIME</strong> structure's <strong>dwHighDateTime</strong> member contains the four high-order bytes of the file time, and its <strong>dwLowDateTime</strong> member contains the four low-order bytes. The example that follows illustrates how to retrieve Windows file time values and convert them to <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n<p>Windows file time values can also be created from <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> values by calling the <xref href=\"System.DateTime.ToFileTime\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.DateTime.ToFileTimeUtc\" data-throw-if-not-resolved=\"false\"></xref> methods, and from <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> values by calling the <xref href=\"System.DateTimeOffset.ToFileTime\" data-throw-if-not-resolved=\"false\"></xref> method. </p>\n"
  syntax:
    content: public static DateTimeOffset FromFileTime(long fileTime)
    content.vb: Public Shared Function FromFileTime(fileTime As Long) As DateTimeOffset
    parameters:
    - id: fileTime
      type: System.Int64
      description: "\n<p>A Windows file time, expressed in ticks.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that represents the date and time of <em>fileTime</em> with the offset set to the local time offset.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>filetime</em> is less than zero.</p>\n<p>-or-</p>\n<p>\n<em>filetime</em> is greater than <strong>DateTimeOffset.MaxValue.Ticks</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)
  commentId: M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)
  id: FromUnixTimeMilliseconds(System.Int64)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: FromUnixTimeMilliseconds(Int64)
  nameWithType: DateTimeOffset.FromUnixTimeMilliseconds(Int64)
  fullName: System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FromUnixTimeMilliseconds
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 489
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts a Unix time expressed as the number of milliseconds that have elapsed since 1970-01-01T00:00:00Z to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property value of the returned <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> instance is <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref>, which represents Coordinated Universal Time. You can convert it to the time in a specific time zone by calling the <xref href=\"System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)\" data-throw-if-not-resolved=\"false\"></xref> method. </p>\n"
  syntax:
    content: public static DateTimeOffset FromUnixTimeMilliseconds(long milliseconds)
    content.vb: Public Shared Function FromUnixTimeMilliseconds(milliseconds As Long) As DateTimeOffset
    parameters:
    - id: milliseconds
      type: System.Int64
      description: "\n<p>A Unix time, expressed as the number of milliseconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). For Unix times before this date, its value is negative. </p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>A date and time value that represents the same moment in time as the Unix time. </p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>milliseconds</em> is less than  -62,135,596,800,000. </p>\n<p>-or-</p>\n<p>\n<em>milliseconds</em> is greater than 253,402,300,799,999. </p>\n"
  seealso:
  - type: System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)
    commentId: M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)
  - type: System.DateTimeOffset.ToUnixTimeMilliseconds
    commentId: M:System.DateTimeOffset.ToUnixTimeMilliseconds
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)
  commentId: M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)
  id: FromUnixTimeSeconds(System.Int64)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: FromUnixTimeSeconds(Int64)
  nameWithType: DateTimeOffset.FromUnixTimeSeconds(Int64)
  fullName: System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FromUnixTimeSeconds
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 479
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts a Unix time expressed as the number of seconds that have elapsed since 1970-01-01T00:00:00Z to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property value of the returned <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> instance is <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref>, which represents Coordinated Universal Time. You can convert it to the time in a specific time zone by calling the <xref href=\"System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)\" data-throw-if-not-resolved=\"false\"></xref> method. </p>\n"
  syntax:
    content: public static DateTimeOffset FromUnixTimeSeconds(long seconds)
    content.vb: Public Shared Function FromUnixTimeSeconds(seconds As Long) As DateTimeOffset
    parameters:
    - id: seconds
      type: System.Int64
      description: "\n<p>A Unix time, expressed as the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). For Unix times before this date, its value is negative. </p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>A date and time value that represents the same moment in time as the Unix time. </p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>seconds</em> is less than  -62,135,596,800. </p>\n<p>-or-</p>\n<p>\n<em>seconds</em> is greater than 253,402,300,799. </p>\n"
  seealso:
  - type: System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)
    commentId: M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)
  - type: System.DateTimeOffset.ToUnixTimeSeconds
    commentId: M:System.DateTimeOffset.ToUnixTimeSeconds
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTimeOffset.GetHashCode
  commentId: M:System.DateTimeOffset.GetHashCode
  id: GetHashCode
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: DateTimeOffset.GetHashCode()
  fullName: System.DateTimeOffset.GetHashCode()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetHashCode
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 541
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns the hash code for the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>A 32-bit signed integer hash code.</p>\n"
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)
  commentId: M:System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)
  id: op_Addition(System.DateTimeOffset,System.TimeSpan)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Addition(DateTimeOffset, TimeSpan)
  nameWithType: DateTimeOffset.Addition(DateTimeOffset, TimeSpan)
  fullName: System.DateTimeOffset.Addition(System.DateTimeOffset, System.TimeSpan)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Addition
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 794
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Adds a specified time interval to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that has a specified date and time, and yields a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that has new a date and time.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method defines the addition operation for <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> values. It enables code such as the following:</p>System.DateTimeOffset.Operators#1<p>Languages that do not support custom operators and operator overloading can call the <xref href=\"System.DateTimeOffset.Add(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method instead. </p>"
  syntax:
    content: public static DateTimeOffset operator +(DateTimeOffset dateTimeOffset, TimeSpan timeSpan)
    content.vb: Public Shared Operator +(dateTimeOffset As DateTimeOffset, timeSpan As TimeSpan) As DateTimeOffset
    parameters:
    - id: dateTimeOffset
      type: System.DateTimeOffset
      description: "\n<p>The object to add the time interval to.</p>\n"
    - id: timeSpan
      type: System.TimeSpan
      description: "\n<p>The time interval to add.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object whose value is the sum of the values of <em>dateTimeTz</em> and <em>timeSpan</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.DateTimeOffset.Add(System.TimeSpan)
    commentId: M:System.DateTimeOffset.Add(System.TimeSpan)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)
  id: op_Equality(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Equality(DateTimeOffset, DateTimeOffset)
  nameWithType: DateTimeOffset.Equality(DateTimeOffset, DateTimeOffset)
  fullName: System.DateTimeOffset.Equality(System.DateTimeOffset, System.DateTimeOffset)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Equality
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 807
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether two specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects represent the same point in time.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method defines the operation of the equality operator for <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects. It enables code such as the following:</p>System.DateTimeOffset.Operators#2<p>Before evaluating the <em>left</em> and <em>right</em> operands for equality, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:</p>System.DateTimeOffset.Syntax#4<p>In other words, the <xref href=\"System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method determines whether the two <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects represent the same time and have the same offset value, use the <xref href=\"System.DateTimeOffset.EqualsExact(System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>"
  syntax:
    content: public static bool operator ==(DateTimeOffset left, DateTimeOffset right)
    content.vb: Public Shared Operator =(left As DateTimeOffset, right As DateTimeOffset) As Boolean
    parameters:
    - id: left
      type: System.DateTimeOffset
      description: "\n<p>The first object to compare.</p>\n"
    - id: right
      type: System.DateTimeOffset
      description: "\n<p>The second object to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if both <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects have the same <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.DateTimeOffset.Equals(System.DateTimeOffset)
    commentId: M:System.DateTimeOffset.Equals(System.DateTimeOffset)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)
  id: op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: GreaterThan(DateTimeOffset, DateTimeOffset)
  nameWithType: DateTimeOffset.GreaterThan(DateTimeOffset, DateTimeOffset)
  fullName: System.DateTimeOffset.GreaterThan(System.DateTimeOffset, System.DateTimeOffset)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_GreaterThan
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 823
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether one specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is greater than (or later than) a second specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method defines the operation of the greater than operator for <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects. It enables code such as the following:</p>System.DateTimeOffset.Operators#3<p>Languages that do not support custom operators can call the <xref href=\"System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method instead. They can also call the <xref href=\"System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method directly, as the following example shows.</p>System.DateTimeOffset.Operators#4<p>Before evaluating the <em>left</em> and <em>right</em> operands, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:</p>System.DateTimeOffset.Syntax#5"
  syntax:
    content: public static bool operator>(DateTimeOffset left, DateTimeOffset right)
    content.vb: Public Shared Operator>(left As DateTimeOffset, right As DateTimeOffset) As Boolean
    parameters:
    - id: left
      type: System.DateTimeOffset
      description: "\n<p>The first object to compare.</p>\n"
    - id: right
      type: System.DateTimeOffset
      description: "\n<p>The second object to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value of <em>left</em> is later than the <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value of <em>right</em>; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  id: op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(DateTimeOffset, DateTimeOffset)
  nameWithType: DateTimeOffset.GreaterThanOrEqual(DateTimeOffset, DateTimeOffset)
  fullName: System.DateTimeOffset.GreaterThanOrEqual(System.DateTimeOffset, System.DateTimeOffset)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_GreaterThanOrEqual
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 827
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether one specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is greater than or equal to a second specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method defines the operation of the greater than or equal to operator for <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects. It enables code such as the following:</p>System.DateTimeOffset.Operators#5<p>Languages that do not support custom operators can call the <xref href=\"System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method instead. Some languages can also call the <xref href=\"System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method directly, as the following example shows.</p>System.DateTimeOffset.Operators#6<p>Before evaluating the <em>left</em> and <em>right</em> operands, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:</p>System.DateTimeOffset.Syntax#6"
  syntax:
    content: public static bool operator >=(DateTimeOffset left, DateTimeOffset right)
    content.vb: Public Shared Operator >=(left As DateTimeOffset, right As DateTimeOffset) As Boolean
    parameters:
    - id: left
      type: System.DateTimeOffset
      description: "\n<p>The first object to compare.</p>\n"
    - id: right
      type: System.DateTimeOffset
      description: "\n<p>The second object to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value of <em>left</em> is the same as or later than the <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value of <em>right</em>; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTimeOffset.op_Implicit(System.DateTime)~System.DateTimeOffset
  commentId: M:System.DateTimeOffset.op_Implicit(System.DateTime)~System.DateTimeOffset
  id: op_Implicit(System.DateTime)~System.DateTimeOffset
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Implicit(DateTime to DateTimeOffset)
  nameWithType: DateTimeOffset.Implicit(DateTime to DateTimeOffset)
  fullName: System.DateTimeOffset.Implicit(System.DateTime to System.DateTimeOffset)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Implicit
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 790
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an implicit conversion of a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.op_Implicit(System.DateTime)~System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> method enables the compiler to automatically convert a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic). It defines a widening conversion that does not involve data loss and does not throw an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref>. The <xref href=\"System.DateTimeOffset.op_Implicit(System.DateTime)~System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> method makes code such as the following possible:</p>System.DateTimeOffset.Operators#7<p>This method is equivalent to the <xref href=\"System.DateTimeOffset.#ctor(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> constructor. The offset of the resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object depends on the value of the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the <em>dateTime</em> parameter:</p><ul><li><p>If the value of the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>, the date and time of the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is set equal to <em>dateTime</em>, and its <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property is set equal to 0. </p></li><li><p>If the value of the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>, the date and time of the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is set equal to <em>dateTime</em>, and its <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property is set equal to the offset of the local system's current time zone.</p></li></ul>"
  syntax:
    content: public static implicit operator DateTimeOffset(DateTime dateTime)
    content.vb: Public Shared Widening Operator CType(dateTime As Date) As DateTimeOffset
    parameters:
    - id: dateTime
      type: System.DateTime
      description: "\n<p>The object to convert. </p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>The converted object.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The Coordinated Universal Time (UTC) date and time that results from applying the offset is earlier than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>The UTC date and time that results from applying the offset is later than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  nameWithType.vb: DateTimeOffset.Widening(DateTime to DateTimeOffset)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.DateTimeOffset.Widening(System.DateTime to System.DateTimeOffset)
  name.vb: Widening(DateTime to DateTimeOffset)
- uid: System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)
  id: op_Inequality(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Inequality(DateTimeOffset, DateTimeOffset)
  nameWithType: DateTimeOffset.Inequality(DateTimeOffset, DateTimeOffset)
  fullName: System.DateTimeOffset.Inequality(System.DateTimeOffset, System.DateTimeOffset)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Inequality
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 811
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether two specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects refer to different points in time.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method defines the operation of the inequality operator for <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects. It always returns the opposite result from <xref href=\"System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref>. The <xref href=\"System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method enables code such as the following:</p>System.DateTimeOffset.Operators#8<p>Before evaluating the <em>left</em> and <em>right</em> operands for equality, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:</p>System.DateTimeOffset.Syntax#4<p>In other words, the <xref href=\"System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method determines whether the two <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects represent different points in time. It directly compares neither dates and times nor offsets.</p><p>Languages that do not support custom operators can call the <xref href=\"System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method instead. In addition, some languages can also call the <xref href=\"System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method directly, as the following example shows.</p>System.DateTimeOffset.Operators#9"
  syntax:
    content: public static bool operator !=(DateTimeOffset left, DateTimeOffset right)
    content.vb: Public Shared Operator <>(left As DateTimeOffset, right As DateTimeOffset) As Boolean
    parameters:
    - id: left
      type: System.DateTimeOffset
      description: "\n<p>The first object to compare.</p>\n"
    - id: right
      type: System.DateTimeOffset
      description: "\n<p>The second object to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>left</em> and <em>right</em> do not have the same <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)
  id: op_LessThan(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: LessThan(DateTimeOffset, DateTimeOffset)
  nameWithType: DateTimeOffset.LessThan(DateTimeOffset, DateTimeOffset)
  fullName: System.DateTimeOffset.LessThan(System.DateTimeOffset, System.DateTimeOffset)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_LessThan
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 815
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether one specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is less than a second specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method defines the operation of the less than operator for <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects. It enables code such as the following:</p>System.DateTimeOffset.Operators#10<p>Before evaluating the <em>left</em> and <em>right</em> operands, the operator converts both operands to Coordinated Universal Time (UTC). The operation is equivalent to the following:</p>System.DateTimeOffset.Syntax#8<p>Languages that do not support custom operators can call the <xref href=\"System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method instead. In addition, some languages can also call the <xref href=\"System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method directly, as the following example shows.</p>System.DateTimeOffset.Operators#11"
  syntax:
    content: public static bool operator <(DateTimeOffset left, DateTimeOffset right)
    content.vb: Public Shared Operator <(left As DateTimeOffset, right As DateTimeOffset) As Boolean
    parameters:
    - id: left
      type: System.DateTimeOffset
      description: "\n<p>The first object to compare.</p>\n"
    - id: right
      type: System.DateTimeOffset
      description: "\n<p>The second object to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value of <em>left</em> is earlier than the <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value of <em>right</em>; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  id: op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(DateTimeOffset, DateTimeOffset)
  nameWithType: DateTimeOffset.LessThanOrEqual(DateTimeOffset, DateTimeOffset)
  fullName: System.DateTimeOffset.LessThanOrEqual(System.DateTimeOffset, System.DateTimeOffset)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_LessThanOrEqual
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 819
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether one specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is less than a second specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method defines the operation of the less than or equal to operator for <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects. It enables code such as the following:</p>System.DateTimeOffset.Operators#12<p>Languages that do not support custom operators can call the <xref href=\"System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method instead. Some languages can also call the <xref href=\"System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method directly, as the following example shows.</p>System.DateTimeOffset.Operators#13<p>Before evaluating the <em>left</em> and <em>right</em> operands, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:</p>System.DateTimeOffset.Syntax#9"
  syntax:
    content: public static bool operator <=(DateTimeOffset left, DateTimeOffset right)
    content.vb: Public Shared Operator <=(left As DateTimeOffset, right As DateTimeOffset) As Boolean
    parameters:
    - id: left
      type: System.DateTimeOffset
      description: "\n<p>The first object to compare.</p>\n"
    - id: right
      type: System.DateTimeOffset
      description: "\n<p>The second object to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value of <em>left</em> is earlier than the <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value of <em>right</em>; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)
  id: op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Subtraction(DateTimeOffset, DateTimeOffset)
  nameWithType: DateTimeOffset.Subtraction(DateTimeOffset, DateTimeOffset)
  fullName: System.DateTimeOffset.Subtraction(System.DateTimeOffset, System.DateTimeOffset)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Subtraction
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 803
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Subtracts one <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object from another and yields a time interval.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method defines the subtraction operation for <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects. It enables code such as the following:</p>System.DateTimeOffset.Operators#14<p>Languages that do not support custom operators and operator overloading can call the <xref href=\"System.DateTimeOffset.Subtract(System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method instead. </p>"
  syntax:
    content: public static TimeSpan operator -(DateTimeOffset left, DateTimeOffset right)
    content.vb: Public Shared Operator -(left As DateTimeOffset, right As DateTimeOffset) As TimeSpan
    parameters:
    - id: left
      type: System.DateTimeOffset
      description: "\n<p>The minuend.   </p>\n"
    - id: right
      type: System.DateTimeOffset
      description: "\n<p>The subtrahend.</p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>An object that represents the difference between <em>left</em> and <em>right</em>.</p>\n"
  seealso:
  - type: System.DateTimeOffset.Subtract(System.DateTimeOffset)
    commentId: M:System.DateTimeOffset.Subtract(System.DateTimeOffset)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)
  commentId: M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)
  id: op_Subtraction(System.DateTimeOffset,System.TimeSpan)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Subtraction(DateTimeOffset, TimeSpan)
  nameWithType: DateTimeOffset.Subtraction(DateTimeOffset, TimeSpan)
  fullName: System.DateTimeOffset.Subtraction(System.DateTimeOffset, System.TimeSpan)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Subtraction
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 799
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Subtracts a specified time interval from a specified date and time, and yields a new date and time.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method defines the subtraction operation for <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects. It enables code such as the following:</p>System.DateTimeOffset.Operators#15<p>Languages that do not support custom operators and operator overloading can call the <xref href=\"System.DateTimeOffset.Subtract(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method instead. </p>"
  syntax:
    content: public static DateTimeOffset operator -(DateTimeOffset dateTimeOffset, TimeSpan timeSpan)
    content.vb: Public Shared Operator -(dateTimeOffset As DateTimeOffset, timeSpan As TimeSpan) As DateTimeOffset
    parameters:
    - id: dateTimeOffset
      type: System.DateTimeOffset
      description: "\n<p>The date and time object to subtract from.</p>\n"
    - id: timeSpan
      type: System.TimeSpan
      description: "\n<p>The time interval to subtract.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that is equal to the value of <em>dateTimeOffset</em> minus <em>timeSpan</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.DateTimeOffset.Subtract(System.TimeSpan)
    commentId: M:System.DateTimeOffset.Subtract(System.TimeSpan)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTimeOffset.Parse(System.String)
  commentId: M:System.DateTimeOffset.Parse(System.String)
  id: Parse(System.String)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: DateTimeOffset.Parse(String)
  fullName: System.DateTimeOffset.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 549
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a date, time, and offset to its <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.DateTimeOffset.Parse(System.String)\" data-throw-if-not-resolved=\"false\"></xref> parses a string with three elements that can appear in any order and are delimited by white space. These three elements are as shown in the following table.</p>\n<p>Element</p>\n<p>Example</p>\n<table><tbody><tr><td>\n<p><Date></p>\n</td><td>\n<p>\"2/10/2007\"</p>\n</td></tr><tr><td>\n<p><Time></p>\n</td><td>\n<p>\"1:02:03 PM\"</p>\n</td></tr><tr><td>\n<p><Offset></p>\n</td><td>\n<p>\"-7:30\"</p>\n</td></tr></tbody></table>\n<p>Although each of these elements is optional, <Offset> cannot appear by itself. It must be provided together with either <Date> or <Time>. If <Date> is missing, its default value is the current day. If <Time> is missing, its default value is 12:00:00 AM. If <Date> is present but its year component consists of only two digits, it is converted to a year in the current culture's current calendar based on the value of the <xref href=\"System.Globalization.Calendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> property. If <Offset> is missing, its default value is the offset of the local time zone. <Offset> can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, <Offset> must include a sign symbol.</p>\n<p>The <em>input</em> string is parsed by using the formatting information in a <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that is initialized for the current culture. To parse a string that contains designated formatting that does not necessarily correspond to the formatting of the current culture, use the <xref href=\"System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method and provide a format specifier.</p>\n"
  syntax:
    content: public static DateTimeOffset Parse(string input)
    content.vb: Public Shared Function Parse(input As String) As DateTimeOffset
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that contains a date and time to convert.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that is equivalent to the date and time that is contained in <em>input</em>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The offset is greater than 14 hours or less than -14 hours.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>input</em> is <strong>null</strong>.</p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>input</em> does not contain a valid string representation of a date and time.</p>\n<p>-or-</p>\n<p>\n<em>input</em> contains the string representation of an offset value without a date or time.</p>\n"
  seealso:
  - type: System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)
    commentId: M:System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)
  - type: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
    commentId: M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTimeOffset.Parse(System.String,System.IFormatProvider)
  commentId: M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider)
  id: Parse(System.String,System.IFormatProvider)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Parse(String, IFormatProvider)
  nameWithType: DateTimeOffset.Parse(String, IFormatProvider)
  fullName: System.DateTimeOffset.Parse(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 562
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent using the specified culture-specific format information.</p>\n"
  remarks: "\n<p>This method parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.</p>\n<p>Element</p>\n<p>Example</p>\n<table><tbody><tr><td>\n<p><Date></p>\n</td><td>\n<p>\"2/10/2007\"</p>\n</td></tr><tr><td>\n<p><Time></p>\n</td><td>\n<p>\"1:02:03 PM\"</p>\n</td></tr><tr><td>\n<p><Offset></p>\n</td><td>\n<p>\"-7:30\"</p>\n</td></tr></tbody></table>\n<p>Although each of these elements is optional, <Offset> cannot appear by itself. It must be provided together with either <Date> or <Time>. If <Date> is missing, its default value is the current day. If <Date> is present but its year component consists of only two digits, it is converted to a year in the <em>provider</em> parameter's current calendar based on the value of the <xref href=\"System.Globalization.Calendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> property. If <Time> is missing, its default value is 12:00:00 AM. If <Offset> is missing, its default value is the offset of the local time zone. <Offset> can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, <Offset> must include a sign symbol.</p>\n<p>The format of these three elements is defined by the <em>formatProvider</em> parameter, which can be either of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture whose formatting is used in the <em>input</em> parameter. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the formatting used in <em>input</em>.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the format of date and time data.</p>\n</li></ul>\n<p>If <em>formatprovider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that corresponds to the current culture is used. </p>\n<p>The positive or negative sign used in <Offset> must be either + or -. It is not defined by the <xref href=\"System.Globalization.NumberFormatInfo.PositiveSign\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Globalization.NumberFormatInfo.NegativeSign\" data-throw-if-not-resolved=\"false\"></xref> properties of the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object of the <em>formatProvider</em> parameter.   </p>\n"
  syntax:
    content: public static DateTimeOffset Parse(string input, IFormatProvider formatProvider)
    content.vb: Public Shared Function Parse(input As String, formatProvider As IFormatProvider) As DateTimeOffset
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that contains a date and time to convert.   </p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that provides culture-specific format information about <em>input</em>.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that is equivalent to the date and time that is contained in <em>input</em>, as specified by <em>formatProvider</em>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The offset is greater than 14 hours or less than -14 hours.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>input</em> is <strong>null</strong>.</p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>input</em> does not contain a valid string representation of a date and time.</p>\n<p>-or-</p>\n<p>\n<em>input</em> contains the string representation of an offset value without a date or time.</p>\n"
  seealso:
  - type: System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)
    commentId: M:System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)
  - type: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
    commentId: M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  commentId: M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  id: Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Parse(String, IFormatProvider, DateTimeStyles)
  nameWithType: DateTimeOffset.Parse(String, IFormatProvider, DateTimeStyles)
  fullName: System.DateTimeOffset.Parse(System.String, System.IFormatProvider, System.Globalization.DateTimeStyles)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 566
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent using the specified culture-specific format information and formatting style.</p>\n"
  remarks: "\n<p>This method parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.</p>\n<p>Element</p>\n<p>Example</p>\n<table><tbody><tr><td>\n<p><Date></p>\n</td><td>\n<p>\"2/10/2007\"</p>\n</td></tr><tr><td>\n<p><Time></p>\n</td><td>\n<p>\"1:02:03 PM\"</p>\n</td></tr><tr><td>\n<p><Offset></p>\n</td><td>\n<p>\"-7:30\"</p>\n</td></tr></tbody></table>\n<p>Although each of these elements is optional, <Offset> cannot appear by itself. It must be provided together with either <Date> or <Time>. If <Date> is missing, its default value is the current day. If <Date> is present but its year component consists of only two digits, it is converted to a year in the <em>provider</em> parameter's current calendar based on the value of the <xref href=\"System.Globalization.Calendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> property. If <Time> is missing, its default value is 12:00:00 AM. If <Offset> is missing, its default value is the offset of the local time zone, or <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref> if either the <xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref> value is specified in the <em>styles</em> parameter. If <Offset> is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, <Offset> must include a sign symbol.</p>\n<p>The format of these three elements is defined by the <em>formatProvider</em> parameter, which can be either of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture whose formatting is used in the <em>input</em> parameter. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the formatting used in <em>input</em>.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the format of date and time data.</p>\n</li></ul>\n<p>Each element can also be enclosed by leading or trailing white space, and the <Date> and <Time> elements can include inner white space (such as 6:   00:00). Only the <Offset> component cannot include inner white space.</p>\n<p>If <em>formatprovider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that corresponds to the current culture is used. </p>\n<p>The positive or negative sign used in <Offset> must be either + or -. It is not defined by the <xref href=\"System.Globalization.NumberFormatInfo.PositiveSign\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Globalization.NumberFormatInfo.NegativeSign\" data-throw-if-not-resolved=\"false\"></xref> properties of the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <em>formatProvider</em> parameter.</p>\n<p>The following table shows the members of the <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration that are supported.</p>\n<p>DateTimeStyles member</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Parses the string represented by <em>input</em> and, if necessary, converts it to UTC. It is equivalent to parsing a string and then calling the <xref href=\"System.DateTimeOffset.ToUniversalTime\" data-throw-if-not-resolved=\"false\"></xref> method of the returned <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowInnerWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Although valid, this value is ignored. Inner white space is permitted in the <Date> and <Time> elements.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Although valid, this value is ignored. Leading white space is permitted in front of each component in the parsed string.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Although valid, this value is ignored. Trailing white space is permitted in front of each component in the parsed string.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowWhiteSpaces\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>This is the default behavior. It cannot be overridden by supplying a more restrictive <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration value, such as <xref href=\"System.Globalization.DateTimeStyles.None\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Indicates that, if the <em>input</em> parameter lacks an <Offset> element, the offset of the local time zone should be provided. This is the default behavior of the <xref href=\"System.DateTimeOffset.Parse(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Indicates that, if the <em>input</em> parameter lacks an <Offset> element, the UTC offset (00:00) should be provided.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.None\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Although valid, this value is ignored and has no effect.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.RoundtripKind\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Because the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> structure does not include a <strong>Kind</strong> property, this value has no effect.</p>\n</td></tr></tbody></table>\n<p>Only the <xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\" data-throw-if-not-resolved=\"false\"></xref> value is not supported. An <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> is thrown if this value is included in the <em>styles</em> parameter.</p>\n"
  syntax:
    content: public static DateTimeOffset Parse(string input, IFormatProvider formatProvider, DateTimeStyles styles)
    content.vb: Public Shared Function Parse(input As String, formatProvider As IFormatProvider, styles As DateTimeStyles) As DateTimeOffset
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that contains a date and time to convert.   </p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that provides culture-specific format information about <em>input</em>.</p>\n"
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: "\n<p>A bitwise combination of enumeration values that indicates the permitted format of <em>input</em>. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\" data-throw-if-not-resolved=\"false\"></xref>.   </p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that is equivalent to the date and time that is contained in <em>input</em> as specified by <em>formatProvider</em> and <em>styles</em>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The offset is greater than 14 hours or less than -14 hours.</p>\n<p>-or-</p>\n<p>\n<em>styles</em> is not a valid <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n<p>-or-</p>\n<p>\n<em>styles</em> includes an unsupported <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n<p>-or-</p>\n<p>\n<em>styles</em> includes <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> values that cannot be used together.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>input</em> is <strong>null</strong>.</p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>input</em> does not contain a valid string representation of a date and time.</p>\n<p>-or-</p>\n<p>\n<em>input</em> contains the string representation of an offset value without a date or time.</p>\n"
  seealso:
  - type: System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)
    commentId: M:System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)
  - type: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
    commentId: M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
  commentId: M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
  id: ParseExact(System.String,System.String,System.IFormatProvider)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ParseExact(String, String, IFormatProvider)
  nameWithType: DateTimeOffset.ParseExact(String, String, IFormatProvider)
  fullName: System.DateTimeOffset.ParseExact(System.String, System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ParseExact
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 580
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method parses the string representation of a date, which must be in the format defined by the <em>format</em> parameter. It also requires that the <Date>, <Time>, and <Offset> elements of the string representation of a date and time appear in the order specified by <em>format</em>. If the <em>input</em> string does not match this <em>format</em> parameter, the method throws a <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref>.  In contrast, the <xref href=\"System.DateTimeOffset.Parse(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object. <xref href=\"System.DateTimeOffset.Parse(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> also allows the <Date>, <Time>, and <Offset> elements of the string representation of a date and time to appear in any order.</p>\n<p>The <em>format</em> parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required format of the <em>input</em> parameter. For details about valid formatting codes, see Standard Date and Time Format Strings and Custom Date and Time Format Strings. If <em>format</em> includes the <strong>z</strong>, <strong>zz</strong>, or <strong>zzz</strong> custom format specifiers to indicate that an offset must be present in <em>input</em>, that offset must include either a negative sign or a positive sign. If the sign is missing, the method throws a <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>If <em>format</em> requires that <em>input</em> contain a date but not a time, the resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is assigned a time of midnight (0:00:00). If <em>format</em> requires that <em>input</em> contain a time but not a date, the resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is assigned the current date on the local system. If <em>format</em> does not require that <em>input</em> contain an offset, the resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is assigned the time zone offset of the local system.</p>\n<p>The particular date and time symbols and strings used in <em>input</em> are defined by the <em>formatProvider</em> parameter, as is the precise format of <em>input</em> if <em>format</em> is a standard format specifier string. The <em>formatProvider</em> parameter can be either of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture based on which <em>input</em> is interpreted. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by its <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the symbols and formatting in <em>input</em>.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the format of date and time data.</p>\n</li></ul>\n<p>If <em>formatprovider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that corresponds to the current culture is used. </p>\n"
  syntax:
    content: public static DateTimeOffset ParseExact(string input, string format, IFormatProvider formatProvider)
    content.vb: Public Shared Function ParseExact(input As String, format As String, formatProvider As IFormatProvider) As DateTimeOffset
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that contains a date and time to convert.</p>\n"
    - id: format
      type: System.String
      description: "\n<p>A format specifier that defines the expected format of <em>input</em>.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information about <em>input</em>.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that is equivalent to the date and time that is contained in <em>input</em> as specified by <em>format</em> and <em>formatProvider</em>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The offset is greater than 14 hours or less than -14 hours.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>input</em> is <strong>null</strong>.</p>\n<p>-or-</p>\n<p>\n<em>format</em> is <strong>null</strong>.</p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>input</em> is an empty string (\"\").</p>\n<p>-or-</p>\n<p>\n<em>input</em> does not contain a valid string representation of a date and time.</p>\n<p>-or-</p>\n<p>\n<em>format</em> is an empty string.</p>\n<p>-or-</p>\n<p>The hour component and the AM/PM designator in <em>input</em> do not agree.</p>\n"
  seealso:
  - type: System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
    commentId: M:System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  commentId: M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  id: ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ParseExact(String, String, IFormatProvider, DateTimeStyles)
  nameWithType: DateTimeOffset.ParseExact(String, String, IFormatProvider, DateTimeStyles)
  fullName: System.DateTimeOffset.ParseExact(System.String, System.String, System.IFormatProvider, System.Globalization.DateTimeStyles)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ParseExact
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 588
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\" data-throw-if-not-resolved=\"false\"></xref> method parses the string representation of a date, which must be in the format defined by the <em>format</em> parameter. It also requires that the <Date>, <Time>, and <Offset> elements of the string representation of a date and time appear in the order specified by <em>format</em>. If the <em>input</em> string does not match the pattern of the <em>format</em> parameter, with any variations defined by the <em>styles</em> parameter, the method throws a <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref>.  In contrast, the <xref href=\"System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\" data-throw-if-not-resolved=\"false\"></xref> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object. <xref href=\"System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\" data-throw-if-not-resolved=\"false\"></xref> also allows the <Date>, <Time>, and <Offset> elements of the string representation of a date and time to appear in any order.</p>\n<p>The <em>format</em> parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required pattern of the <em>input</em> parameter. For details about valid formatting codes, see Standard Date and Time Format Strings and Custom Date and Time Format Strings. If <em>format</em> includes the <strong>z</strong>, <strong>zz</strong>, or <strong>zzz</strong> custom format specifiers to indicate that an offset must be present in <em>input</em>, that offset must include either a negative sign or a positive sign. If the sign is missing, the method throws a <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>If <em>format</em> requires that <em>input</em> contain a date but not a time, the resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is assigned a time of midnight (0:00:00). If <em>format</em> requires that <em>input</em> contain a time but not a date, the resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is assigned the current date on the local system. If <em>format</em> does not require that <em>input</em> contain an offset, the offset of the resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object depends on the value of the <em>styles</em> parameter. If <em>styles</em> includes <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref>, the offset of the local time zone is assigned to the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object. If <em>styles</em> includes <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object. If neither value is specified, the offset of the local time zone is used.</p>\n<p>The particular date and time symbols and strings used in <em>input</em> are defined by the <em>formatProvider</em> parameter. The same is true for the precise format of <em>input</em>, if <em>format</em> is a standard format specifier string. The <em>formatProvider</em> parameter can be either of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture based on which <em>input</em> is interpreted. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the symbols and formatting in <em>input</em>.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the format of date and time data.</p>\n</li></ul>\n<p>If <em>formatprovider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that corresponds to the current culture is used. </p>\n<p>The <em>styles</em> parameter defines whether white space is allowed in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration are supported except <xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\" data-throw-if-not-resolved=\"false\"></xref>. The following table lists the effect of each supported member.</p>\n<p>\n<strong>DateTimeStyles</strong> member</p>\n<p>Behavior</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Parses <em>input</em> and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <xref href=\"System.DateTimeOffset.ToUniversalTime\" data-throw-if-not-resolved=\"false\"></xref> method of the returned <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>If <em>format</em> does not require that <em>input</em> contain an offset value, the returned <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is given the offset of the local time zone. This is the default value.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>If <em>format</em> does not require that <em>input</em> contain an offset value, the returned <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is given the UTC offset (+00:00).</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowInnerWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Allows <em>input</em> to include inner white space not specified by <em>format</em>. Extra white space can appear between date and time components and within individual components, and is ignored when parsing the string.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Allows <em>input</em> to include leading spaces not specified by <em>format</em>. These are ignored when parsing the string.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Allows <em>input</em> to include trailing spaces not specified by <em>format</em>. These are ignored when parsing the string.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowWhiteSpaces\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Allows <em>input</em> to include leading, trailing, and inner spaces not specified by <em>format</em>. All extra white-space characters not specified in <em>format</em> are ignored when parsing the string.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.None\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Indicates that additional white space is not permitted in <em>input</em>. White space must appear exactly as specified in <em>format</em>. This is the default behavior.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.RoundtripKind\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Has no effect because the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> structure does not include a <strong>Kind</strong> property.</p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public static DateTimeOffset ParseExact(string input, string format, IFormatProvider formatProvider, DateTimeStyles styles)
    content.vb: Public Shared Function ParseExact(input As String, format As String, formatProvider As IFormatProvider, styles As DateTimeStyles) As DateTimeOffset
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that contains a date and time to convert.</p>\n"
    - id: format
      type: System.String
      description: "\n<p>A format specifier that defines the expected format of <em>input</em>.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information about <em>input</em>.</p>\n"
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: "\n<p>A bitwise combination of enumeration values that indicates the permitted format of <em>input</em>.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that is equivalent to the date and time that is contained in the <em>input</em> parameter, as specified by the <em>format</em>, <em>formatProvider</em>, and <em>styles</em> parameters.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The offset is greater than 14 hours or less than -14 hours.</p>\n<p>-or-</p>\n<p>The <em>styles</em> parameter includes an unsupported value.</p>\n<p>-or-</p>\n<p>The <em>styles</em> parameter contains <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> values that cannot be used together.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>input</em> is <strong>null</strong>.</p>\n<p>-or-</p>\n<p>\n<em>format</em> is <strong>null</strong>.</p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>input</em> is an empty string (\"\").</p>\n<p>-or-</p>\n<p>\n<em>input</em> does not contain a valid string representation of a date and time.</p>\n<p>-or-</p>\n<p>\n<em>format</em> is an empty string.</p>\n<p>-or-</p>\n<p>The hour component and the AM/PM designator in <em>input</em> do not agree. </p>\n"
  seealso:
  - type: System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
    commentId: M:System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  commentId: M:System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  id: ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ParseExact(String, String[], IFormatProvider, DateTimeStyles)
  nameWithType: DateTimeOffset.ParseExact(String, String[], IFormatProvider, DateTimeStyles)
  fullName: System.DateTimeOffset.ParseExact(System.String, System.String[], System.IFormatProvider, System.Globalization.DateTimeStyles)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ParseExact
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 599
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent using the specified formats, culture-specific format information, and style. The format of the string representation must match one of the specified formats exactly.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)\" data-throw-if-not-resolved=\"false\"></xref> method parses the string representation of a date that matches any one of the patterns assigned to the <em>formats</em> parameter. If the <em>input</em> string does not match any one of these patterns with any of the variations defined by the <em>styles</em> parameter, the method throws a <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref>. Aside from comparing <em>input</em> to multiple formatting patterns, this overload behaves identically to the <xref href=\"System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>The <em>formats</em> parameter is a string array whose elements contain either a single standard format specifier or one or more custom format specifiers that define the possible pattern of the <em>input</em> parameter. When the method is called, <em>input</em> must match one of these patterns. For details about valid formatting codes, see Standard Date and Time Format Strings and Custom Date and Time Format Strings. If the matched element in <em>formats</em> includes the <strong>z</strong>, <strong>zz</strong>, or <strong>zzz</strong> custom format specifiers to indicate that an offset must be present in <em>input</em>, that offset must include either a negative sign or a positive sign. If the sign is missing, the method throws a <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Using the <em>formats</em> parameter of this overload to specify multiple formats can help reduce the frustration many users experience when they enter dates and times. In particular, the ability to define multiple input patterns enables an application to handle date and time representations that can either include or lack leading zeros in months, days, hours, minutes, and seconds. The example provides an illustration of this.</p>\n<p>If the matched element in <em>formats</em> requires that <em>input</em> contain a date but not a time, the resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is assigned a time of midnight (0:00:00). If the matched element in <em>formats</em> requires that <em>input</em> contain a time but not a date, the resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is assigned the current date on the local system. If the matched element in <em>formats</em> does not require that <em>input</em> contain an offset, the offset of the resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object depends on the value of the <em>styles</em> parameter. If <em>styles</em> includes <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref>, the offset of the local time zone is assigned to the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object. If <em>styles</em> includes <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object. If neither value is specified, the offset of the local time zone is used.</p>\n<p>The particular date and time symbols and strings used in <em>input</em> are defined by the <em>formatProvider</em> parameter. The same is true for the precise format of <em>input</em>, if the matching element of <em>formats</em> is a standard format specifier string. The <em>formatProvider</em> parameter can be either of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture based on which <em>input</em> is interpreted. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the symbols and formatting in <em>input</em>.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the format of date and time data.</p>\n</li></ul>\n<p>If <em>formatprovider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that corresponds to the current culture is used. </p>\n<p>The <em>styles</em> parameter defines whether white space is permitted in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration are supported except <xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\" data-throw-if-not-resolved=\"false\"></xref>. The following table lists the effect of each supported member.</p>\n<p>\n<strong>DateTimeStyles</strong> member</p>\n<p>Behavior</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Parses <em>input</em> and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <xref href=\"System.DateTimeOffset.ToUniversalTime\" data-throw-if-not-resolved=\"false\"></xref> method of the returned <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>If the matched element in <em>formats</em> does not require that <em>input</em> contain an offset value, the returned <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is given the offset of the local time zone. This is the default value.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>If the matched element in <em>formats</em> does not require that <em>input</em> contain an offset value, the returned <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is given the UTC offset (+00:00).</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowInnerWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Allows <em>input</em> to include inner white space not specified by <em>format</em>. Extra white space can appear between date and time components and within individual components (except the offset), and is ignored when parsing the string.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Allows <em>input</em> to include leading spaces not specified by <em>formats</em>. These are ignored when parsing the string.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Allows <em>input</em> to include trailing spaces not specified by <em>formats</em>. These are ignored when parsing the string.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowWhiteSpaces\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Allows <em>input</em> to include leading, trailing, and inner spaces not specified by <em>formats</em>. All extra white-space characters not specified in the matched element in <em>formats</em> are ignored when parsing the string.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.None\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Indicates that additional white space is not permitted in <em>input</em>. White space must appear exactly as specified in a particular element of <em>formats</em> for a match to occur. This is the default behavior.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.RoundtripKind\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Has no effect because the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> structure does not include a <strong>Kind</strong> property.</p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public static DateTimeOffset ParseExact(string input, string[] formats, IFormatProvider formatProvider, DateTimeStyles styles)
    content.vb: Public Shared Function ParseExact(input As String, formats As String(), formatProvider As IFormatProvider, styles As DateTimeStyles) As DateTimeOffset
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that contains a date and time to convert.</p>\n"
    - id: formats
      type: System.String[]
      description: "\n<p>An array of format specifiers that define the expected formats of <em>input</em>.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information about <em>input</em>.</p>\n"
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: "\n<p>A bitwise combination of enumeration values that indicates the permitted format of <em>input</em>.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that is equivalent to the date and time that is contained in the <em>input</em> parameter, as specified by the <em>formats</em>, <em>formatProvider</em>, and <em>styles</em> parameters.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The offset is greater than 14 hours or less than -14 hours.</p>\n<p>-or-</p>\n<p>\n<em>styles</em> includes an unsupported value.</p>\n<p>-or-</p>\n<p>The <em>styles</em> parameter contains <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> values that cannot be used together.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>input</em> is <strong>null</strong>.</p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>input</em> is an empty string (\"\").</p>\n<p>-or-</p>\n<p>\n<em>input</em> does not contain a valid string representation of a date and time.</p>\n<p>-or-</p>\n<p>No element of <em>formats</em> contains a valid format specifier.</p>\n<p>-or-</p>\n<p>The hour component and the AM/PM designator in <em>input</em> do not agree. </p>\n"
  seealso:
  - type: System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
    commentId: M:System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  nameWithType.vb: DateTimeOffset.ParseExact(String, String(), IFormatProvider, DateTimeStyles)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.DateTimeOffset.ParseExact(System.String, System.String(), System.IFormatProvider, System.Globalization.DateTimeStyles)
  name.vb: ParseExact(String, String(), IFormatProvider, DateTimeStyles)
- uid: System.DateTimeOffset.Subtract(System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.Subtract(System.DateTimeOffset)
  id: Subtract(System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Subtract(DateTimeOffset)
  nameWithType: DateTimeOffset.Subtract(DateTimeOffset)
  fullName: System.DateTimeOffset.Subtract(System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Subtract
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 610
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Subtracts a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value that represents a specific date and time from the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>This method converts both <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects to Coordinated Universal Time (UTC) before calculating the time interval that separates them. This removes any effect that different offsets from UTC may have on the comparison.</p>\n<p>For languages that support custom operators, you can also perform date and time subtraction by using the subtraction operator. For details, see the <xref href=\"System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>Because neither the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object nor the <em>value</em> parameter represent the date and time in a specific time zone, the <xref href=\"System.DateTimeOffset.Subtract(System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method does not consider a particular time zone's adjustment rules when it subtracts dates and times. </p>\n"
  syntax:
    content: public TimeSpan Subtract(DateTimeOffset value)
    content.vb: Public Function Subtract(value As DateTimeOffset) As TimeSpan
    parameters:
    - id: value
      type: System.DateTimeOffset
      description: "\n<p>An object that represents the value to subtract. </p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>An object that specifies the interval between the two <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.Subtract(System.TimeSpan)
  commentId: M:System.DateTimeOffset.Subtract(System.TimeSpan)
  id: Subtract(System.TimeSpan)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Subtract(TimeSpan)
  nameWithType: DateTimeOffset.Subtract(TimeSpan)
  fullName: System.DateTimeOffset.Subtract(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Subtract
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 614
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Subtracts a specified time interval from the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>You can use the <xref href=\"System.DateTimeOffset.Subtract(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method to subtract more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation. Its behavior is identical to the <xref href=\"System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method, which defines the subtraction operator. The <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> structure also supports specialized addition methods (such as <xref href=\"System.DateTimeOffset.AddDays(System.Double)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.DateTimeOffset.AddHours(System.Double)\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.DateTimeOffset.AddMinutes(System.Double)\" data-throw-if-not-resolved=\"false\"></xref>) that allow you to perform subtraction by assigning a negative value to the method parameter. </p>\n<p>This method returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object. It does not modify the value of the current object by adding <em>timeSpan</em> to its date and time.</p>\n<p>The <xref href=\"System.DateTimeOffset.Subtract(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method does not affect the value of the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object's <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property. The returned <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object has the same offset as the original object.</p>\n<p>Because the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object does not represent the date and time in a specific time zone, the <xref href=\"System.DateTimeOffset.Subtract(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method does not consider a particular time zone's adjustment rules when it performs the subtraction. </p>\n"
  syntax:
    content: public DateTimeOffset Subtract(TimeSpan value)
    content.vb: Public Function Subtract(value As TimeSpan) As DateTimeOffset
    parameters:
    - id: value
      type: System.TimeSpan
      description: "\n<p>The time interval to subtract.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that is equal to the date and time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, minus the time interval represented by <em>value</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.System#IComparable#CompareTo(System.Object)
  commentId: M:System.DateTimeOffset.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  isEii: true
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: IComparable.CompareTo(Object)
  nameWithType: DateTimeOffset.IComparable.CompareTo(Object)
  fullName: System.DateTimeOffset.System.IComparable.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IComparable.CompareTo
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 415
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Compares the value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object with another object of the same type.</p>\n"
  syntax:
    content: int IComparable.CompareTo(object obj)
    content.vb: Function System.IComparable.CompareTo(obj As Object) As Integer Implements IComparable.CompareTo
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>The object to compare with the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>A 32-bit signed integer that indicates whether the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is less than, equal to, or greater than <em>obj</em>. The return values of the method are interpreted as follows:</p>\n<p>Return Value</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>Less than zero</p>\n</td><td>\n<p>The current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is less than (earlier than) <em>obj</em>.</p>\n</td></tr><tr><td>\n<p>Zero</p>\n</td><td>\n<p>The current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is equal to (the same point in time as) <em>obj</em>.</p>\n</td></tr><tr><td>\n<p>Greater than zero</p>\n</td><td>\n<p>The current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is greater than (later than) <em>obj</em>.</p>\n</td></tr></tbody></table>\n"
  implements:
  - System.IComparable.CompareTo(System.Object)
  nameWithType.vb: DateTimeOffset.System.IComparable.CompareTo(Object)
  name.vb: System.IComparable.CompareTo(Object)
- uid: System.DateTimeOffset.ToFileTime
  commentId: M:System.DateTimeOffset.ToFileTime
  id: ToFileTime
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ToFileTime()
  nameWithType: DateTimeOffset.ToFileTime()
  fullName: System.DateTimeOffset.ToFileTime()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToFileTime
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 619
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object to a Windows file time.</p>\n"
  remarks: "\n<p>A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file. </p>\n<p>The <xref href=\"System.DateTimeOffset.ToFileTime\" data-throw-if-not-resolved=\"false\"></xref> method converts the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object's date and time to UTC before it performs the conversion. In other words, calling the <xref href=\"System.DateTimeOffset.ToFileTime\" data-throw-if-not-resolved=\"false\"></xref> method is equivalent to the following method call:</p>\n<p>[C#]</p>\n<pre><code>this.ToUtcDateTime().ToFileTime();</code></pre>\n<p>[Visual Basic]</p>\n<pre><code>Me.ToUtcDateTime().ToFileTime()</code></pre>\n"
  syntax:
    content: public long ToFileTime()
    content.vb: Public Function ToFileTime As Long
    return:
      type: System.Int64
      description: "\n<p>The value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, expressed as a Windows file time.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting file time would represent a date and time before midnight on January 1, 1601 C.E. Coordinated Universal Time (UTC).</p>\n"
  seealso:
  - type: System.DateTimeOffset.FromFileTime(System.Int64)
    commentId: M:System.DateTimeOffset.FromFileTime(System.Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.ToLocalTime
  commentId: M:System.DateTimeOffset.ToLocalTime
  id: ToLocalTime
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ToLocalTime()
  nameWithType: DateTimeOffset.ToLocalTime()
  fullName: System.DateTimeOffset.ToLocalTime()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToLocalTime
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 651
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that represents the local time.</p>\n"
  remarks: "\n<p>In performing the conversion to local time, the method first converts the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object's date and time to Coordinated Universal Time (UTC) by subtracting the offset from the time. It then converts the UTC date and time to local time by adding the local time zone offset. In doing this, it takes account of any adjustment rules for the local time zone.</p>\n<p>Both the value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and the value of the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object returned by the method call represent the same point in time. That is, if both are passed to the <xref href=\"System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method, the method will return <strong>true</strong>.</p>\n<p>If the conversion causes a time that is out of range of the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> type, the <xref href=\"System.DateTimeOffset.ToLocalTime\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that has the date and time set to either <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref> and the offset set to the local time zone offset.</p>\n"
  syntax:
    content: public DateTimeOffset ToLocalTime()
    content.vb: Public Function ToLocalTime As DateTimeOffset
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that represents the date and time of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object converted to local time.</p>\n"
  seealso:
  - type: System.DateTimeOffset.ToUniversalTime
    commentId: M:System.DateTimeOffset.ToUniversalTime
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.ToOffset(System.TimeSpan)
  commentId: M:System.DateTimeOffset.ToOffset(System.TimeSpan)
  id: ToOffset(System.TimeSpan)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ToOffset(TimeSpan)
  nameWithType: DateTimeOffset.ToOffset(TimeSpan)
  fullName: System.DateTimeOffset.ToOffset(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToOffset
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 165
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object to the date and time specified by an offset value.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.ToOffset(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method is an alternative to calling the <xref href=\"System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)\" data-throw-if-not-resolved=\"false\"></xref>  method. It can be useful for performing simple conversions from one time zone to another when the time zones' offsets from Coordinated Universal Time (UTC) are known. However, because neither the original <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object nor the new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object returned by the method call are unambiguously related to a particular time zone, the method does not apply any time zone adjustment rules in the conversion. </p>\n"
  syntax:
    content: public DateTimeOffset ToOffset(TimeSpan offset)
    content.vb: Public Function ToOffset(offset As TimeSpan) As DateTimeOffset
    parameters:
    - id: offset
      type: System.TimeSpan
      description: "\n<p>The offset to convert the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value to.   </p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that is equal to the original <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object (that is, their <xref href=\"System.DateTimeOffset.ToUniversalTime\" data-throw-if-not-resolved=\"false\"></xref> methods return identical points in time) but whose <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property is set to <em>offset</em>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object has a <xref href=\"System.DateTimeOffset.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value earlier than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object has a <xref href=\"System.DateTimeOffset.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value later than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is less than -14 hours.</p>\n<p>-or-</p>\n<p>\n<em>offset</em> is greater than 14 hours.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.ToString
  commentId: M:System.DateTimeOffset.ToString
  id: ToString
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: DateTimeOffset.ToString()
  fullName: System.DateTimeOffset.ToString()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 660
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object to its equivalent string representation.</p>\n"
  remarks: "\n<p>The return value of this method is identical to that of the <xref href=\"System.DateTime.ToString\" data-throw-if-not-resolved=\"false\"></xref> method, except that it includes a space followed by the offset appended at the end of the string. In other words, it formats output using the short date pattern, the long time pattern, and the <strong>zzz</strong> custom format string, with each element separated from the previous element by a space. For example, if <xref href=\"System.DateTime.ToString\" data-throw-if-not-resolved=\"false\"></xref> returns a value of 1/12/2008 6:15:50 PM, <xref href=\"System.DateTimeOffset.ToString\" data-throw-if-not-resolved=\"false\"></xref> returns a value of 1/12/2008 6:15:50 PM -08:00 for a time that is eight hours behind Coordinated Universal Time (UTC).</p>\n<p>This method uses formatting information derived from the current culture. For more information, see <xref href=\"System.Globalization.CultureInfo.CurrentCulture\" data-throw-if-not-resolved=\"false\"></xref>. Other overloads of the <xref href=\"System.DateTimeOffset.ToString\" data-throw-if-not-resolved=\"false\"></xref> method enable you to specify the culture whose formatting to use, and to define the output pattern of the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A string representation of a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that includes the offset appended at the end of the string.</p>\n"
  overridden: System.ValueType.ToString
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The date and time is outside the range of dates supported by the calendar used by the current culture. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.DateTimeOffset.ToString(System.IFormatProvider)
  commentId: M:System.DateTimeOffset.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  nameWithType: DateTimeOffset.ToString(IFormatProvider)
  fullName: System.DateTimeOffset.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 670
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object to its equivalent string representation using the specified culture-specific formatting information.</p>\n"
  remarks: "\n<p>The return value of this method is identical to that of its equivalent overload of the <xref href=\"System.DateTime.ToString\" data-throw-if-not-resolved=\"false\"></xref> method, except that it includes a space followed by the offset appended at the end of the string. In other words, it formats output using the short date pattern, the long time pattern, and the <strong>zzz</strong> custom format string, with each element separated from the previous element by a space.</p>\n<p>The format of these three elements is defined by the <em>formatProvider</em> parameter. The <em>formatProvider</em> parameter can be either of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture whose formatting conventions are applied to the returned string. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the formatting of the returned string.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the format of date and time data.</p>\n</li></ul>\n<p>If <em>formatProvider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object associated with the current culture is used (see <xref href=\"System.Globalization.CultureInfo.CurrentCulture\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  syntax:
    content: public string ToString(IFormatProvider formatProvider)
    content.vb: Public Function ToString(formatProvider As IFormatProvider) As String
    parameters:
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information.</p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of the value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, as specified by <em>formatProvider</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The date and time is outside the range of dates supported by the calendar used by <em>formatProvider</em>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.ToString(System.String)
  commentId: M:System.DateTimeOffset.ToString(System.String)
  id: ToString(System.String)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ToString(String)
  nameWithType: DateTimeOffset.ToString(String)
  fullName: System.DateTimeOffset.ToString(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 665
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object to its equivalent string representation using the specified format.</p>\n"
  remarks: "\n<p>The <em>format</em> parameter should contain either a single format specifier character (see Standard Date and Time Format Strings) or a custom format pattern (see Custom Date and Time Format Strings) that defines the format of the returned string. If <em>format</em> is a null or empty string (\"\"), the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is output using the default format.</p>\n<p>The following table shows the exact operation of certain format specifiers when used with <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref>, which differs from their behavior when used with <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Existing format specifier</p>\n<p>New behavior</p>\n<table><tbody><tr><td>\n<p>\"K\"</p>\n</td><td>\n<p>Designed to round-trip a date and time. With <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref>, maps to \"zzz\" (the offset is always displayed with hours and minutes). Note that \"K\" is a custom format specifier; it cannot appear as the single character in <em>format</em>.</p>\n</td></tr><tr><td>\n<p>\"U\"</p>\n</td><td>\n<p>Not supported.</p>\n</td></tr><tr><td>\n<p>\"r\" </p>\n</td><td>\n<p>Converts the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object to Coordinated Universal Time (UTC) and outputs it using the custom format string <strong>ddd, dd MMM yyyy HH:mm:ss GMT</strong>.</p>\n</td></tr><tr><td>\n<p>\"u\"</p>\n</td><td>\n<p>Converts the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object to UTC and outputs it using the format <strong>yyyy-MM-dd HH:mm:ssZ</strong>.</p>\n</td></tr></tbody></table>\n<p>The remaining standard date and time format specifiers behave the same with the <xref href=\"System.DateTimeOffset.ToString(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method as they do with the <xref href=\"System.DateTime.ToString\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>This method uses formatting information derived from the current culture. For more information, see <xref href=\"System.Globalization.CultureInfo.CurrentCulture\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public string ToString(string format)
    content.vb: Public Function ToString(format As String) As String
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A format string.</p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of the value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, as specified by <em>format</em>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The length of <em>format</em> is one, and it is not one of the standard format specifier characters defined for <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>-or-</p>\n<p>\n<em>format</em> does not contain a valid custom format pattern.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The date and time is outside the range of dates supported by the calendar used by the current culture. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.ToString(System.String,System.IFormatProvider)
  commentId: M:System.DateTimeOffset.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ToString(String, IFormatProvider)
  nameWithType: DateTimeOffset.ToString(String, IFormatProvider)
  fullName: System.DateTimeOffset.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 675
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object to its equivalent string representation using the specified format and culture-specific format information.</p>\n"
  remarks: "\n<p>The <em>format</em> parameter should contain either a single format specifier character (see Standard Date and Time Format Strings) or a custom format pattern (see Custom Date and Time Format Strings). If <em>format</em> is a null or empty string (\"\"), the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is output using the default format.</p>\n<p>The following table shows the exact operation of certain format specifiers when used with <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref>, which differs from their behavior when used with <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Existing format specifier</p>\n<p>New behavior</p>\n<table><tbody><tr><td>\n<p>\"K\"</p>\n</td><td>\n<p>Designed to round-trip a date and time. With <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref>, maps to \"zzz\" (the offset is always displayed with hours and minutes). Note that \"K\" is a custom format specifier; it cannot appear as the single character in <em>format</em>.</p>\n</td></tr><tr><td>\n<p>\"U\"</p>\n</td><td>\n<p>Not supported.</p>\n</td></tr><tr><td>\n<p>\"r\" </p>\n</td><td>\n<p>Converts the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object to Coordinated Universal Time (UTC) and outputs it using the custom format string <strong>ddd, dd MMM yyyy HH:mm:ss GMT</strong>.</p>\n</td></tr><tr><td>\n<p>\"u\"</p>\n</td><td>\n<p>Converts the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value to UTC and outputs it using the format <strong>yyyy-MM-dd HH:mm:ssZ</strong>.</p>\n</td></tr></tbody></table>\n<p>The remaining standard date and time format specifiers behave the same with the <xref href=\"System.DateTimeOffset.ToString(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method as they do with the <xref href=\"System.DateTime.ToString\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>The pattern that corresponds to standard format specifiers, as well as the symbols and names of date and time components, is defined by the <em>formatProvider</em> parameter. The <em>formatProvider</em> parameter can be either of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture whose formatting is used in <em>input</em>. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the formatting used in <em>input</em>.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the format of date and time data.</p>\n</li></ul>\n<p>If <em>formatProvider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object associated with the current culture is used (see <xref href=\"System.Globalization.CultureInfo.CurrentCulture\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  syntax:
    content: public string ToString(string format, IFormatProvider formatProvider)
    content.vb: Public Function ToString(format As String, formatProvider As IFormatProvider) As String
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A format string.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information.</p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of the value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, as specified by <em>format</em> and <em>provider</em>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The length of <em>format</em> is one, and it is not one of the standard format specifier characters defined for <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>\n<em>format</em> does not contain a valid custom format pattern. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The date and time is outside the range of dates supported by the calendar used by <em>formatProvider</em>. </p>\n"
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.ToUniversalTime
  commentId: M:System.DateTimeOffset.ToUniversalTime
  id: ToUniversalTime
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ToUniversalTime()
  nameWithType: DateTimeOffset.ToUniversalTime()
  fullName: System.DateTimeOffset.ToUniversalTime()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUniversalTime
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 680
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value that represents the Coordinated Universal Time (UTC).</p>\n"
  remarks: "\n<p>This method returns a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object whose <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property is set to zero.</p>\n<p>Both the value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and the value of the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object returned by the method call represent the same point in time. That is, if both are passed to the <xref href=\"System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method, the method will return <strong>true</strong>.</p>\n"
  syntax:
    content: public DateTimeOffset ToUniversalTime()
    content.vb: Public Function ToUniversalTime As DateTimeOffset
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that represents the date and time of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object converted to Coordinated Universal Time (UTC).</p>\n"
  seealso:
  - type: System.DateTimeOffset.ToLocalTime
    commentId: M:System.DateTimeOffset.ToLocalTime
  - type: System.DateTimeOffset.ToOffset(System.TimeSpan)
    commentId: M:System.DateTimeOffset.ToOffset(System.TimeSpan)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.ToUnixTimeMilliseconds
  commentId: M:System.DateTimeOffset.ToUnixTimeMilliseconds
  id: ToUnixTimeMilliseconds
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ToUnixTimeMilliseconds()
  nameWithType: DateTimeOffset.ToUnixTimeMilliseconds()
  fullName: System.DateTimeOffset.ToUnixTimeMilliseconds()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUnixTimeMilliseconds
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 644
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns the number of milliseconds that have elapsed since 1970-01-01T00:00:00.000Z. </p>\n"
  remarks: "\n<p>Unix time represents the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). It does not take leap seconds into account. This method returns the number of milliseconds in Unix time. </p>\n<p>This method first converts the current instance to UTC before returning the number of milliseconds in its Unix time. For date and time values before 1970-01-01T00:00:00Z, this method returns a negative value. </p>\n"
  syntax:
    content: public long ToUnixTimeMilliseconds()
    content.vb: Public Function ToUnixTimeMilliseconds As Long
    return:
      type: System.Int64
      description: "\n<p>The number of milliseconds that have elapsed since 1970-01-01T00:00:00.000Z. </p>\n"
  seealso:
  - type: System.DateTimeOffset.ToUnixTimeSeconds
    commentId: M:System.DateTimeOffset.ToUnixTimeSeconds
  - type: System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)
    commentId: M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.ToUnixTimeSeconds
  commentId: M:System.DateTimeOffset.ToUnixTimeSeconds
  id: ToUnixTimeSeconds
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ToUnixTimeSeconds()
  nameWithType: DateTimeOffset.ToUnixTimeSeconds()
  fullName: System.DateTimeOffset.ToUnixTimeSeconds()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUnixTimeSeconds
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 623
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns the number of seconds that have elapsed since 1970-01-01T00:00:00Z. </p>\n"
  remarks: "\n<p>Unix time represents the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). It does not take leap seconds into account. </p>\n<p>This method first converts the current instance to UTC before returning its Unix time. For date and time values before 1970-01-01T00:00:00Z, this method returns a negative value. </p>\n"
  syntax:
    content: public long ToUnixTimeSeconds()
    content.vb: Public Function ToUnixTimeSeconds As Long
    return:
      type: System.Int64
      description: "\n<p>The number of seconds that have elapsed since 1970-01-01T00:00:00Z. </p>\n"
  seealso:
  - type: System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)
    commentId: M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)
  - type: System.DateTimeOffset.ToUnixTimeMilliseconds
    commentId: M:System.DateTimeOffset.ToUnixTimeMilliseconds
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)
  commentId: M:System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)
  id: TryParse(System.String,System.DateTimeOffset@)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: TryParse(String, out DateTimeOffset)
  nameWithType: DateTimeOffset.TryParse(String, out DateTimeOffset)
  fullName: System.DateTimeOffset.TryParse(System.String, out System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TryParse
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 684
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Tries to converts a specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent, and returns a value that indicates whether the conversion succeeded.</p>\n"
  remarks: "\n<p>This overload of the <xref href=\"System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)\" data-throw-if-not-resolved=\"false\"></xref> method is like the <xref href=\"System.DateTimeOffset.Parse(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method, except that it does not throw an exception if the conversion fails. It parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.</p>\n<p>Element</p>\n<p>Example</p>\n<table><tbody><tr><td>\n<p><Date></p>\n</td><td>\n<p>\"2/10/2007\"</p>\n</td></tr><tr><td>\n<p><Time></p>\n</td><td>\n<p>\"1:02:03 PM\"</p>\n</td></tr><tr><td>\n<p><Offset></p>\n</td><td>\n<p>\"-7:30\"</p>\n</td></tr></tbody></table>\n<p>Although each of these elements is optional, <Offset> cannot appear by itself. It must be provided together with either <Date> or <Time>. If <Date> is missing, its default value is the current day. If <Date> is present but its year component consists of only two digits, it is converted to a year in the current culture's current calendar based on the value of the <xref href=\"System.Globalization.Calendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> property. If <Time> is missing, its default value is 12:00:00 AM. If <Offset> is missing, its default value is the offset of the local time zone. If <Offset> is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, <Offset> must include a sign symbol or the method returns <strong>false</strong>.</p>\n<p>The <em>input</em> string is parsed by using the formatting information in a <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object initialized for the current culture. To parse a string that contains designated formatting that does not necessarily correspond to that of the current culture, use the <xref href=\"System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\" data-throw-if-not-resolved=\"false\"></xref> method and provide a format specifier.</p>\n"
  syntax:
    content: public static bool TryParse(string input, out DateTimeOffset result)
    content.vb: Public Shared Function TryParse(input As String, ByRef result As DateTimeOffset) As Boolean
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that contains a date and time to convert.</p>\n"
    - id: result
      type: System.DateTimeOffset
      description: "\n<p>When the method returns, contains the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent to the date and time of <em>input</em>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>, if the conversion failed. The conversion fails if the <em>input</em> parameter is <strong>null</strong> or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <em>input</em> parameter is successfully converted; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.DateTimeOffset.Parse(System.String)
    commentId: M:System.DateTimeOffset.Parse(System.String)
  nameWithType.vb: DateTimeOffset.TryParse(String, ByRef DateTimeOffset)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.DateTimeOffset.TryParse(System.String, ByRef System.DateTimeOffset)
  name.vb: TryParse(String, ByRef DateTimeOffset)
- uid: System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  commentId: M:System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  id: TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: TryParse(String, IFormatProvider, DateTimeStyles, out DateTimeOffset)
  nameWithType: DateTimeOffset.TryParse(String, IFormatProvider, DateTimeStyles, out DateTimeOffset)
  fullName: System.DateTimeOffset.TryParse(System.String, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TryParse
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 696
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Tries to convert a specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent, and returns a value that indicates whether the conversion succeeded.</p>\n"
  remarks: "\n<p>This overload of the <xref href=\"System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\" data-throw-if-not-resolved=\"false\"></xref> method is like the <xref href=\"System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\" data-throw-if-not-resolved=\"false\"></xref> method, except that it does not throw an exception if the conversion fails. The method parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.</p>\n<p>Element</p>\n<p>Example</p>\n<table><tbody><tr><td>\n<p><Date></p>\n</td><td>\n<p>\"2/10/2007\"</p>\n</td></tr><tr><td>\n<p><Time></p>\n</td><td>\n<p>\"1:02:03 PM\"</p>\n</td></tr><tr><td>\n<p><Offset></p>\n</td><td>\n<p>\"-7:30\"</p>\n</td></tr></tbody></table>\n<p>Although each of these elements is optional, <Offset> cannot appear by itself. It must be provided together with either <Date> or <Time>. If <Date> is missing, its default value is the current day. If <Date> is present but its year component consists of only two digits, it is converted to a year in the <em>provider</em> parameter's current calendar based on the value of the <xref href=\"System.Globalization.Calendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> property. If <Time> is missing, its default value is 12:00:00 AM. If <Offset> is missing, its default value is the offset of the local time zone, or <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref> if either the <xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref> value is specified in <em>styles</em>. If <Offset> is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, <Offset> must include a sign symbol or the method returns <strong>false</strong>.</p>\n<p>The <em>input</em> string is parsed by using the culture-specific formatting information in a <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object supplied by the <em>formatProvider</em> parameter. The <em>formatProvider</em> parameter can be either of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture whose formatting is used in <em>input</em>. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the format that is used in <em>input</em>.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the format of date and time data.</p>\n</li></ul>\n<p>In addition, each element can be delimited by leading or trailing white space, and the <Date> and <Time> components can include inner white space (such as 6:   00:00). Only the <Offset> component cannot include inner white space.</p>\n<p>If <em>provider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that corresponds to the current culture is used. </p>\n<p>The positive or negative sign used in <Offset> must be either + or -. It is not defined by the <xref href=\"System.Globalization.NumberFormatInfo.PositiveSign\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Globalization.NumberFormatInfo.NegativeSign\" data-throw-if-not-resolved=\"false\"></xref> properties of the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <em>formatprovider</em> parameter's <xref href=\"System.Globalization.CultureInfo.NumberFormat\" data-throw-if-not-resolved=\"false\"></xref> property.   </p>\n<p>The following members of the <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration are supported:</p>\n<p>DateTimeStyles Member</p>\n<p>Comments</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Parses the string represented by <em>input</em> and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the returned object's <xref href=\"System.DateTimeOffset.ToUniversalTime\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowInnerWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Although valid, this value is ignored. Inner white space is allowed in the <Date> and <Time> components.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Although valid, this value is ignored. Leading white space is allowed in front of each component in the parsed string.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Although valid, this value is ignored. Trailing white space is allowed in front of each component in the parsed string.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowWhiteSpaces\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n<p></p>\n</td><td>\n<p>This is the default behavior. It cannot be overridden by supplying a more restrictive <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration value, such as <xref href=\"System.Globalization.DateTimeStyles.None\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Indicates that, if the <em>input</em> parameter lacks an <Offset> element, the offset of the local time zone should be provided. This is the default behavior of the <xref href=\"System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Indicates that, if the <em>input</em> parameter lacks an <Offset> element, the UTC offset (00:00) should be provided.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.None\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Although valid, this value is ignored and has no effect.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.RoundtripKind\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Because the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> structure does not include a <strong>Kind</strong> property, this value has no effect.</p>\n</td></tr></tbody></table>\n<p>Only the <xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\" data-throw-if-not-resolved=\"false\"></xref> value is not supported. An <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> is thrown if this value is included in the <em>styles</em> parameter.</p>\n"
  syntax:
    content: public static bool TryParse(string input, IFormatProvider formatProvider, DateTimeStyles styles, out DateTimeOffset result)
    content.vb: Public Shared Function TryParse(input As String, formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that contains a date and time to convert.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that provides culture-specific formatting information about <em>input</em>.</p>\n"
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: "\n<p>A bitwise combination of enumeration values that indicates the permitted format of <em>input</em>. </p>\n"
    - id: result
      type: System.DateTimeOffset
      description: "\n<p>When the method returns, contains the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value equivalent to the date and time of <em>input</em>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>, if the conversion failed. The conversion fails if the <em>input</em> parameter is <strong>null</strong> or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <em>input</em> parameter is successfully converted; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>styles</em> includes an undefined <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n<p>-or-</p>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\" data-throw-if-not-resolved=\"false\"></xref>  is not supported.</p>\n<p>-or-</p>\n<p>\n<em>styles</em> includes mutually exclusive <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  seealso:
  - type: System.DateTimeOffset.Parse(System.String)
    commentId: M:System.DateTimeOffset.Parse(System.String)
  nameWithType.vb: DateTimeOffset.TryParse(String, IFormatProvider, DateTimeStyles, ByRef DateTimeOffset)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.DateTimeOffset.TryParse(System.String, System.IFormatProvider, System.Globalization.DateTimeStyles, ByRef System.DateTimeOffset)
  name.vb: TryParse(String, IFormatProvider, DateTimeStyles, ByRef DateTimeOffset)
- uid: System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  commentId: M:System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  id: TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: TryParseExact(String, String, IFormatProvider, DateTimeStyles, out DateTimeOffset)
  nameWithType: DateTimeOffset.TryParseExact(String, String, IFormatProvider, DateTimeStyles, out DateTimeOffset)
  fullName: System.DateTimeOffset.TryParseExact(System.String, System.String, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TryParseExact
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 709
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly.</p>\n"
  remarks: "\n<p>This overload of the <xref href=\"System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\" data-throw-if-not-resolved=\"false\"></xref> method is like the <xref href=\"System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\" data-throw-if-not-resolved=\"false\"></xref> method, except that this method does not throw an exception if the conversion fails. It parses the string representation of a date and time that must exactly match the pattern specified by the <em>format</em> parameter. If the <em>input</em> string does not match this pattern, with some possible variations in white space defined by the <em>styles</em> parameter, the parsing operation fails and the method returns <strong>false</strong>.</p>\n<p>The <em>format</em> parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required pattern of <em>input</em>. For details about valid formatting codes, see Standard Date and Time Format Strings and Custom Date and Time Format Strings. If <em>format</em> includes the <strong>z</strong>, <strong>zz</strong>, or <strong>zzz</strong> custom format specifiers to indicate that an offset must be present in <em>input</em>, that offset must include either a negative sign or a positive sign. If the sign is missing, the parsing operation fails and the method returns <strong>false</strong>.</p>\n<p>If <em>format</em> requires that <em>input</em> contain a date but not a time, the resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is assigned a time of midnight (0:00:00). If <em>format</em> requires that <em>input</em> contain a time but not a date, the resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is assigned the current date on the local system. If <em>format</em> does not require that <em>input</em> contain an offset, the offset of the resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object depends on the value of the <em>styles</em> parameter. If <em>styles</em> includes <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref>, the offset of the local time zone is assigned to the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object. If <em>styles</em> includes <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object. If neither value is specified, the offset of the local time zone is used.</p>\n<p>The particular date and time symbols and strings used in <em>input</em> are defined by the <em>formatProvider</em> parameter. The same is true for the precise pattern of <em>input</em> if <em>format</em> is a standard format specifier string. The <em>formatProvider</em> parameter can be either of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture based on which <em>input</em> is interpreted. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the symbols and standard formats allowed in <em>input</em>.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the format of date and time data.</p>\n</li></ul>\n<p>If <em>formatprovider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that corresponds to the current culture is used. </p>\n<p>The <em>styles</em> parameter defines whether white space is allowed in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration are supported except <xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\" data-throw-if-not-resolved=\"false\"></xref>. The following table lists the effect of each supported member.</p>\n<p>\n<strong>DateTimeStyles</strong> member</p>\n<p>Behavior</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Parses <em>input</em> and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <xref href=\"System.DateTimeOffset.ToUniversalTime\" data-throw-if-not-resolved=\"false\"></xref> method of the returned <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>If <em>format</em> does not require that <em>input</em> contain an offset value, the returned <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is given the offset of the local time zone. This is the default behavior.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>If <em>format</em> does not require that <em>input</em> contain an offset value, the returned <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is given the UTC offset (+00:00).</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowInnerWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Allows <em>input</em> to include inner white space not specified by format. Extra white space can appear between date and time components and within individual components, other than the offset, and is ignored when parsing the string.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Allows <em>input</em> to include leading spaces not specified by <em>format</em>. These are ignored when parsing the string.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Allows <em>input</em> to include trailing spaces not specified by <em>format</em>. These are ignored when parsing the string.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowWhiteSpaces\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Allows <em>input</em> to include leading, trailing, and inner spaces not specified by <em>format</em>. All extra white-space characters not specified in <em>format</em> are ignored when parsing the string.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.None\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Indicates that additional white space is not permitted in <em>input</em>. White space must appear exactly as specified in <em>format</em>. This is the default behavior.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.RoundtripKind\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Has no effect, because the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> structure does not include a <strong>Kind</strong> property.</p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public static bool TryParseExact(string input, string format, IFormatProvider formatProvider, DateTimeStyles styles, out DateTimeOffset result)
    content.vb: Public Shared Function TryParseExact(input As String, format As String, formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that contains a date and time to convert.</p>\n"
    - id: format
      type: System.String
      description: "\n<p>A format specifier that defines the required format of <em>input</em>.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information about <em>input</em>.</p>\n"
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: "\n<p>A bitwise combination of enumeration values that indicates the permitted format of input. A typical value to specify is <strong>None</strong>.</p>\n"
    - id: result
      type: System.DateTimeOffset
      description: "\n<p>When the method returns, contains the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent to the date and time of <em>input</em>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>, if the conversion failed. The conversion fails if the <em>input</em> parameter is <strong>null</strong>, or does not contain a valid string representation of a date and time in the expected format defined by <em>format</em> and <em>provider</em>. This parameter is passed uninitialized.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <em>input</em> parameter is successfully converted; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>styles</em> includes an undefined <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n<p>-or-</p>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\" data-throw-if-not-resolved=\"false\"></xref>  is not supported.</p>\n<p>-or-</p>\n<p>\n<em>styles</em> includes mutually exclusive <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  seealso:
  - type: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
    commentId: M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
  nameWithType.vb: DateTimeOffset.TryParseExact(String, String, IFormatProvider, DateTimeStyles, ByRef DateTimeOffset)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.DateTimeOffset.TryParseExact(System.String, System.String, System.IFormatProvider, System.Globalization.DateTimeStyles, ByRef System.DateTimeOffset)
  name.vb: TryParseExact(String, String, IFormatProvider, DateTimeStyles, ByRef DateTimeOffset)
- uid: System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  commentId: M:System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  id: TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: TryParseExact(String, String[], IFormatProvider, DateTimeStyles, out DateTimeOffset)
  nameWithType: DateTimeOffset.TryParseExact(String, String[], IFormatProvider, DateTimeStyles, out DateTimeOffset)
  fullName: System.DateTimeOffset.TryParseExact(System.String, System.String[], System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TryParseExact
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 724
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match one of the specified formats exactly.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\" data-throw-if-not-resolved=\"false\"></xref> method parses the string representation of a date that matches any one of the patterns assigned to the <em>formats</em> array. If the <em>input</em> string does not match any one of these patterns with any variations defined by the <em>styles</em> parameter, the parsing operation fails and the method returns <strong>false</strong>. Aside from comparing <em>input</em> to multiple strings that contain format specifiers, this overload behaves identically to the <xref href=\"System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>The <em>formats</em> parameter is a string array whose elements contain either a single standard format specifier or one or more custom format specifiers that define the possible pattern of <em>input</em>. For details about valid formatting codes, see Standard Date and Time Format Strings and Custom Date and Time Format Strings. If the matched element in <em>formats</em> includes the <strong>z</strong>, <strong>zz</strong>, or <strong>zzz</strong> custom format specifiers to indicate that an offset must be present in <em>input</em>, that offset must include either a negative sign or a positive sign. If the sign is missing, the parse operation fails and the method returns <strong>false</strong>.</p>\n<p>Using the <em>formats</em> parameter of this overload to specify multiple formats can help reduce the frustration many users experience when they enter dates and times. In particular, the ability to define multiple input patterns enables an application to handle date and time representations that can either include or lack leading zeros in months, days, hours, minutes, and seconds. The example provides an illustration of this.</p>\n<p>If the matched element in <em>formats</em> requires that <em>input</em> contain a date but not a time, the resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is assigned a time of midnight (0:00:00). If the matched element in <em>formats</em> requires that input contain a time but not a date, the resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is assigned the current date on the local system. If the matched element in <em>formats</em> does not require that <em>input</em> contain an offset, the offset of the resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object depends on the value of the <em>styles</em> parameter. If <em>styles</em> includes <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref>, the offset of the local time zone is assigned to the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object. If <em>styles</em> includes <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object. If neither value is specified, the offset of the local time zone is used.</p>\n<p>The particular date and time symbols and strings used in <em>input</em> are defined by the <em>formatProvider</em> parameter. The same is true for the precise pattern of <em>input</em> if the matching element of <em>formats</em> is a standard format specifier string. The <em>formatProvider</em> parameter can be either of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture based on which <em>input</em> is interpreted. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the symbols and formatting in <em>input</em>.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the format of date and time data.</p>\n</li></ul>\n<p>If <em>formatprovider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that corresponds to the current culture is used. </p>\n<p>The <em>styles</em> parameter defines whether white space is permitted in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration are supported except <xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\" data-throw-if-not-resolved=\"false\"></xref>. The following table lists the effect of each supported member.</p>\n<p>\n<strong>DateTimeStyles</strong> member</p>\n<p>Behavior</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Parses <em>input</em> and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <xref href=\"System.DateTimeOffset.ToUniversalTime\" data-throw-if-not-resolved=\"false\"></xref> method of the returned <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>If the matched element in <em>formats</em> does not require that <em>input</em> contain an offset value, the returned <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is given the offset of the local time zone. This is the default value.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>If the matched element in <em>formats</em> does not require that <em>input</em> contain an offset value, the returned <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is given the UTC offset (+00:00).</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowInnerWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Allows <em>input</em> to include inner white space not specified by the elements in <em>formats</em>. Extra white space can appear between date and time components and within individual components (except for the offset) and is ignored when parsing the string.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Allows <em>input</em> to include leading spaces not specified by the elements in <em>formats</em>. These are ignored when parsing the string.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Allows <em>input</em> to include trailing spaces not specified by the elements in <em>formats</em>. These are ignored when parsing the string.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowWhiteSpaces\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Allows <em>input</em> to include leading, trailing, and inner spaces not specified by the elements in <em>formats</em>. All extra white-space characters not specified in the matched element in <em>formats</em> are ignored when parsing the string.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.None\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Indicates that additional white space is not permitted in <em>input</em>. White space must appear exactly as specified in a particular element in <em>formats</em> for a successful match to occur. This is the default behavior.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.RoundtripKind\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Has no effect because the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> structure does not include a <strong>Kind</strong> property.</p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public static bool TryParseExact(string input, string[] formats, IFormatProvider formatProvider, DateTimeStyles styles, out DateTimeOffset result)
    content.vb: Public Shared Function TryParseExact(input As String, formats As String(), formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that contains a date and time to convert.</p>\n"
    - id: formats
      type: System.String[]
      description: "\n<p>An array that defines the expected formats of <em>input</em>.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information about <em>input</em>.</p>\n"
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: "\n<p>A bitwise combination of enumeration values that indicates the permitted format of input. A typical value to specify is <strong>None</strong>.</p>\n"
    - id: result
      type: System.DateTimeOffset
      description: "\n<p>When the method returns, contains the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent to the date and time of <em>input</em>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>, if the conversion failed. The conversion fails if the <em>input</em> does not contain a valid string representation of a date and time, or does not contain the date and time in the expected format defined by <em>format</em>, or if <em>formats</em> is <strong>null</strong>. This parameter is passed uninitialized.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <em>input</em> parameter is successfully converted; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>styles</em> includes an undefined <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n<p>-or-</p>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\" data-throw-if-not-resolved=\"false\"></xref>  is not supported.</p>\n<p>-or-</p>\n<p>\n<em>styles</em> includes mutually exclusive <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  nameWithType.vb: DateTimeOffset.TryParseExact(String, String(), IFormatProvider, DateTimeStyles, ByRef DateTimeOffset)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.DateTimeOffset.TryParseExact(System.String, System.String(), System.IFormatProvider, System.Globalization.DateTimeStyles, ByRef System.DateTimeOffset)
  name.vb: TryParseExact(String, String(), IFormatProvider, DateTimeStyles, ByRef DateTimeOffset)
references:
- uid: System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
  commentId: N:System
- uid: System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
  commentId: T:System.IComparable
- uid: System.IComparable{System.DateTimeOffset}
  parent: System
  definition: System.IComparable`1
  name: IComparable<DateTimeOffset>
  nameWithType: IComparable<DateTimeOffset>
  fullName: System.IComparable<System.DateTimeOffset>
  nameWithType.vb: IComparable(Of DateTimeOffset)
  fullname.vb: System.IComparable(Of System.DateTimeOffset)
  name.vb: IComparable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
  - name: )
    nameWithType: )
    fullName: )
  commentId: T:System.IComparable{System.DateTimeOffset}
- uid: System.IEquatable{System.DateTimeOffset}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<DateTimeOffset>
  nameWithType: IEquatable<DateTimeOffset>
  fullName: System.IEquatable<System.DateTimeOffset>
  nameWithType.vb: IEquatable(Of DateTimeOffset)
  fullname.vb: System.IEquatable(Of System.DateTimeOffset)
  name.vb: IEquatable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
  - name: )
    nameWithType: )
    fullName: )
  commentId: T:System.IEquatable{System.DateTimeOffset}
- uid: System.IFormattable
  parent: System
  isExternal: false
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
  commentId: T:System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.GetType
- uid: System.IComparable`1
  isExternal: false
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullname.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  commentId: T:System.IComparable`1
- uid: System.IEquatable`1
  isExternal: false
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  commentId: T:System.IEquatable`1
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
  commentId: T:System.Object
- uid: System.DateTimeOffset
  parent: System
  isExternal: false
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  commentId: T:System.DateTime
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
  commentId: T:System.TimeSpan
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
  commentId: T:System.Int32
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
  commentId: T:System.Int64
- uid: System.DayOfWeek
  parent: System
  isExternal: false
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
  commentId: T:System.DayOfWeek
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
  commentId: T:System.Double
- uid: System.IComparable{System.DateTimeOffset}.CompareTo(System.DateTimeOffset)
  parent: System.IComparable{System.DateTimeOffset}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(DateTimeOffset)
  nameWithType: IComparable<DateTimeOffset>.CompareTo(DateTimeOffset)
  fullName: System.IComparable<System.DateTimeOffset>.CompareTo(System.DateTimeOffset)
  nameWithType.vb: IComparable(Of DateTimeOffset).CompareTo(DateTimeOffset)
  fullname.vb: System.IComparable(Of System.DateTimeOffset).CompareTo(System.DateTimeOffset)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<DateTimeOffset>.CompareTo
    fullName: System.IComparable<System.DateTimeOffset>.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of DateTimeOffset).CompareTo
    fullName: System.IComparable(Of System.DateTimeOffset).CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.IComparable{System.DateTimeOffset}.CompareTo(System.DateTimeOffset)
- uid: System.IComparable`1.CompareTo(`0)
  isExternal: false
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullname.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.IComparable`1.CompareTo(`0)
- uid: System.IEquatable{System.DateTimeOffset}.Equals(System.DateTimeOffset)
  parent: System.IEquatable{System.DateTimeOffset}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(DateTimeOffset)
  nameWithType: IEquatable<DateTimeOffset>.Equals(DateTimeOffset)
  fullName: System.IEquatable<System.DateTimeOffset>.Equals(System.DateTimeOffset)
  nameWithType.vb: IEquatable(Of DateTimeOffset).Equals(DateTimeOffset)
  fullname.vb: System.IEquatable(Of System.DateTimeOffset).Equals(System.DateTimeOffset)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<DateTimeOffset>.Equals
    fullName: System.IEquatable<System.DateTimeOffset>.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of DateTimeOffset).Equals
    fullName: System.IEquatable(Of System.DateTimeOffset).Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.IEquatable{System.DateTimeOffset}.Equals(System.DateTimeOffset)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
  commentId: T:System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  isExternal: false
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.IEquatable`1.Equals(`0)
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.ValueType.Equals(System.Object)
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
  commentId: T:System.ValueType
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.ValueType.GetHashCode
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
  commentId: T:System.String
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
  commentId: T:System.IFormatProvider
- uid: System.Globalization.DateTimeStyles
  parent: System.Globalization
  isExternal: false
  name: DateTimeStyles
  nameWithType: DateTimeStyles
  fullName: System.Globalization.DateTimeStyles
  commentId: T:System.Globalization.DateTimeStyles
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
  commentId: N:System.Globalization
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.IComparable.CompareTo(System.Object)
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.ValueType.ToString
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  name: ToString(String, IFormatProvider)
  nameWithType: IFormattable.ToString(String, IFormatProvider)
  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    nameWithType: IFormattable.ToString
    fullName: System.IFormattable.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    nameWithType: IFormattable.ToString
    fullName: System.IFormattable.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  nameWithType: FormatException
  fullName: System.FormatException
  commentId: T:System.FormatException
