items:
- uid: System.Security.Cryptography.X509Certificates.X509Store
  id: X509Store
  parent: System.Security.Cryptography.X509Certificates
  children:
  - System.Security.Cryptography.X509Certificates.X509Store.#ctor
  - System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)
  - System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)
  - System.Security.Cryptography.X509Certificates.X509Store.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.Security.Cryptography.X509Certificates.X509Store.Certificates
  - System.Security.Cryptography.X509Certificates.X509Store.Dispose
  - System.Security.Cryptography.X509Certificates.X509Store.Location
  - System.Security.Cryptography.X509Certificates.X509Store.Name
  - System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)
  - System.Security.Cryptography.X509Certificates.X509Store.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)
  href: System.Security.Cryptography.X509Certificates.X509Store.yml
  name: X509Store
  fullName: System.Security.Cryptography.X509Certificates.X509Store
  type: Class
  source:
    remote: &o0
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Store.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Store.cs
    startLine: 15
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Represents an X.509 store, which is a physical store where certificates are persisted and managed. This class cannot be inherited.
  syntax:
    content: 'public sealed class X509Store : IDisposable'
    content.vb: Public NotInheritable Class X509Store Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Security.Cryptography.X509Certificates.X509Store.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.X509Certificates.X509Store
  href: System.Security.Cryptography.X509Certificates.X509Store.yml
  name: X509Store()
  fullName: System.Security.Cryptography.X509Certificates.X509Store.X509Store()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Store.cs
    startLine: 17
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Initializes a new instance of the @'System.Security.Cryptography.X509Certificates.X509Store' class using the personal certificates of the current user store.
  syntax:
    content: public X509Store()
    content.vb: Public Sub New
- uid: System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)
  id: '#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)'
  parent: System.Security.Cryptography.X509Certificates.X509Store
  href: System.Security.Cryptography.X509Certificates.X509Store.yml
  name: X509Store(StoreName, StoreLocation)
  fullName: System.Security.Cryptography.X509Certificates.X509Store.X509Store(System.Security.Cryptography.X509Certificates.StoreName, System.Security.Cryptography.X509Certificates.StoreLocation)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Store.cs
    startLine: 22
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Initializes a new instance of the @'System.Security.Cryptography.X509Certificates.X509Store' class using the specified @'System.Security.Cryptography.X509Certificates.StoreName' and @'System.Security.Cryptography.X509Certificates.StoreLocation' values.
  syntax:
    content: public X509Store(StoreName storeName, StoreLocation storeLocation)
    content.vb: Public Sub New(storeName As StoreName, storeLocation As StoreLocation)
    parameters:
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: One of the enumeration values that specifies the name of the X.509 certificate store.
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: One of the enumeration values that specifies the location of the X.509 certificate store.
  exceptions:
  - type: System.ArgumentException
    description: '*storeLocation* is not a valid location or *storeName* is not a valid name.'
- uid: System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)
  id: '#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)'
  parent: System.Security.Cryptography.X509Certificates.X509Store
  href: System.Security.Cryptography.X509Certificates.X509Store.yml
  name: X509Store(String, StoreLocation)
  fullName: System.Security.Cryptography.X509Certificates.X509Store.X509Store(System.String, System.Security.Cryptography.X509Certificates.StoreLocation)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Store.cs
    startLine: 60
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Initializes a new instance of the @'System.Security.Cryptography.X509Certificates.X509Store' class using a string that represents a value from the @'System.Security.Cryptography.X509Certificates.StoreName' enumeration and a value from the @'System.Security.Cryptography.X509Certificates.StoreLocation' enumeration.
  syntax:
    content: public X509Store(string storeName, StoreLocation storeLocation)
    content.vb: Public Sub New(storeName As String, storeLocation As StoreLocation)
    parameters:
    - id: storeName
      type: System.String
      description: A string that represents a value from the @'System.Security.Cryptography.X509Certificates.StoreName' enumeration.
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: One of the enumeration values that specifies the location of the X.509 certificate store.
  exceptions:
  - type: System.ArgumentException
    description: '*storeLocation* contains invalid values.'
- uid: System.Security.Cryptography.X509Certificates.X509Store.Certificates
  id: Certificates
  parent: System.Security.Cryptography.X509Certificates.X509Store
  href: System.Security.Cryptography.X509Certificates.X509Store.yml
  name: Certificates
  fullName: System.Security.Cryptography.X509Certificates.X509Store.Certificates
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Store.cs
    startLine: 80
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Returns a collection of certificates located in an X.509 certificate store.
  syntax:
    content: public X509Certificate2Collection Certificates { get; }
    content.vb: Public ReadOnly Property Certificates As X509Certificate2Collection
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: A collection of certificates.
- uid: System.Security.Cryptography.X509Certificates.X509Store.Location
  id: Location
  parent: System.Security.Cryptography.X509Certificates.X509Store
  href: System.Security.Cryptography.X509Certificates.X509Store.yml
  name: Location
  fullName: System.Security.Cryptography.X509Certificates.X509Store.Location
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Store.cs
    startLine: 69
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets the location of the X.509 certificate store.
  syntax:
    content: public StoreLocation Location { get; }
    content.vb: Public ReadOnly Property Location As StoreLocation
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: The location of the certificate store.
- uid: System.Security.Cryptography.X509Certificates.X509Store.Name
  id: Name
  parent: System.Security.Cryptography.X509Certificates.X509Store
  href: System.Security.Cryptography.X509Certificates.X509Store.yml
  name: Name
  fullName: System.Security.Cryptography.X509Certificates.X509Store.Name
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Store.cs
    startLine: 71
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets the name of the X.509 certificate store.
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: The name of the certificate store.
- uid: System.Security.Cryptography.X509Certificates.X509Store.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: Add(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.Security.Cryptography.X509Certificates.X509Store
  href: System.Security.Cryptography.X509Certificates.X509Store.yml
  name: Add(X509Certificate2)
  fullName: System.Security.Cryptography.X509Certificates.X509Store.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Store.cs
    startLine: 93
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Adds a certificate to an X.509 certificate store.
  syntax:
    content: public void Add(X509Certificate2 certificate)
    content.vb: Public Sub Add(certificate As X509Certificate2)
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: The certificate to add.
  exceptions:
  - type: System.ArgumentNullException
    description: '*certificate* is null.'
  - type: System.Security.Cryptography.CryptographicException
    description: The certificate could not be added to the store.
- uid: System.Security.Cryptography.X509Certificates.X509Store.Dispose
  id: Dispose
  parent: System.Security.Cryptography.X509Certificates.X509Store
  href: System.Security.Cryptography.X509Certificates.X509Store.yml
  name: Dispose()
  fullName: System.Security.Cryptography.X509Certificates.X509Store.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Store.cs
    startLine: 115
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Releases the resources used by this @'System.Security.Cryptography.X509Certificates.X509Store'.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
- uid: System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)
  id: Open(System.Security.Cryptography.X509Certificates.OpenFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Store
  href: System.Security.Cryptography.X509Certificates.X509Store.yml
  name: Open(OpenFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Store.cs
    startLine: 74
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Opens an X.509 certificate store or creates a new store, depending on @'System.Security.Cryptography.X509Certificates.OpenFlags' flag settings.
  syntax:
    content: public void Open(OpenFlags flags)
    content.vb: Public Sub Open(flags As OpenFlags)
    parameters:
    - id: flags
      type: System.Security.Cryptography.X509Certificates.OpenFlags
      description: A bitwise combination of enumeration values that specifies the way to open the X.509 certificate store.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: The store is unreadable.
  - type: System.Security.SecurityException
    description: The caller does not have the required permission.
  - type: System.ArgumentException
    description: The store contains invalid values.
- uid: System.Security.Cryptography.X509Certificates.X509Store.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.Security.Cryptography.X509Certificates.X509Store
  href: System.Security.Cryptography.X509Certificates.X509Store.yml
  name: Remove(X509Certificate2)
  fullName: System.Security.Cryptography.X509Certificates.X509Store.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Store.cs
    startLine: 104
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Removes a certificate from an X.509 certificate store.
  syntax:
    content: public void Remove(X509Certificate2 certificate)
    content.vb: Public Sub Remove(certificate As X509Certificate2)
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: The certificate to remove.
  exceptions:
  - type: System.ArgumentNullException
    description: '*certificate* is null.'
  - type: System.Security.SecurityException
    description: The caller does not have the required permission.
references:
- uid: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Security.Cryptography.X509Certificates.StoreName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  href: System.Security.Cryptography.X509Certificates.StoreName.yml
  name: StoreName
  fullName: System.Security.Cryptography.X509Certificates.StoreName
  type: Enum
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  href: System.Security.Cryptography.X509Certificates.StoreLocation.yml
  name: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
  type: Enum
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
  type: Class
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  href: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.yml
  name: X509Certificate2Collection
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  type: Class
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  href: System.Security.Cryptography.X509Certificates.X509Certificate2.yml
  name: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
  type: Class
- uid: System.Security.Cryptography.X509Certificates.OpenFlags
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  href: System.Security.Cryptography.X509Certificates.OpenFlags.yml
  name: OpenFlags
  fullName: System.Security.Cryptography.X509Certificates.OpenFlags
  type: Enum
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  type: Class
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  type: Class
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.Security.Cryptography.CryptographicException
  isExternal: false
  href: System.Security.Cryptography.CryptographicException.yml
  name: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
  type: Class
  summary: The exception that is thrown when an error occurs during a cryptographic operation.
- uid: System.Security.SecurityException
  isExternal: false
  href: System.Security.SecurityException.yml
  name: SecurityException
  fullName: System.Security.SecurityException
  type: Class
  summary: The exception that is thrown when a security error is detected.
