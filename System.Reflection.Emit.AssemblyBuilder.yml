items:
- uid: System.Reflection.Emit.AssemblyBuilder
  id: AssemblyBuilder
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.AssemblyBuilder.DefinedTypes
  - System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)
  - System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})
  - System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)
  - System.Reflection.Emit.AssemblyBuilder.Equals(System.Object)
  - System.Reflection.Emit.AssemblyBuilder.FullName
  - System.Reflection.Emit.AssemblyBuilder.GetDynamicModule(System.String)
  - System.Reflection.Emit.AssemblyBuilder.GetHashCode
  - System.Reflection.Emit.AssemblyBuilder.GetManifestResourceInfo(System.String)
  - System.Reflection.Emit.AssemblyBuilder.GetManifestResourceNames
  - System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.String)
  - System.Reflection.Emit.AssemblyBuilder.IsDynamic
  - System.Reflection.Emit.AssemblyBuilder.ManifestModule
  - System.Reflection.Emit.AssemblyBuilder.Modules
  - System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  - System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  href: System.Reflection.Emit.AssemblyBuilder.yml
  name: AssemblyBuilder
  fullName: System.Reflection.Emit.AssemblyBuilder
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs
    startLine: 169
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Defines and represents a dynamic assembly.
  syntax:
    content: 'public sealed class AssemblyBuilder : Assembly, _Assembly, IEvidenceFactory, ICustomAttributeProvider, ISerializable'
    content.vb: Public NotInheritable Class AssemblyBuilder Inherits Assembly Implements _Assembly, IEvidenceFactory, ICustomAttributeProvider, ISerializable
  inheritance:
  - System.Object
  - System.Reflection.Assembly
  implements:
  - System.Runtime.InteropServices._Assembly
  - System.Security.IEvidenceFactory
  - System.Reflection.ICustomAttributeProvider
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)
  - System.Reflection.Assembly.GetAssembly(System.Type)
  - System.Reflection.Assembly.LoadFrom(System.String)
  - System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)
  - System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)
  - System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  - System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  - System.Reflection.Assembly.UnsafeLoadFrom(System.String)
  - System.Reflection.Assembly.Load(System.String)
  - System.Reflection.Assembly.ReflectionOnlyLoad(System.String)
  - System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)
  - System.Reflection.Assembly.Load(System.Reflection.AssemblyName)
  - System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
  - System.Reflection.Assembly.LoadWithPartialName(System.String)
  - System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)
  - System.Reflection.Assembly.Load(System.Byte[])
  - System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])
  - System.Reflection.Assembly.Load(System.Byte[],System.Byte[])
  - System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)
  - System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
  - System.Reflection.Assembly.LoadFile(System.String)
  - System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)
  - System.Reflection.Assembly.GetExecutingAssembly
  - System.Reflection.Assembly.GetCallingAssembly
  - System.Reflection.Assembly.GetEntryAssembly
  - System.Reflection.Assembly.GetName
  - System.Reflection.Assembly.GetName(System.Boolean)
  - System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType
  - System.Reflection.Assembly.GetType(System.String)
  - System.Reflection.Assembly.GetType(System.String,System.Boolean)
  - System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)
  - System.Reflection.Assembly.GetExportedTypes
  - System.Reflection.Assembly.GetTypes
  - System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)
  - System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)
  - System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)
  - System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Reflection.Assembly.GetCustomAttributes(System.Boolean)
  - System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)
  - System.Reflection.Assembly.GetCustomAttributesData
  - System.Reflection.Assembly.LoadModule(System.String,System.Byte[])
  - System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])
  - System.Reflection.Assembly.CreateInstance(System.String)
  - System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)
  - System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  - System.Reflection.Assembly.GetLoadedModules
  - System.Reflection.Assembly.GetLoadedModules(System.Boolean)
  - System.Reflection.Assembly.GetModules
  - System.Reflection.Assembly.GetModules(System.Boolean)
  - System.Reflection.Assembly.GetModule(System.String)
  - System.Reflection.Assembly.GetFile(System.String)
  - System.Reflection.Assembly.GetFiles
  - System.Reflection.Assembly.GetFiles(System.Boolean)
  - System.Reflection.Assembly.GetReferencedAssemblies
  - System.Reflection.Assembly.ToString
  - System.Reflection.Assembly.CodeBase
  - System.Reflection.Assembly.EscapedCodeBase
  - System.Reflection.Assembly.EntryPoint
  - System.Reflection.Assembly.ExportedTypes
  - System.Reflection.Assembly.Evidence
  - System.Reflection.Assembly.PermissionSet
  - System.Reflection.Assembly.IsFullyTrusted
  - System.Reflection.Assembly.SecurityRuleSet
  - System.Reflection.Assembly.CustomAttributes
  - System.Reflection.Assembly.ReflectionOnly
  - System.Reflection.Assembly.Location
  - System.Reflection.Assembly.ImageRuntimeVersion
  - System.Reflection.Assembly.GlobalAssemblyCache
  - System.Reflection.Assembly.HostContext
  - System.Reflection.Assembly.ModuleResolve
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Reflection.Emit.AssemblyBuilder.FullName
  id: FullName
  parent: System.Reflection.Emit.AssemblyBuilder
  href: System.Reflection.Emit.AssemblyBuilder.yml
  name: FullName
  fullName: System.Reflection.Emit.AssemblyBuilder.FullName
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs
    startLine: 1258
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Gets the display name of the current dynamic assembly.
  syntax:
    content: public override string FullName { get; }
    content.vb: Public Overrides ReadOnly Property FullName As String
    parameters: []
    return:
      type: System.String
      description: The display name of the dynamic assembly.
  overridden: System.Reflection.Assembly.FullName
- uid: System.Reflection.Emit.AssemblyBuilder.IsDynamic
  id: IsDynamic
  parent: System.Reflection.Emit.AssemblyBuilder
  href: System.Reflection.Emit.AssemblyBuilder.yml
  name: IsDynamic
  fullName: System.Reflection.Emit.AssemblyBuilder.IsDynamic
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs
    startLine: 1365
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Gets a value that indicates that the current assembly is a dynamic assembly.
  syntax:
    content: public override bool IsDynamic { get; }
    content.vb: Public Overrides ReadOnly Property IsDynamic As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Always true.
  overridden: System.Reflection.Assembly.IsDynamic
- uid: System.Reflection.Emit.AssemblyBuilder.ManifestModule
  id: ManifestModule
  parent: System.Reflection.Emit.AssemblyBuilder
  href: System.Reflection.Emit.AssemblyBuilder.yml
  name: ManifestModule
  fullName: System.Reflection.Emit.AssemblyBuilder.ManifestModule
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs
    startLine: 1298
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Gets the module in the current @'System.Reflection.Emit.AssemblyBuilder' that contains the assembly manifest.
  syntax:
    content: public override Module ManifestModule { get; }
    content.vb: Public Overrides ReadOnly Property ManifestModule As
    parameters: []
    return:
      type: System.Reflection.Module
      description: The manifest module.
  overridden: System.Reflection.Assembly.ManifestModule
- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)
  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)
  parent: System.Reflection.Emit.AssemblyBuilder
  href: System.Reflection.Emit.AssemblyBuilder.yml
  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess)
  fullName: System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs
    startLine: 488
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Defines a dynamic assembly that has the specified name and access rights.
  syntax:
    content: public static AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access)
    content.vb: Public Shared Function DefineDynamicAssembly(name As AssemblyName, access As AssemblyBuilderAccess) As AssemblyBuilder
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: The name of the assembly.
    - id: access
      type: System.Reflection.Emit.AssemblyBuilderAccess
      description: The access rights of the assembly.
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: An object that represents the new assembly.
- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})
  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})
  parent: System.Reflection.Emit.AssemblyBuilder
  href: System.Reflection.Emit.AssemblyBuilder.yml
  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, IEnumerable<CustomAttributeBuilder>)
  name.vb: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, IEnumerable(Of CustomAttributeBuilder))
  fullName: System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, System.Collections.Generic.IEnumerable<System.Reflection.Emit.CustomAttributeBuilder>)
  fullName.vb: System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, System.Collections.Generic.IEnumerable(Of System.Reflection.Emit.CustomAttributeBuilder))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs
    startLine: 501
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Defines a new assembly that has the specified name, access rights, and attributes.
  syntax:
    content: public static AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, IEnumerable<CustomAttributeBuilder> assemblyAttributes)
    content.vb: Public Shared Function DefineDynamicAssembly(name As AssemblyName, access As AssemblyBuilderAccess, assemblyAttributes As IEnumerable(Of CustomAttributeBuilder)) As AssemblyBuilder
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: The name of the assembly.
    - id: access
      type: System.Reflection.Emit.AssemblyBuilderAccess
      description: The access rights of the assembly.
    - id: assemblyAttributes
      type: System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder}
      description: A collection that contains the attributes of the assembly.
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: An object that represents the new assembly.
- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)
  id: DefineDynamicModule(System.String)
  parent: System.Reflection.Emit.AssemblyBuilder
  href: System.Reflection.Emit.AssemblyBuilder.yml
  name: DefineDynamicModule(String)
  fullName: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs
    startLine: 582
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Defines a named transient dynamic module in this assembly.
  syntax:
    content: public ModuleBuilder DefineDynamicModule(string name)
    content.vb: Public Function DefineDynamicModule(name As String) As ModuleBuilder
    parameters:
    - id: name
      type: System.String
      description: The name of the dynamic module. Must be less than 260 characters in length.
    return:
      type: System.Reflection.Emit.ModuleBuilder
      description: A @'System.Reflection.Emit.ModuleBuilder' representing the defined dynamic module.
  exceptions:
  - type: System.ArgumentException
    description: '*name* begins with white space.-or- The length of *name* is zero.-or- The length of *name* is greater than or equal to 260.'
  - type: System.ArgumentNullException
    description: '*name* is null.'
  - type: System.Security.SecurityException
    description: The caller does not have the required permission.
  - type: System.ExecutionEngineException
    description: The assembly for default symbol writer cannot be loaded.-or- The type that implements the default symbol writer interface cannot be found.
- uid: System.Reflection.Emit.AssemblyBuilder.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Emit.AssemblyBuilder
  href: System.Reflection.Emit.AssemblyBuilder.yml
  name: Equals(Object)
  fullName: System.Reflection.Emit.AssemblyBuilder.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs
    startLine: 1136
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns a value that indicates whether this instance is equal to the specified object.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with this instance, or null.
    return:
      type: System.Boolean
      description: true if *obj* equals the type and value of this instance; otherwise, false.
  overridden: System.Reflection.Assembly.Equals(System.Object)
- uid: System.Reflection.Emit.AssemblyBuilder.GetDynamicModule(System.String)
  id: GetDynamicModule(System.String)
  parent: System.Reflection.Emit.AssemblyBuilder
  href: System.Reflection.Emit.AssemblyBuilder.yml
  name: GetDynamicModule(String)
  fullName: System.Reflection.Emit.AssemblyBuilder.GetDynamicModule(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs
    startLine: 1514
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the dynamic module with the specified name.
  syntax:
    content: public ModuleBuilder GetDynamicModule(string name)
    content.vb: Public Function GetDynamicModule(name As String) As ModuleBuilder
    parameters:
    - id: name
      type: System.String
      description: The name of the requested dynamic module.
    return:
      type: System.Reflection.Emit.ModuleBuilder
      description: A ModuleBuilder object representing the requested dynamic module.
  exceptions:
  - type: System.ArgumentNullException
    description: '*name* is null.'
  - type: System.ArgumentException
    description: The length of *name* is zero.
  - type: System.Security.SecurityException
    description: The caller does not have the required permission.
- uid: System.Reflection.Emit.AssemblyBuilder.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Emit.AssemblyBuilder
  href: System.Reflection.Emit.AssemblyBuilder.yml
  name: GetHashCode()
  fullName: System.Reflection.Emit.AssemblyBuilder.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs
    startLine: 1141
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the hash code for this instance.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  overridden: System.Reflection.Assembly.GetHashCode
- uid: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceInfo(System.String)
  id: GetManifestResourceInfo(System.String)
  parent: System.Reflection.Emit.AssemblyBuilder
  href: System.Reflection.Emit.AssemblyBuilder.yml
  name: GetManifestResourceInfo(String)
  fullName: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceInfo(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs
    startLine: 1199
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns information about how the given resource has been persisted.
  syntax:
    content: public override ManifestResourceInfo GetManifestResourceInfo(string resourceName)
    content.vb: Public Overrides Function GetManifestResourceInfo(resourceName As String) As ManifestResourceInfo
    parameters:
    - id: resourceName
      type: System.String
      description: The name of the resource.
    return:
      type: System.Reflection.ManifestResourceInfo
      description: '@''System.Reflection.ManifestResourceInfo'' populated with information about the resource''s topology, or null if the resource is not found.'
  overridden: System.Reflection.Assembly.GetManifestResourceInfo(System.String)
  exceptions:
  - type: System.NotSupportedException
    description: This method is not currently supported.
  - type: System.Security.SecurityException
    description: The caller does not have the required permission.
- uid: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceNames
  id: GetManifestResourceNames
  parent: System.Reflection.Emit.AssemblyBuilder
  href: System.Reflection.Emit.AssemblyBuilder.yml
  name: GetManifestResourceNames()
  fullName: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceNames()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs
    startLine: 1168
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Loads the specified manifest resource from this assembly.
  syntax:
    content: public override string[] GetManifestResourceNames()
    content.vb: Public Overrides Function GetManifestResourceNames As String()
    return:
      type: System.String[]
      description: An array of type String containing the names of all the resources.
  overridden: System.Reflection.Assembly.GetManifestResourceNames
  exceptions:
  - type: System.NotSupportedException
    description: This method is not supported on a dynamic assembly. To get the manifest resource names, use @'System.Reflection.Assembly.GetManifestResourceNames'.
  - type: System.Security.SecurityException
    description: The caller does not have the required permission.
- uid: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.String)
  id: GetManifestResourceStream(System.String)
  parent: System.Reflection.Emit.AssemblyBuilder
  href: System.Reflection.Emit.AssemblyBuilder.yml
  name: GetManifestResourceStream(String)
  fullName: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs
    startLine: 1194
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Loads the specified manifest resource from this assembly.
  syntax:
    content: public override Stream GetManifestResourceStream(string name)
    content.vb: Public Overrides Function GetManifestResourceStream(name As String) As Stream
    parameters:
    - id: name
      type: System.String
      description: The name of the manifest resource being requested.
    return:
      type: System.IO.Stream
      description: A @'System.IO.Stream' representing this manifest resource.
  overridden: System.Reflection.Assembly.GetManifestResourceStream(System.String)
  exceptions:
  - type: System.NotSupportedException
    description: This method is not currently supported.
  - type: System.Security.SecurityException
    description: The caller does not have the required permission.
- uid: System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.AssemblyBuilder
  href: System.Reflection.Emit.AssemblyBuilder.yml
  name: SetCustomAttribute(ConstructorInfo, Byte[])
  name.vb: SetCustomAttribute(ConstructorInfo, Byte())
  fullName: System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])
  fullName.vb: System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs
    startLine: 1608
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Set a custom attribute on this assembly using a specified custom attribute blob.
  syntax:
    content: public void SetCustomAttribute(ConstructorInfo con, byte[] binaryAttribute)
    content.vb: Public Sub SetCustomAttribute(con As ConstructorInfo, binaryAttribute As Byte())
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: The constructor for the custom attribute.
    - id: binaryAttribute
      type: System.Byte[]
      description: A byte blob representing the attributes.
  exceptions:
  - type: System.ArgumentNullException
    description: '*con* or *binaryAttribute* is null.'
  - type: System.Security.SecurityException
    description: The caller does not have the required permission.
  - type: System.ArgumentException
    description: '*con* is not a RuntimeConstructorInfo object.'
- uid: System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.AssemblyBuilder
  href: System.Reflection.Emit.AssemblyBuilder.yml
  name: SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs
    startLine: 1649
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Set a custom attribute on this assembly using a custom attribute builder.
  syntax:
    content: public void SetCustomAttribute(CustomAttributeBuilder customBuilder)
    content.vb: Public Sub SetCustomAttribute(customBuilder As CustomAttributeBuilder)
    parameters:
    - id: customBuilder
      type: System.Reflection.Emit.CustomAttributeBuilder
      description: An instance of a helper class to define the custom attribute.
  exceptions:
  - type: System.ArgumentNullException
    description: '*con* is null.'
  - type: System.Security.SecurityException
    description: The caller does not have the required permission.
- uid: System.Reflection.Emit.AssemblyBuilder.DefinedTypes
  id: DefinedTypes
  parent: System.Reflection.Emit.AssemblyBuilder
  href: System.Reflection.Emit.AssemblyBuilder.yml
  name: DefinedTypes
  fullName: System.Reflection.Emit.AssemblyBuilder.DefinedTypes
  type: Property
  source:
    remote: &o1
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 104
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override IEnumerable<TypeInfo> DefinedTypes { get; }
    content.vb: Public Overrides ReadOnly Property DefinedTypes As IEnumerable(Of TypeInfo)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}
  overridden: System.Reflection.Assembly.DefinedTypes
- uid: System.Reflection.Emit.AssemblyBuilder.Modules
  id: Modules
  parent: System.Reflection.Emit.AssemblyBuilder
  href: System.Reflection.Emit.AssemblyBuilder.yml
  name: Modules
  fullName: System.Reflection.Emit.AssemblyBuilder.Modules
  type: Property
  source:
    remote: *o1
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 106
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override IEnumerable<Module> Modules { get; }
    content.vb: Public Overrides ReadOnly Property Modules As IEnumerable(Of Module)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.Module}
  overridden: System.Reflection.Assembly.Modules
references:
- uid: System.Reflection.Emit
  isExternal: false
  name: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.Assembly.yml
  name: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: CreateQualifiedName(String, String)
  fullName: System.Reflection.Assembly.CreateQualifiedName(System.String, System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)
    name: CreateQualifiedName
    fullName: System.Reflection.Assembly.CreateQualifiedName
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)
    name: CreateQualifiedName
    fullName: System.Reflection.Assembly.CreateQualifiedName
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetAssembly(System.Type)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetAssembly(Type)
  fullName: System.Reflection.Assembly.GetAssembly(System.Type)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetAssembly(System.Type)
    name: GetAssembly
    fullName: System.Reflection.Assembly.GetAssembly
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetAssembly(System.Type)
    name: GetAssembly
    fullName: System.Reflection.Assembly.GetAssembly
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.LoadFrom(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: LoadFrom(String)
  fullName: System.Reflection.Assembly.LoadFrom(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.LoadFrom(System.String)
    name: LoadFrom
    fullName: System.Reflection.Assembly.LoadFrom
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.LoadFrom(System.String)
    name: LoadFrom
    fullName: System.Reflection.Assembly.LoadFrom
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: ReflectionOnlyLoadFrom(String)
  fullName: System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)
    name: ReflectionOnlyLoadFrom
    fullName: System.Reflection.Assembly.ReflectionOnlyLoadFrom
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)
    name: ReflectionOnlyLoadFrom
    fullName: System.Reflection.Assembly.ReflectionOnlyLoadFrom
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  isExternal: true
  name: LoadFrom(String, Evidence)
  fullName: System.Reflection.Assembly.LoadFrom(System.String, System.Security.Policy.Evidence)
  spec.csharp:
  - uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)
    name: LoadFrom
    fullName: System.Reflection.Assembly.LoadFrom
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)
    name: LoadFrom
    fullName: System.Reflection.Assembly.LoadFrom
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  parent: System.Reflection.Assembly
  isExternal: true
  name: LoadFrom(String, Evidence, Byte[], AssemblyHashAlgorithm)
  name.vb: LoadFrom(String, Evidence, Byte(), AssemblyHashAlgorithm)
  fullName: System.Reflection.Assembly.LoadFrom(System.String, System.Security.Policy.Evidence, System.Byte[], System.Configuration.Assemblies.AssemblyHashAlgorithm)
  fullName.vb: System.Reflection.Assembly.LoadFrom(System.String, System.Security.Policy.Evidence, System.Byte(), System.Configuration.Assemblies.AssemblyHashAlgorithm)
  spec.csharp:
  - uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
    name: LoadFrom
    fullName: System.Reflection.Assembly.LoadFrom
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Configuration.Assemblies.AssemblyHashAlgorithm
    name: AssemblyHashAlgorithm
    fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
    name: LoadFrom
    fullName: System.Reflection.Assembly.LoadFrom
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Configuration.Assemblies.AssemblyHashAlgorithm
    name: AssemblyHashAlgorithm
    fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  parent: System.Reflection.Assembly
  isExternal: true
  name: LoadFrom(String, Byte[], AssemblyHashAlgorithm)
  name.vb: LoadFrom(String, Byte(), AssemblyHashAlgorithm)
  fullName: System.Reflection.Assembly.LoadFrom(System.String, System.Byte[], System.Configuration.Assemblies.AssemblyHashAlgorithm)
  fullName.vb: System.Reflection.Assembly.LoadFrom(System.String, System.Byte(), System.Configuration.Assemblies.AssemblyHashAlgorithm)
  spec.csharp:
  - uid: System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
    name: LoadFrom
    fullName: System.Reflection.Assembly.LoadFrom
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Configuration.Assemblies.AssemblyHashAlgorithm
    name: AssemblyHashAlgorithm
    fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
    name: LoadFrom
    fullName: System.Reflection.Assembly.LoadFrom
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Configuration.Assemblies.AssemblyHashAlgorithm
    name: AssemblyHashAlgorithm
    fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.UnsafeLoadFrom(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: UnsafeLoadFrom(String)
  fullName: System.Reflection.Assembly.UnsafeLoadFrom(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.UnsafeLoadFrom(System.String)
    name: UnsafeLoadFrom
    fullName: System.Reflection.Assembly.UnsafeLoadFrom
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.UnsafeLoadFrom(System.String)
    name: UnsafeLoadFrom
    fullName: System.Reflection.Assembly.UnsafeLoadFrom
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.Load(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: Load(String)
  fullName: System.Reflection.Assembly.Load(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.Load(System.String)
    name: Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.Load(System.String)
    name: Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: ReflectionOnlyLoad(String)
  fullName: System.Reflection.Assembly.ReflectionOnlyLoad(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.String)
    name: ReflectionOnlyLoad
    fullName: System.Reflection.Assembly.ReflectionOnlyLoad
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.String)
    name: ReflectionOnlyLoad
    fullName: System.Reflection.Assembly.ReflectionOnlyLoad
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  isExternal: true
  name: Load(String, Evidence)
  fullName: System.Reflection.Assembly.Load(System.String, System.Security.Policy.Evidence)
  spec.csharp:
  - uid: System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)
    name: Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)
    name: Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName)
  parent: System.Reflection.Assembly
  isExternal: true
  name: Load(AssemblyName)
  fullName: System.Reflection.Assembly.Load(System.Reflection.AssemblyName)
  spec.csharp:
  - uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName)
    name: Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    fullName: System.Reflection.AssemblyName
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName)
    name: Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    fullName: System.Reflection.AssemblyName
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  isExternal: true
  name: Load(AssemblyName, Evidence)
  fullName: System.Reflection.Assembly.Load(System.Reflection.AssemblyName, System.Security.Policy.Evidence)
  spec.csharp:
  - uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
    name: Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    fullName: System.Reflection.AssemblyName
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
    name: Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    fullName: System.Reflection.AssemblyName
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.LoadWithPartialName(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: LoadWithPartialName(String)
  fullName: System.Reflection.Assembly.LoadWithPartialName(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.LoadWithPartialName(System.String)
    name: LoadWithPartialName
    fullName: System.Reflection.Assembly.LoadWithPartialName
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.LoadWithPartialName(System.String)
    name: LoadWithPartialName
    fullName: System.Reflection.Assembly.LoadWithPartialName
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  isExternal: true
  name: LoadWithPartialName(String, Evidence)
  fullName: System.Reflection.Assembly.LoadWithPartialName(System.String, System.Security.Policy.Evidence)
  spec.csharp:
  - uid: System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)
    name: LoadWithPartialName
    fullName: System.Reflection.Assembly.LoadWithPartialName
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)
    name: LoadWithPartialName
    fullName: System.Reflection.Assembly.LoadWithPartialName
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.Load(System.Byte[])
  parent: System.Reflection.Assembly
  isExternal: true
  name: Load(Byte[])
  name.vb: Load(Byte())
  fullName: System.Reflection.Assembly.Load(System.Byte[])
  fullName.vb: System.Reflection.Assembly.Load(System.Byte())
  spec.csharp:
  - uid: System.Reflection.Assembly.Load(System.Byte[])
    name: Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.Load(System.Byte[])
    name: Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])
  parent: System.Reflection.Assembly
  isExternal: true
  name: ReflectionOnlyLoad(Byte[])
  name.vb: ReflectionOnlyLoad(Byte())
  fullName: System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])
  fullName.vb: System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte())
  spec.csharp:
  - uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])
    name: ReflectionOnlyLoad
    fullName: System.Reflection.Assembly.ReflectionOnlyLoad
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])
    name: ReflectionOnlyLoad
    fullName: System.Reflection.Assembly.ReflectionOnlyLoad
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[])
  parent: System.Reflection.Assembly
  isExternal: true
  name: Load(Byte[], Byte[])
  name.vb: Load(Byte(), Byte())
  fullName: System.Reflection.Assembly.Load(System.Byte[], System.Byte[])
  fullName.vb: System.Reflection.Assembly.Load(System.Byte(), System.Byte())
  spec.csharp:
  - uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[])
    name: Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[])
    name: Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)
  parent: System.Reflection.Assembly
  isExternal: true
  name: Load(Byte[], Byte[], SecurityContextSource)
  name.vb: Load(Byte(), Byte(), SecurityContextSource)
  fullName: System.Reflection.Assembly.Load(System.Byte[], System.Byte[], System.Security.SecurityContextSource)
  fullName.vb: System.Reflection.Assembly.Load(System.Byte(), System.Byte(), System.Security.SecurityContextSource)
  spec.csharp:
  - uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)
    name: Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Security.SecurityContextSource
    name: SecurityContextSource
    fullName: System.Security.SecurityContextSource
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)
    name: Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Security.SecurityContextSource
    name: SecurityContextSource
    fullName: System.Security.SecurityContextSource
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  isExternal: true
  name: Load(Byte[], Byte[], Evidence)
  name.vb: Load(Byte(), Byte(), Evidence)
  fullName: System.Reflection.Assembly.Load(System.Byte[], System.Byte[], System.Security.Policy.Evidence)
  fullName.vb: System.Reflection.Assembly.Load(System.Byte(), System.Byte(), System.Security.Policy.Evidence)
  spec.csharp:
  - uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
    name: Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
    name: Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.LoadFile(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: LoadFile(String)
  fullName: System.Reflection.Assembly.LoadFile(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.LoadFile(System.String)
    name: LoadFile
    fullName: System.Reflection.Assembly.LoadFile
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.LoadFile(System.String)
    name: LoadFile
    fullName: System.Reflection.Assembly.LoadFile
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  isExternal: true
  name: LoadFile(String, Evidence)
  fullName: System.Reflection.Assembly.LoadFile(System.String, System.Security.Policy.Evidence)
  spec.csharp:
  - uid: System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)
    name: LoadFile
    fullName: System.Reflection.Assembly.LoadFile
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)
    name: LoadFile
    fullName: System.Reflection.Assembly.LoadFile
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetExecutingAssembly
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetExecutingAssembly()
  fullName: System.Reflection.Assembly.GetExecutingAssembly()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetExecutingAssembly
    name: GetExecutingAssembly
    fullName: System.Reflection.Assembly.GetExecutingAssembly
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetExecutingAssembly
    name: GetExecutingAssembly
    fullName: System.Reflection.Assembly.GetExecutingAssembly
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetCallingAssembly
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetCallingAssembly()
  fullName: System.Reflection.Assembly.GetCallingAssembly()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetCallingAssembly
    name: GetCallingAssembly
    fullName: System.Reflection.Assembly.GetCallingAssembly
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetCallingAssembly
    name: GetCallingAssembly
    fullName: System.Reflection.Assembly.GetCallingAssembly
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetEntryAssembly
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetEntryAssembly()
  fullName: System.Reflection.Assembly.GetEntryAssembly()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetEntryAssembly
    name: GetEntryAssembly
    fullName: System.Reflection.Assembly.GetEntryAssembly
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetEntryAssembly
    name: GetEntryAssembly
    fullName: System.Reflection.Assembly.GetEntryAssembly
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetName
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetName()
  fullName: System.Reflection.Assembly.GetName()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetName
    name: GetName
    fullName: System.Reflection.Assembly.GetName
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetName
    name: GetName
    fullName: System.Reflection.Assembly.GetName
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetName(System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetName(Boolean)
  fullName: System.Reflection.Assembly.GetName(System.Boolean)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetName(System.Boolean)
    name: GetName
    fullName: System.Reflection.Assembly.GetName
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetName(System.Boolean)
    name: GetName
    fullName: System.Reflection.Assembly.GetName
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType
  parent: System.Reflection.Assembly
  isExternal: true
  name: _Assembly.GetType()
  name.vb: System.Runtime.InteropServices._Assembly.GetType()
  fullName: System.Reflection.Assembly.System.Runtime.InteropServices._Assembly.GetType()
  spec.csharp:
  - uid: System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType
    name: _Assembly.GetType
    fullName: System.Reflection.Assembly.System.Runtime.InteropServices._Assembly.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType
    name: System.Runtime.InteropServices._Assembly.GetType
    fullName: System.Reflection.Assembly.System.Runtime.InteropServices._Assembly.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetType(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetType(String)
  fullName: System.Reflection.Assembly.GetType(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetType(System.String)
    name: GetType
    fullName: System.Reflection.Assembly.GetType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetType(System.String)
    name: GetType
    fullName: System.Reflection.Assembly.GetType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetType(System.String,System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetType(String, Boolean)
  fullName: System.Reflection.Assembly.GetType(System.String, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetType(System.String,System.Boolean)
    name: GetType
    fullName: System.Reflection.Assembly.GetType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetType(System.String,System.Boolean)
    name: GetType
    fullName: System.Reflection.Assembly.GetType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetType(String, Boolean, Boolean)
  fullName: System.Reflection.Assembly.GetType(System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)
    name: GetType
    fullName: System.Reflection.Assembly.GetType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)
    name: GetType
    fullName: System.Reflection.Assembly.GetType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetExportedTypes
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetExportedTypes()
  fullName: System.Reflection.Assembly.GetExportedTypes()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetExportedTypes
    name: GetExportedTypes
    fullName: System.Reflection.Assembly.GetExportedTypes
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetExportedTypes
    name: GetExportedTypes
    fullName: System.Reflection.Assembly.GetExportedTypes
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetTypes
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetTypes()
  fullName: System.Reflection.Assembly.GetTypes()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetTypes
    name: GetTypes
    fullName: System.Reflection.Assembly.GetTypes
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetTypes
    name: GetTypes
    fullName: System.Reflection.Assembly.GetTypes
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetManifestResourceStream(Type, String)
  fullName: System.Reflection.Assembly.GetManifestResourceStream(System.Type, System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)
    name: GetManifestResourceStream
    fullName: System.Reflection.Assembly.GetManifestResourceStream
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)
    name: GetManifestResourceStream
    fullName: System.Reflection.Assembly.GetManifestResourceStream
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetSatelliteAssembly(CultureInfo)
  fullName: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)
    name: GetSatelliteAssembly
    fullName: System.Reflection.Assembly.GetSatelliteAssembly
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)
    name: GetSatelliteAssembly
    fullName: System.Reflection.Assembly.GetSatelliteAssembly
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetSatelliteAssembly(CultureInfo, Version)
  fullName: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo, System.Version)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)
    name: GetSatelliteAssembly
    fullName: System.Reflection.Assembly.GetSatelliteAssembly
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Version
    name: Version
    fullName: System.Version
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)
    name: GetSatelliteAssembly
    fullName: System.Reflection.Assembly.GetSatelliteAssembly
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Version
    name: Version
    fullName: System.Version
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    fullName: System.Reflection.Assembly.GetObjectData
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    fullName: System.Reflection.Assembly.GetObjectData
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetCustomAttributes(Boolean)
  fullName: System.Reflection.Assembly.GetCustomAttributes(System.Boolean)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetCustomAttributes(System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.Assembly.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetCustomAttributes(System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.Assembly.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetCustomAttributes(Type, Boolean)
  fullName: System.Reflection.Assembly.GetCustomAttributes(System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.Assembly.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.Assembly.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: true
  name: IsDefined(Type, Boolean)
  fullName: System.Reflection.Assembly.IsDefined(System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)
    name: IsDefined
    fullName: System.Reflection.Assembly.IsDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)
    name: IsDefined
    fullName: System.Reflection.Assembly.IsDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetCustomAttributesData
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetCustomAttributesData()
  fullName: System.Reflection.Assembly.GetCustomAttributesData()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetCustomAttributesData
    name: GetCustomAttributesData
    fullName: System.Reflection.Assembly.GetCustomAttributesData
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetCustomAttributesData
    name: GetCustomAttributesData
    fullName: System.Reflection.Assembly.GetCustomAttributesData
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[])
  parent: System.Reflection.Assembly
  isExternal: true
  name: LoadModule(String, Byte[])
  name.vb: LoadModule(String, Byte())
  fullName: System.Reflection.Assembly.LoadModule(System.String, System.Byte[])
  fullName.vb: System.Reflection.Assembly.LoadModule(System.String, System.Byte())
  spec.csharp:
  - uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[])
    name: LoadModule
    fullName: System.Reflection.Assembly.LoadModule
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[])
    name: LoadModule
    fullName: System.Reflection.Assembly.LoadModule
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])
  parent: System.Reflection.Assembly
  isExternal: true
  name: LoadModule(String, Byte[], Byte[])
  name.vb: LoadModule(String, Byte(), Byte())
  fullName: System.Reflection.Assembly.LoadModule(System.String, System.Byte[], System.Byte[])
  fullName.vb: System.Reflection.Assembly.LoadModule(System.String, System.Byte(), System.Byte())
  spec.csharp:
  - uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])
    name: LoadModule
    fullName: System.Reflection.Assembly.LoadModule
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])
    name: LoadModule
    fullName: System.Reflection.Assembly.LoadModule
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.CreateInstance(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: CreateInstance(String)
  fullName: System.Reflection.Assembly.CreateInstance(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.CreateInstance(System.String)
    name: CreateInstance
    fullName: System.Reflection.Assembly.CreateInstance
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.CreateInstance(System.String)
    name: CreateInstance
    fullName: System.Reflection.Assembly.CreateInstance
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: true
  name: CreateInstance(String, Boolean)
  fullName: System.Reflection.Assembly.CreateInstance(System.String, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)
    name: CreateInstance
    fullName: System.Reflection.Assembly.CreateInstance
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)
    name: CreateInstance
    fullName: System.Reflection.Assembly.CreateInstance
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  parent: System.Reflection.Assembly
  isExternal: true
  name: CreateInstance(String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[])
  name.vb: CreateInstance(String, Boolean, BindingFlags, Binder, Object(), CultureInfo, Object())
  fullName: System.Reflection.Assembly.CreateInstance(System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[])
  fullName.vb: System.Reflection.Assembly.CreateInstance(System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object(), System.Globalization.CultureInfo, System.Object())
  spec.csharp:
  - uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
    name: CreateInstance
    fullName: System.Reflection.Assembly.CreateInstance
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
    name: CreateInstance
    fullName: System.Reflection.Assembly.CreateInstance
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetLoadedModules
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetLoadedModules()
  fullName: System.Reflection.Assembly.GetLoadedModules()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetLoadedModules
    name: GetLoadedModules
    fullName: System.Reflection.Assembly.GetLoadedModules
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetLoadedModules
    name: GetLoadedModules
    fullName: System.Reflection.Assembly.GetLoadedModules
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetLoadedModules(System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetLoadedModules(Boolean)
  fullName: System.Reflection.Assembly.GetLoadedModules(System.Boolean)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetLoadedModules(System.Boolean)
    name: GetLoadedModules
    fullName: System.Reflection.Assembly.GetLoadedModules
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetLoadedModules(System.Boolean)
    name: GetLoadedModules
    fullName: System.Reflection.Assembly.GetLoadedModules
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetModules
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetModules()
  fullName: System.Reflection.Assembly.GetModules()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetModules
    name: GetModules
    fullName: System.Reflection.Assembly.GetModules
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetModules
    name: GetModules
    fullName: System.Reflection.Assembly.GetModules
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetModules(System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetModules(Boolean)
  fullName: System.Reflection.Assembly.GetModules(System.Boolean)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetModules(System.Boolean)
    name: GetModules
    fullName: System.Reflection.Assembly.GetModules
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetModules(System.Boolean)
    name: GetModules
    fullName: System.Reflection.Assembly.GetModules
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetModule(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetModule(String)
  fullName: System.Reflection.Assembly.GetModule(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetModule(System.String)
    name: GetModule
    fullName: System.Reflection.Assembly.GetModule
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetModule(System.String)
    name: GetModule
    fullName: System.Reflection.Assembly.GetModule
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetFile(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetFile(String)
  fullName: System.Reflection.Assembly.GetFile(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetFile(System.String)
    name: GetFile
    fullName: System.Reflection.Assembly.GetFile
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetFile(System.String)
    name: GetFile
    fullName: System.Reflection.Assembly.GetFile
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetFiles
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetFiles()
  fullName: System.Reflection.Assembly.GetFiles()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetFiles
    name: GetFiles
    fullName: System.Reflection.Assembly.GetFiles
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetFiles
    name: GetFiles
    fullName: System.Reflection.Assembly.GetFiles
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetFiles(System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetFiles(Boolean)
  fullName: System.Reflection.Assembly.GetFiles(System.Boolean)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetFiles(System.Boolean)
    name: GetFiles
    fullName: System.Reflection.Assembly.GetFiles
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetFiles(System.Boolean)
    name: GetFiles
    fullName: System.Reflection.Assembly.GetFiles
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetReferencedAssemblies
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetReferencedAssemblies()
  fullName: System.Reflection.Assembly.GetReferencedAssemblies()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetReferencedAssemblies
    name: GetReferencedAssemblies
    fullName: System.Reflection.Assembly.GetReferencedAssemblies
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetReferencedAssemblies
    name: GetReferencedAssemblies
    fullName: System.Reflection.Assembly.GetReferencedAssemblies
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.ToString
  parent: System.Reflection.Assembly
  isExternal: true
  name: ToString()
  fullName: System.Reflection.Assembly.ToString()
  spec.csharp:
  - uid: System.Reflection.Assembly.ToString
    name: ToString
    fullName: System.Reflection.Assembly.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.ToString
    name: ToString
    fullName: System.Reflection.Assembly.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.CodeBase
  parent: System.Reflection.Assembly
  isExternal: true
  name: CodeBase
  fullName: System.Reflection.Assembly.CodeBase
- uid: System.Reflection.Assembly.EscapedCodeBase
  parent: System.Reflection.Assembly
  isExternal: true
  name: EscapedCodeBase
  fullName: System.Reflection.Assembly.EscapedCodeBase
- uid: System.Reflection.Assembly.EntryPoint
  parent: System.Reflection.Assembly
  isExternal: true
  name: EntryPoint
  fullName: System.Reflection.Assembly.EntryPoint
- uid: System.Reflection.Assembly.ExportedTypes
  parent: System.Reflection.Assembly
  isExternal: true
  name: ExportedTypes
  fullName: System.Reflection.Assembly.ExportedTypes
- uid: System.Reflection.Assembly.Evidence
  parent: System.Reflection.Assembly
  isExternal: true
  name: Evidence
  fullName: System.Reflection.Assembly.Evidence
- uid: System.Reflection.Assembly.PermissionSet
  parent: System.Reflection.Assembly
  isExternal: true
  name: PermissionSet
  fullName: System.Reflection.Assembly.PermissionSet
- uid: System.Reflection.Assembly.IsFullyTrusted
  parent: System.Reflection.Assembly
  isExternal: true
  name: IsFullyTrusted
  fullName: System.Reflection.Assembly.IsFullyTrusted
- uid: System.Reflection.Assembly.SecurityRuleSet
  parent: System.Reflection.Assembly
  isExternal: true
  name: SecurityRuleSet
  fullName: System.Reflection.Assembly.SecurityRuleSet
- uid: System.Reflection.Assembly.CustomAttributes
  parent: System.Reflection.Assembly
  isExternal: true
  name: CustomAttributes
  fullName: System.Reflection.Assembly.CustomAttributes
- uid: System.Reflection.Assembly.ReflectionOnly
  parent: System.Reflection.Assembly
  isExternal: true
  name: ReflectionOnly
  fullName: System.Reflection.Assembly.ReflectionOnly
- uid: System.Reflection.Assembly.Location
  parent: System.Reflection.Assembly
  isExternal: true
  name: Location
  fullName: System.Reflection.Assembly.Location
- uid: System.Reflection.Assembly.ImageRuntimeVersion
  parent: System.Reflection.Assembly
  isExternal: true
  name: ImageRuntimeVersion
  fullName: System.Reflection.Assembly.ImageRuntimeVersion
- uid: System.Reflection.Assembly.GlobalAssemblyCache
  parent: System.Reflection.Assembly
  isExternal: true
  name: GlobalAssemblyCache
  fullName: System.Reflection.Assembly.GlobalAssemblyCache
- uid: System.Reflection.Assembly.HostContext
  parent: System.Reflection.Assembly
  isExternal: true
  name: HostContext
  fullName: System.Reflection.Assembly.HostContext
- uid: System.Reflection.Assembly.ModuleResolve
  parent: System.Reflection.Assembly
  isExternal: true
  name: ModuleResolve
  fullName: System.Reflection.Assembly.ModuleResolve
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Reflection.Assembly.FullName
  parent: System.Reflection.Assembly
  isExternal: true
  name: FullName
  fullName: System.Reflection.Assembly.FullName
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
- uid: System.Reflection.Assembly.IsDynamic
  parent: System.Reflection.Assembly
  isExternal: true
  name: IsDynamic
  fullName: System.Reflection.Assembly.IsDynamic
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Assembly.ManifestModule
  parent: System.Reflection.Assembly
  isExternal: true
  name: ManifestModule
  fullName: System.Reflection.Assembly.ManifestModule
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.Module.yml
  name: Module
  fullName: System.Reflection.Module
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.AssemblyName.yml
  name: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Reflection.Emit.AssemblyBuilderAccess
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.AssemblyBuilderAccess.yml
  name: AssemblyBuilderAccess
  fullName: System.Reflection.Emit.AssemblyBuilderAccess
- uid: System.Reflection.Emit.AssemblyBuilder
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.AssemblyBuilder.yml
  name: AssemblyBuilder
  fullName: System.Reflection.Emit.AssemblyBuilder
- uid: System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<CustomAttributeBuilder>
  name.vb: IEnumerable(Of CustomAttributeBuilder)
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Emit.CustomAttributeBuilder>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.Emit.CustomAttributeBuilder)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Reflection.Emit.CustomAttributeBuilder
    name: CustomAttributeBuilder
    fullName: System.Reflection.Emit.CustomAttributeBuilder
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.Emit.CustomAttributeBuilder
    name: CustomAttributeBuilder
    fullName: System.Reflection.Emit.CustomAttributeBuilder
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.IEnumerable`1.yml
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Reflection.Emit.ModuleBuilder
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.ModuleBuilder.yml
  name: ModuleBuilder
  fullName: System.Reflection.Emit.ModuleBuilder
- uid: System.Reflection.Assembly.Equals(System.Object)
  parent: System.Reflection.Assembly
  isExternal: true
  name: Equals(Object)
  fullName: System.Reflection.Assembly.Equals(System.Object)
  spec.csharp:
  - uid: System.Reflection.Assembly.Equals(System.Object)
    name: Equals
    fullName: System.Reflection.Assembly.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.Equals(System.Object)
    name: Equals
    fullName: System.Reflection.Assembly.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.GetHashCode
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetHashCode()
  fullName: System.Reflection.Assembly.GetHashCode()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetHashCode
    name: GetHashCode
    fullName: System.Reflection.Assembly.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetHashCode
    name: GetHashCode
    fullName: System.Reflection.Assembly.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.Reflection.Assembly.GetManifestResourceInfo(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetManifestResourceInfo(String)
  fullName: System.Reflection.Assembly.GetManifestResourceInfo(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetManifestResourceInfo(System.String)
    name: GetManifestResourceInfo
    fullName: System.Reflection.Assembly.GetManifestResourceInfo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetManifestResourceInfo(System.String)
    name: GetManifestResourceInfo
    fullName: System.Reflection.Assembly.GetManifestResourceInfo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.ManifestResourceInfo
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.ManifestResourceInfo.yml
  name: ManifestResourceInfo
  fullName: System.Reflection.ManifestResourceInfo
- uid: System.Reflection.Assembly.GetManifestResourceNames
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetManifestResourceNames()
  fullName: System.Reflection.Assembly.GetManifestResourceNames()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetManifestResourceNames
    name: GetManifestResourceNames
    fullName: System.Reflection.Assembly.GetManifestResourceNames
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetManifestResourceNames
    name: GetManifestResourceNames
    fullName: System.Reflection.Assembly.GetManifestResourceNames
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  name.vb: String()
  fullName: System.String[]
  fullName.vb: System.String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Reflection.Assembly.GetManifestResourceStream(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetManifestResourceStream(String)
  fullName: System.Reflection.Assembly.GetManifestResourceStream(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetManifestResourceStream(System.String)
    name: GetManifestResourceStream
    fullName: System.Reflection.Assembly.GetManifestResourceStream
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetManifestResourceStream(System.String)
    name: GetManifestResourceStream
    fullName: System.Reflection.Assembly.GetManifestResourceStream
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  href: System.IO.Stream.yml
  name: Stream
  fullName: System.IO.Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.ConstructorInfo.yml
  name: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Reflection.Emit.CustomAttributeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.CustomAttributeBuilder.yml
  name: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
- uid: System.Reflection.Assembly.DefinedTypes
  parent: System.Reflection.Assembly
  isExternal: true
  name: DefinedTypes
  fullName: System.Reflection.Assembly.DefinedTypes
- uid: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Reflection.TypeInfo.yml
  name: IEnumerable<TypeInfo>
  name.vb: IEnumerable(Of TypeInfo)
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.TypeInfo>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.TypeInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    fullName: System.Reflection.TypeInfo
    href: System.Reflection.TypeInfo.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    fullName: System.Reflection.TypeInfo
    href: System.Reflection.TypeInfo.yml
  - name: )
    fullName: )
- uid: System.Reflection.Assembly.Modules
  parent: System.Reflection.Assembly
  isExternal: true
  name: Modules
  fullName: System.Reflection.Assembly.Modules
- uid: System.Collections.Generic.IEnumerable{System.Reflection.Module}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Reflection.Module.yml
  name: IEnumerable<Module>
  name.vb: IEnumerable(Of Module)
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Module>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.Module)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Reflection.Module
    name: Module
    fullName: System.Reflection.Module
    href: System.Reflection.Module.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.Module
    name: Module
    fullName: System.Reflection.Module
    href: System.Reflection.Module.yml
  - name: )
    fullName: )
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.Security.SecurityException
  isExternal: false
  href: System.Security.SecurityException.yml
  name: SecurityException
  fullName: System.Security.SecurityException
  summary: The exception that is thrown when a security error is detected.
- uid: System.ExecutionEngineException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  href: System.NotSupportedException.yml
  name: NotSupportedException
  fullName: System.NotSupportedException
  summary: The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.
