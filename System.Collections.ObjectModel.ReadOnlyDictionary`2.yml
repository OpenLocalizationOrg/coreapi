items:
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  id: ReadOnlyDictionary`2
  parent: System.Collections.ObjectModel
  children:
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.ContainsKey(`0)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Count
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Dictionary
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.GetEnumerator
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Item(`0)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Keys
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.TryGetValue(`0,`1@)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Values
  href: System.Collections.ObjectModel.ReadOnlyDictionary`2.yml
  name: ReadOnlyDictionary<TKey, TValue>
  name.vb: ReadOnlyDictionary(Of TKey, TValue)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)
  type: Class
  source:
    remote: &o0
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 12
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Represents a read-only, generic collection of key/value pairs.
  syntax:
    content: 'public class ReadOnlyDictionary<TKey, TValue> : Generic.ICollection<Generic.KeyValuePair<TKey, TValue>>, Generic.IDictionary<TKey, TValue>, Generic.IEnumerable<Generic.KeyValuePair<TKey, TValue>>, Generic.IReadOnlyCollection<Generic.KeyValuePair<TKey, TValue>>, Generic.IReadOnlyDictionary<TKey, TValue>, ICollection, IDictionary, IEnumerable'
    content.vb: Public Class ReadOnlyDictionary(Of TKey, TValue) Inherits Generic.ICollection(Of Generic.KeyValuePair(Of TKey, TValue)) Implements Generic.IDictionary(Of TKey, TValue), Generic.IEnumerable(Of Generic.KeyValuePair(Of TKey, TValue)), Generic.IReadOnlyCollection(Of Generic.KeyValuePair(Of TKey, TValue)), Generic.IReadOnlyDictionary(Of TKey, TValue), ICollection, IDictionary, IEnumerable
    typeParameters:
    - id: TKey
    - id: TValue
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  - System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}
  - System.Collections.ICollection
  - System.Collections.IDictionary
  - System.Collections.IEnumerable
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})
  id: '#ctor(System.Collections.Generic.IDictionary{`0,`1})'
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: System.Collections.ObjectModel.ReadOnlyDictionary`2.yml
  name: ReadOnlyDictionary(Generic.IDictionary<TKey, TValue>)
  name.vb: ReadOnlyDictionary(Generic.IDictionary(Of TKey, TValue))
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).ReadOnlyDictionary(System.Collections.Generic.IDictionary(Of TKey, TValue))
  type: Constructor
  source:
    remote:
      path: src/System.ObjectModel/ref/System.ObjectModel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.ObjectModel/ref/System.ObjectModel.cs
    startLine: 44
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Initializes a new instance of the @'System.Collections.ObjectModel.ReadOnlyDictionary`2' class that is a wrapper around the specified dictionary.
  syntax:
    content: public ReadOnlyDictionary(Generic.IDictionary<TKey, TValue> dictionary)
    content.vb: Public Sub New(dictionary As Generic.IDictionary(Of TKey, TValue))
    parameters:
    - id: dictionary
      type: System.Collections.Generic.IDictionary{{TKey},{TValue}}
      description: The dictionary to wrap.
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Count
  id: Count
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: System.Collections.ObjectModel.ReadOnlyDictionary`2.yml
  name: Count
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.Count
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).Count
  type: Property
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 124
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Gets the number of items in the dictionary.
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of items in the dictionary.
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Dictionary
  id: Dictionary
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: System.Collections.ObjectModel.ReadOnlyDictionary`2.yml
  name: Dictionary
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.Dictionary
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).Dictionary
  type: Property
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 31
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Gets the dictionary that is wrapped by this @'System.Collections.ObjectModel.ReadOnlyDictionary`2' object.
  syntax:
    content: protected Generic.IDictionary<TKey, TValue> Dictionary { get; }
    content.vb: Protected ReadOnly Property Dictionary As Generic.IDictionary(Of TKey, TValue)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{{TKey},{TValue}}
      description: The dictionary that is wrapped by this object.
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Item(`0)
  id: Item(`0)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: System.Collections.ObjectModel.ReadOnlyDictionary`2.yml
  name: Item[TKey]
  name.vb: Item(TKey)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.Item[TKey]
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).Item(TKey)
  type: Property
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 90
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Gets the element that has the specified key.
  syntax:
    content: public TValue this[TKey key] { get; }
    content.vb: Public ReadOnly Property Item(key As TKey) As TValue
    parameters:
    - id: key
      type: '{TKey}'
      description: The key of the element to get.
    return:
      type: '{TValue}'
      description: The element that has the specified key.
  exceptions:
  - type: System.ArgumentNullException
    description: '*key* is null.'
  - type: System.Collections.Generic.KeyNotFoundException
    description: The property is retrieved and *key* is not found.
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Keys
  id: Keys
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: System.Collections.ObjectModel.ReadOnlyDictionary`2.yml
  name: Keys
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.Keys
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).Keys
  type: Property
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 36
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Gets a key collection that contains the keys of the dictionary.
  syntax:
    content: public ReadOnlyDictionary<TKey, TValue>.KeyCollection Keys { get; }
    content.vb: Public ReadOnly Property Keys As ReadOnlyDictionary(Of TKey, TValue).KeyCollection
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection
      description: A key collection that contains the keys of the dictionary.
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Values
  id: Values
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: System.Collections.ObjectModel.ReadOnlyDictionary`2.yml
  name: Values
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.Values
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).Values
  type: Property
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 49
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Gets a collection that contains the values in the dictionary.
  syntax:
    content: public ReadOnlyDictionary<TKey, TValue>.ValueCollection Values { get; }
    content.vb: Public ReadOnly Property Values As ReadOnlyDictionary(Of TKey, TValue).ValueCollection
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection
      description: A collection that contains the values in the object that implements @'System.Collections.ObjectModel.ReadOnlyDictionary`2'.
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ContainsKey(`0)
  id: ContainsKey(`0)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: System.Collections.ObjectModel.ReadOnlyDictionary`2.yml
  name: ContainsKey(TKey)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)
  type: Method
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 64
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Determines whether the dictionary contains an element that has the specified key.
  syntax:
    content: public bool ContainsKey(TKey key)
    content.vb: Public Function ContainsKey(key As TKey) As Boolean
    parameters:
    - id: key
      type: '{TKey}'
      description: The key to locate in the dictionary.
    return:
      type: System.Boolean
      description: true if the dictionary contains an element that has the specified key; otherwise, false.
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: System.Collections.ObjectModel.ReadOnlyDictionary`2.yml
  name: GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 163
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Returns an enumerator that iterates through the @'System.Collections.ObjectModel.ReadOnlyDictionary`2'.
  syntax:
    content: public Generic.IEnumerator<Generic.KeyValuePair<TKey, TValue>> GetEnumerator()
    content.vb: Public Function GetEnumerator As Generic.IEnumerator(Of Generic.KeyValuePair(Of TKey, TValue))
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: An enumerator that can be used to iterate through the collection.
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.TryGetValue(`0,`1@)
  id: TryGetValue(`0,`1@)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: System.Collections.ObjectModel.ReadOnlyDictionary`2.yml
  name: TryGetValue(TKey, out TValue)
  name.vb: TryGetValue(TKey, ByRef TValue)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, ByRef TValue)
  type: Method
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 77
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Retrieves the value that is associated with the specified key.
  syntax:
    content: public bool TryGetValue(TKey key, out TValue value)
    content.vb: Public Function TryGetValue(key As TKey, ByRef value As TValue) As Boolean
    parameters:
    - id: key
      type: '{TKey}'
      description: The key whose value will be retrieved.
    - id: value
      type: '{TValue}'
      description: When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the *value* parameter. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: true if the object that implements @'System.Collections.ObjectModel.ReadOnlyDictionary`2' contains an element with the specified key; otherwise, false.
references:
- uid: System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<TKey, TValue>
  name.vb: IDictionary(Of TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  isExternal: false
  href: System.Collections.Generic.IDictionary`2.yml
  name: Collections.Generic.IDictionary<, >
  name.vb: Collections.Generic.IDictionary(Of , )
  fullName: System.Collections.Generic.IDictionary<, >
  fullName.vb: System.Collections.Generic.IDictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    href: System.Collections.Generic.IDictionary`2.yml
  - name: <
    fullName: <
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    href: System.Collections.Generic.IDictionary`2.yml
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: '{TKey}'
  isExternal: false
  name: TKey
  fullName: TKey
- uid: '{TValue}'
  isExternal: false
  name: TValue
  fullName: TValue
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection
  parent: System.Collections.ObjectModel
  isExternal: false
  href: System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection.yml
  name: ReadOnlyDictionary.KeyCollection<>
  name.vb: ReadOnlyDictionary.KeyCollection(Of )
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary.KeyCollection<>
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary.KeyCollection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection
    name: ReadOnlyDictionary.KeyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyDictionary.KeyCollection
    href: System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection.yml
  - name: <
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection
    name: ReadOnlyDictionary.KeyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyDictionary.KeyCollection
    href: System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection.yml
  - name: '(Of '
    fullName: '(Of '
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection
  parent: System.Collections.ObjectModel
  isExternal: false
  href: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.yml
  name: ReadOnlyDictionary.ValueCollection<>
  name.vb: ReadOnlyDictionary.ValueCollection(Of )
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary.ValueCollection<>
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary.ValueCollection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection
    name: ReadOnlyDictionary.ValueCollection
    fullName: System.Collections.ObjectModel.ReadOnlyDictionary.ValueCollection
    href: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.yml
  - name: <
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection
    name: ReadOnlyDictionary.ValueCollection
    fullName: System.Collections.ObjectModel.ReadOnlyDictionary.ValueCollection
    href: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.yml
  - name: '(Of '
    fullName: '(Of '
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<KeyValuePair<TKey, TValue>>
  name.vb: IEnumerator(Of KeyValuePair(Of TKey, TValue))
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.IEnumerator`1.yml
  name: Collections.Generic.IEnumerator<>
  name.vb: Collections.Generic.IEnumerator(Of )
  fullName: System.Collections.Generic.IEnumerator<>
  fullName.vb: System.Collections.Generic.IEnumerator(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    href: System.Collections.Generic.IEnumerator`1.yml
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    href: System.Collections.Generic.IEnumerator`1.yml
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.Collections.Generic.KeyNotFoundException
  isExternal: false
  href: System.Collections.Generic.KeyNotFoundException.yml
  name: KeyNotFoundException
  fullName: System.Collections.Generic.KeyNotFoundException
  summary: The exception that is thrown when the key specified for accessing an element in a collection does not match any key in the collection.
