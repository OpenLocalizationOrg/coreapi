items:
- uid: System.Globalization.RegionInfo
  id: RegionInfo
  parent: System.Globalization
  children:
  - System.Globalization.RegionInfo.#ctor(System.String)
  - System.Globalization.RegionInfo.CurrencySymbol
  - System.Globalization.RegionInfo.CurrentRegion
  - System.Globalization.RegionInfo.DisplayName
  - System.Globalization.RegionInfo.EnglishName
  - System.Globalization.RegionInfo.Equals(System.Object)
  - System.Globalization.RegionInfo.GetHashCode
  - System.Globalization.RegionInfo.IsMetric
  - System.Globalization.RegionInfo.ISOCurrencySymbol
  - System.Globalization.RegionInfo.Name
  - System.Globalization.RegionInfo.NativeName
  - System.Globalization.RegionInfo.ToString
  - System.Globalization.RegionInfo.TwoLetterISORegionName
  href: System.Globalization.RegionInfo.yml
  name: RegionInfo
  fullName: System.Globalization.RegionInfo
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Globalization/RegionInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Globalization/RegionInfo.cs
    startLine: 22
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Contains information about the country/region.
  syntax:
    content: public class RegionInfo
    content.vb: Public Class RegionInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Globalization.RegionInfo.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Globalization.RegionInfo
  href: System.Globalization.RegionInfo.yml
  name: RegionInfo(String)
  fullName: System.Globalization.RegionInfo.RegionInfo(System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/RegionInfo.cs
    startLine: 60
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Initializes a new instance of the @'System.Globalization.RegionInfo' class based on the country/region or specific culture, specified by name.
  syntax:
    content: public RegionInfo(string name)
    content.vb: Public Sub New(name As String)
    parameters:
    - id: name
      type: System.String
      description: A string that contains a two-letter code defined in ISO 3166 for country/region.-or-A string that contains the culture name for a specific culture, custom culture, or Windows-only culture. If the culture name is not in RFC 4646 format, your application should specify the entire culture name instead of just the country/region.
  exceptions:
  - type: System.ArgumentNullException
    description: '*name* is null.'
  - type: System.ArgumentException
    description: '*name* is not a valid country/region name or specific culture name.'
- uid: System.Globalization.RegionInfo.CurrencySymbol
  id: CurrencySymbol
  parent: System.Globalization.RegionInfo
  href: System.Globalization.RegionInfo.yml
  name: CurrencySymbol
  fullName: System.Globalization.RegionInfo.CurrencySymbol
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/RegionInfo.cs
    startLine: 559
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Gets the currency symbol associated with the country/region.
  syntax:
    content: public virtual string CurrencySymbol { get; }
    content.vb: Public Overridable ReadOnly Property CurrencySymbol As String
    parameters: []
    return:
      type: System.String
      description: The currency symbol associated with the country/region.
- uid: System.Globalization.RegionInfo.CurrentRegion
  id: CurrentRegion
  parent: System.Globalization.RegionInfo
  href: System.Globalization.RegionInfo.yml
  name: CurrentRegion
  fullName: System.Globalization.RegionInfo.CurrentRegion
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/RegionInfo.cs
    startLine: 359
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Gets the @'System.Globalization.RegionInfo' that represents the country/region used by the current thread.
  syntax:
    content: public static RegionInfo CurrentRegion { get; }
    content.vb: Public Shared ReadOnly Property CurrentRegion As RegionInfo
    parameters: []
    return:
      type: System.Globalization.RegionInfo
      description: The @'System.Globalization.RegionInfo' that represents the country/region used by the current thread.
- uid: System.Globalization.RegionInfo.DisplayName
  id: DisplayName
  parent: System.Globalization.RegionInfo
  href: System.Globalization.RegionInfo.yml
  name: DisplayName
  fullName: System.Globalization.RegionInfo.DisplayName
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/RegionInfo.cs
    startLine: 414
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Gets the full name of the country/region in the language of the localized version of .NET Framework.
  syntax:
    content: public virtual string DisplayName { get; }
    content.vb: Public Overridable ReadOnly Property DisplayName As String
    parameters: []
    return:
      type: System.String
      description: The full name of the country/region in the language of the localized version of .NET Framework.
- uid: System.Globalization.RegionInfo.EnglishName
  id: EnglishName
  parent: System.Globalization.RegionInfo
  href: System.Globalization.RegionInfo.yml
  name: EnglishName
  fullName: System.Globalization.RegionInfo.EnglishName
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/RegionInfo.cs
    startLine: 396
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Gets the full name of the country/region in English.
  syntax:
    content: public virtual string EnglishName { get; }
    content.vb: Public Overridable ReadOnly Property EnglishName As String
    parameters: []
    return:
      type: System.String
      description: The full name of the country/region in English.
- uid: System.Globalization.RegionInfo.IsMetric
  id: IsMetric
  parent: System.Globalization.RegionInfo
  href: System.Globalization.RegionInfo.yml
  name: IsMetric
  fullName: System.Globalization.RegionInfo.IsMetric
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/RegionInfo.cs
    startLine: 500
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Gets a value indicating whether the country/region uses the metric system for measurements.
  syntax:
    content: public virtual bool IsMetric { get; }
    content.vb: Public Overridable ReadOnly Property IsMetric As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the country/region uses the metric system for measurements; otherwise, false.
- uid: System.Globalization.RegionInfo.ISOCurrencySymbol
  id: ISOCurrencySymbol
  parent: System.Globalization.RegionInfo
  href: System.Globalization.RegionInfo.yml
  name: ISOCurrencySymbol
  fullName: System.Globalization.RegionInfo.ISOCurrencySymbol
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/RegionInfo.cs
    startLine: 573
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Gets the three-character ISO 4217 currency symbol associated with the country/region.
  syntax:
    content: public virtual string ISOCurrencySymbol { get; }
    content.vb: Public Overridable ReadOnly Property ISOCurrencySymbol As String
    parameters: []
    return:
      type: System.String
      description: The three-character ISO 4217 currency symbol associated with the country/region.
- uid: System.Globalization.RegionInfo.Name
  id: Name
  parent: System.Globalization.RegionInfo
  href: System.Globalization.RegionInfo.yml
  name: Name
  fullName: System.Globalization.RegionInfo.Name
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/RegionInfo.cs
    startLine: 382
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Gets the name or ISO 3166 two-letter country/region code for the current @'System.Globalization.RegionInfo' object.
  syntax:
    content: public virtual string Name { get; }
    content.vb: Public Overridable ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: The value specified by the *name* parameter of the @'System.Globalization.RegionInfo.#ctor(System.String)' constructor. The return value is in uppercase.-or-The two-letter code defined in ISO 3166 for the country/region specified by the *culture* parameter of the @'System.Globalization.RegionInfo.#ctor(System.Int32)' constructor. The return value is in uppercase.
- uid: System.Globalization.RegionInfo.NativeName
  id: NativeName
  parent: System.Globalization.RegionInfo
  href: System.Globalization.RegionInfo.yml
  name: NativeName
  fullName: System.Globalization.RegionInfo.NativeName
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/RegionInfo.cs
    startLine: 432
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Gets the name of a country/region formatted in the native language of the country/region.
  syntax:
    content: public virtual string NativeName { get; }
    content.vb: Public Overridable ReadOnly Property NativeName As String
    parameters: []
    return:
      type: System.String
      description: The native name of the country/region formatted in the language associated with the ISO 3166 country/region code.
- uid: System.Globalization.RegionInfo.TwoLetterISORegionName
  id: TwoLetterISORegionName
  parent: System.Globalization.RegionInfo
  href: System.Globalization.RegionInfo.yml
  name: TwoLetterISORegionName
  fullName: System.Globalization.RegionInfo.TwoLetterISORegionName
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/RegionInfo.cs
    startLine: 449
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Gets the two-letter code defined in ISO 3166 for the country/region.
  syntax:
    content: public virtual string TwoLetterISORegionName { get; }
    content.vb: Public Overridable ReadOnly Property TwoLetterISORegionName As String
    parameters: []
    return:
      type: System.String
      description: The two-letter code defined in ISO 3166 for the country/region.
- uid: System.Globalization.RegionInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Globalization.RegionInfo
  href: System.Globalization.RegionInfo.yml
  name: Equals(Object)
  fullName: System.Globalization.RegionInfo.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/RegionInfo.cs
    startLine: 591
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Determines whether the specified object is the same instance as the current @'System.Globalization.RegionInfo'.
  syntax:
    content: public override bool Equals(object value)
    content.vb: Public Overrides Function Equals(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: The object to compare with the current @'System.Globalization.RegionInfo'.
    return:
      type: System.Boolean
      description: true if the *value* parameter is a @'System.Globalization.RegionInfo' object and its @'System.Globalization.RegionInfo.Name' property is the same as the @'System.Globalization.RegionInfo.Name' property of the current @'System.Globalization.RegionInfo' object; otherwise, false.
  overridden: System.Object.Equals(System.Object)
- uid: System.Globalization.RegionInfo.GetHashCode
  id: GetHashCode
  parent: System.Globalization.RegionInfo
  href: System.Globalization.RegionInfo.yml
  name: GetHashCode()
  fullName: System.Globalization.RegionInfo.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/RegionInfo.cs
    startLine: 611
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Serves as a hash function for the current @'System.Globalization.RegionInfo', suitable for hashing algorithms and data structures, such as a hash table.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A hash code for the current @'System.Globalization.RegionInfo'.
  overridden: System.Object.GetHashCode
- uid: System.Globalization.RegionInfo.ToString
  id: ToString
  parent: System.Globalization.RegionInfo
  href: System.Globalization.RegionInfo.yml
  name: ToString()
  fullName: System.Globalization.RegionInfo.ToString()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/RegionInfo.cs
    startLine: 624
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Returns a string containing the culture name or ISO 3166 two-letter country/region codes specified for the current @'System.Globalization.RegionInfo'.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string containing the culture name or ISO 3166 two-letter country/region codes defined for the current @'System.Globalization.RegionInfo'.
  overridden: System.Object.ToString
references:
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
- uid: System.Globalization.RegionInfo
  parent: System.Globalization
  isExternal: false
  href: System.Globalization.RegionInfo.yml
  name: RegionInfo
  fullName: System.Globalization.RegionInfo
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
