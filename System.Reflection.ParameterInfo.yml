items:
- uid: System.Reflection.ParameterInfo
  id: ParameterInfo
  parent: System.Reflection
  children:
  - System.Reflection.ParameterInfo.Attributes
  - System.Reflection.ParameterInfo.CustomAttributes
  - System.Reflection.ParameterInfo.DefaultValue
  - System.Reflection.ParameterInfo.GetOptionalCustomModifiers
  - System.Reflection.ParameterInfo.GetRequiredCustomModifiers
  - System.Reflection.ParameterInfo.HasDefaultValue
  - System.Reflection.ParameterInfo.IsIn
  - System.Reflection.ParameterInfo.IsOptional
  - System.Reflection.ParameterInfo.IsOut
  - System.Reflection.ParameterInfo.IsRetval
  - System.Reflection.ParameterInfo.Member
  - System.Reflection.ParameterInfo.Name
  - System.Reflection.ParameterInfo.ParameterType
  - System.Reflection.ParameterInfo.Position
  - System.Reflection.ParameterInfo.RawDefaultValue
  - System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)
  - System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(Type,System.Boolean)
  - System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#IsDefined(Type,System.Boolean)
  langs:
  - csharp
  - vb
  name: ParameterInfo
  fullName: System.Reflection.ParameterInfo
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ParameterInfo
    path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
    startLine: 21
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Discovers the attributes of a parameter and provides access to parameter metadata.
  syntax:
    content: 'public class ParameterInfo : object, ICustomAttributeProvider'
    content.vb: >-
      Public Class ParameterInfo
          Inherits Object
          Implements ICustomAttributeProvider
  inheritance:
  - System.Object
  implements:
  - System.Reflection.ICustomAttributeProvider
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  commentId: T:System.Reflection.ParameterInfo
- uid: System.Reflection.ParameterInfo.Attributes
  id: Attributes
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: Attributes
  fullName: System.Reflection.ParameterInfo.Attributes
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Attributes
    path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
    startLine: 94
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the attributes for this parameter.
  syntax:
    content: >-
      public virtual ParameterAttributes Attributes

      {
          get;
      }
    content.vb: Public Overridable ReadOnly Property Attributes As ParameterAttributes
    parameters: []
    return:
      type: System.Reflection.ParameterAttributes
      description: A ParameterAttributes object representing the attributes for this parameter.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  commentId: P:System.Reflection.ParameterInfo.Attributes
- uid: System.Reflection.ParameterInfo.CustomAttributes
  id: CustomAttributes
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: CustomAttributes
  fullName: System.Reflection.ParameterInfo.CustomAttributes
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CustomAttributes
    path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
    startLine: 145
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a collection that contains this parameter's custom attributes.
  syntax:
    content: >-
      public virtual Collections.Generic.IEnumerable<CustomAttributeData> CustomAttributes

      {
          get;
      }
    content.vb: Public Overridable ReadOnly Property CustomAttributes As Collections.Generic.IEnumerable(Of CustomAttributeData)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}
      description: A collection that contains this parameter's custom attributes.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  commentId: P:System.Reflection.ParameterInfo.CustomAttributes
- uid: System.Reflection.ParameterInfo.DefaultValue
  id: DefaultValue
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: DefaultValue
  fullName: System.Reflection.ParameterInfo.DefaultValue
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DefaultValue
    path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
    startLine: 90
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating the default value if the parameter has a default value.
  syntax:
    content: >-
      public virtual object DefaultValue

      {
          get;
      }
    content.vb: Public Overridable ReadOnly Property DefaultValue As Object
    parameters: []
    return:
      type: System.Object
      description: The default value of the parameter, or <xref href="System.DBNull.Value" data-throw-if-not-resolved="false"></xref> if the parameter has no default value.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  commentId: P:System.Reflection.ParameterInfo.DefaultValue
- uid: System.Reflection.ParameterInfo.HasDefaultValue
  id: HasDefaultValue
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: HasDefaultValue
  fullName: System.Reflection.ParameterInfo.HasDefaultValue
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: HasDefaultValue
    path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
    startLine: 88
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value that indicates whether this parameter has a default value.
  syntax:
    content: >-
      public virtual bool HasDefaultValue

      {
          get;
      }
    content.vb: Public Overridable ReadOnly Property HasDefaultValue As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if this parameter has a default value; otherwise, false.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  commentId: P:System.Reflection.ParameterInfo.HasDefaultValue
- uid: System.Reflection.ParameterInfo.IsIn
  id: IsIn
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: IsIn
  fullName: System.Reflection.ParameterInfo.IsIn
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsIn
    path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
    startLine: 103
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating whether this is an input parameter.
  syntax:
    content: >-
      public bool IsIn

      {
          get;
      }
    content.vb: Public ReadOnly Property IsIn As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the parameter is an input parameter; otherwise, false.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  commentId: P:System.Reflection.ParameterInfo.IsIn
- uid: System.Reflection.ParameterInfo.IsOptional
  id: IsOptional
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: IsOptional
  fullName: System.Reflection.ParameterInfo.IsOptional
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsOptional
    path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
    startLine: 109
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating whether this parameter is optional.
  syntax:
    content: >-
      public bool IsOptional

      {
          get;
      }
    content.vb: Public ReadOnly Property IsOptional As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the parameter is optional; otherwise, false.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  commentId: P:System.Reflection.ParameterInfo.IsOptional
- uid: System.Reflection.ParameterInfo.IsOut
  id: IsOut
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: IsOut
  fullName: System.Reflection.ParameterInfo.IsOut
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsOut
    path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
    startLine: 104
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating whether this is an output parameter.
  syntax:
    content: >-
      public bool IsOut

      {
          get;
      }
    content.vb: Public ReadOnly Property IsOut As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the parameter is an output parameter; otherwise, false.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  commentId: P:System.Reflection.ParameterInfo.IsOut
- uid: System.Reflection.ParameterInfo.IsRetval
  id: IsRetval
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: IsRetval
  fullName: System.Reflection.ParameterInfo.IsRetval
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsRetval
    path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
    startLine: 108
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating whether this is a Retval parameter.
  syntax:
    content: >-
      public bool IsRetval

      {
          get;
      }
    content.vb: Public ReadOnly Property IsRetval As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the parameter is a Retval; otherwise, false.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  commentId: P:System.Reflection.ParameterInfo.IsRetval
- uid: System.Reflection.ParameterInfo.Member
  id: Member
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: Member
  fullName: System.Reflection.ParameterInfo.Member
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Member
    path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
    startLine: 96
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating the member in which the parameter is implemented.
  syntax:
    content: >-
      public virtual MemberInfo Member

      {
          get;
      }
    content.vb: Public Overridable ReadOnly Property Member As MemberInfo
    parameters: []
    return:
      type: System.Reflection.MemberInfo
      description: The member which implanted the parameter represented by this <xref href="System.Reflection.ParameterInfo" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  commentId: P:System.Reflection.ParameterInfo.Member
- uid: System.Reflection.ParameterInfo.Name
  id: Name
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Reflection.ParameterInfo.Name
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Name
    path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
    startLine: 80
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the name of the parameter.
  syntax:
    content: >-
      public virtual string Name

      {
          get;
      }
    content.vb: Public Overridable ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: The simple name of this parameter.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  commentId: P:System.Reflection.ParameterInfo.Name
- uid: System.Reflection.ParameterInfo.ParameterType
  id: ParameterType
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: ParameterType
  fullName: System.Reflection.ParameterInfo.ParameterType
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ParameterType
    path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
    startLine: 72
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the Type of this parameter.
  syntax:
    content: >-
      public virtual Type ParameterType

      {
          get;
      }
    content.vb: Public Overridable ReadOnly Property ParameterType As Type
    parameters: []
    return:
      type: System.Type
      description: The Type object that represents the Type of this parameter.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  commentId: P:System.Reflection.ParameterInfo.ParameterType
- uid: System.Reflection.ParameterInfo.Position
  id: Position
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: Position
  fullName: System.Reflection.ParameterInfo.Position
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Position
    path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
    startLine: 93
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the zero-based position of the parameter in the formal parameter list.
  syntax:
    content: >-
      public virtual int Position

      {
          get;
      }
    content.vb: Public Overridable ReadOnly Property Position As Integer
    parameters: []
    return:
      type: System.Int32
      description: An integer representing the position this parameter occupies in the parameter list.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  commentId: P:System.Reflection.ParameterInfo.Position
- uid: System.Reflection.ParameterInfo.GetOptionalCustomModifiers
  id: GetOptionalCustomModifiers
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: GetOptionalCustomModifiers()
  fullName: System.Reflection.ParameterInfo.GetOptionalCustomModifiers()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetOptionalCustomModifiers
    path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
    startLine: 132
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the optional custom modifiers of the parameter.
  syntax:
    content: public virtual Type[] GetOptionalCustomModifiers()
    content.vb: Public Overridable Function GetOptionalCustomModifiers As Type()
    return:
      type: Type[]
      description: An array of <xref href="System.Type" data-throw-if-not-resolved="false"></xref> objects that identify the optional custom modifiers of the current parameter, such as <xref href="System.Runtime.CompilerServices.IsConst" data-throw-if-not-resolved="false"></xref> or <xref href="System.Runtime.CompilerServices.IsImplicitlyDereferenced" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  commentId: M:System.Reflection.ParameterInfo.GetOptionalCustomModifiers
- uid: System.Reflection.ParameterInfo.GetRequiredCustomModifiers
  id: GetRequiredCustomModifiers
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: GetRequiredCustomModifiers()
  fullName: System.Reflection.ParameterInfo.GetRequiredCustomModifiers()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetRequiredCustomModifiers
    path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
    startLine: 127
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the required custom modifiers of the parameter.
  syntax:
    content: public virtual Type[] GetRequiredCustomModifiers()
    content.vb: Public Overridable Function GetRequiredCustomModifiers As Type()
    return:
      type: Type[]
      description: An array of <xref href="System.Type" data-throw-if-not-resolved="false"></xref> objects that identify the required custom modifiers of the current parameter, such as <xref href="System.Runtime.CompilerServices.IsConst" data-throw-if-not-resolved="false"></xref> or <xref href="System.Runtime.CompilerServices.IsImplicitlyDereferenced" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  commentId: M:System.Reflection.ParameterInfo.GetRequiredCustomModifiers
- uid: System.Reflection.ParameterInfo.RawDefaultValue
  id: RawDefaultValue
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: RawDefaultValue
  fullName: System.Reflection.ParameterInfo.RawDefaultValue
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: RawDefaultValue
    path: src/mscorlib/src/System/Reflection/ParameterInfo.cs
    startLine: 91
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating the default value if the parameter has a default value.
  syntax:
    content: >-
      public virtual object RawDefaultValue

      {
          get;
      }
    content.vb: Public Overridable ReadOnly Property RawDefaultValue As Object
    parameters: []
    return:
      type: System.Object
      description: The default value of the parameter, or <xref href="System.DBNull.Value" data-throw-if-not-resolved="false"></xref> if the parameter has no default value.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  commentId: P:System.Reflection.ParameterInfo.RawDefaultValue
- uid: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)
  id: System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: ICustomAttributeProvider.GetCustomAttributes(Boolean)
  fullName: System.Reflection.ParameterInfo.System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Reflection/ref/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Reflection.ICustomAttributeProvider.GetCustomAttributes
    path: src/System.Reflection/ref/System.Reflection.cs
    startLine: 348
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: object[] ICustomAttributeProvider.GetCustomAttributes(bool inherit)
    content.vb: Function System.Reflection.ICustomAttributeProvider.GetCustomAttributes(inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes
    parameters:
    - id: inherit
      type: System.Boolean
    return:
      type: System.Object[]
  name.vb: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Boolean)
  commentId: M:System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)
- uid: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(Type,System.Boolean)
  id: System#Reflection#ICustomAttributeProvider#GetCustomAttributes(Type,System.Boolean)
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)
  fullName: System.Reflection.ParameterInfo.System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Reflection/ref/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Reflection.ICustomAttributeProvider.GetCustomAttributes
    path: src/System.Reflection/ref/System.Reflection.cs
    startLine: 349
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: object[] ICustomAttributeProvider.GetCustomAttributes(Type attributeType, bool inherit)
    content.vb: Function System.Reflection.ICustomAttributeProvider.GetCustomAttributes(attributeType As Type, inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes
    parameters:
    - id: attributeType
      type: Type
    - id: inherit
      type: System.Boolean
    return:
      type: System.Object[]
  name.vb: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)
  commentId: M:System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(Type,System.Boolean)
- uid: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#IsDefined(Type,System.Boolean)
  id: System#Reflection#ICustomAttributeProvider#IsDefined(Type,System.Boolean)
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  - vb
  name: ICustomAttributeProvider.IsDefined(Type, Boolean)
  fullName: System.Reflection.ParameterInfo.System.Reflection.ICustomAttributeProvider.IsDefined(Type, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Reflection/ref/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Reflection.ICustomAttributeProvider.IsDefined
    path: src/System.Reflection/ref/System.Reflection.cs
    startLine: 350
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: bool ICustomAttributeProvider.IsDefined(Type attributeType, bool inherit)
    content.vb: Function System.Reflection.ICustomAttributeProvider.IsDefined(attributeType As Type, inherit As Boolean) As Boolean Implements ICustomAttributeProvider.IsDefined
    parameters:
    - id: attributeType
      type: Type
    - id: inherit
      type: System.Boolean
    return:
      type: System.Boolean
  name.vb: System.Reflection.ICustomAttributeProvider.IsDefined(Type, Boolean)
  commentId: M:System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#IsDefined(Type,System.Boolean)
references:
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Reflection.ParameterAttributes
  parent: System.Reflection
  isExternal: false
  name: ParameterAttributes
  fullName: System.Reflection.ParameterAttributes
- uid: System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}
  definition: System.Collections.Generic.IEnumerable`1
  name: Collections.Generic.IEnumerable<CustomAttributeData>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.CustomAttributeData>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.CustomAttributeData)
  name.vb: Collections.Generic.IEnumerable(Of CustomAttributeData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Reflection.CustomAttributeData
    name: CustomAttributeData
    fullName: System.Reflection.CustomAttributeData
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.CustomAttributeData
    name: CustomAttributeData
    fullName: System.Reflection.CustomAttributeData
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  fullname.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: Reflection.MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: Type[]
  isExternal: true
  name: Type[]
  fullName: Type[]
  fullname.vb: Type()
  name.vb: Type()
  spec.csharp:
  - uid: Type
    name: Type
    fullName: Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Type
    name: Type
    fullName: Type
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Object[]
  isExternal: false
  name: Object[]
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ()
    fullName: ()
- uid: Type
  isExternal: true
  name: Type
  fullName: Type
