items:
- uid: System.Net.Sockets.SocketType
  id: SocketType
  parent: System.Net.Sockets
  children:
  - System.Net.Sockets.SocketType.Dgram
  - System.Net.Sockets.SocketType.Raw
  - System.Net.Sockets.SocketType.Rdm
  - System.Net.Sockets.SocketType.Seqpacket
  - System.Net.Sockets.SocketType.Stream
  - System.Net.Sockets.SocketType.Unknown
  href: System.Net.Sockets.SocketType.yml
  name: SocketType
  fullName: System.Net.Sockets.SocketType
  type: Enum
  source:
    remote: &o0
      path: src/Common/src/System/Net/Sockets/SocketType.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/Common/src/System/Net/Sockets/SocketType.cs
    startLine: 10
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Specifies the type of socket that an instance of the @'System.Net.Sockets.Socket' class represents.
  syntax:
    content: public enum SocketType
    content.vb: Public Enum SocketType
- uid: System.Net.Sockets.SocketType.Dgram
  id: Dgram
  parent: System.Net.Sockets.SocketType
  href: System.Net.Sockets.SocketType.yml
  name: Dgram
  fullName: System.Net.Sockets.SocketType.Dgram
  type: Field
  source:
    remote: *o0
    path: src/Common/src/System/Net/Sockets/SocketType.cs
    startLine: 13
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Supports datagrams, which are connectionless, unreliable messages of a fixed (typically small) maximum length. Messages might be lost or duplicated and might arrive out of order. A @'System.Net.Sockets.Socket' of type @'System.Net.Sockets.SocketType.Dgram' requires no connection prior to sending and receiving data, and can communicate with multiple peers. @'System.Net.Sockets.SocketType.Dgram' uses the Datagram Protocol (@'System.Net.Sockets.ProtocolType.Udp') and the @'System.Net.Sockets.AddressFamily.InterNetwork'@'System.Net.Sockets.AddressFamily'.
  syntax:
    content: Dgram = 2
- uid: System.Net.Sockets.SocketType.Raw
  id: Raw
  parent: System.Net.Sockets.SocketType
  href: System.Net.Sockets.SocketType.yml
  name: Raw
  fullName: System.Net.Sockets.SocketType.Raw
  type: Field
  source:
    remote: *o0
    path: src/Common/src/System/Net/Sockets/SocketType.cs
    startLine: 14
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Supports access to the underlying transport protocol. Using the @'System.Net.Sockets.SocketType'@'System.Net.Sockets.SocketType.Raw', you can communicate using protocols like Internet Control Message Protocol (@'System.Net.Sockets.ProtocolType.Icmp') and Internet Group Management Protocol (@'System.Net.Sockets.ProtocolType.Igmp'). Your application must provide a complete IP header when sending. Received datagrams return with the IP header and options intact.
  syntax:
    content: Raw = 3
- uid: System.Net.Sockets.SocketType.Rdm
  id: Rdm
  parent: System.Net.Sockets.SocketType
  href: System.Net.Sockets.SocketType.yml
  name: Rdm
  fullName: System.Net.Sockets.SocketType.Rdm
  type: Field
  source:
    remote: *o0
    path: src/Common/src/System/Net/Sockets/SocketType.cs
    startLine: 15
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Supports connectionless, message-oriented, reliably delivered messages, and preserves message boundaries in data. Rdm (Reliably Delivered Messages) messages arrive unduplicated and in order. Furthermore, the sender is notified if messages are lost. If you initialize a Socket using @'System.Net.Sockets.SocketType.Rdm', you do not require a remote host connection before sending and receiving data. With @'System.Net.Sockets.SocketType.Rdm', you can communicate with multiple peers.
  syntax:
    content: Rdm = 4
- uid: System.Net.Sockets.SocketType.Seqpacket
  id: Seqpacket
  parent: System.Net.Sockets.SocketType
  href: System.Net.Sockets.SocketType.yml
  name: Seqpacket
  fullName: System.Net.Sockets.SocketType.Seqpacket
  type: Field
  source:
    remote: *o0
    path: src/Common/src/System/Net/Sockets/SocketType.cs
    startLine: 16
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Provides connection-oriented and reliable two-way transfer of ordered byte streams across a network. @'System.Net.Sockets.SocketType.Seqpacket' does not duplicate data, and it preserves boundaries within the data stream. A Socket of type @'System.Net.Sockets.SocketType.Seqpacket' communicates with a single peer and requires a remote host connection before communication can begin.
  syntax:
    content: Seqpacket = 5
- uid: System.Net.Sockets.SocketType.Stream
  id: Stream
  parent: System.Net.Sockets.SocketType
  href: System.Net.Sockets.SocketType.yml
  name: Stream
  fullName: System.Net.Sockets.SocketType.Stream
  type: Field
  source:
    remote: *o0
    path: src/Common/src/System/Net/Sockets/SocketType.cs
    startLine: 12
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Supports reliable, two-way, connection-based byte streams without the duplication of data and without preservation of boundaries. A Socket of this type communicates with a single peer and requires a remote host connection before communication can begin. @'System.Net.Sockets.SocketType.Stream' uses the Transmission Control Protocol (@'System.Net.Sockets.ProtocolType.Tcp') @'System.Net.Sockets.ProtocolType' and the InterNetwork@'System.Net.Sockets.AddressFamily'.
  syntax:
    content: Stream = 1
- uid: System.Net.Sockets.SocketType.Unknown
  id: Unknown
  parent: System.Net.Sockets.SocketType
  href: System.Net.Sockets.SocketType.yml
  name: Unknown
  fullName: System.Net.Sockets.SocketType.Unknown
  type: Field
  source:
    remote: *o0
    path: src/Common/src/System/Net/Sockets/SocketType.cs
    startLine: 17
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Specifies an unknown Socket type.
  syntax:
    content: Unknown = -1
references:
- uid: System.Net.Sockets
  isExternal: false
  name: System.Net.Sockets
  fullName: System.Net.Sockets
  type: Namespace
