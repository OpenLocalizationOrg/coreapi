items:
- uid: System.DateTime
  id: DateTime
  parent: System
  children:
  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)
  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)
  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)
  - System.DateTime.#ctor(System.Int64)
  - System.DateTime.#ctor(System.Int64,System.DateTimeKind)
  - System.DateTime.Add(System.TimeSpan)
  - System.DateTime.AddDays(System.Double)
  - System.DateTime.AddHours(System.Double)
  - System.DateTime.AddMilliseconds(System.Double)
  - System.DateTime.AddMinutes(System.Double)
  - System.DateTime.AddMonths(System.Int32)
  - System.DateTime.AddSeconds(System.Double)
  - System.DateTime.AddTicks(System.Int64)
  - System.DateTime.AddYears(System.Int32)
  - System.DateTime.Compare(System.DateTime,System.DateTime)
  - System.DateTime.CompareTo(System.DateTime)
  - System.DateTime.Date
  - System.DateTime.Day
  - System.DateTime.DayOfWeek
  - System.DateTime.DayOfYear
  - System.DateTime.DaysInMonth(System.Int32,System.Int32)
  - System.DateTime.Equals(System.DateTime)
  - System.DateTime.Equals(System.DateTime,System.DateTime)
  - System.DateTime.Equals(System.Object)
  - System.DateTime.FromBinary(System.Int64)
  - System.DateTime.FromFileTime(System.Int64)
  - System.DateTime.FromFileTimeUtc(System.Int64)
  - System.DateTime.GetDateTimeFormats
  - System.DateTime.GetDateTimeFormats(System.Char)
  - System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)
  - System.DateTime.GetDateTimeFormats(System.IFormatProvider)
  - System.DateTime.GetHashCode
  - System.DateTime.Hour
  - System.DateTime.IsDaylightSavingTime
  - System.DateTime.IsLeapYear(System.Int32)
  - System.DateTime.Kind
  - System.DateTime.MaxValue
  - System.DateTime.Millisecond
  - System.DateTime.Minute
  - System.DateTime.MinValue
  - System.DateTime.Month
  - System.DateTime.Now
  - System.DateTime.op_Addition(System.DateTime,System.TimeSpan)
  - System.DateTime.op_Equality(System.DateTime,System.DateTime)
  - System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)
  - System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)
  - System.DateTime.op_Inequality(System.DateTime,System.DateTime)
  - System.DateTime.op_LessThan(System.DateTime,System.DateTime)
  - System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)
  - System.DateTime.op_Subtraction(System.DateTime,System.DateTime)
  - System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)
  - System.DateTime.Parse(System.String)
  - System.DateTime.Parse(System.String,System.IFormatProvider)
  - System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  - System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)
  - System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  - System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  - System.DateTime.Second
  - System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)
  - System.DateTime.Subtract(System.DateTime)
  - System.DateTime.Subtract(System.TimeSpan)
  - System.DateTime.System#IComparable#CompareTo(System.Object)
  - System.DateTime.System#IConvertible#GetTypeCode
  - System.DateTime.System#IConvertible#ToBoolean(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToByte(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToChar(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToDateTime(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToDecimal(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToDouble(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToInt16(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToInt32(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToInt64(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToSByte(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToSingle(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToUInt16(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToUInt32(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToUInt64(System.IFormatProvider)
  - System.DateTime.Ticks
  - System.DateTime.TimeOfDay
  - System.DateTime.ToBinary
  - System.DateTime.Today
  - System.DateTime.ToFileTime
  - System.DateTime.ToFileTimeUtc
  - System.DateTime.ToLocalTime
  - System.DateTime.ToString
  - System.DateTime.ToString(System.IFormatProvider)
  - System.DateTime.ToString(System.String)
  - System.DateTime.ToString(System.String,System.IFormatProvider)
  - System.DateTime.ToUniversalTime
  - System.DateTime.TryParse(System.String,System.DateTime@)
  - System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  - System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  - System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  - System.DateTime.UtcNow
  - System.DateTime.Year
  href: System.DateTime.yml
  name: DateTime
  fullName: System.DateTime
  type: Struct
  source:
    remote: &o0
      path: src/mscorlib/src/System/DateTime.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 53
  assemblies:
  - System.Runtime
  namespace: System
  summary: Represents an instant in time, typically expressed as a date and time of day. To browse the .NET Framework source code for this type, see the Reference Source.
  syntax:
    content: 'public struct DateTime : IComparable, IComparable<DateTime>, IConvertible, IEquatable<DateTime>, IFormattable'
    content.vb: Public Structure DateTime Implements IComparable, IComparable(Of Date), IConvertible, IEquatable(Of Date), IFormattable
  implements:
  - System.IComparable
  - System.IComparable{System.DateTime}
  - System.IConvertible
  - System.IEquatable{System.DateTime}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.DateTime.MaxValue
  id: MaxValue
  parent: System.DateTime
  href: System.DateTime.yml
  name: MaxValue
  fullName: System.DateTime.MaxValue
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 113
  assemblies:
  - System.Runtime
  namespace: System
  summary: Represents the largest possible value of @'System.DateTime'. This field is read-only.
  syntax:
    content: public static readonly DateTime MaxValue
    content.vb: Public Shared ReadOnly MaxValue As Date
- uid: System.DateTime.MinValue
  id: MinValue
  parent: System.DateTime
  href: System.DateTime.yml
  name: MinValue
  fullName: System.DateTime.MinValue
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 112
  assemblies:
  - System.Runtime
  namespace: System
  summary: Represents the smallest possible value of @'System.DateTime'. This field is read-only.
  syntax:
    content: public static readonly DateTime MinValue
    content.vb: Public Shared ReadOnly MinValue As Date
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: System.DateTime
  href: System.DateTime.yml
  name: DateTime(Int32, Int32, Int32)
  fullName: System.DateTime.DateTime(System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 176
  assemblies:
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the @'System.DateTime' structure to the specified year, month, and day.
  syntax:
    content: public DateTime(int year, int month, int day)
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer)
    parameters:
    - id: year
      type: System.Int32
      description: The year (1 through 9999).
    - id: month
      type: System.Int32
      description: The month (1 through 12).
    - id: day
      type: System.Int32
      description: The day (1 through the number of days in *month*).
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*year* is less than 1 or greater than 9999.-or- *month* is less than 1 or greater than 12.-or- *day* is less than 1 or greater than the number of days in *month*.'
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.DateTime
  href: System.DateTime.yml
  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: System.DateTime.DateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 191
  assemblies:
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the @'System.DateTime' structure to the specified year, month, day, hour, minute, and second.
  syntax:
    content: public DateTime(int year, int month, int day, int hour, int minute, int second)
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer)
    parameters:
    - id: year
      type: System.Int32
      description: The year (1 through 9999).
    - id: month
      type: System.Int32
      description: The month (1 through 12).
    - id: day
      type: System.Int32
      description: The day (1 through the number of days in *month*).
    - id: hour
      type: System.Int32
      description: The hours (0 through 23).
    - id: minute
      type: System.Int32
      description: The minutes (0 through 59).
    - id: second
      type: System.Int32
      description: The seconds (0 through 59).
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*year* is less than 1 or greater than 9999. -or- *month* is less than 1 or greater than 12. -or- *day* is less than 1 or greater than the number of days in *month*.-or- *hour* is less than 0 or greater than 23. -or- *minute* is less than 0 or greater than 59. -or- *second* is less than 0 or greater than 59.'
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)'
  parent: System.DateTime
  href: System.DateTime.yml
  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)
  fullName: System.DateTime.DateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.DateTimeKind)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 195
  assemblies:
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the @'System.DateTime' structure to the specified year, month, day, hour, minute, second, and Coordinated Universal Time (UTC) or local time.
  syntax:
    content: public DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind)
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, kind As DateTimeKind)
    parameters:
    - id: year
      type: System.Int32
      description: The year (1 through 9999).
    - id: month
      type: System.Int32
      description: The month (1 through 12).
    - id: day
      type: System.Int32
      description: The day (1 through the number of days in *month*).
    - id: hour
      type: System.Int32
      description: The hours (0 through 23).
    - id: minute
      type: System.Int32
      description: The minutes (0 through 59).
    - id: second
      type: System.Int32
      description: The seconds (0 through 59).
    - id: kind
      type: System.DateTimeKind
      description: One of the enumeration values that indicates whether *year*, *month*, *day*, *hour*, *minute* and *second* specify a local time, Coordinated Universal Time (UTC), or neither.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*year* is less than 1 or greater than 9999. -or- *month* is less than 1 or greater than 12. -or- *day* is less than 1 or greater than the number of days in *month*.-or- *hour* is less than 0 or greater than 23. -or- *minute* is less than 0 or greater than 59. -or- *second* is less than 0 or greater than 59.'
  - type: System.ArgumentException
    description: '*kind* is not one of the @''System.DateTimeKind'' values.'
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.DateTime
  href: System.DateTime.yml
  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: System.DateTime.DateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 217
  assemblies:
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the @'System.DateTime' structure to the specified year, month, day, hour, minute, second, and millisecond.
  syntax:
    content: public DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer)
    parameters:
    - id: year
      type: System.Int32
      description: The year (1 through 9999).
    - id: month
      type: System.Int32
      description: The month (1 through 12).
    - id: day
      type: System.Int32
      description: The day (1 through the number of days in *month*).
    - id: hour
      type: System.Int32
      description: The hours (0 through 23).
    - id: minute
      type: System.Int32
      description: The minutes (0 through 59).
    - id: second
      type: System.Int32
      description: The seconds (0 through 59).
    - id: millisecond
      type: System.Int32
      description: The milliseconds (0 through 999).
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*year* is less than 1 or greater than 9999.-or- *month* is less than 1 or greater than 12.-or- *day* is less than 1 or greater than the number of days in *month*.-or- *hour* is less than 0 or greater than 23.-or- *minute* is less than 0 or greater than 59.-or- *second* is less than 0 or greater than 59.-or- *millisecond* is less than 0 or greater than 999.'
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)'
  parent: System.DateTime
  href: System.DateTime.yml
  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)
  fullName: System.DateTime.DateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.DateTimeKind)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 229
  assemblies:
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the @'System.DateTime' structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time.
  syntax:
    content: public DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind)
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, kind As DateTimeKind)
    parameters:
    - id: year
      type: System.Int32
      description: The year (1 through 9999).
    - id: month
      type: System.Int32
      description: The month (1 through 12).
    - id: day
      type: System.Int32
      description: The day (1 through the number of days in *month*).
    - id: hour
      type: System.Int32
      description: The hours (0 through 23).
    - id: minute
      type: System.Int32
      description: The minutes (0 through 59).
    - id: second
      type: System.Int32
      description: The seconds (0 through 59).
    - id: millisecond
      type: System.Int32
      description: The milliseconds (0 through 999).
    - id: kind
      type: System.DateTimeKind
      description: One of the enumeration values that indicates whether *year*, *month*, *day*, *hour*, *minute*, *second*, and *millisecond* specify a local time, Coordinated Universal Time (UTC), or neither.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*year* is less than 1 or greater than 9999.-or- *month* is less than 1 or greater than 12.-or- *day* is less than 1 or greater than the number of days in *month*.-or- *hour* is less than 0 or greater than 23.-or- *minute* is less than 0 or greater than 59.-or- *second* is less than 0 or greater than 59.-or- *millisecond* is less than 0 or greater than 999.'
  - type: System.ArgumentException
    description: '*kind* is not one of the @''System.DateTimeKind'' values.'
- uid: System.DateTime.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: System.DateTime
  href: System.DateTime.yml
  name: DateTime(Int64)
  fullName: System.DateTime.DateTime(System.Int64)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 142
  assemblies:
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the @'System.DateTime' structure to a specified number of ticks.
  syntax:
    content: public DateTime(long ticks)
    content.vb: Public Sub New(ticks As Long)
    parameters:
    - id: ticks
      type: System.Int64
      description: A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*ticks* is less than @''System.DateTime.MinValue'' or greater than @''System.DateTime.MaxValue''.'
- uid: System.DateTime.#ctor(System.Int64,System.DateTimeKind)
  id: '#ctor(System.Int64,System.DateTimeKind)'
  parent: System.DateTime
  href: System.DateTime.yml
  name: DateTime(Int64, DateTimeKind)
  fullName: System.DateTime.DateTime(System.Int64, System.DateTimeKind)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 153
  assemblies:
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the @'System.DateTime' structure to a specified number of ticks and to Coordinated Universal Time (UTC) or local time.
  syntax:
    content: public DateTime(long ticks, DateTimeKind kind)
    content.vb: Public Sub New(ticks As Long, kind As DateTimeKind)
    parameters:
    - id: ticks
      type: System.Int64
      description: A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.
    - id: kind
      type: System.DateTimeKind
      description: One of the enumeration values that indicates whether *ticks* specifies a local time, Coordinated Universal Time (UTC), or neither.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*ticks* is less than @''System.DateTime.MinValue'' or greater than @''System.DateTime.MaxValue''.'
  - type: System.ArgumentException
    description: '*kind* is not one of the @''System.DateTimeKind'' values.'
- uid: System.DateTime.Date
  id: Date
  parent: System.DateTime
  href: System.DateTime.yml
  name: Date
  fullName: System.DateTime.Date
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 741
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the date component of this instance.
  syntax:
    content: public DateTime Date { get; }
    content.vb: Public ReadOnly Property Date As Date
    parameters: []
    return:
      type: System.DateTime
      description: A new object with the same date as this instance, and the time value set to 12:00:00 midnight (00:00:00).
- uid: System.DateTime.Day
  id: Day
  parent: System.DateTime
  href: System.DateTime.yml
  name: Day
  fullName: System.DateTime.Day
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 798
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the day of the month represented by this instance.
  syntax:
    content: public int Day { get; }
    content.vb: Public ReadOnly Property Day As Integer
    parameters: []
    return:
      type: System.Int32
      description: The day component, expressed as a value between 1 and 31.
- uid: System.DateTime.DayOfWeek
  id: DayOfWeek
  parent: System.DateTime
  href: System.DateTime.yml
  name: DayOfWeek
  fullName: System.DateTime.DayOfWeek
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 811
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the day of the week represented by this instance.
  syntax:
    content: public DayOfWeek DayOfWeek { get; }
    content.vb: Public ReadOnly Property DayOfWeek As DayOfWeek
    parameters: []
    return:
      type: System.DayOfWeek
      description: An enumerated constant that indicates the day of the week of this @'System.DateTime' value.
- uid: System.DateTime.DayOfYear
  id: DayOfYear
  parent: System.DateTime
  href: System.DateTime.yml
  name: DayOfYear
  fullName: System.DateTime.DayOfYear
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 822
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the day of the year represented by this instance.
  syntax:
    content: public int DayOfYear { get; }
    content.vb: Public ReadOnly Property DayOfYear As Integer
    parameters: []
    return:
      type: System.Int32
      description: The day of the year, expressed as a value between 1 and 366.
- uid: System.DateTime.Hour
  id: Hour
  parent: System.DateTime
  href: System.DateTime.yml
  name: Hour
  fullName: System.DateTime.Hour
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 840
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the hour component of the date represented by this instance.
  syntax:
    content: public int Hour { get; }
    content.vb: Public ReadOnly Property Hour As Integer
    parameters: []
    return:
      type: System.Int32
      description: The hour component, expressed as a value between 0 and 23.
- uid: System.DateTime.Kind
  id: Kind
  parent: System.DateTime
  href: System.DateTime.yml
  name: Kind
  fullName: System.DateTime.Kind
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 852
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets a value that indicates whether the time represented by this instance is based on local time, Coordinated Universal Time (UTC), or neither.
  syntax:
    content: public DateTimeKind Kind { get; }
    content.vb: Public ReadOnly Property Kind As DateTimeKind
    parameters: []
    return:
      type: System.DateTimeKind
      description: One of the enumeration values that indicates what the current time represents. The default is @'System.DateTimeKind.Unspecified'.
- uid: System.DateTime.Millisecond
  id: Millisecond
  parent: System.DateTime
  href: System.DateTime.yml
  name: Millisecond
  fullName: System.DateTime.Millisecond
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 869
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the milliseconds component of the date represented by this instance.
  syntax:
    content: public int Millisecond { get; }
    content.vb: Public ReadOnly Property Millisecond As Integer
    parameters: []
    return:
      type: System.Int32
      description: The milliseconds component, expressed as a value between 0 and 999.
- uid: System.DateTime.Minute
  id: Minute
  parent: System.DateTime
  href: System.DateTime.yml
  name: Minute
  fullName: System.DateTime.Minute
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 880
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the minute component of the date represented by this instance.
  syntax:
    content: public int Minute { get; }
    content.vb: Public ReadOnly Property Minute As Integer
    parameters: []
    return:
      type: System.Int32
      description: The minute component, expressed as a value between 0 and 59.
- uid: System.DateTime.Month
  id: Month
  parent: System.DateTime
  href: System.DateTime.yml
  name: Month
  fullName: System.DateTime.Month
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 891
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the month component of the date represented by this instance.
  syntax:
    content: public int Month { get; }
    content.vb: Public ReadOnly Property Month As Integer
    parameters: []
    return:
      type: System.Int32
      description: The month component, expressed as a value between 1 and 12.
- uid: System.DateTime.Now
  id: Now
  parent: System.DateTime
  href: System.DateTime.yml
  name: Now
  fullName: System.DateTime.Now
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 904
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets a @'System.DateTime' object that is set to the current date and time on this computer, expressed as the local time.
  syntax:
    content: public static DateTime Now { get; }
    content.vb: Public Shared ReadOnly Property Now As Date
    parameters: []
    return:
      type: System.DateTime
      description: An object whose value is the current local date and time.
- uid: System.DateTime.Second
  id: Second
  parent: System.DateTime
  href: System.DateTime.yml
  name: Second
  fullName: System.DateTime.Second
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 952
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the seconds component of the date represented by this instance.
  syntax:
    content: public int Second { get; }
    content.vb: Public ReadOnly Property Second As Integer
    parameters: []
    return:
      type: System.Int32
      description: The seconds component, expressed as a value between 0 and 59.
- uid: System.DateTime.Ticks
  id: Ticks
  parent: System.DateTime
  href: System.DateTime.yml
  name: Ticks
  fullName: System.DateTime.Ticks
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 964
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the number of ticks that represent the date and time of this instance.
  syntax:
    content: public long Ticks { get; }
    content.vb: Public ReadOnly Property Ticks As Long
    parameters: []
    return:
      type: System.Int64
      description: The number of ticks that represent the date and time of this instance. The value is between DateTime.MinValue.Ticks and DateTime.MaxValue.Ticks.
- uid: System.DateTime.TimeOfDay
  id: TimeOfDay
  parent: System.DateTime
  href: System.DateTime.yml
  name: TimeOfDay
  fullName: System.DateTime.TimeOfDay
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 973
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the time of day for this instance.
  syntax:
    content: public TimeSpan TimeOfDay { get; }
    content.vb: Public ReadOnly Property TimeOfDay As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: A time interval that represents the fraction of the day that has elapsed since midnight.
- uid: System.DateTime.Today
  id: Today
  parent: System.DateTime
  href: System.DateTime.yml
  name: Today
  fullName: System.DateTime.Today
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 983
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the current date.
  syntax:
    content: public static DateTime Today { get; }
    content.vb: Public Shared ReadOnly Property Today As Date
    parameters: []
    return:
      type: System.DateTime
      description: An object that is set to today's date, with the time component set to 00:00:00.
- uid: System.DateTime.UtcNow
  id: UtcNow
  parent: System.DateTime
  href: System.DateTime.yml
  name: UtcNow
  fullName: System.DateTime.UtcNow
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 922
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets a @'System.DateTime' object that is set to the current date and time on this computer, expressed as the Coordinated Universal Time (UTC).
  syntax:
    content: public static DateTime UtcNow { get; }
    content.vb: Public Shared ReadOnly Property UtcNow As Date
    parameters: []
    return:
      type: System.DateTime
      description: An object whose value is the current UTC date and time.
- uid: System.DateTime.Year
  id: Year
  parent: System.DateTime
  href: System.DateTime.yml
  name: Year
  fullName: System.DateTime.Year
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 992
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the year component of the date represented by this instance.
  syntax:
    content: public int Year { get; }
    content.vb: Public ReadOnly Property Year As Integer
    parameters: []
    return:
      type: System.Int32
      description: The year, between 1 and 9999.
- uid: System.DateTime.Add(System.TimeSpan)
  id: Add(System.TimeSpan)
  parent: System.DateTime
  href: System.DateTime.yml
  name: Add(TimeSpan)
  fullName: System.DateTime.Add(System.TimeSpan)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 338
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a new @'System.DateTime' that adds the value of the specified @'System.TimeSpan' to the value of this instance.
  syntax:
    content: public DateTime Add(TimeSpan value)
    content.vb: Public Function Add(value As TimeSpan) As Date
    parameters:
    - id: value
      type: System.TimeSpan
      description: A positive or negative time interval.
    return:
      type: System.DateTime
      description: An object whose value is the sum of the date and time represented by this instance and the time interval represented by *value*.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The resulting @'System.DateTime' is less than @'System.DateTime.MinValue' or greater than @'System.DateTime.MaxValue'.
- uid: System.DateTime.AddDays(System.Double)
  id: AddDays(System.Double)
  parent: System.DateTime
  href: System.DateTime.yml
  name: AddDays(Double)
  fullName: System.DateTime.AddDays(System.Double)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 357
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a new @'System.DateTime' that adds the specified number of days to the value of this instance.
  syntax:
    content: public DateTime AddDays(double value)
    content.vb: Public Function AddDays(value As Double) As Date
    parameters:
    - id: value
      type: System.Double
      description: A number of whole and fractional days. The *value* parameter can be negative or positive.
    return:
      type: System.DateTime
      description: An object whose value is the sum of the date and time represented by this instance and the number of days represented by *value*.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The resulting @'System.DateTime' is less than @'System.DateTime.MinValue' or greater than @'System.DateTime.MaxValue'.
- uid: System.DateTime.AddHours(System.Double)
  id: AddHours(System.Double)
  parent: System.DateTime
  href: System.DateTime.yml
  name: AddHours(Double)
  fullName: System.DateTime.AddHours(System.Double)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 367
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a new @'System.DateTime' that adds the specified number of hours to the value of this instance.
  syntax:
    content: public DateTime AddHours(double value)
    content.vb: Public Function AddHours(value As Double) As Date
    parameters:
    - id: value
      type: System.Double
      description: A number of whole and fractional hours. The *value* parameter can be negative or positive.
    return:
      type: System.DateTime
      description: An object whose value is the sum of the date and time represented by this instance and the number of hours represented by *value*.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The resulting @'System.DateTime' is less than @'System.DateTime.MinValue' or greater than @'System.DateTime.MaxValue'.
- uid: System.DateTime.AddMilliseconds(System.Double)
  id: AddMilliseconds(System.Double)
  parent: System.DateTime
  href: System.DateTime.yml
  name: AddMilliseconds(Double)
  fullName: System.DateTime.AddMilliseconds(System.Double)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 377
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a new @'System.DateTime' that adds the specified number of milliseconds to the value of this instance.
  syntax:
    content: public DateTime AddMilliseconds(double value)
    content.vb: Public Function AddMilliseconds(value As Double) As Date
    parameters:
    - id: value
      type: System.Double
      description: A number of whole and fractional milliseconds. The *value* parameter can be negative or positive. Note that this value is rounded to the nearest integer.
    return:
      type: System.DateTime
      description: An object whose value is the sum of the date and time represented by this instance and the number of milliseconds represented by *value*.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The resulting @'System.DateTime' is less than @'System.DateTime.MinValue' or greater than @'System.DateTime.MaxValue'.
- uid: System.DateTime.AddMinutes(System.Double)
  id: AddMinutes(System.Double)
  parent: System.DateTime
  href: System.DateTime.yml
  name: AddMinutes(Double)
  fullName: System.DateTime.AddMinutes(System.Double)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 387
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a new @'System.DateTime' that adds the specified number of minutes to the value of this instance.
  syntax:
    content: public DateTime AddMinutes(double value)
    content.vb: Public Function AddMinutes(value As Double) As Date
    parameters:
    - id: value
      type: System.Double
      description: A number of whole and fractional minutes. The *value* parameter can be negative or positive.
    return:
      type: System.DateTime
      description: An object whose value is the sum of the date and time represented by this instance and the number of minutes represented by *value*.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The resulting @'System.DateTime' is less than @'System.DateTime.MinValue' or greater than @'System.DateTime.MaxValue'.
- uid: System.DateTime.AddMonths(System.Int32)
  id: AddMonths(System.Int32)
  parent: System.DateTime
  href: System.DateTime.yml
  name: AddMonths(Int32)
  fullName: System.DateTime.AddMonths(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 408
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a new @'System.DateTime' that adds the specified number of months to the value of this instance.
  syntax:
    content: public DateTime AddMonths(int months)
    content.vb: Public Function AddMonths(months As Integer) As Date
    parameters:
    - id: months
      type: System.Int32
      description: A number of months. The *months* parameter can be negative or positive.
    return:
      type: System.DateTime
      description: An object whose value is the sum of the date and time represented by this instance and *months*.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The resulting @'System.DateTime' is less than @'System.DateTime.MinValue' or greater than @'System.DateTime.MaxValue'.-or- *months* is less than -120,000 or greater than 120,000.
- uid: System.DateTime.AddSeconds(System.Double)
  id: AddSeconds(System.Double)
  parent: System.DateTime
  href: System.DateTime.yml
  name: AddSeconds(Double)
  fullName: System.DateTime.AddSeconds(System.Double)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 437
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a new @'System.DateTime' that adds the specified number of seconds to the value of this instance.
  syntax:
    content: public DateTime AddSeconds(double value)
    content.vb: Public Function AddSeconds(value As Double) As Date
    parameters:
    - id: value
      type: System.Double
      description: A number of whole and fractional seconds. The *value* parameter can be negative or positive.
    return:
      type: System.DateTime
      description: An object whose value is the sum of the date and time represented by this instance and the number of seconds represented by *value*.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The resulting @'System.DateTime' is less than @'System.DateTime.MinValue' or greater than @'System.DateTime.MaxValue'.
- uid: System.DateTime.AddTicks(System.Int64)
  id: AddTicks(System.Int64)
  parent: System.DateTime
  href: System.DateTime.yml
  name: AddTicks(Int64)
  fullName: System.DateTime.AddTicks(System.Int64)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 445
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a new @'System.DateTime' that adds the specified number of ticks to the value of this instance.
  syntax:
    content: public DateTime AddTicks(long value)
    content.vb: Public Function AddTicks(value As Long) As Date
    parameters:
    - id: value
      type: System.Int64
      description: A number of 100-nanosecond ticks. The *value* parameter can be positive or negative.
    return:
      type: System.DateTime
      description: An object whose value is the sum of the date and time represented by this instance and the time represented by *value*.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The resulting @'System.DateTime' is less than @'System.DateTime.MinValue' or greater than @'System.DateTime.MaxValue'.
- uid: System.DateTime.AddYears(System.Int32)
  id: AddYears(System.Int32)
  parent: System.DateTime
  href: System.DateTime.yml
  name: AddYears(Int32)
  fullName: System.DateTime.AddYears(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 461
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a new @'System.DateTime' that adds the specified number of years to the value of this instance.
  syntax:
    content: public DateTime AddYears(int value)
    content.vb: Public Function AddYears(value As Integer) As Date
    parameters:
    - id: value
      type: System.Int32
      description: A number of years. The *value* parameter can be negative or positive.
    return:
      type: System.DateTime
      description: An object whose value is the sum of the date and time represented by this instance and the number of years represented by *value*.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*value* or the resulting @''System.DateTime'' is less than @''System.DateTime.MinValue'' or greater than @''System.DateTime.MaxValue''.'
- uid: System.DateTime.Compare(System.DateTime,System.DateTime)
  id: Compare(System.DateTime,System.DateTime)
  parent: System.DateTime
  href: System.DateTime.yml
  name: Compare(DateTime, DateTime)
  fullName: System.DateTime.Compare(System.DateTime, System.DateTime)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 470
  assemblies:
  - System.Runtime
  namespace: System
  summary: Compares two instances of @'System.DateTime' and returns an integer that indicates whether the first instance is earlier than, the same as, or later than the second instance.
  syntax:
    content: public static int Compare(DateTime t1, DateTime t2)
    content.vb: Public Shared Function Compare(t1 As Date, t2 As Date) As Integer
    parameters:
    - id: t1
      type: System.DateTime
      description: The first object to compare.
    - id: t2
      type: System.DateTime
      description: The second object to compare.
    return:
      type: System.Int32
      description: A signed number indicating the relative values of *t1* and *t2*.Value Type Condition Less than zero *t1* is earlier than *t2*. Zero *t1* is the same as *t2*. Greater than zero *t1* is later than *t2*.
- uid: System.DateTime.CompareTo(System.DateTime)
  id: CompareTo(System.DateTime)
  parent: System.DateTime
  href: System.DateTime.yml
  name: CompareTo(DateTime)
  fullName: System.DateTime.CompareTo(System.DateTime)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 497
  assemblies:
  - System.Runtime
  namespace: System
  summary: Compares the value of this instance to a specified @'System.DateTime' value and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified @'System.DateTime' value.
  syntax:
    content: public int CompareTo(DateTime value)
    content.vb: Public Function CompareTo(value As Date) As Integer
    parameters:
    - id: value
      type: System.DateTime
      description: The object to compare to the current instance.
    return:
      type: System.Int32
      description: A signed number indicating the relative values of this instance and the *value* parameter.Value Description Less than zero This instance is earlier than *value*. Zero This instance is the same as *value*. Greater than zero This instance is later than *value*.
- uid: System.DateTime.DaysInMonth(System.Int32,System.Int32)
  id: DaysInMonth(System.Int32,System.Int32)
  parent: System.DateTime
  href: System.DateTime.yml
  name: DaysInMonth(Int32, Int32)
  fullName: System.DateTime.DaysInMonth(System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 535
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns the number of days in the specified month and year.
  syntax:
    content: public static int DaysInMonth(int year, int month)
    content.vb: Public Shared Function DaysInMonth(year As Integer, month As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: The year.
    - id: month
      type: System.Int32
      description: The month (a number ranging from 1 to 12).
    return:
      type: System.Int32
      description: The number of days in *month* for the specified *year*.For example, if *month* equals 2 for February, the return value is 28 or 29 depending upon whether *year* is a leap year.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*month* is less than 1 or greater than 12.-or-*year* is less than 1 or greater than 9999.'
- uid: System.DateTime.Equals(System.DateTime)
  id: Equals(System.DateTime)
  parent: System.DateTime
  href: System.DateTime.yml
  name: Equals(DateTime)
  fullName: System.DateTime.Equals(System.DateTime)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 591
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a value indicating whether the value of this instance is equal to the value of the specified @'System.DateTime' instance.
  syntax:
    content: public bool Equals(DateTime value)
    content.vb: Public Function Equals(value As Date) As Boolean
    parameters:
    - id: value
      type: System.DateTime
      description: The object to compare to this instance.
    return:
      type: System.Boolean
      description: true if the *value* parameter equals the value of this instance; otherwise, false.
- uid: System.DateTime.Equals(System.DateTime,System.DateTime)
  id: Equals(System.DateTime,System.DateTime)
  parent: System.DateTime
  href: System.DateTime.yml
  name: Equals(DateTime, DateTime)
  fullName: System.DateTime.Equals(System.DateTime, System.DateTime)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 599
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a value indicating whether two @'System.DateTime' instances  have the same date and time value.
  syntax:
    content: public static bool Equals(DateTime t1, DateTime t2)
    content.vb: Public Shared Function Equals(t1 As Date, t2 As Date) As Boolean
    parameters:
    - id: t1
      type: System.DateTime
      description: The first object to compare.
    - id: t2
      type: System.DateTime
      description: The second object to compare.
    return:
      type: System.Boolean
      description: true if the two values are equal; otherwise, false.
- uid: System.DateTime.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.DateTime
  href: System.DateTime.yml
  name: Equals(Object)
  fullName: System.DateTime.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 584
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a value indicating whether this instance is equal to a specified object.
  syntax:
    content: public override bool Equals(object value)
    content.vb: Public Overrides Function Equals(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: The object to compare to this instance.
    return:
      type: System.Boolean
      description: true if *value* is an instance of @'System.DateTime' and equals the value of this instance; otherwise, false.
  overridden: System.ValueType.Equals(System.Object)
- uid: System.DateTime.FromBinary(System.Int64)
  id: FromBinary(System.Int64)
  parent: System.DateTime
  href: System.DateTime.yml
  name: FromBinary(Int64)
  fullName: System.DateTime.FromBinary(System.Int64)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 603
  assemblies:
  - System.Runtime
  namespace: System
  summary: Deserializes a 64-bit binary value and recreates an original serialized @'System.DateTime' object.
  syntax:
    content: public static DateTime FromBinary(long dateData)
    content.vb: Public Shared Function FromBinary(dateData As Long) As Date
    parameters:
    - id: dateData
      type: System.Int64
      description: A 64-bit signed integer that encodes the @'System.DateTime.Kind' property in a 2-bit field and the @'System.DateTime.Ticks' property in a 62-bit field.
    return:
      type: System.DateTime
      description: An object that is equivalent to the @'System.DateTime' object that was serialized by the @'System.DateTime.ToBinary' method.
  exceptions:
  - type: System.ArgumentException
    description: '*dateData* is less than @''System.DateTime.MinValue'' or greater than @''System.DateTime.MaxValue''.'
- uid: System.DateTime.FromFileTime(System.Int64)
  id: FromFileTime(System.Int64)
  parent: System.DateTime
  href: System.DateTime.yml
  name: FromFileTime(Int64)
  fullName: System.DateTime.FromFileTime(System.Int64)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 660
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the specified Windows file time to an equivalent local time.
  syntax:
    content: public static DateTime FromFileTime(long fileTime)
    content.vb: Public Shared Function FromFileTime(fileTime As Long) As Date
    parameters:
    - id: fileTime
      type: System.Int64
      description: A Windows file time expressed in ticks.
    return:
      type: System.DateTime
      description: An object that represents the local time equivalent of the date and time represented by the *fileTime* parameter.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*fileTime* is less than 0 or represents a time greater than @''System.DateTime.MaxValue''.'
- uid: System.DateTime.FromFileTimeUtc(System.Int64)
  id: FromFileTimeUtc(System.Int64)
  parent: System.DateTime
  href: System.DateTime.yml
  name: FromFileTimeUtc(Int64)
  fullName: System.DateTime.FromFileTimeUtc(System.Int64)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 664
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the specified Windows file time to an equivalent UTC time.
  syntax:
    content: public static DateTime FromFileTimeUtc(long fileTime)
    content.vb: Public Shared Function FromFileTimeUtc(fileTime As Long) As Date
    parameters:
    - id: fileTime
      type: System.Int64
      description: A Windows file time expressed in ticks.
    return:
      type: System.DateTime
      description: An object that represents the UTC time equivalent of the date and time represented by the *fileTime* parameter.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*fileTime* is less than 0 or represents a time greater than @''System.DateTime.MaxValue''.'
- uid: System.DateTime.GetDateTimeFormats
  id: GetDateTimeFormats
  parent: System.DateTime
  href: System.DateTime.yml
  name: GetDateTimeFormats()
  fullName: System.DateTime.GetDateTimeFormats()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1249
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of this instance to all the string representations supported by the standard date and time format specifiers.
  syntax:
    content: public string[] GetDateTimeFormats()
    content.vb: Public Function GetDateTimeFormats As String()
    return:
      type: System.String[]
      description: A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.
- uid: System.DateTime.GetDateTimeFormats(System.Char)
  id: GetDateTimeFormats(System.Char)
  parent: System.DateTime
  href: System.DateTime.yml
  name: GetDateTimeFormats(Char)
  fullName: System.DateTime.GetDateTimeFormats(System.Char)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1268
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier.
  syntax:
    content: public string[] GetDateTimeFormats(char format)
    content.vb: Public Function GetDateTimeFormats(format As Char) As String()
    parameters:
    - id: format
      type: System.Char
      description: A standard date and time format string (see Remarks).
    return:
      type: System.String[]
      description: A string array where each element is the representation of the value of this instance formatted with the *format* standard date and time format specifier.
  exceptions:
  - type: System.FormatException
    description: '*format* is not a valid standard date and time format specifier character.'
- uid: System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)
  id: GetDateTimeFormats(System.Char,System.IFormatProvider)
  parent: System.DateTime
  href: System.DateTime.yml
  name: GetDateTimeFormats(Char, IFormatProvider)
  fullName: System.DateTime.GetDateTimeFormats(System.Char, System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1277
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier and culture-specific formatting information.
  syntax:
    content: public string[] GetDateTimeFormats(char format, IFormatProvider provider)
    content.vb: Public Function GetDateTimeFormats(format As Char, provider As IFormatProvider) As String()
    parameters:
    - id: format
      type: System.Char
      description: A date and time format string (see Remarks).
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information about this instance.
    return:
      type: System.String[]
      description: A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.
  exceptions:
  - type: System.FormatException
    description: '*format* is not a valid standard date and time format specifier character.'
- uid: System.DateTime.GetDateTimeFormats(System.IFormatProvider)
  id: GetDateTimeFormats(System.IFormatProvider)
  parent: System.DateTime
  href: System.DateTime.yml
  name: GetDateTimeFormats(IFormatProvider)
  fullName: System.DateTime.GetDateTimeFormats(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1258
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of this instance to all the string representations supported by the standard date and time format specifiers and the specified culture-specific formatting information.
  syntax:
    content: public string[] GetDateTimeFormats(IFormatProvider provider)
    content.vb: Public Function GetDateTimeFormats(provider As IFormatProvider) As String()
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information about this instance.
    return:
      type: System.String[]
      description: A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.
- uid: System.DateTime.GetHashCode
  id: GetHashCode
  parent: System.DateTime
  href: System.DateTime.yml
  name: GetHashCode()
  fullName: System.DateTime.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 832
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns the hash code for this instance.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  overridden: System.ValueType.GetHashCode
- uid: System.DateTime.IsDaylightSavingTime
  id: IsDaylightSavingTime
  parent: System.DateTime
  href: System.DateTime.yml
  name: IsDaylightSavingTime()
  fullName: System.DateTime.IsDaylightSavingTime()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 695
  assemblies:
  - System.Runtime
  namespace: System
  summary: Indicates whether this instance of @'System.DateTime' is within the daylight saving time range for the current time zone.
  syntax:
    content: public bool IsDaylightSavingTime()
    content.vb: Public Function IsDaylightSavingTime As Boolean
    return:
      type: System.Boolean
      description: true if the value of the @'System.DateTime.Kind' property is @'System.DateTimeKind.Local' or @'System.DateTimeKind.Unspecified' and the value of this instance of @'System.DateTime' is within the daylight saving time range for the local time zone; false if @'System.DateTime.Kind' is @'System.DateTimeKind.Utc'.
- uid: System.DateTime.IsLeapYear(System.Int32)
  id: IsLeapYear(System.Int32)
  parent: System.DateTime
  href: System.DateTime.yml
  name: IsLeapYear(Int32)
  fullName: System.DateTime.IsLeapYear(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1002
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns an indication whether the specified year is a leap year.
  syntax:
    content: public static bool IsLeapYear(int year)
    content.vb: Public Shared Function IsLeapYear(year As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: A 4-digit year.
    return:
      type: System.Boolean
      description: true if *year* is a leap year; otherwise, false.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*year* is less than 1 or greater than 9999.'
- uid: System.DateTime.op_Addition(System.DateTime,System.TimeSpan)
  id: op_Addition(System.DateTime,System.TimeSpan)
  parent: System.DateTime
  href: System.DateTime.yml
  name: Addition(DateTime, TimeSpan)
  fullName: System.DateTime.Addition(System.DateTime, System.TimeSpan)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1199
  assemblies:
  - System.Runtime
  namespace: System
  summary: Adds a specified time interval to a specified date and time, yielding a new date and time.
  syntax:
    content: public static DateTime operator +(DateTime d, TimeSpan t)
    content.vb: Public Shared Operator +(d As Date, t As TimeSpan) As Date
    parameters:
    - id: d
      type: System.DateTime
      description: The date and time value to add.
    - id: t
      type: System.TimeSpan
      description: The time interval to add.
    return:
      type: System.DateTime
      description: An object that is the sum of the values of *d* and *t*.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The resulting @'System.DateTime' is less than @'System.DateTime.MinValue' or greater than @'System.DateTime.MaxValue'.
- uid: System.DateTime.op_Equality(System.DateTime,System.DateTime)
  id: op_Equality(System.DateTime,System.DateTime)
  parent: System.DateTime
  href: System.DateTime.yml
  name: Equality(DateTime, DateTime)
  fullName: System.DateTime.Equality(System.DateTime, System.DateTime)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1221
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether two specified instances of @'System.DateTime' are equal.
  syntax:
    content: public static bool operator ==(DateTime d1, DateTime d2)
    content.vb: Public Shared Operator =(d1 As Date, d2 As Date) As Boolean
    parameters:
    - id: d1
      type: System.DateTime
      description: The first object to compare.
    - id: d2
      type: System.DateTime
      description: The second object to compare.
    return:
      type: System.Boolean
      description: true if *d1* and *d2* represent the same date and time; otherwise, false.
- uid: System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)
  id: op_GreaterThan(System.DateTime,System.DateTime)
  parent: System.DateTime
  href: System.DateTime.yml
  name: GreaterThan(DateTime, DateTime)
  fullName: System.DateTime.GreaterThan(System.DateTime, System.DateTime)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1237
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether one specified @'System.DateTime' is later than another specified @'System.DateTime'.
  syntax:
    content: public static bool operator>(DateTime t1, DateTime t2)
    content.vb: Public Shared Operator>(t1 As Date, t2 As Date) As Boolean
    parameters:
    - id: t1
      type: System.DateTime
      description: The first object to compare.
    - id: t2
      type: System.DateTime
      description: The second object to compare.
    return:
      type: System.Boolean
      description: true if *t1* is later than *t2*; otherwise, false.
- uid: System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)
  id: op_GreaterThanOrEqual(System.DateTime,System.DateTime)
  parent: System.DateTime
  href: System.DateTime.yml
  name: GreaterThanOrEqual(DateTime, DateTime)
  fullName: System.DateTime.GreaterThanOrEqual(System.DateTime, System.DateTime)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1241
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether one specified @'System.DateTime' represents a date and time that is the same as or later than another specified @'System.DateTime'.
  syntax:
    content: public static bool operator >=(DateTime t1, DateTime t2)
    content.vb: Public Shared Operator >=(t1 As Date, t2 As Date) As Boolean
    parameters:
    - id: t1
      type: System.DateTime
      description: The first object to compare.
    - id: t2
      type: System.DateTime
      description: The second object to compare.
    return:
      type: System.Boolean
      description: true if *t1* is the same as or later than *t2*; otherwise, false.
- uid: System.DateTime.op_Inequality(System.DateTime,System.DateTime)
  id: op_Inequality(System.DateTime,System.DateTime)
  parent: System.DateTime
  href: System.DateTime.yml
  name: Inequality(DateTime, DateTime)
  fullName: System.DateTime.Inequality(System.DateTime, System.DateTime)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1225
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether two specified instances of @'System.DateTime' are not equal.
  syntax:
    content: public static bool operator !=(DateTime d1, DateTime d2)
    content.vb: Public Shared Operator <>(d1 As Date, d2 As Date) As Boolean
    parameters:
    - id: d1
      type: System.DateTime
      description: The first object to compare.
    - id: d2
      type: System.DateTime
      description: The second object to compare.
    return:
      type: System.Boolean
      description: true if *d1* and *d2* do not represent the same date and time; otherwise, false.
- uid: System.DateTime.op_LessThan(System.DateTime,System.DateTime)
  id: op_LessThan(System.DateTime,System.DateTime)
  parent: System.DateTime
  href: System.DateTime.yml
  name: LessThan(DateTime, DateTime)
  fullName: System.DateTime.LessThan(System.DateTime, System.DateTime)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1229
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether one specified @'System.DateTime' is earlier than another specified @'System.DateTime'.
  syntax:
    content: public static bool operator <(DateTime t1, DateTime t2)
    content.vb: Public Shared Operator <(t1 As Date, t2 As Date) As Boolean
    parameters:
    - id: t1
      type: System.DateTime
      description: The first object to compare.
    - id: t2
      type: System.DateTime
      description: The second object to compare.
    return:
      type: System.Boolean
      description: true if *t1* is earlier than *t2*; otherwise, false.
- uid: System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)
  id: op_LessThanOrEqual(System.DateTime,System.DateTime)
  parent: System.DateTime
  href: System.DateTime.yml
  name: LessThanOrEqual(DateTime, DateTime)
  fullName: System.DateTime.LessThanOrEqual(System.DateTime, System.DateTime)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1233
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether one specified @'System.DateTime' represents a date and time that is the same as or earlier than another specified @'System.DateTime'.
  syntax:
    content: public static bool operator <=(DateTime t1, DateTime t2)
    content.vb: Public Shared Operator <=(t1 As Date, t2 As Date) As Boolean
    parameters:
    - id: t1
      type: System.DateTime
      description: The first object to compare.
    - id: t2
      type: System.DateTime
      description: The second object to compare.
    return:
      type: System.Boolean
      description: true if *t1* is the same as or earlier than *t2*; otherwise, false.
- uid: System.DateTime.op_Subtraction(System.DateTime,System.DateTime)
  id: op_Subtraction(System.DateTime,System.DateTime)
  parent: System.DateTime
  href: System.DateTime.yml
  name: Subtraction(DateTime, DateTime)
  fullName: System.DateTime.Subtraction(System.DateTime, System.DateTime)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1217
  assemblies:
  - System.Runtime
  namespace: System
  summary: Subtracts a specified date and time from another specified date and time and returns a time interval.
  syntax:
    content: public static TimeSpan operator -(DateTime d1, DateTime d2)
    content.vb: Public Shared Operator -(d1 As Date, d2 As Date) As TimeSpan
    parameters:
    - id: d1
      type: System.DateTime
      description: The date and time value to subtract from (the minuend).
    - id: d2
      type: System.DateTime
      description: The date and time value to subtract (the subtrahend).
    return:
      type: System.TimeSpan
      description: The time interval between *d1* and *d2*; that is, *d1* minus *d2*.
- uid: System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)
  id: op_Subtraction(System.DateTime,System.TimeSpan)
  parent: System.DateTime
  href: System.DateTime.yml
  name: Subtraction(DateTime, TimeSpan)
  fullName: System.DateTime.Subtraction(System.DateTime, System.TimeSpan)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1208
  assemblies:
  - System.Runtime
  namespace: System
  summary: Subtracts a specified time interval from a specified date and time and returns a new date and time.
  syntax:
    content: public static DateTime operator -(DateTime d, TimeSpan t)
    content.vb: Public Shared Operator -(d As Date, t As TimeSpan) As Date
    parameters:
    - id: d
      type: System.DateTime
      description: The date and time value to subtract from.
    - id: t
      type: System.TimeSpan
      description: The time interval to subtract.
    return:
      type: System.DateTime
      description: An object whose value is the value of *d* minus the value of *t*.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The resulting @'System.DateTime' is less than @'System.DateTime.MinValue' or greater than @'System.DateTime.MaxValue'.
- uid: System.DateTime.Parse(System.String)
  id: Parse(System.String)
  parent: System.DateTime
  href: System.DateTime.yml
  name: Parse(String)
  fullName: System.DateTime.Parse(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1014
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the string representation of a date and time to its @'System.DateTime' equivalent.
  syntax:
    content: public static DateTime Parse(string s)
    content.vb: Public Shared Function Parse(s As String) As Date
    parameters:
    - id: s
      type: System.String
      description: A string that contains a date and time to convert.
    return:
      type: System.DateTime
      description: An object that is equivalent to the date and time contained in *s*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*s* is null.'
  - type: System.FormatException
    description: '*s* does not contain a valid string representation of a date and time.'
- uid: System.DateTime.Parse(System.String,System.IFormatProvider)
  id: Parse(System.String,System.IFormatProvider)
  parent: System.DateTime
  href: System.DateTime.yml
  name: Parse(String, IFormatProvider)
  fullName: System.DateTime.Parse(System.String, System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1022
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the string representation of a date and time to its @'System.DateTime' equivalent by using culture-specific format information.
  syntax:
    content: public static DateTime Parse(string s, IFormatProvider provider)
    content.vb: Public Shared Function Parse(s As String, provider As IFormatProvider) As Date
    parameters:
    - id: s
      type: System.String
      description: A string that contains a date and time to convert.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific format information about *s*.
    return:
      type: System.DateTime
      description: An object that is equivalent to the date and time contained in *s* as specified by *provider*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*s* is null.'
  - type: System.FormatException
    description: '*s* does not contain a valid string representation of a date and time.'
- uid: System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  id: Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTime
  href: System.DateTime.yml
  name: Parse(String, IFormatProvider, DateTimeStyles)
  fullName: System.DateTime.Parse(System.String, System.IFormatProvider, System.Globalization.DateTimeStyles)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1026
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the string representation of a date and time to its @'System.DateTime' equivalent by using culture-specific format information and formatting style.
  syntax:
    content: public static DateTime Parse(string s, IFormatProvider provider, DateTimeStyles styles)
    content.vb: Public Shared Function Parse(s As String, provider As IFormatProvider, styles As DateTimeStyles) As Date
    parameters:
    - id: s
      type: System.String
      description: A string that contains a date and time to convert.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information about *s*.
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: A bitwise combination of the enumeration values that indicates the style elements that can be present in *s* for the parse operation to succeed, and that defines how to interpret the parsed date in relation to the current time zone or the current date. A typical value to specify is @'System.Globalization.DateTimeStyles.None'.
    return:
      type: System.DateTime
      description: An object that is equivalent to the date and time contained in *s*, as specified by *provider* and *styles*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*s* is null.'
  - type: System.FormatException
    description: '*s* does not contain a valid string representation of a date and time.'
  - type: System.ArgumentException
    description: '*styles* contains an invalid combination of @''System.Globalization.DateTimeStyles'' values. For example, both @''System.Globalization.DateTimeStyles.AssumeLocal'' and @''System.Globalization.DateTimeStyles.AssumeUniversal''.'
- uid: System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)
  id: ParseExact(System.String,System.String,System.IFormatProvider)
  parent: System.DateTime
  href: System.DateTime.yml
  name: ParseExact(String, String, IFormatProvider)
  fullName: System.DateTime.ParseExact(System.String, System.String, System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1035
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the specified string representation of a date and time to its @'System.DateTime' equivalent using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.
  syntax:
    content: public static DateTime ParseExact(string s, string format, IFormatProvider provider)
    content.vb: Public Shared Function ParseExact(s As String, format As String, provider As IFormatProvider) As Date
    parameters:
    - id: s
      type: System.String
      description: A string that contains a date and time to convert.
    - id: format
      type: System.String
      description: A format specifier that defines the required format of *s*. For more information, see the Remarks section.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific format information about *s*.
    return:
      type: System.DateTime
      description: An object that is equivalent to the date and time contained in *s*, as specified by *format* and *provider*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*s* or *format* is null.'
  - type: System.FormatException
    description: '*s* or *format* is an empty string. -or- *s* does not contain a date and time that corresponds to the pattern specified in *format*. -or-The hour component and the AM/PM designator in *s* do not agree.'
- uid: System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  id: ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTime
  href: System.DateTime.yml
  name: ParseExact(String, String, IFormatProvider, DateTimeStyles)
  fullName: System.DateTime.ParseExact(System.String, System.String, System.IFormatProvider, System.Globalization.DateTimeStyles)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1043
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the specified string representation of a date and time to its @'System.DateTime' equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly or an exception is thrown.
  syntax:
    content: public static DateTime ParseExact(string s, string format, IFormatProvider provider, DateTimeStyles style)
    content.vb: Public Shared Function ParseExact(s As String, format As String, provider As IFormatProvider, style As DateTimeStyles) As Date
    parameters:
    - id: s
      type: System.String
      description: A string containing a date and time to convert.
    - id: format
      type: System.String
      description: A format specifier that defines the required format of *s*. For more information, see the Remarks section.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information about *s*.
    - id: style
      type: System.Globalization.DateTimeStyles
      description: A bitwise combination of the enumeration values that provides additional information about *s*, about style elements that may be present in *s*, or about the conversion from *s* to a @'System.DateTime' value. A typical value to specify is @'System.Globalization.DateTimeStyles.None'.
    return:
      type: System.DateTime
      description: An object that is equivalent to the date and time contained in *s*, as specified by *format*, *provider*, and *style*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*s* or *format* is null.'
  - type: System.FormatException
    description: '*s* or *format* is an empty string. -or- *s* does not contain a date and time that corresponds to the pattern specified in *format*. -or-The hour component and the AM/PM designator in *s* do not agree.'
  - type: System.ArgumentException
    description: '*style* contains an invalid combination of @''System.Globalization.DateTimeStyles'' values. For example, both @''System.Globalization.DateTimeStyles.AssumeLocal'' and @''System.Globalization.DateTimeStyles.AssumeUniversal''.'
- uid: System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  id: ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTime
  href: System.DateTime.yml
  name: ParseExact(String, String[], IFormatProvider, DateTimeStyles)
  name.vb: ParseExact(String, String(), IFormatProvider, DateTimeStyles)
  fullName: System.DateTime.ParseExact(System.String, System.String[], System.IFormatProvider, System.Globalization.DateTimeStyles)
  fullName.vb: System.DateTime.ParseExact(System.String, System.String(), System.IFormatProvider, System.Globalization.DateTimeStyles)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1048
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the specified string representation of a date and time to its @'System.DateTime' equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match at least one of the specified formats exactly or an exception is thrown.
  syntax:
    content: public static DateTime ParseExact(string s, string[] formats, IFormatProvider provider, DateTimeStyles style)
    content.vb: Public Shared Function ParseExact(s As String, formats As String(), provider As IFormatProvider, style As DateTimeStyles) As Date
    parameters:
    - id: s
      type: System.String
      description: A string that contains a date and time to convert.
    - id: formats
      type: System.String[]
      description: An array of allowable formats of *s*. For more information, see the Remarks section.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific format information about *s*.
    - id: style
      type: System.Globalization.DateTimeStyles
      description: A bitwise combination of enumeration values that indicates the permitted format of *s*. A typical value to specify is @'System.Globalization.DateTimeStyles.None'.
    return:
      type: System.DateTime
      description: An object that is equivalent to the date and time contained in *s*, as specified by *formats*, *provider*, and *style*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*s* or *formats* is null.'
  - type: System.FormatException
    description: '*s* is an empty string. -or- an element of *formats* is an empty string. -or- *s* does not contain a date and time that corresponds to any element of *formats*. -or-The hour component and the AM/PM designator in *s* do not agree.'
  - type: System.ArgumentException
    description: '*style* contains an invalid combination of @''System.Globalization.DateTimeStyles'' values. For example, both @''System.Globalization.DateTimeStyles.AssumeLocal'' and @''System.Globalization.DateTimeStyles.AssumeUniversal''.'
- uid: System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)
  id: SpecifyKind(System.DateTime,System.DateTimeKind)
  parent: System.DateTime
  href: System.DateTime.yml
  name: SpecifyKind(DateTime, DateTimeKind)
  fullName: System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 702
  assemblies:
  - System.Runtime
  namespace: System
  summary: Creates a new @'System.DateTime' object that has the same number of ticks as the specified @'System.DateTime', but is designated as either local time, Coordinated Universal Time (UTC), or neither, as indicated by the specified @'System.DateTimeKind' value.
  syntax:
    content: public static DateTime SpecifyKind(DateTime value, DateTimeKind kind)
    content.vb: Public Shared Function SpecifyKind(value As Date, kind As DateTimeKind) As Date
    parameters:
    - id: value
      type: System.DateTime
      description: A date and time.
    - id: kind
      type: System.DateTimeKind
      description: One of the enumeration values that indicates whether the new object represents local time, UTC, or neither.
    return:
      type: System.DateTime
      description: A new object that has the same number of ticks as the object represented by the *value* parameter and the @'System.DateTimeKind' value specified by the *kind* parameter.
- uid: System.DateTime.Subtract(System.DateTime)
  id: Subtract(System.DateTime)
  parent: System.DateTime
  href: System.DateTime.yml
  name: Subtract(DateTime)
  fullName: System.DateTime.Subtract(System.DateTime)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1053
  assemblies:
  - System.Runtime
  namespace: System
  summary: Subtracts the specified date and time from this instance.
  syntax:
    content: public TimeSpan Subtract(DateTime value)
    content.vb: Public Function Subtract(value As Date) As TimeSpan
    parameters:
    - id: value
      type: System.DateTime
      description: The date and time value to subtract.
    return:
      type: System.TimeSpan
      description: A time interval that is equal to the date and time represented by this instance minus the date and time represented by *value*.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The result is less than @'System.DateTime.MinValue' or greater than @'System.DateTime.MaxValue'.
- uid: System.DateTime.Subtract(System.TimeSpan)
  id: Subtract(System.TimeSpan)
  parent: System.DateTime
  href: System.DateTime.yml
  name: Subtract(TimeSpan)
  fullName: System.DateTime.Subtract(System.TimeSpan)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1057
  assemblies:
  - System.Runtime
  namespace: System
  summary: Subtracts the specified duration from this instance.
  syntax:
    content: public DateTime Subtract(TimeSpan value)
    content.vb: Public Function Subtract(value As TimeSpan) As Date
    parameters:
    - id: value
      type: System.TimeSpan
      description: The time interval to subtract.
    return:
      type: System.DateTime
      description: An object that is equal to the date and time represented by this instance minus the time interval represented by *value*.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The result is less than @'System.DateTime.MinValue' or greater than @'System.DateTime.MaxValue'.
- uid: System.DateTime.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  parent: System.DateTime
  href: System.DateTime.yml
  name: IComparable.CompareTo(Object)
  name.vb: System.IComparable.CompareTo(Object)
  fullName: System.DateTime.System.IComparable.CompareTo(System.Object)
  type: Method
  source:
    remote: &o1
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 464
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: int IComparable.CompareTo(object value)
    content.vb: Function System.IComparable.CompareTo(value As Object) As Integer Implements IComparable.CompareTo
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
- uid: System.DateTime.System#IConvertible#GetTypeCode
  id: System#IConvertible#GetTypeCode
  parent: System.DateTime
  href: System.DateTime.yml
  name: IConvertible.GetTypeCode()
  name.vb: System.IConvertible.GetTypeCode()
  fullName: System.DateTime.System.IConvertible.GetTypeCode()
  type: Method
  source:
    remote: *o1
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 465
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: TypeCode IConvertible.GetTypeCode()
    content.vb: Function System.IConvertible.GetTypeCode As TypeCode Implements IConvertible.GetTypeCode
    return:
      type: System.TypeCode
- uid: System.DateTime.System#IConvertible#ToBoolean(System.IFormatProvider)
  id: System#IConvertible#ToBoolean(System.IFormatProvider)
  parent: System.DateTime
  href: System.DateTime.yml
  name: IConvertible.ToBoolean(IFormatProvider)
  name.vb: System.IConvertible.ToBoolean(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToBoolean(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1293
  assemblies:
  - System.Runtime
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an @'System.InvalidCastException'.
  syntax:
    content: bool IConvertible.ToBoolean(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToBoolean(provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the @'System.IFormatProvider' interface. (This parameter is not used; specify null.)
    return:
      type: System.Boolean
      description: The return value for this member is not used.
  exceptions:
  - type: System.InvalidCastException
    description: In all cases.
- uid: System.DateTime.System#IConvertible#ToByte(System.IFormatProvider)
  id: System#IConvertible#ToByte(System.IFormatProvider)
  parent: System.DateTime
  href: System.DateTime.yml
  name: IConvertible.ToByte(IFormatProvider)
  name.vb: System.IConvertible.ToByte(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToByte(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1308
  assemblies:
  - System.Runtime
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an @'System.InvalidCastException'.
  syntax:
    content: byte IConvertible.ToByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToByte(provider As IFormatProvider) As Byte Implements IConvertible.ToByte
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the @'System.IFormatProvider' interface. (This parameter is not used; specify null.)
    return:
      type: System.Byte
      description: The return value for this member is not used.
  exceptions:
  - type: System.InvalidCastException
    description: In all cases.
- uid: System.DateTime.System#IConvertible#ToChar(System.IFormatProvider)
  id: System#IConvertible#ToChar(System.IFormatProvider)
  parent: System.DateTime
  href: System.DateTime.yml
  name: IConvertible.ToChar(IFormatProvider)
  name.vb: System.IConvertible.ToChar(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToChar(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1298
  assemblies:
  - System.Runtime
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an @'System.InvalidCastException'.
  syntax:
    content: char IConvertible.ToChar(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToChar(provider As IFormatProvider) As Char Implements IConvertible.ToChar
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the @'System.IFormatProvider' interface. (This parameter is not used; specify null.)
    return:
      type: System.Char
      description: The return value for this member is not used.
  exceptions:
  - type: System.InvalidCastException
    description: In all cases.
- uid: System.DateTime.System#IConvertible#ToDateTime(System.IFormatProvider)
  id: System#IConvertible#ToDateTime(System.IFormatProvider)
  parent: System.DateTime
  href: System.DateTime.yml
  name: IConvertible.ToDateTime(IFormatProvider)
  name.vb: System.IConvertible.ToDateTime(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToDateTime(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1358
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns the current @'System.DateTime' object.
  syntax:
    content: DateTime IConvertible.ToDateTime(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDateTime(provider As IFormatProvider) As Date Implements IConvertible.ToDateTime
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the @'System.IFormatProvider' interface. (This parameter is not used; specify null.)
    return:
      type: System.DateTime
      description: The current object.
- uid: System.DateTime.System#IConvertible#ToDecimal(System.IFormatProvider)
  id: System#IConvertible#ToDecimal(System.IFormatProvider)
  parent: System.DateTime
  href: System.DateTime.yml
  name: IConvertible.ToDecimal(IFormatProvider)
  name.vb: System.IConvertible.ToDecimal(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToDecimal(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1353
  assemblies:
  - System.Runtime
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an @'System.InvalidCastException'.
  syntax:
    content: decimal IConvertible.ToDecimal(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDecimal(provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the @'System.IFormatProvider' interface. (This parameter is not used; specify null.)
    return:
      type: System.Decimal
      description: The return value for this member is not used.
  exceptions:
  - type: System.InvalidCastException
    description: In all cases.
- uid: System.DateTime.System#IConvertible#ToDouble(System.IFormatProvider)
  id: System#IConvertible#ToDouble(System.IFormatProvider)
  parent: System.DateTime
  href: System.DateTime.yml
  name: IConvertible.ToDouble(IFormatProvider)
  name.vb: System.IConvertible.ToDouble(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToDouble(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1348
  assemblies:
  - System.Runtime
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an @'System.InvalidCastException'.
  syntax:
    content: double IConvertible.ToDouble(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDouble(provider As IFormatProvider) As Double Implements IConvertible.ToDouble
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the @'System.IFormatProvider' interface. (This parameter is not used; specify null.)
    return:
      type: System.Double
      description: The return value for this member is not used.
  exceptions:
  - type: System.InvalidCastException
    description: In all cases.
- uid: System.DateTime.System#IConvertible#ToInt16(System.IFormatProvider)
  id: System#IConvertible#ToInt16(System.IFormatProvider)
  parent: System.DateTime
  href: System.DateTime.yml
  name: IConvertible.ToInt16(IFormatProvider)
  name.vb: System.IConvertible.ToInt16(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToInt16(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1313
  assemblies:
  - System.Runtime
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an @'System.InvalidCastException'.
  syntax:
    content: short IConvertible.ToInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt16(provider As IFormatProvider) As Short Implements IConvertible.ToInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the @'System.IFormatProvider' interface. (This parameter is not used; specify null.)
    return:
      type: System.Int16
      description: The return value for this member is not used.
  exceptions:
  - type: System.InvalidCastException
    description: In all cases.
- uid: System.DateTime.System#IConvertible#ToInt32(System.IFormatProvider)
  id: System#IConvertible#ToInt32(System.IFormatProvider)
  parent: System.DateTime
  href: System.DateTime.yml
  name: IConvertible.ToInt32(IFormatProvider)
  name.vb: System.IConvertible.ToInt32(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToInt32(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1323
  assemblies:
  - System.Runtime
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an @'System.InvalidCastException'.
  syntax:
    content: int IConvertible.ToInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt32(provider As IFormatProvider) As Integer Implements IConvertible.ToInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the @'System.IFormatProvider' interface. (This parameter is not used; specify null.)
    return:
      type: System.Int32
      description: The return value for this member is not used.
  exceptions:
  - type: System.InvalidCastException
    description: In all cases.
- uid: System.DateTime.System#IConvertible#ToInt64(System.IFormatProvider)
  id: System#IConvertible#ToInt64(System.IFormatProvider)
  parent: System.DateTime
  href: System.DateTime.yml
  name: IConvertible.ToInt64(IFormatProvider)
  name.vb: System.IConvertible.ToInt64(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToInt64(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1333
  assemblies:
  - System.Runtime
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an @'System.InvalidCastException'.
  syntax:
    content: long IConvertible.ToInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt64(provider As IFormatProvider) As Long Implements IConvertible.ToInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the @'System.IFormatProvider' interface. (This parameter is not used; specify null.)
    return:
      type: System.Int64
      description: The return value for this member is not used.
  exceptions:
  - type: System.InvalidCastException
    description: In all cases.
- uid: System.DateTime.System#IConvertible#ToSByte(System.IFormatProvider)
  id: System#IConvertible#ToSByte(System.IFormatProvider)
  parent: System.DateTime
  href: System.DateTime.yml
  name: IConvertible.ToSByte(IFormatProvider)
  name.vb: System.IConvertible.ToSByte(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToSByte(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1303
  assemblies:
  - System.Runtime
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an @'System.InvalidCastException'.
  syntax:
    content: sbyte IConvertible.ToSByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSByte(provider As IFormatProvider) As SByte Implements IConvertible.ToSByte
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the @'System.IFormatProvider' interface. (This parameter is not used; specify null.)
    return:
      type: System.SByte
      description: The return value for this member is not used.
  exceptions:
  - type: System.InvalidCastException
    description: In all cases.
- uid: System.DateTime.System#IConvertible#ToSingle(System.IFormatProvider)
  id: System#IConvertible#ToSingle(System.IFormatProvider)
  parent: System.DateTime
  href: System.DateTime.yml
  name: IConvertible.ToSingle(IFormatProvider)
  name.vb: System.IConvertible.ToSingle(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToSingle(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1343
  assemblies:
  - System.Runtime
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an @'System.InvalidCastException'.
  syntax:
    content: float IConvertible.ToSingle(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSingle(provider As IFormatProvider) As Single Implements IConvertible.ToSingle
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the @'System.IFormatProvider' interface. (This parameter is not used; specify null.)
    return:
      type: System.Single
      description: The return value for this member is not used.
  exceptions:
  - type: System.InvalidCastException
    description: In all cases.
- uid: System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  id: System#IConvertible#ToType(System.Type,System.IFormatProvider)
  parent: System.DateTime
  href: System.DateTime.yml
  name: IConvertible.ToType(Type, IFormatProvider)
  name.vb: System.IConvertible.ToType(Type, IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToType(System.Type, System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1363
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the current @'System.DateTime' object to an object of a specified type.
  syntax:
    content: object IConvertible.ToType(Type type, IFormatProvider provider)
    content.vb: Function System.IConvertible.ToType(type As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType
    parameters:
    - id: type
      type: System.Type
      description: The desired type.
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the @'System.IFormatProvider' interface. (This parameter is not used; specify null.)
    return:
      type: System.Object
      description: An object of the type specified by the *type* parameter, with a value equivalent to the current @'System.DateTime' object.
  exceptions:
  - type: System.ArgumentNullException
    description: '*type* is null.'
  - type: System.InvalidCastException
    description: This conversion is not supported for the @'System.DateTime' type.
- uid: System.DateTime.System#IConvertible#ToUInt16(System.IFormatProvider)
  id: System#IConvertible#ToUInt16(System.IFormatProvider)
  parent: System.DateTime
  href: System.DateTime.yml
  name: IConvertible.ToUInt16(IFormatProvider)
  name.vb: System.IConvertible.ToUInt16(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToUInt16(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1318
  assemblies:
  - System.Runtime
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an @'System.InvalidCastException'.
  syntax:
    content: ushort IConvertible.ToUInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt16(provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the @'System.IFormatProvider' interface. (This parameter is not used; specify null.)
    return:
      type: System.UInt16
      description: The return value for this member is not used.
  exceptions:
  - type: System.InvalidCastException
    description: In all cases.
- uid: System.DateTime.System#IConvertible#ToUInt32(System.IFormatProvider)
  id: System#IConvertible#ToUInt32(System.IFormatProvider)
  parent: System.DateTime
  href: System.DateTime.yml
  name: IConvertible.ToUInt32(IFormatProvider)
  name.vb: System.IConvertible.ToUInt32(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToUInt32(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1328
  assemblies:
  - System.Runtime
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an @'System.InvalidCastException'.
  syntax:
    content: uint IConvertible.ToUInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt32(provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the @'System.IFormatProvider' interface. (This parameter is not used; specify null.)
    return:
      type: System.UInt32
      description: The return value for this member is not used.
  exceptions:
  - type: System.InvalidCastException
    description: In all cases.
- uid: System.DateTime.System#IConvertible#ToUInt64(System.IFormatProvider)
  id: System#IConvertible#ToUInt64(System.IFormatProvider)
  parent: System.DateTime
  href: System.DateTime.yml
  name: IConvertible.ToUInt64(IFormatProvider)
  name.vb: System.IConvertible.ToUInt64(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToUInt64(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1338
  assemblies:
  - System.Runtime
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an @'System.InvalidCastException'.
  syntax:
    content: ulong IConvertible.ToUInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt64(provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the @'System.IFormatProvider' interface. (This parameter is not used; specify null.)
    return:
      type: System.UInt64
      description: The return value for this member is not used.
  exceptions:
  - type: System.InvalidCastException
    description: In all cases.
- uid: System.DateTime.ToBinary
  id: ToBinary
  parent: System.DateTime
  href: System.DateTime.yml
  name: ToBinary()
  fullName: System.DateTime.ToBinary()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 706
  assemblies:
  - System.Runtime
  namespace: System
  summary: Serializes the current @'System.DateTime' object to a 64-bit binary value that subsequently can be used to recreate the @'System.DateTime' object.
  syntax:
    content: public long ToBinary()
    content.vb: Public Function ToBinary As Long
    return:
      type: System.Int64
      description: A 64-bit signed integer that encodes the @'System.DateTime.Kind' and @'System.DateTime.Ticks' properties.
- uid: System.DateTime.ToFileTime
  id: ToFileTime
  parent: System.DateTime
  href: System.DateTime.yml
  name: ToFileTime()
  fullName: System.DateTime.ToFileTime()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1090
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of the current @'System.DateTime' object to a Windows file time.
  syntax:
    content: public long ToFileTime()
    content.vb: Public Function ToFileTime As Long
    return:
      type: System.Int64
      description: The value of the current @'System.DateTime' object expressed as a Windows file time.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E. UTC.
- uid: System.DateTime.ToFileTimeUtc
  id: ToFileTimeUtc
  parent: System.DateTime
  href: System.DateTime.yml
  name: ToFileTimeUtc()
  fullName: System.DateTime.ToFileTimeUtc()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1095
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of the current @'System.DateTime' object to a Windows file time.
  syntax:
    content: public long ToFileTimeUtc()
    content.vb: Public Function ToFileTimeUtc As Long
    return:
      type: System.Int64
      description: The value of the current @'System.DateTime' object expressed as a Windows file time.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E. UTC.
- uid: System.DateTime.ToLocalTime
  id: ToLocalTime
  parent: System.DateTime
  href: System.DateTime.yml
  name: ToLocalTime()
  fullName: System.DateTime.ToLocalTime()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1105
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of the current @'System.DateTime' object to local time.
  syntax:
    content: public DateTime ToLocalTime()
    content.vb: Public Function ToLocalTime As Date
    return:
      type: System.DateTime
      description: An object whose @'System.DateTime.Kind' property is @'System.DateTimeKind.Local', and whose value is the local time equivalent to the value of the current @'System.DateTime' object, or @'System.DateTime.MaxValue' if the converted value is too large to be represented by a @'System.DateTime' object, or @'System.DateTime.MinValue' if the converted value is too small to be represented as a @'System.DateTime' object.
- uid: System.DateTime.ToString
  id: ToString
  parent: System.DateTime
  href: System.DateTime.yml
  name: ToString()
  fullName: System.DateTime.ToString()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1156
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of the current @'System.DateTime' object to its equivalent string representation using the formatting conventions of the current culture.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string representation of the value of the current @'System.DateTime' object.
  overridden: System.ValueType.ToString
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The date and time is outside the range of dates supported by the calendar used by the current culture.
- uid: System.DateTime.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.DateTime
  href: System.DateTime.yml
  name: ToString(IFormatProvider)
  fullName: System.DateTime.ToString(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1166
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of the current @'System.DateTime' object to its equivalent string representation using the specified culture-specific format information.
  syntax:
    content: public string ToString(IFormatProvider provider)
    content.vb: Public Function ToString(provider As IFormatProvider) As String
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.String
      description: A string representation of value of the current @'System.DateTime' object as specified by *provider*.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The date and time is outside the range of dates supported by the calendar used by *provider*.
- uid: System.DateTime.ToString(System.String)
  id: ToString(System.String)
  parent: System.DateTime
  href: System.DateTime.yml
  name: ToString(String)
  fullName: System.DateTime.ToString(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1161
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of the current @'System.DateTime' object to its equivalent string representation using the specified format and the formatting conventions of the current culture.
  syntax:
    content: public string ToString(string format)
    content.vb: Public Function ToString(format As String) As String
    parameters:
    - id: format
      type: System.String
      description: A standard or custom date and time format string (see Remarks).
    return:
      type: System.String
      description: A string representation of value of the current @'System.DateTime' object as specified by *format*.
  exceptions:
  - type: System.FormatException
    description: The length of *format* is 1, and it is not one of the format specifier characters defined for @'System.Globalization.DateTimeFormatInfo'.-or- *format* does not contain a valid custom format pattern.
  - type: System.ArgumentOutOfRangeException
    description: The date and time is outside the range of dates supported by the calendar used by the current culture.
- uid: System.DateTime.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.DateTime
  href: System.DateTime.yml
  name: ToString(String, IFormatProvider)
  fullName: System.DateTime.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1171
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of the current @'System.DateTime' object to its equivalent string representation using the specified format and culture-specific format information.
  syntax:
    content: public string ToString(string format, IFormatProvider provider)
    content.vb: Public Function ToString(format As String, provider As IFormatProvider) As String
    parameters:
    - id: format
      type: System.String
      description: A standard or custom date and time format string.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.String
      description: A string representation of value of the current @'System.DateTime' object as specified by *format* and *provider*.
  exceptions:
  - type: System.FormatException
    description: The length of *format* is 1, and it is not one of the format specifier characters defined for @'System.Globalization.DateTimeFormatInfo'.-or- *format* does not contain a valid custom format pattern.
  - type: System.ArgumentOutOfRangeException
    description: The date and time is outside the range of dates supported by the calendar used by *provider*.
- uid: System.DateTime.ToUniversalTime
  id: ToUniversalTime
  parent: System.DateTime
  href: System.DateTime.yml
  name: ToUniversalTime()
  fullName: System.DateTime.ToUniversalTime()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1176
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of the current @'System.DateTime' object to Coordinated Universal Time (UTC).
  syntax:
    content: public DateTime ToUniversalTime()
    content.vb: Public Function ToUniversalTime As Date
    return:
      type: System.DateTime
      description: An object whose @'System.DateTime.Kind' property is @'System.DateTimeKind.Utc', and whose value is the UTC equivalent to the value of the current @'System.DateTime' object, or @'System.DateTime.MaxValue' if the converted value is too large to be represented by a @'System.DateTime' object, or @'System.DateTime.MinValue' if the converted value is too small to be represented by a @'System.DateTime' object.
- uid: System.DateTime.TryParse(System.String,System.DateTime@)
  id: TryParse(System.String,System.DateTime@)
  parent: System.DateTime
  href: System.DateTime.yml
  name: TryParse(String, out DateTime)
  name.vb: TryParse(String, ByRef DateTime)
  fullName: System.DateTime.TryParse(System.String, out System.DateTime)
  fullName.vb: System.DateTime.TryParse(System.String, ByRef System.DateTime)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1180
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the specified string representation of a date and time to its @'System.DateTime' equivalent and returns a value that indicates whether the conversion succeeded.
  syntax:
    content: public static bool TryParse(string s, out DateTime result)
    content.vb: Public Shared Function TryParse(s As String, ByRef result As Date) As Boolean
    parameters:
    - id: s
      type: System.String
      description: A string containing a date and time to convert.
    - id: result
      type: System.DateTime
      description: When this method returns, contains the @'System.DateTime' value equivalent to the date and time contained in *s*, if the conversion succeeded, or @'System.DateTime.MinValue' if the conversion failed. The conversion fails if the *s* parameter is null, is an empty string (""), or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: true if the *s* parameter was converted successfully; otherwise, false.
- uid: System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  id: TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  parent: System.DateTime
  href: System.DateTime.yml
  name: TryParse(String, IFormatProvider, DateTimeStyles, out DateTime)
  name.vb: TryParse(String, IFormatProvider, DateTimeStyles, ByRef DateTime)
  fullName: System.DateTime.TryParse(System.String, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)
  fullName.vb: System.DateTime.TryParse(System.String, System.IFormatProvider, System.Globalization.DateTimeStyles, ByRef System.DateTime)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1184
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the specified string representation of a date and time to its @'System.DateTime' equivalent using the specified culture-specific format information and formatting style, and returns a value that indicates whether the conversion succeeded.
  syntax:
    content: public static bool TryParse(string s, IFormatProvider provider, DateTimeStyles styles, out DateTime result)
    content.vb: Public Shared Function TryParse(s As String, provider As IFormatProvider, styles As DateTimeStyles, ByRef result As Date) As Boolean
    parameters:
    - id: s
      type: System.String
      description: A string containing a date and time to convert.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information about *s*.
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: A bitwise combination of enumeration values that defines how to interpret the parsed date in relation to the current time zone or the current date. A typical value to specify is @'System.Globalization.DateTimeStyles.None'.
    - id: result
      type: System.DateTime
      description: When this method returns, contains the @'System.DateTime' value equivalent to the date and time contained in *s*, if the conversion succeeded, or @'System.DateTime.MinValue' if the conversion failed. The conversion fails if the *s* parameter is null, is an empty string (""), or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: true if the *s* parameter was converted successfully; otherwise, false.
  exceptions:
  - type: System.ArgumentException
    description: '*styles* is not a valid @''System.Globalization.DateTimeStyles'' value.-or-*styles* contains an invalid combination of @''System.Globalization.DateTimeStyles'' values (for example, both @''System.Globalization.DateTimeStyles.AssumeLocal'' and @''System.Globalization.DateTimeStyles.AssumeUniversal'').'
  - type: System.NotSupportedException
    description: '*provider* is a neutral culture and cannot be used in a parsing operation.'
- uid: System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  id: TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  parent: System.DateTime
  href: System.DateTime.yml
  name: TryParseExact(String, String, IFormatProvider, DateTimeStyles, out DateTime)
  name.vb: TryParseExact(String, String, IFormatProvider, DateTimeStyles, ByRef DateTime)
  fullName: System.DateTime.TryParseExact(System.String, System.String, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)
  fullName.vb: System.DateTime.TryParseExact(System.String, System.String, System.IFormatProvider, System.Globalization.DateTimeStyles, ByRef System.DateTime)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1189
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the specified string representation of a date and time to its @'System.DateTime' equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly. The method returns a value that indicates whether the conversion succeeded.
  syntax:
    content: public static bool TryParseExact(string s, string format, IFormatProvider provider, DateTimeStyles style, out DateTime result)
    content.vb: Public Shared Function TryParseExact(s As String, format As String, provider As IFormatProvider, style As DateTimeStyles, ByRef result As Date) As Boolean
    parameters:
    - id: s
      type: System.String
      description: A string containing a date and time to convert.
    - id: format
      type: System.String
      description: The required format of *s*. See the Remarks section for more information.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information about *s*.
    - id: style
      type: System.Globalization.DateTimeStyles
      description: A bitwise combination of one or more enumeration values that indicate the permitted format of *s*.
    - id: result
      type: System.DateTime
      description: When this method returns, contains the @'System.DateTime' value equivalent to the date and time contained in *s*, if the conversion succeeded, or @'System.DateTime.MinValue' if the conversion failed. The conversion fails if either the *s* or *format* parameter is null, is an empty string, or does not contain a date and time that correspond to the pattern specified in *format*. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: true if *s* was converted successfully; otherwise, false.
  exceptions:
  - type: System.ArgumentException
    description: '*styles* is not a valid @''System.Globalization.DateTimeStyles'' value.-or-*styles* contains an invalid combination of @''System.Globalization.DateTimeStyles'' values (for example, both @''System.Globalization.DateTimeStyles.AssumeLocal'' and @''System.Globalization.DateTimeStyles.AssumeUniversal'').'
- uid: System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  id: TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  parent: System.DateTime
  href: System.DateTime.yml
  name: TryParseExact(String, String[], IFormatProvider, DateTimeStyles, out DateTime)
  name.vb: TryParseExact(String, String(), IFormatProvider, DateTimeStyles, ByRef DateTime)
  fullName: System.DateTime.TryParseExact(System.String, System.String[], System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)
  fullName.vb: System.DateTime.TryParseExact(System.String, System.String(), System.IFormatProvider, System.Globalization.DateTimeStyles, ByRef System.DateTime)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/DateTime.cs
    startLine: 1194
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the specified string representation of a date and time to its @'System.DateTime' equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match at least one of the specified formats exactly. The method returns a value that indicates whether the conversion succeeded.
  syntax:
    content: public static bool TryParseExact(string s, string[] formats, IFormatProvider provider, DateTimeStyles style, out DateTime result)
    content.vb: Public Shared Function TryParseExact(s As String, formats As String(), provider As IFormatProvider, style As DateTimeStyles, ByRef result As Date) As Boolean
    parameters:
    - id: s
      type: System.String
      description: A string that contains a date and time to convert.
    - id: formats
      type: System.String[]
      description: An array of allowable formats of *s*. See the Remarks section for more information.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific format information about *s*.
    - id: style
      type: System.Globalization.DateTimeStyles
      description: A bitwise combination of enumeration values that indicates the permitted format of *s*. A typical value to specify is @'System.Globalization.DateTimeStyles.None'.
    - id: result
      type: System.DateTime
      description: When this method returns, contains the @'System.DateTime' value equivalent to the date and time contained in *s*, if the conversion succeeded, or @'System.DateTime.MinValue' if the conversion failed. The conversion fails if *s* or *formats* is null, *s* or an element of *formats* is an empty string, or the format of *s* is not exactly as specified by at least one of the format patterns in *formats*. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: true if the *s* parameter was converted successfully; otherwise, false.
  exceptions:
  - type: System.ArgumentException
    description: '*styles* is not a valid @''System.Globalization.DateTimeStyles'' value.-or-*styles* contains an invalid combination of @''System.Globalization.DateTimeStyles'' values (for example, both @''System.Globalization.DateTimeStyles.AssumeLocal'' and @''System.Globalization.DateTimeStyles.AssumeUniversal'').'
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.DateTimeKind
  parent: System
  isExternal: false
  href: System.DateTimeKind.yml
  name: DateTimeKind
  fullName: System.DateTimeKind
- uid: System.Int64
  parent: System
  isExternal: false
  href: System.Int64.yml
  name: Int64
  fullName: System.Int64
- uid: System.DateTime
  parent: System
  isExternal: false
  href: System.DateTime.yml
  name: DateTime
  fullName: System.DateTime
- uid: System.DayOfWeek
  parent: System
  isExternal: false
  href: System.DayOfWeek.yml
  name: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.TimeSpan
  parent: System
  isExternal: false
  href: System.TimeSpan.yml
  name: TimeSpan
  fullName: System.TimeSpan
- uid: System.Double
  parent: System
  isExternal: false
  href: System.Double.yml
  name: Double
  fullName: System.Double
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: false
  href: System.ValueType.yml
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    href: System.ValueType.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    href: System.ValueType.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  href: System.ValueType.yml
  name: ValueType
  fullName: System.ValueType
- uid: System.String[]
  isExternal: false
  href: System.String.yml
  name: String[]
  name.vb: String()
  fullName: System.String[]
  fullName.vb: System.String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ()
    fullName: ()
- uid: System.Char
  parent: System
  isExternal: false
  href: System.Char.yml
  name: Char
  fullName: System.Char
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  href: System.IFormatProvider.yml
  name: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  href: System.ValueType.yml
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    href: System.ValueType.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    href: System.ValueType.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
- uid: System.Globalization.DateTimeStyles
  parent: System.Globalization
  isExternal: false
  href: System.Globalization.DateTimeStyles.yml
  name: Globalization.DateTimeStyles
  fullName: System.Globalization.DateTimeStyles
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
- uid: System.TypeCode
  parent: System
  isExternal: false
  href: System.TypeCode.yml
  name: TypeCode
  fullName: System.TypeCode
- uid: System.Byte
  parent: System
  isExternal: false
  href: System.Byte.yml
  name: Byte
  fullName: System.Byte
- uid: System.Decimal
  parent: System
  isExternal: false
  href: System.Decimal.yml
  name: Decimal
  fullName: System.Decimal
- uid: System.Int16
  parent: System
  isExternal: false
  href: System.Int16.yml
  name: Int16
  fullName: System.Int16
- uid: System.SByte
  parent: System
  isExternal: false
  href: System.SByte.yml
  name: SByte
  fullName: System.SByte
- uid: System.Single
  parent: System
  isExternal: false
  href: System.Single.yml
  name: Single
  fullName: System.Single
- uid: System.Type
  parent: System
  isExternal: false
  href: System.Type.yml
  name: Type
  fullName: System.Type
- uid: System.UInt16
  parent: System
  isExternal: false
  href: System.UInt16.yml
  name: UInt16
  fullName: System.UInt16
- uid: System.UInt32
  parent: System
  isExternal: false
  href: System.UInt32.yml
  name: UInt32
  fullName: System.UInt32
- uid: System.UInt64
  parent: System
  isExternal: false
  href: System.UInt64.yml
  name: UInt64
  fullName: System.UInt64
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  href: System.ValueType.yml
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    href: System.ValueType.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    href: System.ValueType.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.FormatException
  parent: System
  isExternal: false
  href: System.FormatException.yml
  name: FormatException
  fullName: System.FormatException
  summary: The exception that is thrown when the format of an argument is invalid, or when a composite format string is not well formed.
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.InvalidCastException
  isExternal: false
  href: System.InvalidCastException.yml
  name: InvalidCastException
  fullName: System.InvalidCastException
  summary: The exception that is thrown for invalid casting or explicit conversion.
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  href: System.NotSupportedException.yml
  name: NotSupportedException
  fullName: System.NotSupportedException
  summary: The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.
