items:
- uid: System.Xml.Serialization.XmlIncludeAttribute
  commentId: T:System.Xml.Serialization.XmlIncludeAttribute
  id: XmlIncludeAttribute
  parent: System.Xml.Serialization
  children:
  - System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)
  - System.Xml.Serialization.XmlIncludeAttribute.Type
  langs:
  - csharp
  - vb
  name: XmlIncludeAttribute
  fullName: System.Xml.Serialization.XmlIncludeAttribute
  type: Class
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlIncludeAttribute
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 157
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Allows the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> to recognize a type when it serializes or deserializes an object.</p>\n"
  remarks: "\n<p>Use the <xref href=\"System.Xml.Serialization.XmlIncludeAttribute\" data-throw-if-not-resolved=\"false\"></xref> when you call the <xref href=\"System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\" data-throw-if-not-resolved=\"false\"></xref> method of the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>When applying the <xref href=\"System.Xml.Serialization.XmlIncludeAttribute\" data-throw-if-not-resolved=\"false\"></xref>, specify the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the derived class. When the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes objects that include both the base and the derived class, it can then recognize both object types.</p>\n<p>You can use the <xref href=\"System.Xml.Serialization.XmlIncludeAttribute\" data-throw-if-not-resolved=\"false\"></xref> to include derived classes in service description documents that are written in the Web Services Description Language (WSDL). For example, if a method returns an <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>, apply the <xref href=\"System.Xml.Serialization.XmlIncludeAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the method and specify the actual types to return.</p>\n<p>For more information on the WSDL, see \"Web Services Description Language (WSDL) 1.1\" at www.w3.org.</p>\n"
  example:
  - "\n<p>The following example shows three classes, two of which inherit from the third. The example applies the <xref href=\"System.Xml.Serialization.XmlIncludeAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a method that returns an instance of one of the derived classes.</p>Classic XmlIncludeAttribute Example#1"
  syntax:
    content: 'public class XmlIncludeAttribute : Attribute'
    content.vb: >-
      Public Class XmlIncludeAttribute
          Inherits Attribute
  seealso:
  - type: System.Xml.Serialization.XmlSerializer
    commentId: T:System.Xml.Serialization.XmlSerializer
  - type: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)
  commentId: M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Xml.Serialization.XmlIncludeAttribute
  langs:
  - csharp
  - vb
  name: XmlIncludeAttribute(Type)
  fullName: System.Xml.Serialization.XmlIncludeAttribute.XmlIncludeAttribute(System.Type)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 160
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlIncludeAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example:
  - "\n<p>The following example shows three classes, two of which inherit from the third. The example applies the <xref href=\"System.Xml.Serialization.XmlIncludeAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a method that returns an instance of one of the two derived classes. The example sets the <xref href=\"System.Xml.Serialization.XmlIncludeAttribute.Type\" data-throw-if-not-resolved=\"false\"></xref> property to the type of the returned object.</p>Classic XmlIncludeAttribute.XmlIncludeAttribute Example#1"
  syntax:
    content: public XmlIncludeAttribute(Type type)
    content.vb: Public Sub New(type As Type)
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the object to include. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlIncludeAttribute.Type
  commentId: P:System.Xml.Serialization.XmlIncludeAttribute.Type
  id: Type
  parent: System.Xml.Serialization.XmlIncludeAttribute
  langs:
  - csharp
  - vb
  name: Type
  fullName: System.Xml.Serialization.XmlIncludeAttribute.Type
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Type
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 161
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets the type of the object to include.</p>\n"
  example:
  - "\n<p>The following example defines a class named <strong>Group</strong>, which contains a field named <strong>Employees</strong> that returns an array of <strong>Employee</strong> objects. The example derives the <strong>Manager</strong> class from the <strong>Employee</strong> class, and applies the <xref href=\"System.Xml.Serialization.XmlIncludeAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the <strong>Employee</strong> class. When the example creates a <strong>Group</strong> object, it inserts a <strong>Manager</strong> object into the <strong>Employee</strong> array. Lastly, the example serializes the <strong>Group</strong> object.</p>Classic XmlIncludeAttribute.Type Example#1"
  syntax:
    content: public Type Type { get; set; }
    content.vb: Public Property Type As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the object to include.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Xml.Serialization
  isExternal: false
  name: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
