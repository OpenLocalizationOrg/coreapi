items:
- uid: System.IO.ErrorEventArgs
  commentId: T:System.IO.ErrorEventArgs
  id: ErrorEventArgs
  parent: System.IO
  children:
  - System.IO.ErrorEventArgs.#ctor(System.Exception)
  - System.IO.ErrorEventArgs.GetException
  langs:
  - csharp
  - vb
  name: ErrorEventArgs
  fullName: System.IO.ErrorEventArgs
  type: Class
  source:
    remote:
      path: src/System.IO.FileSystem.Watcher/src/System/IO/ErrorEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ErrorEventArgs
    path: src/System.IO.FileSystem.Watcher/src/System/IO/ErrorEventArgs.cs
    startLine: 9
  assemblies:
  - System.IO.FileSystem.Watcher
  namespace: System.IO
  summary: "\n<p>Provides data for the <xref href=\"System.IO.FileSystemWatcher.Error\" data-throw-if-not-resolved=\"false\"></xref> event.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.IO.ErrorEventArgs\" data-throw-if-not-resolved=\"false\"></xref> contains the <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref> that caused the <xref href=\"System.IO.FileSystemWatcher.Error\" data-throw-if-not-resolved=\"false\"></xref> event. This class provides the <xref href=\"System.IO.ErrorEventArgs.GetException\" data-throw-if-not-resolved=\"false\"></xref> method to retrieve the exception.</p>\n"
  example:
  - "\n<p>The following example creates a new instance of <xref href=\"System.IO.ErrorEventArgs\" data-throw-if-not-resolved=\"false\"></xref> and initializes it with an <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref>. Then the example calls <xref href=\"System.IO.ErrorEventArgs.GetException\" data-throw-if-not-resolved=\"false\"></xref> to retrieve the <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref> and display the error message. There is no form associated with this code.</p>Classic ErrorEventArgs Example#1<p>The following example shows how to create a FileSystemWatcher to monitor file changes (creates, deletes, renames, changes) occurring on a disk drive. The example also shows how to properly receive error notifications.</p>FileSystemWatcher#1"
  syntax:
    content: 'public class ErrorEventArgs : EventArgs'
    content.vb: >-
      Public Class ErrorEventArgs
          Inherits EventArgs
  seealso:
  - type: System.IO.ErrorEventHandler
    commentId: T:System.IO.ErrorEventHandler
  - type: System.IO.FileSystemWatcher
    commentId: T:System.IO.FileSystemWatcher
  - type: System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)
    commentId: M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.IO.ErrorEventArgs.#ctor(System.Exception)
  commentId: M:System.IO.ErrorEventArgs.#ctor(System.Exception)
  id: '#ctor(System.Exception)'
  parent: System.IO.ErrorEventArgs
  langs:
  - csharp
  - vb
  name: ErrorEventArgs(Exception)
  fullName: System.IO.ErrorEventArgs.ErrorEventArgs(System.Exception)
  type: Constructor
  source:
    remote:
      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs
    startLine: 12
  assemblies:
  - System.IO.FileSystem.Watcher
  namespace: System.IO
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.ErrorEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example:
  - "\n<p>The following example creates a new instance of <xref href=\"System.IO.ErrorEventArgs\" data-throw-if-not-resolved=\"false\"></xref> and initializes it with an <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref>. Then the example calls <xref href=\"System.IO.ErrorEventArgs.GetException\" data-throw-if-not-resolved=\"false\"></xref> to retrieve the <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref> and display the error message. There is no form associated with this code.</p>Classic ErrorEventArgs.ErrorEventArgs Example#1"
  syntax:
    content: public ErrorEventArgs(Exception exception)
    content.vb: Public Sub New(exception As Exception)
    parameters:
    - id: exception
      type: System.Exception
      description: "\n<p>An <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref> that represents the error that occurred. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.ErrorEventArgs.GetException
  commentId: M:System.IO.ErrorEventArgs.GetException
  id: GetException
  parent: System.IO.ErrorEventArgs
  langs:
  - csharp
  - vb
  name: GetException()
  fullName: System.IO.ErrorEventArgs.GetException()
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem.Watcher/src/System/IO/ErrorEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetException
    path: src/System.IO.FileSystem.Watcher/src/System/IO/ErrorEventArgs.cs
    startLine: 24
  assemblies:
  - System.IO.FileSystem.Watcher
  namespace: System.IO
  summary: "\n<p>Gets the <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref> that represents the error that occurred.</p>\n"
  example:
  - "\n<p>The following example creates a new instance of <xref href=\"System.IO.ErrorEventArgs\" data-throw-if-not-resolved=\"false\"></xref> and initializes it with an <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref>. Then the example calls <xref href=\"System.IO.ErrorEventArgs.GetException\" data-throw-if-not-resolved=\"false\"></xref> to retrieve the <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref> and display the error message. There is no form associated with this code.</p>Classic ErrorEventArgs.ErrorEventArgs Example#1"
  syntax:
    content: public virtual Exception GetException()
    content.vb: Public Overridable Function GetException As Exception
    return:
      type: System.Exception
      description: "\n<p>An <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref> that represents the error that occurred.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
