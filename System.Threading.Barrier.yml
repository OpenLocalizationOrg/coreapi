items:
- uid: System.Threading.Barrier
  id: Barrier
  parent: System.Threading
  children:
  - System.Threading.Barrier.#ctor(System.Int32)
  - System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})
  - System.Threading.Barrier.AddParticipant
  - System.Threading.Barrier.AddParticipants(System.Int32)
  - System.Threading.Barrier.CurrentPhaseNumber
  - System.Threading.Barrier.Dispose
  - System.Threading.Barrier.Dispose(System.Boolean)
  - System.Threading.Barrier.ParticipantCount
  - System.Threading.Barrier.ParticipantsRemaining
  - System.Threading.Barrier.RemoveParticipant
  - System.Threading.Barrier.RemoveParticipants(System.Int32)
  - System.Threading.Barrier.SignalAndWait
  - System.Threading.Barrier.SignalAndWait(System.Int32)
  - System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)
  - System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)
  - System.Threading.Barrier.SignalAndWait(System.TimeSpan)
  - System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)
  href: System.Threading.Barrier.yml
  name: Barrier
  fullName: System.Threading.Barrier
  type: Class
  source:
    remote: &o0
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 38
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Enables multiple tasks to cooperatively work on an algorithm in parallel through multiple phases.
  syntax:
    content: 'public class Barrier : IDisposable'
    content.vb: Public Class Barrier Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Threading.Barrier.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Threading.Barrier
  href: System.Threading.Barrier.yml
  name: Barrier(Int32)
  fullName: System.Threading.Barrier.Barrier(System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 40
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Initializes a new instance of the @'System.Threading.Barrier' class.
  syntax:
    content: public Barrier(int participantCount)
    content.vb: Public Sub New(participantCount As Integer)
    parameters:
    - id: participantCount
      type: System.Int32
      description: The number of participating threads.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*participantCount* is less than 0 or greater than 32,767.'
- uid: System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})
  id: '#ctor(System.Int32,System.Action{System.Threading.Barrier})'
  parent: System.Threading.Barrier
  href: System.Threading.Barrier.yml
  name: Barrier(Int32, Action<Barrier>)
  name.vb: Barrier(Int32, Action(Of Barrier))
  fullName: System.Threading.Barrier.Barrier(System.Int32, System.Action<System.Threading.Barrier>)
  fullName.vb: System.Threading.Barrier.Barrier(System.Int32, System.Action(Of System.Threading.Barrier))
  type: Constructor
  source:
    remote: *o0
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 41
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Initializes a new instance of the @'System.Threading.Barrier' class.
  syntax:
    content: public Barrier(int participantCount, Action<Barrier> postPhaseAction)
    content.vb: Public Sub New(participantCount As Integer, postPhaseAction As Action(Of Barrier))
    parameters:
    - id: participantCount
      type: System.Int32
      description: The number of participating threads.
    - id: postPhaseAction
      type: System.Action{System.Threading.Barrier}
      description: The @'System.Action`1' to be executed after each phase. null (Nothing in Visual Basic) may be passed to indicate no action is taken.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*participantCount* is less than 0 or greater than 32,767.'
- uid: System.Threading.Barrier.CurrentPhaseNumber
  id: CurrentPhaseNumber
  parent: System.Threading.Barrier
  href: System.Threading.Barrier.yml
  name: CurrentPhaseNumber
  fullName: System.Threading.Barrier.CurrentPhaseNumber
  type: Property
  source:
    remote: *o0
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 42
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Gets the number of the barrier's current phase.
  syntax:
    content: public long CurrentPhaseNumber { get; }
    content.vb: Public ReadOnly Property CurrentPhaseNumber As Long
    parameters: []
    return:
      type: System.Int64
      description: Returns the number of the barrier's current phase.
- uid: System.Threading.Barrier.ParticipantCount
  id: ParticipantCount
  parent: System.Threading.Barrier
  href: System.Threading.Barrier.yml
  name: ParticipantCount
  fullName: System.Threading.Barrier.ParticipantCount
  type: Property
  source:
    remote: *o0
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 43
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Gets the total number of participants in the barrier.
  syntax:
    content: public int ParticipantCount { get; }
    content.vb: Public ReadOnly Property ParticipantCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: Returns the total number of participants in the barrier.
- uid: System.Threading.Barrier.ParticipantsRemaining
  id: ParticipantsRemaining
  parent: System.Threading.Barrier
  href: System.Threading.Barrier.yml
  name: ParticipantsRemaining
  fullName: System.Threading.Barrier.ParticipantsRemaining
  type: Property
  source:
    remote: *o0
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 44
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: "Gets the number of participants in the barrier that haven’t yet signaled in the current phase."
  syntax:
    content: public int ParticipantsRemaining { get; }
    content.vb: Public ReadOnly Property ParticipantsRemaining As Integer
    parameters: []
    return:
      type: System.Int32
      description: "Returns the number of participants in the barrier that haven’t yet signaled in the current phase."
- uid: System.Threading.Barrier.AddParticipant
  id: AddParticipant
  parent: System.Threading.Barrier
  href: System.Threading.Barrier.yml
  name: AddParticipant()
  fullName: System.Threading.Barrier.AddParticipant()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 45
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Notifies the @'System.Threading.Barrier' that there will be an additional participant.
  syntax:
    content: public long AddParticipant()
    content.vb: Public Function AddParticipant As Long
    return:
      type: System.Int64
      description: The phase number of the barrier in which the new participants will first participate.
  exceptions:
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.InvalidOperationException
    description: Adding a participant would cause the barrier's participant count to exceed 32,767.-or-The method was invoked from within a post-phase action.
- uid: System.Threading.Barrier.AddParticipants(System.Int32)
  id: AddParticipants(System.Int32)
  parent: System.Threading.Barrier
  href: System.Threading.Barrier.yml
  name: AddParticipants(Int32)
  fullName: System.Threading.Barrier.AddParticipants(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 46
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Notifies the @'System.Threading.Barrier' that there will be additional participants.
  syntax:
    content: public long AddParticipants(int participantCount)
    content.vb: Public Function AddParticipants(participantCount As Integer) As Long
    parameters:
    - id: participantCount
      type: System.Int32
      description: The number of additional participants to add to the barrier.
    return:
      type: System.Int64
      description: The phase number of the barrier in which the new participants will first participate.
  exceptions:
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.ArgumentOutOfRangeException
    description: '*participantCount* is less than 0.-or-Adding *participantCount* participants would cause the barrier''s participant count to exceed 32,767.'
  - type: System.InvalidOperationException
    description: The method was invoked from within a post-phase action.
- uid: System.Threading.Barrier.Dispose
  id: Dispose
  parent: System.Threading.Barrier
  href: System.Threading.Barrier.yml
  name: Dispose()
  fullName: System.Threading.Barrier.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 47
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Releases all resources used by the current instance of the @'System.Threading.Barrier' class.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  exceptions:
  - type: System.InvalidOperationException
    description: The method was invoked from within a post-phase action.
- uid: System.Threading.Barrier.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Threading.Barrier
  href: System.Threading.Barrier.yml
  name: Dispose(Boolean)
  fullName: System.Threading.Barrier.Dispose(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 48
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Releases the unmanaged resources used by the @'System.Threading.Barrier', and optionally releases the managed resources.
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: true to release both managed and unmanaged resources; false to release only unmanaged resources.
- uid: System.Threading.Barrier.RemoveParticipant
  id: RemoveParticipant
  parent: System.Threading.Barrier
  href: System.Threading.Barrier.yml
  name: RemoveParticipant()
  fullName: System.Threading.Barrier.RemoveParticipant()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 49
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Notifies the @'System.Threading.Barrier' that there will be one less participant.
  syntax:
    content: public void RemoveParticipant()
    content.vb: Public Sub RemoveParticipant
  exceptions:
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.InvalidOperationException
    description: The barrier already has 0 participants.-or-The method was invoked from within a post-phase action.
- uid: System.Threading.Barrier.RemoveParticipants(System.Int32)
  id: RemoveParticipants(System.Int32)
  parent: System.Threading.Barrier
  href: System.Threading.Barrier.yml
  name: RemoveParticipants(Int32)
  fullName: System.Threading.Barrier.RemoveParticipants(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 50
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Notifies the @'System.Threading.Barrier' that there will be fewer participants.
  syntax:
    content: public void RemoveParticipants(int participantCount)
    content.vb: Public Sub RemoveParticipants(participantCount As Integer)
    parameters:
    - id: participantCount
      type: System.Int32
      description: The number of additional participants to remove from the barrier.
  exceptions:
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.ArgumentOutOfRangeException
    description: '*participantCount* is less than 0.'
  - type: System.InvalidOperationException
    description: The barrier already has 0 participants.-or-The method was invoked from within a post-phase action. -or-current participant count is less than the specified participantCount
  - type: System.ArgumentOutOfRangeException
    description: The total participant count is less than the specified* participantCount*
- uid: System.Threading.Barrier.SignalAndWait
  id: SignalAndWait
  parent: System.Threading.Barrier
  href: System.Threading.Barrier.yml
  name: SignalAndWait()
  fullName: System.Threading.Barrier.SignalAndWait()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 51
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well.
  syntax:
    content: public void SignalAndWait()
    content.vb: Public Sub SignalAndWait
  exceptions:
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.InvalidOperationException
    description: The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.
  - type: System.Threading.BarrierPostPhaseException
    description: If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.
- uid: System.Threading.Barrier.SignalAndWait(System.Int32)
  id: SignalAndWait(System.Int32)
  parent: System.Threading.Barrier
  href: System.Threading.Barrier.yml
  name: SignalAndWait(Int32)
  fullName: System.Threading.Barrier.SignalAndWait(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 52
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout.
  syntax:
    content: public bool SignalAndWait(int millisecondsTimeout)
    content.vb: Public Function SignalAndWait(millisecondsTimeout As Integer) As Boolean
    parameters:
    - id: millisecondsTimeout
      type: System.Int32
      description: The number of milliseconds to wait, or @'System.Threading.Timeout.Infinite'(-1) to wait indefinitely.
    return:
      type: System.Boolean
      description: if all participants reached the barrier within the specified time; otherwise false.
  exceptions:
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.ArgumentOutOfRangeException
    description: '*millisecondsTimeout* is a negative number other than -1, which represents an infinite time-out.'
  - type: System.InvalidOperationException
    description: The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.
  - type: System.Threading.BarrierPostPhaseException
    description: If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.
- uid: System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)
  id: SignalAndWait(System.Int32,System.Threading.CancellationToken)
  parent: System.Threading.Barrier
  href: System.Threading.Barrier.yml
  name: SignalAndWait(Int32, CancellationToken)
  fullName: System.Threading.Barrier.SignalAndWait(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 53
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout, while observing a cancellation token.
  syntax:
    content: public bool SignalAndWait(int millisecondsTimeout, CancellationToken cancellationToken)
    content.vb: Public Function SignalAndWait(millisecondsTimeout As Integer, cancellationToken As CancellationToken) As Boolean
    parameters:
    - id: millisecondsTimeout
      type: System.Int32
      description: The number of milliseconds to wait, or @'System.Threading.Timeout.Infinite'(-1) to wait indefinitely.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The @'System.Threading.CancellationToken' to observe.
    return:
      type: System.Boolean
      description: if all participants reached the barrier within the specified time; otherwise false
  exceptions:
  - type: System.OperationCanceledException
    description: '*cancellationToken* has been canceled.'
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.ArgumentOutOfRangeException
    description: '*millisecondsTimeout* is a negative number other than -1, which represents an infinite time-out.'
  - type: System.InvalidOperationException
    description: The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.
- uid: System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)
  id: SignalAndWait(System.Threading.CancellationToken)
  parent: System.Threading.Barrier
  href: System.Threading.Barrier.yml
  name: SignalAndWait(CancellationToken)
  fullName: System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 54
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Signals that a participant has reached the barrier and waits for all other participants to reach the barrier, while observing a cancellation token.
  syntax:
    content: public void SignalAndWait(CancellationToken cancellationToken)
    content.vb: Public Sub SignalAndWait(cancellationToken As CancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The @'System.Threading.CancellationToken' to observe.
  exceptions:
  - type: System.OperationCanceledException
    description: '*cancellationToken* has been canceled.'
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.InvalidOperationException
    description: The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.
- uid: System.Threading.Barrier.SignalAndWait(System.TimeSpan)
  id: SignalAndWait(System.TimeSpan)
  parent: System.Threading.Barrier
  href: System.Threading.Barrier.yml
  name: SignalAndWait(TimeSpan)
  fullName: System.Threading.Barrier.SignalAndWait(System.TimeSpan)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 55
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a @'System.TimeSpan' object to measure the time interval.
  syntax:
    content: public bool SignalAndWait(TimeSpan timeout)
    content.vb: Public Function SignalAndWait(timeout As TimeSpan) As Boolean
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: A @'System.TimeSpan' that represents the number of milliseconds to wait, or a @'System.TimeSpan' that represents -1 milliseconds to wait indefinitely.
    return:
      type: System.Boolean
      description: true if all other participants reached the barrier; otherwise, false.
  exceptions:
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.ArgumentOutOfRangeException
    description: '*timeout*is a negative number other than -1 milliseconds, which represents an infinite time-out, or it is greater than 32,767.'
  - type: System.InvalidOperationException
    description: The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.
- uid: System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)
  id: SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Threading.Barrier
  href: System.Threading.Barrier.yml
  name: SignalAndWait(TimeSpan, CancellationToken)
  fullName: System.Threading.Barrier.SignalAndWait(System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 56
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a @'System.TimeSpan' object to measure the time interval, while observing a cancellation token.
  syntax:
    content: public bool SignalAndWait(TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function SignalAndWait(timeout As TimeSpan, cancellationToken As CancellationToken) As Boolean
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: A @'System.TimeSpan' that represents the number of milliseconds to wait, or a @'System.TimeSpan' that represents -1 milliseconds to wait indefinitely.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The @'System.Threading.CancellationToken' to observe.
    return:
      type: System.Boolean
      description: true if all other participants reached the barrier; otherwise, false.
  exceptions:
  - type: System.OperationCanceledException
    description: '*cancellationToken* has been canceled.'
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.ArgumentOutOfRangeException
    description: '*timeout*is a negative number other than -1 milliseconds, which represents an infinite time-out.'
  - type: System.InvalidOperationException
    description: The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.
references:
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System.Action{System.Threading.Barrier}
  parent: System
  definition: System.Action`1
  href: System.Threading.Barrier.yml
  name: Action<Barrier>
  name.vb: Action(Of Barrier)
  fullName: System.Action<System.Threading.Barrier>
  fullName.vb: System.Action(Of System.Threading.Barrier)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Barrier
    name: Barrier
    fullName: System.Threading.Barrier
    href: System.Threading.Barrier.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Barrier
    name: Barrier
    fullName: System.Threading.Barrier
    href: System.Threading.Barrier.yml
  - name: )
    fullName: )
- uid: System.Action`1
  parent: System
  isExternal: false
  href: System.Action`1.yml
  name: Action<T>
  name.vb: Action(Of T)
  fullName: System.Action<T>
  fullName.vb: System.Action(Of T)
  type: Delegate
  spec.csharp:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    href: System.Action`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    href: System.Action`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Int64
  parent: System
  isExternal: false
  href: System.Int64.yml
  name: Int64
  fullName: System.Int64
  type: Struct
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  href: System.Threading.CancellationToken.yml
  name: CancellationToken
  fullName: System.Threading.CancellationToken
  type: Struct
- uid: System.TimeSpan
  parent: System
  isExternal: false
  href: System.TimeSpan.yml
  name: TimeSpan
  fullName: System.TimeSpan
  type: Struct
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  type: Class
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
- uid: System.ObjectDisposedException
  isExternal: false
  href: System.ObjectDisposedException.yml
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
  type: Class
  summary: The exception that is thrown when an operation is performed on a disposed object.
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  href: System.InvalidOperationException.yml
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  type: Class
  summary: The exception that is thrown when a method call is invalid for the object's current state.
- uid: System.Threading.BarrierPostPhaseException
  isExternal: false
  href: System.Threading.BarrierPostPhaseException.yml
  name: BarrierPostPhaseException
  fullName: System.Threading.BarrierPostPhaseException
  type: Class
  summary: The exception that is thrown when the post-phase action of a @'System.Threading.Barrier' fails
- uid: System.OperationCanceledException
  parent: System
  isExternal: false
  href: System.OperationCanceledException.yml
  name: OperationCanceledException
  fullName: System.OperationCanceledException
  type: Class
  summary: The exception that is thrown in a thread upon cancellation of an operation that the thread was executing.
