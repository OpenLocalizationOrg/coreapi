items:
- uid: System.Collections.Generic.LinkedList`1
  id: LinkedList`1
  parent: System.Collections.Generic
  children:
  - System.Collections.Generic.LinkedList`1.#ctor
  - System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)
  - System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})
  - System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)
  - System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})
  - System.Collections.Generic.LinkedList`1.AddFirst(`0)
  - System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})
  - System.Collections.Generic.LinkedList`1.AddLast(`0)
  - System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})
  - System.Collections.Generic.LinkedList`1.Clear
  - System.Collections.Generic.LinkedList`1.Contains(`0)
  - System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)
  - System.Collections.Generic.LinkedList`1.Count
  - System.Collections.Generic.LinkedList`1.Find(`0)
  - System.Collections.Generic.LinkedList`1.FindLast(`0)
  - System.Collections.Generic.LinkedList`1.First
  - System.Collections.Generic.LinkedList`1.GetEnumerator
  - System.Collections.Generic.LinkedList`1.Last
  - System.Collections.Generic.LinkedList`1.Remove(`0)
  - System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})
  - System.Collections.Generic.LinkedList`1.RemoveFirst
  - System.Collections.Generic.LinkedList`1.RemoveLast
  href: System.Collections.Generic.LinkedList`1.yml
  name: LinkedList<T>
  name.vb: LinkedList(Of T)
  fullName: System.Collections.Generic.LinkedList<T>
  fullName.vb: System.Collections.Generic.LinkedList(Of T)
  type: Class
  source:
    remote: &o0
      path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 10
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Represents a doubly linked list.
  syntax:
    content: 'public class LinkedList<T> : ICollection<T>, IEnumerable<T>, IReadOnlyCollection<T>, ICollection, IEnumerable'
    content.vb: Public Class LinkedList(Of T) Inherits ICollection(Of T) Implements IEnumerable(Of T), IReadOnlyCollection(Of T), ICollection, IEnumerable
    typeParameters:
    - id: T
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.Generic.IReadOnlyCollection{{T}}
  - System.Collections.ICollection
  - System.Collections.IEnumerable
- uid: System.Collections.Generic.LinkedList`1.#ctor
  id: '#ctor'
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: LinkedList()
  fullName: System.Collections.Generic.LinkedList<T>.LinkedList()
  fullName.vb: System.Collections.Generic.LinkedList(Of T).LinkedList()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 20
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Initializes a new instance of the @'System.Collections.Generic.LinkedList`1' class that is empty.
  syntax:
    content: public LinkedList()
    content.vb: Public Sub New
- uid: System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  id: '#ctor(System.Collections.Generic.IEnumerable{`0})'
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: LinkedList(IEnumerable<T>)
  name.vb: LinkedList(IEnumerable(Of T))
  fullName: System.Collections.Generic.LinkedList<T>.LinkedList(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).LinkedList(System.Collections.Generic.IEnumerable(Of T))
  type: Constructor
  source:
    remote:
      path: src/System.Collections/ref/System.Collections.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Collections/ref/System.Collections.cs
    startLine: 208
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Initializes a new instance of the @'System.Collections.Generic.LinkedList`1' class that contains elements copied from the specified @'System.Collections.IEnumerable' and has sufficient capacity to accommodate the number of elements copied.
  syntax:
    content: public LinkedList(IEnumerable<T> collection)
    content.vb: Public Sub New(collection As IEnumerable(Of T))
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The @'System.Collections.IEnumerable' whose elements are copied to the new @'System.Collections.Generic.LinkedList`1'.
  exceptions:
  - type: System.ArgumentNullException
    description: '*collection* is null.'
- uid: System.Collections.Generic.LinkedList`1.Count
  id: Count
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: Count
  fullName: System.Collections.Generic.LinkedList<T>.Count
  fullName.vb: System.Collections.Generic.LinkedList(Of T).Count
  type: Property
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 37
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Gets the number of nodes actually contained in the @'System.Collections.Generic.LinkedList`1'.
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of nodes actually contained in the @'System.Collections.Generic.LinkedList`1'.
- uid: System.Collections.Generic.LinkedList`1.First
  id: First
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: First
  fullName: System.Collections.Generic.LinkedList<T>.First
  fullName.vb: System.Collections.Generic.LinkedList(Of T).First
  type: Property
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 42
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Gets the first node of the @'System.Collections.Generic.LinkedList`1'.
  syntax:
    content: public LinkedListNode<T> First { get; }
    content.vb: Public ReadOnly Property First As LinkedListNode(Of T)
    parameters: []
    return:
      type: System.Collections.Generic.LinkedListNode{{T}}
      description: The first @'System.Collections.Generic.LinkedListNode`1' of the @'System.Collections.Generic.LinkedList`1'.
- uid: System.Collections.Generic.LinkedList`1.Last
  id: Last
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: Last
  fullName: System.Collections.Generic.LinkedList<T>.Last
  fullName.vb: System.Collections.Generic.LinkedList(Of T).Last
  type: Property
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 47
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Gets the last node of the @'System.Collections.Generic.LinkedList`1'.
  syntax:
    content: public LinkedListNode<T> Last { get; }
    content.vb: Public ReadOnly Property Last As LinkedListNode(Of T)
    parameters: []
    return:
      type: System.Collections.Generic.LinkedListNode{{T}}
      description: The last @'System.Collections.Generic.LinkedListNode`1' of the @'System.Collections.Generic.LinkedList`1'.
- uid: System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)
  id: AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddAfter(LinkedListNode<T>, T)
  name.vb: AddAfter(LinkedListNode(Of T), T)
  fullName: System.Collections.Generic.LinkedList<T>.AddAfter(System.Collections.Generic.LinkedListNode<T>, T)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).AddAfter(System.Collections.Generic.LinkedListNode(Of T), T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 62
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Adds a new node containing the specified value after the specified existing node in the @'System.Collections.Generic.LinkedList`1'.
  syntax:
    content: public LinkedListNode<T> AddAfter(LinkedListNode<T> node, T value)
    content.vb: Public Function AddAfter(node As LinkedListNode(Of T), value As T) As LinkedListNode(Of T)
    parameters:
    - id: node
      type: System.Collections.Generic.LinkedListNode{{T}}
      description: The @'System.Collections.Generic.LinkedListNode`1' after which to insert a new @'System.Collections.Generic.LinkedListNode`1' containing *value*.
    - id: value
      type: '{T}'
      description: The value to add to the @'System.Collections.Generic.LinkedList`1'.
    return:
      type: System.Collections.Generic.LinkedListNode{{T}}
      description: The new @'System.Collections.Generic.LinkedListNode`1' containing *value*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*node* is null.'
  - type: System.InvalidOperationException
    description: '*node* is not in the current @''System.Collections.Generic.LinkedList`1''.'
- uid: System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})
  id: AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddAfter(LinkedListNode<T>, LinkedListNode<T>)
  name.vb: AddAfter(LinkedListNode(Of T), LinkedListNode(Of T))
  fullName: System.Collections.Generic.LinkedList<T>.AddAfter(System.Collections.Generic.LinkedListNode<T>, System.Collections.Generic.LinkedListNode<T>)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).AddAfter(System.Collections.Generic.LinkedListNode(Of T), System.Collections.Generic.LinkedListNode(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 70
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Adds the specified new node after the specified existing node in the @'System.Collections.Generic.LinkedList`1'.
  syntax:
    content: public void AddAfter(LinkedListNode<T> node, LinkedListNode<T> newNode)
    content.vb: Public Sub AddAfter(node As LinkedListNode(Of T), newNode As LinkedListNode(Of T))
    parameters:
    - id: node
      type: System.Collections.Generic.LinkedListNode{{T}}
      description: The @'System.Collections.Generic.LinkedListNode`1' after which to insert *newNode*.
    - id: newNode
      type: System.Collections.Generic.LinkedListNode{{T}}
      description: The new @'System.Collections.Generic.LinkedListNode`1' to add to the @'System.Collections.Generic.LinkedList`1'.
  exceptions:
  - type: System.ArgumentNullException
    description: '*node* is null.-or-*newNode* is null.'
  - type: System.InvalidOperationException
    description: '*node* is not in the current @''System.Collections.Generic.LinkedList`1''.-or-*newNode* belongs to another @''System.Collections.Generic.LinkedList`1''.'
- uid: System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)
  id: AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddBefore(LinkedListNode<T>, T)
  name.vb: AddBefore(LinkedListNode(Of T), T)
  fullName: System.Collections.Generic.LinkedList<T>.AddBefore(System.Collections.Generic.LinkedListNode<T>, T)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).AddBefore(System.Collections.Generic.LinkedListNode(Of T), T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 78
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Adds a new node containing the specified value before the specified existing node in the @'System.Collections.Generic.LinkedList`1'.
  syntax:
    content: public LinkedListNode<T> AddBefore(LinkedListNode<T> node, T value)
    content.vb: Public Function AddBefore(node As LinkedListNode(Of T), value As T) As LinkedListNode(Of T)
    parameters:
    - id: node
      type: System.Collections.Generic.LinkedListNode{{T}}
      description: The @'System.Collections.Generic.LinkedListNode`1' before which to insert a new @'System.Collections.Generic.LinkedListNode`1' containing *value*.
    - id: value
      type: '{T}'
      description: The value to add to the @'System.Collections.Generic.LinkedList`1'.
    return:
      type: System.Collections.Generic.LinkedListNode{{T}}
      description: The new @'System.Collections.Generic.LinkedListNode`1' containing *value*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*node* is null.'
  - type: System.InvalidOperationException
    description: '*node* is not in the current @''System.Collections.Generic.LinkedList`1''.'
- uid: System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})
  id: AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddBefore(LinkedListNode<T>, LinkedListNode<T>)
  name.vb: AddBefore(LinkedListNode(Of T), LinkedListNode(Of T))
  fullName: System.Collections.Generic.LinkedList<T>.AddBefore(System.Collections.Generic.LinkedListNode<T>, System.Collections.Generic.LinkedListNode<T>)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).AddBefore(System.Collections.Generic.LinkedListNode(Of T), System.Collections.Generic.LinkedListNode(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 90
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Adds the specified new node before the specified existing node in the @'System.Collections.Generic.LinkedList`1'.
  syntax:
    content: public void AddBefore(LinkedListNode<T> node, LinkedListNode<T> newNode)
    content.vb: Public Sub AddBefore(node As LinkedListNode(Of T), newNode As LinkedListNode(Of T))
    parameters:
    - id: node
      type: System.Collections.Generic.LinkedListNode{{T}}
      description: The @'System.Collections.Generic.LinkedListNode`1' before which to insert *newNode*.
    - id: newNode
      type: System.Collections.Generic.LinkedListNode{{T}}
      description: The new @'System.Collections.Generic.LinkedListNode`1' to add to the @'System.Collections.Generic.LinkedList`1'.
  exceptions:
  - type: System.ArgumentNullException
    description: '*node* is null.-or-*newNode* is null.'
  - type: System.InvalidOperationException
    description: '*node* is not in the current @''System.Collections.Generic.LinkedList`1''.-or-*newNode* belongs to another @''System.Collections.Generic.LinkedList`1''.'
- uid: System.Collections.Generic.LinkedList`1.AddFirst(`0)
  id: AddFirst(`0)
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddFirst(T)
  fullName: System.Collections.Generic.LinkedList<T>.AddFirst(T)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).AddFirst(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 102
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Adds a new node containing the specified value at the start of the @'System.Collections.Generic.LinkedList`1'.
  syntax:
    content: public LinkedListNode<T> AddFirst(T value)
    content.vb: Public Function AddFirst(value As T) As LinkedListNode(Of T)
    parameters:
    - id: value
      type: '{T}'
      description: The value to add at the start of the @'System.Collections.Generic.LinkedList`1'.
    return:
      type: System.Collections.Generic.LinkedListNode{{T}}
      description: The new @'System.Collections.Generic.LinkedListNode`1' containing *value*.
- uid: System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})
  id: AddFirst(System.Collections.Generic.LinkedListNode{`0})
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddFirst(LinkedListNode<T>)
  name.vb: AddFirst(LinkedListNode(Of T))
  fullName: System.Collections.Generic.LinkedList<T>.AddFirst(System.Collections.Generic.LinkedListNode<T>)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).AddFirst(System.Collections.Generic.LinkedListNode(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 117
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Adds the specified new node at the start of the @'System.Collections.Generic.LinkedList`1'.
  syntax:
    content: public void AddFirst(LinkedListNode<T> node)
    content.vb: Public Sub AddFirst(node As LinkedListNode(Of T))
    parameters:
    - id: node
      type: System.Collections.Generic.LinkedListNode{{T}}
      description: The new @'System.Collections.Generic.LinkedListNode`1' to add at the start of the @'System.Collections.Generic.LinkedList`1'.
  exceptions:
  - type: System.ArgumentNullException
    description: '*node* is null.'
  - type: System.InvalidOperationException
    description: '*node* belongs to another @''System.Collections.Generic.LinkedList`1''.'
- uid: System.Collections.Generic.LinkedList`1.AddLast(`0)
  id: AddLast(`0)
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddLast(T)
  fullName: System.Collections.Generic.LinkedList<T>.AddLast(T)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).AddLast(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 133
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Adds a new node containing the specified value at the end of the @'System.Collections.Generic.LinkedList`1'.
  syntax:
    content: public LinkedListNode<T> AddLast(T value)
    content.vb: Public Function AddLast(value As T) As LinkedListNode(Of T)
    parameters:
    - id: value
      type: '{T}'
      description: The value to add at the end of the @'System.Collections.Generic.LinkedList`1'.
    return:
      type: System.Collections.Generic.LinkedListNode{{T}}
      description: The new @'System.Collections.Generic.LinkedListNode`1' containing *value*.
- uid: System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})
  id: AddLast(System.Collections.Generic.LinkedListNode{`0})
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddLast(LinkedListNode<T>)
  name.vb: AddLast(LinkedListNode(Of T))
  fullName: System.Collections.Generic.LinkedList<T>.AddLast(System.Collections.Generic.LinkedListNode<T>)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).AddLast(System.Collections.Generic.LinkedListNode(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 147
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Adds the specified new node at the end of the @'System.Collections.Generic.LinkedList`1'.
  syntax:
    content: public void AddLast(LinkedListNode<T> node)
    content.vb: Public Sub AddLast(node As LinkedListNode(Of T))
    parameters:
    - id: node
      type: System.Collections.Generic.LinkedListNode{{T}}
      description: The new @'System.Collections.Generic.LinkedListNode`1' to add at the end of the @'System.Collections.Generic.LinkedList`1'.
  exceptions:
  - type: System.ArgumentNullException
    description: '*node* is null.'
  - type: System.InvalidOperationException
    description: '*node* belongs to another @''System.Collections.Generic.LinkedList`1''.'
- uid: System.Collections.Generic.LinkedList`1.Clear
  id: Clear
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: Clear()
  fullName: System.Collections.Generic.LinkedList<T>.Clear()
  fullName.vb: System.Collections.Generic.LinkedList(Of T).Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 162
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Removes all nodes from the @'System.Collections.Generic.LinkedList`1'.
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
- uid: System.Collections.Generic.LinkedList`1.Contains(`0)
  id: Contains(`0)
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: Contains(T)
  fullName: System.Collections.Generic.LinkedList<T>.Contains(T)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).Contains(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 177
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Determines whether a value is in the @'System.Collections.Generic.LinkedList`1'.
  syntax:
    content: public bool Contains(T value)
    content.vb: Public Function Contains(value As T) As Boolean
    parameters:
    - id: value
      type: '{T}'
      description: The value to locate in the @'System.Collections.Generic.LinkedList`1'. The value can be null for reference types.
    return:
      type: System.Boolean
      description: true if *value* is found in the @'System.Collections.Generic.LinkedList`1'; otherwise, false.
- uid: System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: CopyTo(T[], Int32)
  name.vb: CopyTo(T(), Int32)
  fullName: System.Collections.Generic.LinkedList<T>.CopyTo(T[], System.Int32)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).CopyTo(T(), System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 182
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Copies the entire @'System.Collections.Generic.LinkedList`1' to a compatible one-dimensional @'System.Array', starting at the specified index of the target array.
  syntax:
    content: public void CopyTo(T[] array, int index)
    content.vb: Public Sub CopyTo(array As T(), index As Integer)
    parameters:
    - id: array
      type: '{T}[]'
      description: The one-dimensional @'System.Array' that is the destination of the elements copied from @'System.Collections.Generic.LinkedList`1'. The @'System.Array' must have zero-based indexing.
    - id: index
      type: System.Int32
      description: The zero-based index in *array* at which copying begins.
  exceptions:
  - type: System.ArgumentNullException
    description: '*array* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*index* is less than zero.'
  - type: System.ArgumentException
    description: The number of elements in the source @'System.Collections.Generic.LinkedList`1' is greater than the available space from *index* to the end of the destination *array*.
- uid: System.Collections.Generic.LinkedList`1.Find(`0)
  id: Find(`0)
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: Find(T)
  fullName: System.Collections.Generic.LinkedList<T>.Find(T)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).Find(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 210
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Finds the first node that contains the specified value.
  syntax:
    content: public LinkedListNode<T> Find(T value)
    content.vb: Public Function Find(value As T) As LinkedListNode(Of T)
    parameters:
    - id: value
      type: '{T}'
      description: The value to locate in the @'System.Collections.Generic.LinkedList`1'.
    return:
      type: System.Collections.Generic.LinkedListNode{{T}}
      description: The first @'System.Collections.Generic.LinkedListNode`1' that contains the specified value, if found; otherwise, null.
- uid: System.Collections.Generic.LinkedList`1.FindLast(`0)
  id: FindLast(`0)
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: FindLast(T)
  fullName: System.Collections.Generic.LinkedList<T>.FindLast(T)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).FindLast(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 242
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Finds the last node that contains the specified value.
  syntax:
    content: public LinkedListNode<T> FindLast(T value)
    content.vb: Public Function FindLast(value As T) As LinkedListNode(Of T)
    parameters:
    - id: value
      type: '{T}'
      description: The value to locate in the @'System.Collections.Generic.LinkedList`1'.
    return:
      type: System.Collections.Generic.LinkedListNode{{T}}
      description: The last @'System.Collections.Generic.LinkedListNode`1' that contains the specified value, if found; otherwise, null.
- uid: System.Collections.Generic.LinkedList`1.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: GetEnumerator()
  fullName: System.Collections.Generic.LinkedList<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.LinkedList(Of T).GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 278
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Returns an enumerator that iterates through the @'System.Collections.Generic.LinkedList`1'.
  syntax:
    content: public LinkedList<T>.Enumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As LinkedList(Of T).Enumerator
    return:
      type: System.Collections.Generic.LinkedList`1.Enumerator
      description: An @'System.Collections.Generic.LinkedList`1.Enumerator' for the @'System.Collections.Generic.LinkedList`1'.
- uid: System.Collections.Generic.LinkedList`1.Remove(`0)
  id: Remove(`0)
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: Remove(T)
  fullName: System.Collections.Generic.LinkedList<T>.Remove(T)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).Remove(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 288
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Removes the first occurrence of the specified value from the @'System.Collections.Generic.LinkedList`1'.
  syntax:
    content: public bool Remove(T value)
    content.vb: Public Function Remove(value As T) As Boolean
    parameters:
    - id: value
      type: '{T}'
      description: The value to remove from the @'System.Collections.Generic.LinkedList`1'.
    return:
      type: System.Boolean
      description: true if the element containing *value* is successfully removed; otherwise, false.  This method also returns false if *value* was not found in the original @'System.Collections.Generic.LinkedList`1'.
- uid: System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})
  id: Remove(System.Collections.Generic.LinkedListNode{`0})
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: Remove(LinkedListNode<T>)
  name.vb: Remove(LinkedListNode(Of T))
  fullName: System.Collections.Generic.LinkedList<T>.Remove(System.Collections.Generic.LinkedListNode<T>)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).Remove(System.Collections.Generic.LinkedListNode(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 299
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Removes the specified node from the @'System.Collections.Generic.LinkedList`1'.
  syntax:
    content: public void Remove(LinkedListNode<T> node)
    content.vb: Public Sub Remove(node As LinkedListNode(Of T))
    parameters:
    - id: node
      type: System.Collections.Generic.LinkedListNode{{T}}
      description: The @'System.Collections.Generic.LinkedListNode`1' to remove from the @'System.Collections.Generic.LinkedList`1'.
  exceptions:
  - type: System.ArgumentNullException
    description: '*node* is null.'
  - type: System.InvalidOperationException
    description: '*node* is not in the current @''System.Collections.Generic.LinkedList`1''.'
- uid: System.Collections.Generic.LinkedList`1.RemoveFirst
  id: RemoveFirst
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: RemoveFirst()
  fullName: System.Collections.Generic.LinkedList<T>.RemoveFirst()
  fullName.vb: System.Collections.Generic.LinkedList(Of T).RemoveFirst()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 305
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Removes the node at the start of the @'System.Collections.Generic.LinkedList`1'.
  syntax:
    content: public void RemoveFirst()
    content.vb: Public Sub RemoveFirst
  exceptions:
  - type: System.InvalidOperationException
    description: The @'System.Collections.Generic.LinkedList`1' is empty.
- uid: System.Collections.Generic.LinkedList`1.RemoveLast
  id: RemoveLast
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: RemoveLast()
  fullName: System.Collections.Generic.LinkedList<T>.RemoveLast()
  fullName.vb: System.Collections.Generic.LinkedList(Of T).RemoveLast()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 311
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Removes the node at the end of the @'System.Collections.Generic.LinkedList`1'.
  syntax:
    content: public void RemoveLast()
    content.vb: Public Sub RemoveLast
  exceptions:
  - type: System.InvalidOperationException
    description: The @'System.Collections.Generic.LinkedList`1' is empty.
references:
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Collections.Generic.IEnumerable`1.yml
  name: Collections.Generic.IEnumerable<T>
  name.vb: Collections.Generic.IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.IEnumerable`1.yml
  name: Collections.Generic.IEnumerable<>
  name.vb: Collections.Generic.IEnumerable(Of )
  fullName: System.Collections.Generic.IEnumerable<>
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.LinkedListNode{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.LinkedListNode`1
  href: System.Collections.Generic.LinkedListNode`1.yml
  name: LinkedListNode<T>
  name.vb: LinkedListNode(Of T)
  fullName: System.Collections.Generic.LinkedListNode<T>
  fullName.vb: System.Collections.Generic.LinkedListNode(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.LinkedListNode`1
    name: LinkedListNode
    fullName: System.Collections.Generic.LinkedListNode
    href: System.Collections.Generic.LinkedListNode`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.LinkedListNode`1
    name: LinkedListNode
    fullName: System.Collections.Generic.LinkedListNode
    href: System.Collections.Generic.LinkedListNode`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.LinkedListNode`1
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.LinkedListNode`1.yml
  name: LinkedListNode<T>
  name.vb: LinkedListNode(Of T)
  fullName: System.Collections.Generic.LinkedListNode<T>
  fullName.vb: System.Collections.Generic.LinkedListNode(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.LinkedListNode`1
    name: LinkedListNode
    fullName: System.Collections.Generic.LinkedListNode
    href: System.Collections.Generic.LinkedListNode`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.LinkedListNode`1
    name: LinkedListNode
    fullName: System.Collections.Generic.LinkedListNode
    href: System.Collections.Generic.LinkedListNode`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: '{T}[]'
  isExternal: false
  name: T[]
  name.vb: T()
  fullName: T[]
  fullName.vb: T()
  spec.csharp:
  - name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    fullName: T
  - name: ()
    fullName: ()
- uid: System.Collections.Generic.LinkedList`1.Enumerator
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.LinkedList`1.Enumerator.yml
  name: LinkedList.Enumerator<>
  name.vb: LinkedList.Enumerator(Of )
  fullName: System.Collections.Generic.LinkedList.Enumerator<>
  fullName.vb: System.Collections.Generic.LinkedList.Enumerator(Of )
  spec.csharp:
  - uid: System.Collections.Generic.LinkedList`1.Enumerator
    name: LinkedList.Enumerator
    fullName: System.Collections.Generic.LinkedList.Enumerator
    href: System.Collections.Generic.LinkedList`1.Enumerator.yml
  - name: <
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.LinkedList`1.Enumerator
    name: LinkedList.Enumerator
    fullName: System.Collections.Generic.LinkedList.Enumerator
    href: System.Collections.Generic.LinkedList`1.Enumerator.yml
  - name: '(Of '
    fullName: '(Of '
  - name: )
    fullName: )
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  href: System.InvalidOperationException.yml
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  summary: The exception that is thrown when a method call is invalid for the object's current state.
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
