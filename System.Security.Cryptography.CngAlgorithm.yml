items:
- uid: System.Security.Cryptography.CngAlgorithm
  id: CngAlgorithm
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.CngAlgorithm.#ctor(System.String)
  - System.Security.Cryptography.CngAlgorithm.Algorithm
  - System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256
  - System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384
  - System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521
  - System.Security.Cryptography.CngAlgorithm.ECDsaP256
  - System.Security.Cryptography.CngAlgorithm.ECDsaP384
  - System.Security.Cryptography.CngAlgorithm.ECDsaP521
  - System.Security.Cryptography.CngAlgorithm.Equals(System.Object)
  - System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)
  - System.Security.Cryptography.CngAlgorithm.GetHashCode
  - System.Security.Cryptography.CngAlgorithm.MD5
  - System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  - System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  - System.Security.Cryptography.CngAlgorithm.Rsa
  - System.Security.Cryptography.CngAlgorithm.Sha1
  - System.Security.Cryptography.CngAlgorithm.Sha256
  - System.Security.Cryptography.CngAlgorithm.Sha384
  - System.Security.Cryptography.CngAlgorithm.Sha512
  - System.Security.Cryptography.CngAlgorithm.ToString
  href: System.Security.Cryptography.CngAlgorithm.yml
  name: CngAlgorithm
  fullName: System.Security.Cryptography.CngAlgorithm
  type: Class
  source:
    remote: &o0
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngAlgorithm.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngAlgorithm.cs
    startLine: 15
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Encapsulates the name of an encryption algorithm.
  syntax:
    content: 'public sealed class CngAlgorithm : IEquatable<CngAlgorithm>'
    content.vb: Public NotInheritable Class CngAlgorithm Inherits IEquatable(Of CngAlgorithm)
  inheritance:
  - System.Object
- uid: System.Security.Cryptography.CngAlgorithm.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.CngAlgorithm
  href: System.Security.Cryptography.CngAlgorithm.yml
  name: CngAlgorithm(String)
  fullName: System.Security.Cryptography.CngAlgorithm.CngAlgorithm(System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngAlgorithm.cs
    startLine: 17
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the @'System.Security.Cryptography.CngAlgorithm' class.
  syntax:
    content: public CngAlgorithm(string algorithm)
    content.vb: Public Sub New(algorithm As String)
    parameters:
    - id: algorithm
      type: System.String
      description: The name of the algorithm to initialize.
  exceptions:
  - type: System.ArgumentNullException
    description: The *algorithm* parameter is null.
  - type: System.ArgumentException
    description: The *algorithm* parameter length is 0 (zero).
- uid: System.Security.Cryptography.CngAlgorithm.Algorithm
  id: Algorithm
  parent: System.Security.Cryptography.CngAlgorithm
  href: System.Security.Cryptography.CngAlgorithm.yml
  name: Algorithm
  fullName: System.Security.Cryptography.CngAlgorithm.Algorithm
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngAlgorithm.cs
    startLine: 30
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets the algorithm name that the current @'System.Security.Cryptography.CngAlgorithm' object specifies.
  syntax:
    content: public string Algorithm { get; }
    content.vb: Public ReadOnly Property Algorithm As String
    parameters: []
    return:
      type: System.String
      description: The embedded algorithm name.
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256
  id: ECDiffieHellmanP256
  parent: System.Security.Cryptography.CngAlgorithm
  href: System.Security.Cryptography.CngAlgorithm.yml
  name: ECDiffieHellmanP256
  fullName: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngAlgorithm.cs
    startLine: 99
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets a @'System.Security.Cryptography.CngAlgorithm' object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-256 curve.
  syntax:
    content: public static CngAlgorithm ECDiffieHellmanP256 { get; }
    content.vb: Public Shared ReadOnly Property ECDiffieHellmanP256 As CngAlgorithm
    parameters: []
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies an ECDH algorithm that uses the P-256 curve.
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384
  id: ECDiffieHellmanP384
  parent: System.Security.Cryptography.CngAlgorithm
  href: System.Security.Cryptography.CngAlgorithm.yml
  name: ECDiffieHellmanP384
  fullName: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngAlgorithm.cs
    startLine: 107
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets a @'System.Security.Cryptography.CngAlgorithm' object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-384 curve.
  syntax:
    content: public static CngAlgorithm ECDiffieHellmanP384 { get; }
    content.vb: Public Shared ReadOnly Property ECDiffieHellmanP384 As CngAlgorithm
    parameters: []
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies an ECDH algorithm that uses the P-384 curve.
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521
  id: ECDiffieHellmanP521
  parent: System.Security.Cryptography.CngAlgorithm
  href: System.Security.Cryptography.CngAlgorithm.yml
  name: ECDiffieHellmanP521
  fullName: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngAlgorithm.cs
    startLine: 115
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets a @'System.Security.Cryptography.CngAlgorithm' object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-521 curve.
  syntax:
    content: public static CngAlgorithm ECDiffieHellmanP521 { get; }
    content.vb: Public Shared ReadOnly Property ECDiffieHellmanP521 As CngAlgorithm
    parameters: []
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies an ECDH algorithm that uses the P-521 curve.
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP256
  id: ECDsaP256
  parent: System.Security.Cryptography.CngAlgorithm
  href: System.Security.Cryptography.CngAlgorithm.yml
  name: ECDsaP256
  fullName: System.Security.Cryptography.CngAlgorithm.ECDsaP256
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngAlgorithm.cs
    startLine: 123
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets a @'System.Security.Cryptography.CngAlgorithm' object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-256 curve.
  syntax:
    content: public static CngAlgorithm ECDsaP256 { get; }
    content.vb: Public Shared ReadOnly Property ECDsaP256 As CngAlgorithm
    parameters: []
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies an ECDSA algorithm that uses the P-256 curve.
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP384
  id: ECDsaP384
  parent: System.Security.Cryptography.CngAlgorithm
  href: System.Security.Cryptography.CngAlgorithm.yml
  name: ECDsaP384
  fullName: System.Security.Cryptography.CngAlgorithm.ECDsaP384
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngAlgorithm.cs
    startLine: 131
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets a @'System.Security.Cryptography.CngAlgorithm' object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-384 curve.
  syntax:
    content: public static CngAlgorithm ECDsaP384 { get; }
    content.vb: Public Shared ReadOnly Property ECDsaP384 As CngAlgorithm
    parameters: []
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies an ECDSA algorithm that uses the P-384 curve.
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP521
  id: ECDsaP521
  parent: System.Security.Cryptography.CngAlgorithm
  href: System.Security.Cryptography.CngAlgorithm.yml
  name: ECDsaP521
  fullName: System.Security.Cryptography.CngAlgorithm.ECDsaP521
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngAlgorithm.cs
    startLine: 139
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets a new @'System.Security.Cryptography.CngAlgorithm' object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-521 curve.
  syntax:
    content: public static CngAlgorithm ECDsaP521 { get; }
    content.vb: Public Shared ReadOnly Property ECDsaP521 As CngAlgorithm
    parameters: []
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies an ECDSA algorithm that uses the P-521 curve.
- uid: System.Security.Cryptography.CngAlgorithm.MD5
  id: MD5
  parent: System.Security.Cryptography.CngAlgorithm
  href: System.Security.Cryptography.CngAlgorithm.yml
  name: MD5
  fullName: System.Security.Cryptography.CngAlgorithm.MD5
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngAlgorithm.cs
    startLine: 147
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets a new @'System.Security.Cryptography.CngAlgorithm' object that specifies the Message Digest 5 (MD5) hash algorithm.
  syntax:
    content: public static CngAlgorithm MD5 { get; }
    content.vb: Public Shared ReadOnly Property MD5 As CngAlgorithm
    parameters: []
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies the MD5 algorithm.
- uid: System.Security.Cryptography.CngAlgorithm.Rsa
  id: Rsa
  parent: System.Security.Cryptography.CngAlgorithm
  href: System.Security.Cryptography.CngAlgorithm.yml
  name: Rsa
  fullName: System.Security.Cryptography.CngAlgorithm.Rsa
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngAlgorithm.cs
    startLine: 91
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets a new @'System.Security.Cryptography.CngAlgorithm' object that specifies the RSA hash algorithm.
  syntax:
    content: public static CngAlgorithm Rsa { get; }
    content.vb: Public Shared ReadOnly Property Rsa As CngAlgorithm
    parameters: []
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies the RSA algorithm.
- uid: System.Security.Cryptography.CngAlgorithm.Sha1
  id: Sha1
  parent: System.Security.Cryptography.CngAlgorithm
  href: System.Security.Cryptography.CngAlgorithm.yml
  name: Sha1
  fullName: System.Security.Cryptography.CngAlgorithm.Sha1
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngAlgorithm.cs
    startLine: 155
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets a new @'System.Security.Cryptography.CngAlgorithm' object that specifies the Secure Hash Algorithm 1 (SHA-1) algorithm.
  syntax:
    content: public static CngAlgorithm Sha1 { get; }
    content.vb: Public Shared ReadOnly Property Sha1 As CngAlgorithm
    parameters: []
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies the SHA-1 algorithm.
- uid: System.Security.Cryptography.CngAlgorithm.Sha256
  id: Sha256
  parent: System.Security.Cryptography.CngAlgorithm
  href: System.Security.Cryptography.CngAlgorithm.yml
  name: Sha256
  fullName: System.Security.Cryptography.CngAlgorithm.Sha256
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngAlgorithm.cs
    startLine: 163
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets a new @'System.Security.Cryptography.CngAlgorithm' object that specifies the Secure Hash Algorithm 256 (SHA-256) algorithm.
  syntax:
    content: public static CngAlgorithm Sha256 { get; }
    content.vb: Public Shared ReadOnly Property Sha256 As CngAlgorithm
    parameters: []
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies the SHA-256 algorithm.
- uid: System.Security.Cryptography.CngAlgorithm.Sha384
  id: Sha384
  parent: System.Security.Cryptography.CngAlgorithm
  href: System.Security.Cryptography.CngAlgorithm.yml
  name: Sha384
  fullName: System.Security.Cryptography.CngAlgorithm.Sha384
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngAlgorithm.cs
    startLine: 171
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets a new @'System.Security.Cryptography.CngAlgorithm' object that specifies the Secure Hash Algorithm 384 (SHA-384) algorithm.
  syntax:
    content: public static CngAlgorithm Sha384 { get; }
    content.vb: Public Shared ReadOnly Property Sha384 As CngAlgorithm
    parameters: []
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies the SHA-384 algorithm.
- uid: System.Security.Cryptography.CngAlgorithm.Sha512
  id: Sha512
  parent: System.Security.Cryptography.CngAlgorithm
  href: System.Security.Cryptography.CngAlgorithm.yml
  name: Sha512
  fullName: System.Security.Cryptography.CngAlgorithm.Sha512
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngAlgorithm.cs
    startLine: 179
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets a new @'System.Security.Cryptography.CngAlgorithm' object that specifies the Secure Hash Algorithm 512 (SHA-512) algorithm.
  syntax:
    content: public static CngAlgorithm Sha512 { get; }
    content.vb: Public Shared ReadOnly Property Sha512 As CngAlgorithm
    parameters: []
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies the SHA-512 algorithm.
- uid: System.Security.Cryptography.CngAlgorithm.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.CngAlgorithm
  href: System.Security.Cryptography.CngAlgorithm.yml
  name: Equals(Object)
  fullName: System.Security.Cryptography.CngAlgorithm.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngAlgorithm.cs
    startLine: 58
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Compares the specified object to the current @'System.Security.Cryptography.CngAlgorithm' object.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: An object to be compared to the current @'System.Security.Cryptography.CngAlgorithm' object.
    return:
      type: System.Boolean
      description: true if the *obj* parameter is a @'System.Security.Cryptography.CngAlgorithm' that specifies the same algorithm as the current object; otherwise, false.
- uid: System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)
  id: Equals(System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  href: System.Security.Cryptography.CngAlgorithm.yml
  name: Equals(CngAlgorithm)
  fullName: System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngAlgorithm.cs
    startLine: 65
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Compares the specified @'System.Security.Cryptography.CngAlgorithm' object to the current @'System.Security.Cryptography.CngAlgorithm' object.
  syntax:
    content: public bool Equals(CngAlgorithm other)
    content.vb: Public Function Equals(other As CngAlgorithm) As Boolean
    parameters:
    - id: other
      type: System.Security.Cryptography.CngAlgorithm
      description: An object to be compared to the current @'System.Security.Cryptography.CngAlgorithm' object.
    return:
      type: System.Boolean
      description: true if the *other* parameter specifies the same algorithm as the current object; otherwise, false.
- uid: System.Security.Cryptography.CngAlgorithm.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.CngAlgorithm
  href: System.Security.Cryptography.CngAlgorithm.yml
  name: GetHashCode()
  fullName: System.Security.Cryptography.CngAlgorithm.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngAlgorithm.cs
    startLine: 75
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Generates a hash value for the algorithm name that is embedded in the current @'System.Security.Cryptography.CngAlgorithm' object.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: The hash value of the embedded algorithm name.
- uid: System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  id: op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  href: System.Security.Cryptography.CngAlgorithm.yml
  name: Equality(CngAlgorithm, CngAlgorithm)
  fullName: System.Security.Cryptography.CngAlgorithm.Equality(System.Security.Cryptography.CngAlgorithm, System.Security.Cryptography.CngAlgorithm)
  type: Operator
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngAlgorithm.cs
    startLine: 38
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Determines whether two @'System.Security.Cryptography.CngAlgorithm' objects specify the same algorithm name.
  syntax:
    content: public static bool operator ==(CngAlgorithm left, CngAlgorithm right)
    content.vb: Public Shared Operator =(left As CngAlgorithm, right As CngAlgorithm) As Boolean
    parameters:
    - id: left
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies an algorithm name.
    - id: right
      type: System.Security.Cryptography.CngAlgorithm
      description: A second object, to be compared to the object that is identified by the *left* parameter.
    return:
      type: System.Boolean
      description: true if the two objects specify the same algorithm name; otherwise, false.
- uid: System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  id: op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  href: System.Security.Cryptography.CngAlgorithm.yml
  name: Inequality(CngAlgorithm, CngAlgorithm)
  fullName: System.Security.Cryptography.CngAlgorithm.Inequality(System.Security.Cryptography.CngAlgorithm, System.Security.Cryptography.CngAlgorithm)
  type: Operator
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngAlgorithm.cs
    startLine: 48
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Determines whether two @'System.Security.Cryptography.CngAlgorithm' objects do not specify the same algorithm.
  syntax:
    content: public static bool operator !=(CngAlgorithm left, CngAlgorithm right)
    content.vb: Public Shared Operator <>(left As CngAlgorithm, right As CngAlgorithm) As Boolean
    parameters:
    - id: left
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies an algorithm name.
    - id: right
      type: System.Security.Cryptography.CngAlgorithm
      description: A second object, to be compared to the object that is identified by the *left* parameter.
    return:
      type: System.Boolean
      description: true if the two objects do not specify the same algorithm name; otherwise, false.
- uid: System.Security.Cryptography.CngAlgorithm.ToString
  id: ToString
  parent: System.Security.Cryptography.CngAlgorithm
  href: System.Security.Cryptography.CngAlgorithm.yml
  name: ToString()
  fullName: System.Security.Cryptography.CngAlgorithm.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngAlgorithm.cs
    startLine: 81
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets the name of the algorithm that the current @'System.Security.Cryptography.CngAlgorithm' object specifies.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: The embedded algorithm name.
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
- uid: System.Security.Cryptography.CngAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  href: System.Security.Cryptography.CngAlgorithm.yml
  name: CngAlgorithm
  fullName: System.Security.Cryptography.CngAlgorithm
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
