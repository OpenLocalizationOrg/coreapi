items:
- uid: System.StringComparer
  id: StringComparer
  parent: System
  children:
  - System.StringComparer.#ctor
  - System.StringComparer.Compare(System.String,System.String)
  - System.StringComparer.CurrentCulture
  - System.StringComparer.CurrentCultureIgnoreCase
  - System.StringComparer.Equals(System.String,System.String)
  - System.StringComparer.GetHashCode(System.String)
  - System.StringComparer.Ordinal
  - System.StringComparer.OrdinalIgnoreCase
  - System.StringComparer.System#Collections#IComparer#Compare(System.Object,System.Object)
  - System.StringComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
  - System.StringComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)
  href: System.StringComparer.yml
  name: StringComparer
  fullName: System.StringComparer
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/StringComparer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/StringComparer.cs
    startLine: 13
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Represents a string comparison operation that uses specific case and culture-based or ordinal comparison rules.
  syntax:
    content: 'public abstract class StringComparer : IComparer<string>, IEqualityComparer<string>, IComparer, IEqualityComparer'
    content.vb: Public MustInherit Class StringComparer Implements IComparer(Of String), IEqualityComparer(Of String), IComparer, IEqualityComparer
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IComparer{System.String}
  - System.Collections.Generic.IEqualityComparer{System.String}
  - System.Collections.IComparer
  - System.Collections.IEqualityComparer
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.StringComparer.#ctor
  id: '#ctor'
  parent: System.StringComparer
  href: System.StringComparer.yml
  name: StringComparer()
  fullName: System.StringComparer.StringComparer()
  type: Constructor
  source:
    remote: &o1
      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs
    startLine: 555
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Initializes a new instance of the @'System.StringComparer' class.
  syntax:
    content: protected StringComparer()
    content.vb: Protected Sub New
- uid: System.StringComparer.CurrentCulture
  id: CurrentCulture
  parent: System.StringComparer
  href: System.StringComparer.yml
  name: CurrentCulture
  fullName: System.StringComparer.CurrentCulture
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/StringComparer.cs
    startLine: 35
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Gets a @'System.StringComparer' object that performs a case-sensitive string comparison using the word comparison rules of the current culture.
  syntax:
    content: public static StringComparer CurrentCulture { get; }
    content.vb: Public Shared ReadOnly Property CurrentCulture As StringComparer
    parameters: []
    return:
      type: System.StringComparer
      description: A new @'System.StringComparer' object.
- uid: System.StringComparer.CurrentCultureIgnoreCase
  id: CurrentCultureIgnoreCase
  parent: System.StringComparer
  href: System.StringComparer.yml
  name: CurrentCultureIgnoreCase
  fullName: System.StringComparer.CurrentCultureIgnoreCase
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/StringComparer.cs
    startLine: 42
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Gets a @'System.StringComparer' object that performs case-insensitive string comparisons using the word comparison rules of the current culture.
  syntax:
    content: public static StringComparer CurrentCultureIgnoreCase { get; }
    content.vb: Public Shared ReadOnly Property CurrentCultureIgnoreCase As StringComparer
    parameters: []
    return:
      type: System.StringComparer
      description: A new @'System.StringComparer' object.
- uid: System.StringComparer.Ordinal
  id: Ordinal
  parent: System.StringComparer
  href: System.StringComparer.yml
  name: Ordinal
  fullName: System.StringComparer.Ordinal
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/StringComparer.cs
    startLine: 49
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Gets a @'System.StringComparer' object that performs a case-sensitive ordinal string comparison.
  syntax:
    content: public static StringComparer Ordinal { get; }
    content.vb: Public Shared ReadOnly Property Ordinal As StringComparer
    parameters: []
    return:
      type: System.StringComparer
      description: A @'System.StringComparer' object.
- uid: System.StringComparer.OrdinalIgnoreCase
  id: OrdinalIgnoreCase
  parent: System.StringComparer
  href: System.StringComparer.yml
  name: OrdinalIgnoreCase
  fullName: System.StringComparer.OrdinalIgnoreCase
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/StringComparer.cs
    startLine: 56
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Gets a @'System.StringComparer' object that performs a case-insensitive ordinal string comparison.
  syntax:
    content: public static StringComparer OrdinalIgnoreCase { get; }
    content.vb: Public Shared ReadOnly Property OrdinalIgnoreCase As StringComparer
    parameters: []
    return:
      type: System.StringComparer
      description: A @'System.StringComparer' object.
- uid: System.StringComparer.Compare(System.String,System.String)
  id: Compare(System.String,System.String)
  parent: System.StringComparer
  href: System.StringComparer.yml
  name: Compare(String, String)
  fullName: System.StringComparer.Compare(System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/StringComparer.cs
    startLine: 122
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: When overridden in a derived class, compares two strings and returns an indication of their relative sort order.
  syntax:
    content: public abstract int Compare(string x, string y)
    content.vb: Public MustOverride Function Compare(x As String, y As String) As Integer
    parameters:
    - id: x
      type: System.String
      description: A string to compare to *y*.
    - id: y
      type: System.String
      description: A string to compare to *x*.
    return:
      type: System.Int32
      description: A signed integer that indicates the relative values of *x* and *y*, as shown in the following table.ValueMeaningLess than zero*x* precedes *y* in the sort order.-or-*x* is null and *y* is not null.Zero*x* is equal to *y*.-or-*x* and *y* are both null. Greater than zero*x* follows *y* in the sort order.-or-*y* is null and *x* is not null.
- uid: System.StringComparer.Equals(System.String,System.String)
  id: Equals(System.String,System.String)
  parent: System.StringComparer
  href: System.StringComparer.yml
  name: Equals(String, String)
  fullName: System.StringComparer.Equals(System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/StringComparer.cs
    startLine: 123
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: When overridden in a derived class, indicates whether two strings are equal.
  syntax:
    content: public abstract bool Equals(string x, string y)
    content.vb: Public MustOverride Function Equals(x As String, y As String) As Boolean
    parameters:
    - id: x
      type: System.String
      description: A string to compare to *y*.
    - id: y
      type: System.String
      description: A string to compare to *x*.
    return:
      type: System.Boolean
      description: true if *x* and *y* refer to the same object, or *x* and *y* are equal, or *x* and *y* are null; otherwise, false.
- uid: System.StringComparer.GetHashCode(System.String)
  id: GetHashCode(System.String)
  parent: System.StringComparer
  href: System.StringComparer.yml
  name: GetHashCode(String)
  fullName: System.StringComparer.GetHashCode(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/StringComparer.cs
    startLine: 124
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: When overridden in a derived class, gets the hash code for the specified string.
  syntax:
    content: public abstract int GetHashCode(string obj)
    content.vb: Public MustOverride Function GetHashCode(obj As String) As Integer
    parameters:
    - id: obj
      type: System.String
      description: A string.
    return:
      type: System.Int32
      description: A 32-bit signed hash code calculated from the value of the *obj* parameter.
  exceptions:
  - type: System.ArgumentException
    description: Not enough memory is available to allocate the buffer that is required to compute the hash code.
  - type: System.ArgumentNullException
    description: '*obj* is null.'
- uid: System.StringComparer.System#Collections#IComparer#Compare(System.Object,System.Object)
  id: System#Collections#IComparer#Compare(System.Object,System.Object)
  parent: System.StringComparer
  href: System.StringComparer.yml
  name: IComparer.Compare(Object, Object)
  name.vb: System.Collections.IComparer.Compare(Object, Object)
  fullName: System.StringComparer.System.Collections.IComparer.Compare(System.Object, System.Object)
  type: Method
  source:
    remote: *o1
    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs
    startLine: 563
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  syntax:
    content: int IComparer.Compare(object x, object y)
    content.vb: Function System.Collections.IComparer.Compare(x As Object, y As Object) As Integer Implements IComparer.Compare
    parameters:
    - id: x
      type: System.Object
    - id: y
      type: System.Object
    return:
      type: System.Int32
- uid: System.StringComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
  id: System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
  parent: System.StringComparer
  href: System.StringComparer.yml
  name: IEqualityComparer.Equals(Object, Object)
  name.vb: System.Collections.IEqualityComparer.Equals(Object, Object)
  fullName: System.StringComparer.System.Collections.IEqualityComparer.Equals(System.Object, System.Object)
  type: Method
  source:
    remote: *o1
    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs
    startLine: 564
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  syntax:
    content: bool IEqualityComparer.Equals(object x, object y)
    content.vb: Function System.Collections.IEqualityComparer.Equals(x As Object, y As Object) As Boolean Implements IEqualityComparer.Equals
    parameters:
    - id: x
      type: System.Object
    - id: y
      type: System.Object
    return:
      type: System.Boolean
- uid: System.StringComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)
  id: System#Collections#IEqualityComparer#GetHashCode(System.Object)
  parent: System.StringComparer
  href: System.StringComparer.yml
  name: IEqualityComparer.GetHashCode(Object)
  name.vb: System.Collections.IEqualityComparer.GetHashCode(Object)
  fullName: System.StringComparer.System.Collections.IEqualityComparer.GetHashCode(System.Object)
  type: Method
  source:
    remote: *o1
    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs
    startLine: 565
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  syntax:
    content: int IEqualityComparer.GetHashCode(object obj)
    content.vb: Function System.Collections.IEqualityComparer.GetHashCode(obj As Object) As Integer Implements IEqualityComparer.GetHashCode
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Int32
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.StringComparer
  parent: System
  isExternal: false
  href: System.StringComparer.yml
  name: StringComparer
  fullName: System.StringComparer
  type: Class
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
  type: Class
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  type: Class
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  type: Class
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
