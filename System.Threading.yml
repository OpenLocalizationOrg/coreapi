items:
- uid: System.Threading
  id: System.Threading
  children:
  - System.Threading.AbandonedMutexException
  - System.Threading.AsyncLocal`1
  - System.Threading.AsyncLocalValueChangedArgs`1
  - System.Threading.AutoResetEvent
  - System.Threading.Barrier
  - System.Threading.BarrierPostPhaseException
  - System.Threading.CancellationToken
  - System.Threading.CancellationTokenRegistration
  - System.Threading.CancellationTokenSource
  - System.Threading.ContextCallback
  - System.Threading.CountdownEvent
  - System.Threading.EventResetMode
  - System.Threading.EventWaitHandle
  - System.Threading.ExecutionContext
  - System.Threading.Interlocked
  - System.Threading.IOCompletionCallback
  - System.Threading.LazyInitializer
  - System.Threading.LazyThreadSafetyMode
  - System.Threading.LockRecursionException
  - System.Threading.LockRecursionPolicy
  - System.Threading.ManualResetEvent
  - System.Threading.ManualResetEventSlim
  - System.Threading.Monitor
  - System.Threading.Mutex
  - System.Threading.NativeOverlapped
  - System.Threading.ParameterizedThreadStart
  - System.Threading.PreAllocatedOverlapped
  - System.Threading.ReaderWriterLockSlim
  - System.Threading.RegisteredWaitHandle
  - System.Threading.Semaphore
  - System.Threading.SemaphoreFullException
  - System.Threading.SemaphoreSlim
  - System.Threading.SendOrPostCallback
  - System.Threading.SpinLock
  - System.Threading.SpinWait
  - System.Threading.SynchronizationContext
  - System.Threading.SynchronizationLockException
  - System.Threading.Thread
  - System.Threading.ThreadingAclExtensions
  - System.Threading.ThreadLocal`1
  - System.Threading.ThreadPool
  - System.Threading.ThreadPoolBoundHandle
  - System.Threading.ThreadStart
  - System.Threading.ThreadStartException
  - System.Threading.ThreadState
  - System.Threading.ThreadStateException
  - System.Threading.Timeout
  - System.Threading.Timer
  - System.Threading.TimerCallback
  - System.Threading.Volatile
  - System.Threading.WaitCallback
  - System.Threading.WaitHandle
  - System.Threading.WaitHandleCannotBeOpenedException
  - System.Threading.WaitHandleExtensions
  - System.Threading.WaitOrTimerCallback
  href: System.Threading.yml
  name: System.Threading
  fullName: System.Threading
  type: Namespace
  source:
    remote:
      path: src/System.Threading/src/System/Threading/ReaderWriterLockSlim.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Threading/src/System/Threading/ReaderWriterLockSlim.cs
    startLine: 7
  assemblies:
  - System.Threading.Overlapped
  summary: The @'System.Threading' namespace provides classes and interfaces that enable multithreaded programming. In addition to classes for synchronizing thread activities and access to data (@'System.Threading.Mutex', @'System.Threading.Monitor', @'System.Threading.Interlocked', @'System.Threading.AutoResetEvent', and so on), this namespace includes a @'System.Threading.ThreadPool' class that allows you to use a pool of system-supplied threads, and a @'System.Threading.Timer' class that executes callback methods on thread pool threads.
references:
- uid: System.Threading.IOCompletionCallback
  parent: System.Threading
  isExternal: false
  href: System.Threading.IOCompletionCallback.yml
  name: IOCompletionCallback
  fullName: System.Threading.IOCompletionCallback
  type: Delegate
  summary: Receives the error code, number of bytes, and overlapped value type when an I/O operation completes on the thread pool.
- uid: System.Threading.NativeOverlapped
  isExternal: false
  href: System.Threading.NativeOverlapped.yml
  name: NativeOverlapped
  fullName: System.Threading.NativeOverlapped
  type: Struct
  summary: Provides an explicit layout that is visible from unmanaged code and that will have the same layout as the Win32 OVERLAPPED structure with additional reserved fields at the end.
- uid: System.Threading.PreAllocatedOverlapped
  parent: System.Threading
  isExternal: false
  href: System.Threading.PreAllocatedOverlapped.yml
  name: PreAllocatedOverlapped
  fullName: System.Threading.PreAllocatedOverlapped
  type: Class
- uid: System.Threading.ThreadPoolBoundHandle
  parent: System.Threading
  isExternal: false
  href: System.Threading.ThreadPoolBoundHandle.yml
  name: ThreadPoolBoundHandle
  fullName: System.Threading.ThreadPoolBoundHandle
  type: Class
- uid: System.Threading.AbandonedMutexException
  isExternal: false
  href: System.Threading.AbandonedMutexException.yml
  name: AbandonedMutexException
  fullName: System.Threading.AbandonedMutexException
  type: Class
  summary: The exception that is thrown when one thread acquires a @'System.Threading.Mutex' object that another thread has abandoned by exiting without releasing it.
- uid: System.Threading.AsyncLocal`1
  isExternal: false
  href: System.Threading.AsyncLocal`1.yml
  name: AsyncLocal<T>
  name.vb: AsyncLocal(Of T)
  fullName: System.Threading.AsyncLocal<T>
  fullName.vb: System.Threading.AsyncLocal(Of T)
  type: Class
  spec.csharp:
  - uid: System.Threading.AsyncLocal`1
    name: AsyncLocal
    fullName: System.Threading.AsyncLocal
    href: System.Threading.AsyncLocal`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.AsyncLocal`1
    name: AsyncLocal
    fullName: System.Threading.AsyncLocal
    href: System.Threading.AsyncLocal`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Threading.AsyncLocalValueChangedArgs`1
  isExternal: false
  href: System.Threading.AsyncLocalValueChangedArgs`1.yml
  name: AsyncLocalValueChangedArgs<T>
  name.vb: AsyncLocalValueChangedArgs(Of T)
  fullName: System.Threading.AsyncLocalValueChangedArgs<T>
  fullName.vb: System.Threading.AsyncLocalValueChangedArgs(Of T)
  type: Struct
  spec.csharp:
  - uid: System.Threading.AsyncLocalValueChangedArgs`1
    name: AsyncLocalValueChangedArgs
    fullName: System.Threading.AsyncLocalValueChangedArgs
    href: System.Threading.AsyncLocalValueChangedArgs`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.AsyncLocalValueChangedArgs`1
    name: AsyncLocalValueChangedArgs
    fullName: System.Threading.AsyncLocalValueChangedArgs
    href: System.Threading.AsyncLocalValueChangedArgs`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Threading.AutoResetEvent
  isExternal: false
  href: System.Threading.AutoResetEvent.yml
  name: AutoResetEvent
  fullName: System.Threading.AutoResetEvent
  type: Class
- uid: System.Threading.Barrier
  isExternal: false
  href: System.Threading.Barrier.yml
  name: Barrier
  fullName: System.Threading.Barrier
  type: Class
- uid: System.Threading.BarrierPostPhaseException
  isExternal: false
  href: System.Threading.BarrierPostPhaseException.yml
  name: BarrierPostPhaseException
  fullName: System.Threading.BarrierPostPhaseException
  type: Class
- uid: System.Threading.ContextCallback
  parent: System.Threading
  isExternal: false
  href: System.Threading.ContextCallback.yml
  name: ContextCallback
  fullName: System.Threading.ContextCallback
  type: Delegate
- uid: System.Threading.CountdownEvent
  isExternal: false
  href: System.Threading.CountdownEvent.yml
  name: CountdownEvent
  fullName: System.Threading.CountdownEvent
  type: Class
  summary: Represents a synchronization primitive that is signaled when its count reaches zero.
- uid: System.Threading.EventResetMode
  parent: System.Threading
  isExternal: false
  href: System.Threading.EventResetMode.yml
  name: EventResetMode
  fullName: System.Threading.EventResetMode
  type: Enum
- uid: System.Threading.EventWaitHandle
  parent: System.Threading
  isExternal: false
  href: System.Threading.EventWaitHandle.yml
  name: EventWaitHandle
  fullName: System.Threading.EventWaitHandle
  type: Class
- uid: System.Threading.ExecutionContext
  parent: System.Threading
  isExternal: false
  href: System.Threading.ExecutionContext.yml
  name: ExecutionContext
  fullName: System.Threading.ExecutionContext
  type: Class
- uid: System.Threading.Interlocked
  isExternal: false
  href: System.Threading.Interlocked.yml
  name: Interlocked
  fullName: System.Threading.Interlocked
  type: Class
- uid: System.Threading.LazyInitializer
  isExternal: false
  href: System.Threading.LazyInitializer.yml
  name: LazyInitializer
  fullName: System.Threading.LazyInitializer
  type: Class
  summary: Provides lazy initialization routines.
- uid: System.Threading.LockRecursionException
  isExternal: false
  href: System.Threading.LockRecursionException.yml
  name: LockRecursionException
  fullName: System.Threading.LockRecursionException
  type: Class
  summary: The exception that is thrown when recursive entry into a lock is not compatible with the recursion policy for the lock.
- uid: System.Threading.LockRecursionPolicy
  parent: System.Threading
  isExternal: false
  href: System.Threading.LockRecursionPolicy.yml
  name: LockRecursionPolicy
  fullName: System.Threading.LockRecursionPolicy
  type: Enum
  summary: Specifies whether a lock can be entered multiple times by the same thread.
- uid: System.Threading.ManualResetEvent
  isExternal: false
  href: System.Threading.ManualResetEvent.yml
  name: ManualResetEvent
  fullName: System.Threading.ManualResetEvent
  type: Class
- uid: System.Threading.ManualResetEventSlim
  isExternal: false
  href: System.Threading.ManualResetEventSlim.yml
  name: ManualResetEventSlim
  fullName: System.Threading.ManualResetEventSlim
  type: Class
  summary: Provides a slimmed down version of @'System.Threading.ManualResetEvent'.
- uid: System.Threading.Monitor
  isExternal: false
  href: System.Threading.Monitor.yml
  name: Monitor
  fullName: System.Threading.Monitor
  type: Class
  summary: Provides a mechanism that synchronizes access to objects.
- uid: System.Threading.Mutex
  parent: System.Threading
  isExternal: false
  href: System.Threading.Mutex.yml
  name: Mutex
  fullName: System.Threading.Mutex
  type: Class
- uid: System.Threading.ReaderWriterLockSlim
  isExternal: false
  href: System.Threading.ReaderWriterLockSlim.yml
  name: ReaderWriterLockSlim
  fullName: System.Threading.ReaderWriterLockSlim
  type: Class
- uid: System.Threading.Semaphore
  parent: System.Threading
  isExternal: false
  href: System.Threading.Semaphore.yml
  name: Semaphore
  fullName: System.Threading.Semaphore
  type: Class
- uid: System.Threading.SemaphoreFullException
  isExternal: false
  href: System.Threading.SemaphoreFullException.yml
  name: SemaphoreFullException
  fullName: System.Threading.SemaphoreFullException
  type: Class
  summary: The exception that is thrown when the <see cref="Overload:System.Threading.Semaphore.Release" /> method is called on a semaphore whose count is already at the maximum.
- uid: System.Threading.SemaphoreSlim
  isExternal: false
  href: System.Threading.SemaphoreSlim.yml
  name: SemaphoreSlim
  fullName: System.Threading.SemaphoreSlim
  type: Class
  summary: Represents a lightweight alternative to @'System.Threading.Semaphore' that limits the number of threads that can access a resource or pool of resources concurrently.
- uid: System.Threading.SendOrPostCallback
  parent: System.Threading
  isExternal: false
  href: System.Threading.SendOrPostCallback.yml
  name: SendOrPostCallback
  fullName: System.Threading.SendOrPostCallback
  type: Delegate
  summary: Represents a method to be called when a message is to be dispatched to a synchronization context.
- uid: System.Threading.SpinLock
  isExternal: false
  href: System.Threading.SpinLock.yml
  name: SpinLock
  fullName: System.Threading.SpinLock
  type: Struct
- uid: System.Threading.SpinWait
  isExternal: false
  href: System.Threading.SpinWait.yml
  name: SpinWait
  fullName: System.Threading.SpinWait
  type: Struct
  summary: Provides support for spin-based waiting.
- uid: System.Threading.SynchronizationContext
  parent: System.Threading
  isExternal: false
  href: System.Threading.SynchronizationContext.yml
  name: SynchronizationContext
  fullName: System.Threading.SynchronizationContext
  type: Class
  summary: Provides the basic functionality for propagating a synchronization context in various synchronization models.
- uid: System.Threading.SynchronizationLockException
  isExternal: false
  href: System.Threading.SynchronizationLockException.yml
  name: SynchronizationLockException
  fullName: System.Threading.SynchronizationLockException
  type: Class
- uid: System.Threading.ThreadLocal`1
  isExternal: false
  href: System.Threading.ThreadLocal`1.yml
  name: ThreadLocal<T>
  name.vb: ThreadLocal(Of T)
  fullName: System.Threading.ThreadLocal<T>
  fullName.vb: System.Threading.ThreadLocal(Of T)
  type: Class
  spec.csharp:
  - uid: System.Threading.ThreadLocal`1
    name: ThreadLocal
    fullName: System.Threading.ThreadLocal
    href: System.Threading.ThreadLocal`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.ThreadLocal`1
    name: ThreadLocal
    fullName: System.Threading.ThreadLocal
    href: System.Threading.ThreadLocal`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Threading.Volatile
  isExternal: false
  href: System.Threading.Volatile.yml
  name: Volatile
  fullName: System.Threading.Volatile
  type: Class
  summary: Contains methods for performing volatile memory operations.
- uid: System.Threading.WaitHandleCannotBeOpenedException
  isExternal: false
  href: System.Threading.WaitHandleCannotBeOpenedException.yml
  name: WaitHandleCannotBeOpenedException
  fullName: System.Threading.WaitHandleCannotBeOpenedException
  type: Class
  summary: The exception that is thrown when an attempt is made to open a system mutex or semaphore that does not exist.
- uid: System.Threading.LazyThreadSafetyMode
  parent: System.Threading
  isExternal: false
  href: System.Threading.LazyThreadSafetyMode.yml
  name: LazyThreadSafetyMode
  fullName: System.Threading.LazyThreadSafetyMode
  type: Enum
- uid: System.Threading.Timeout
  isExternal: false
  href: System.Threading.Timeout.yml
  name: Timeout
  fullName: System.Threading.Timeout
  type: Class
- uid: System.Threading.WaitHandle
  parent: System.Threading
  isExternal: false
  href: System.Threading.WaitHandle.yml
  name: WaitHandle
  fullName: System.Threading.WaitHandle
  type: Class
  summary: "Encapsulates operating system–specific objects that wait for exclusive access to shared resources."
- uid: System.Threading.ParameterizedThreadStart
  parent: System.Threading
  isExternal: false
  href: System.Threading.ParameterizedThreadStart.yml
  name: ParameterizedThreadStart
  fullName: System.Threading.ParameterizedThreadStart
  type: Delegate
  summary: Represents the method that executes on a @'System.Threading.Thread'.
- uid: System.Threading.Thread
  parent: System.Threading
  isExternal: false
  href: System.Threading.Thread.yml
  name: Thread
  fullName: System.Threading.Thread
  type: Class
  summary: Creates and controls a thread, sets its priority, and gets its status. To browse the .NET Framework source code for this type, see the Reference Source.
- uid: System.Threading.ThreadStart
  parent: System.Threading
  isExternal: false
  href: System.Threading.ThreadStart.yml
  name: ThreadStart
  fullName: System.Threading.ThreadStart
  type: Delegate
  summary: Represents the method that executes on a @'System.Threading.Thread'.
- uid: System.Threading.ThreadStartException
  isExternal: false
  href: System.Threading.ThreadStartException.yml
  name: ThreadStartException
  fullName: System.Threading.ThreadStartException
  type: Class
  summary: The exception that is thrown when a failure occurs in a managed thread after the underlying operating system thread has been started, but before the thread is ready to execute user code.
- uid: System.Threading.ThreadState
  parent: System.Threading
  isExternal: false
  href: System.Threading.ThreadState.yml
  name: ThreadState
  fullName: System.Threading.ThreadState
  type: Enum
  summary: Specifies the execution states of a @'System.Threading.Thread'.
- uid: System.Threading.ThreadStateException
  isExternal: false
  href: System.Threading.ThreadStateException.yml
  name: ThreadStateException
  fullName: System.Threading.ThreadStateException
  type: Class
  summary: The exception that is thrown when a @'System.Threading.Thread' is in an invalid @'System.Threading.Thread.ThreadState' for the method call.
- uid: System.Threading.ThreadingAclExtensions
  isExternal: false
  href: System.Threading.ThreadingAclExtensions.yml
  name: ThreadingAclExtensions
  fullName: System.Threading.ThreadingAclExtensions
  type: Class
- uid: System.Threading.RegisteredWaitHandle
  parent: System.Threading
  isExternal: false
  href: System.Threading.RegisteredWaitHandle.yml
  name: RegisteredWaitHandle
  fullName: System.Threading.RegisteredWaitHandle
  type: Class
  summary: Represents a handle that has been registered when calling @'System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.UInt32,System.Boolean)'. This class cannot be inherited.
- uid: System.Threading.ThreadPool
  isExternal: false
  href: System.Threading.ThreadPool.yml
  name: ThreadPool
  fullName: System.Threading.ThreadPool
  type: Class
  summary: Provides a pool of threads that can be used to execute tasks, post work items, process asynchronous I/O, wait on behalf of other threads, and process timers.
- uid: System.Threading.WaitCallback
  parent: System.Threading
  isExternal: false
  href: System.Threading.WaitCallback.yml
  name: WaitCallback
  fullName: System.Threading.WaitCallback
  type: Delegate
  summary: Represents a callback method to be executed by a thread pool thread.
- uid: System.Threading.WaitOrTimerCallback
  parent: System.Threading
  isExternal: false
  href: System.Threading.WaitOrTimerCallback.yml
  name: WaitOrTimerCallback
  fullName: System.Threading.WaitOrTimerCallback
  type: Delegate
  summary: Represents a method to be called when a @'System.Threading.WaitHandle' is signaled or times out.
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  href: System.Threading.CancellationToken.yml
  name: CancellationToken
  fullName: System.Threading.CancellationToken
  type: Struct
- uid: System.Threading.CancellationTokenRegistration
  parent: System.Threading
  isExternal: false
  href: System.Threading.CancellationTokenRegistration.yml
  name: CancellationTokenRegistration
  fullName: System.Threading.CancellationTokenRegistration
  type: Struct
- uid: System.Threading.CancellationTokenSource
  parent: System.Threading
  isExternal: false
  href: System.Threading.CancellationTokenSource.yml
  name: CancellationTokenSource
  fullName: System.Threading.CancellationTokenSource
  type: Class
- uid: System.Threading.Timer
  isExternal: false
  href: System.Threading.Timer.yml
  name: Timer
  fullName: System.Threading.Timer
  type: Class
  summary: Provides a mechanism for executing a method at specified intervals. This class cannot be inherited.To browse the .NET Framework source code for this type, see the Reference Source.
- uid: System.Threading.TimerCallback
  parent: System.Threading
  isExternal: false
  href: System.Threading.TimerCallback.yml
  name: TimerCallback
  fullName: System.Threading.TimerCallback
  type: Delegate
  summary: Represents the method that handles calls from a @'System.Threading.Timer'.
- uid: System.Threading.WaitHandleExtensions
  isExternal: false
  href: System.Threading.WaitHandleExtensions.yml
  name: WaitHandleExtensions
  fullName: System.Threading.WaitHandleExtensions
  type: Class
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
  type: Namespace
