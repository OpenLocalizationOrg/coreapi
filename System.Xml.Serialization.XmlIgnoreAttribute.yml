items:
- uid: System.Xml.Serialization.XmlIgnoreAttribute
  commentId: T:System.Xml.Serialization.XmlIgnoreAttribute
  id: XmlIgnoreAttribute
  parent: System.Xml.Serialization
  children:
  - System.Xml.Serialization.XmlIgnoreAttribute.#ctor
  langs:
  - csharp
  - vb
  name: XmlIgnoreAttribute
  fullName: System.Xml.Serialization.XmlIgnoreAttribute
  type: Class
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlIgnoreAttribute
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 152
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Instructs the <xref href=\"System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method of the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> not to serialize the public field or public read/write property value.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Xml.Serialization.XmlIgnoreAttribute\" data-throw-if-not-resolved=\"false\"></xref> belongs to a family of attributes that controls how the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes or deserializes an object. If you apply the <xref href=\"System.Xml.Serialization.XmlIgnoreAttribute\" data-throw-if-not-resolved=\"false\"></xref> to any member of a class, the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> ignores the member when serializing or deserializing an instance of the class. For a complete list of similar attributes, see Attributes That Control XML Serialization.</p>\n<p>You can override the behavior caused by the <xref href=\"System.Xml.Serialization.XmlIgnoreAttribute\" data-throw-if-not-resolved=\"false\"></xref> by creating an <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object, and setting its <xref href=\"System.Xml.Serialization.XmlAttributes.XmlIgnore\" data-throw-if-not-resolved=\"false\"></xref> property to <strong>false</strong>. You must <xref href=\"System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)\" data-throw-if-not-resolved=\"false\"></xref> the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object to an instance of the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> class. Lastly, you must use the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object to construct an instance of the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> class before you call the <xref href=\"System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\" data-throw-if-not-resolved=\"false\"></xref> methods.</p>\n<p>The XML Schema Definition Tool (Xsd.exe) occasionally generates the <xref href=\"System.Xml.Serialization.XmlIgnoreAttribute\" data-throw-if-not-resolved=\"false\"></xref> when creating classes from a schema file (.xsd). This behavior occurs because value types cannot be set to <strong>null</strong>, but all XML data types can be. Therefore, the tool creates two fields when it encounters an XML type that maps to a value type: one to hold the value and another special field that takes the form of <em>fieldnameSpecified</em>, where the <em>fieldname</em> is replaced by the name of the field or property. Notice, however, that this special field is generated only when the schema specifies that the element has no minimum occurrence (minOccurs = \"0\") and that the element has no default value. The <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> sets and checks this special field to determine whether a value has been set for the field or property. Because the special field must not be serialized, the tool applies the <xref href=\"System.Xml.Serialization.XmlIgnoreAttribute\" data-throw-if-not-resolved=\"false\"></xref> to it.</p>\n<p>For more information about using attributes, see Extending Metadata Using Attributes.</p>\n<p>You can use the word <strong>XmlIgnore</strong> in your code instead of the longer <xref href=\"System.Xml.Serialization.XmlIgnoreAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example shows a class named <strong>Group</strong>, which contains a field named <strong>Comment</strong>. The example assigns the <xref href=\"System.Xml.Serialization.XmlIgnoreAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the field, thereby instructing the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> to ignore the field when serializing or deserializing an instance of the class.</p>Classic XmlIgnoreAttribute.XmlIgnoreAttribute Example#1"
  syntax:
    content: 'public class XmlIgnoreAttribute : Attribute'
    content.vb: >-
      Public Class XmlIgnoreAttribute
          Inherits Attribute
  seealso:
  - type: System.Xml.Serialization.XmlAttributeOverrides
    commentId: T:System.Xml.Serialization.XmlAttributeOverrides
  - type: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  - type: System.Xml.Serialization.XmlAttributes.XmlIgnore
    commentId: P:System.Xml.Serialization.XmlAttributes.XmlIgnore
  - type: System.Xml.Serialization.XmlSerializer
    commentId: T:System.Xml.Serialization.XmlSerializer
  - type: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.Serialization.XmlIgnoreAttribute.#ctor
  commentId: M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlIgnoreAttribute
  langs:
  - csharp
  - vb
  name: XmlIgnoreAttribute()
  fullName: System.Xml.Serialization.XmlIgnoreAttribute.XmlIgnoreAttribute()
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 155
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlIgnoreAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example:
  - "\n<p>The following example shows a class named <strong>Group</strong>, which contains a field named <strong>Comment</strong>. The example assigns the <xref href=\"System.Xml.Serialization.XmlIgnoreAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the field, thereby instructing the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> to ignore the field when serializing or deserializing an instance of the class.</p>Classic XmlIgnoreAttribute.XmlIgnoreAttribute Example#1"
  syntax:
    content: public XmlIgnoreAttribute()
    content.vb: Public Sub New
  seealso:
  - type: System.Xml.Serialization.XmlAttributes.XmlIgnore
    commentId: P:System.Xml.Serialization.XmlAttributes.XmlIgnore
  - type: System.Xml.Serialization.XmlAttributeOverrides
    commentId: T:System.Xml.Serialization.XmlAttributeOverrides
  - type: System.Xml.Serialization.XmlSerializer
    commentId: T:System.Xml.Serialization.XmlSerializer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Xml.Serialization
  isExternal: false
  name: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
