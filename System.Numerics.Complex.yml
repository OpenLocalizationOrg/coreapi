items:
- uid: System.Numerics.Complex
  id: Complex
  parent: System.Numerics
  children:
  - System.Numerics.Complex.#ctor(System.Double,System.Double)
  - System.Numerics.Complex.Abs(System.Numerics.Complex)
  - System.Numerics.Complex.Acos(System.Numerics.Complex)
  - System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.Asin(System.Numerics.Complex)
  - System.Numerics.Complex.Atan(System.Numerics.Complex)
  - System.Numerics.Complex.Conjugate(System.Numerics.Complex)
  - System.Numerics.Complex.Cos(System.Numerics.Complex)
  - System.Numerics.Complex.Cosh(System.Numerics.Complex)
  - System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.Equals(System.Numerics.Complex)
  - System.Numerics.Complex.Equals(System.Object)
  - System.Numerics.Complex.Exp(System.Numerics.Complex)
  - System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)
  - System.Numerics.Complex.GetHashCode
  - System.Numerics.Complex.Imaginary
  - System.Numerics.Complex.ImaginaryOne
  - System.Numerics.Complex.Log(System.Numerics.Complex)
  - System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)
  - System.Numerics.Complex.Log10(System.Numerics.Complex)
  - System.Numerics.Complex.Magnitude
  - System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.Negate(System.Numerics.Complex)
  - System.Numerics.Complex.One
  - System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex
  - System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex
  - System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)
  - System.Numerics.Complex.Phase
  - System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)
  - System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.Real
  - System.Numerics.Complex.Reciprocal(System.Numerics.Complex)
  - System.Numerics.Complex.Sin(System.Numerics.Complex)
  - System.Numerics.Complex.Sinh(System.Numerics.Complex)
  - System.Numerics.Complex.Sqrt(System.Numerics.Complex)
  - System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.Tan(System.Numerics.Complex)
  - System.Numerics.Complex.Tanh(System.Numerics.Complex)
  - System.Numerics.Complex.ToString
  - System.Numerics.Complex.ToString(System.IFormatProvider)
  - System.Numerics.Complex.ToString(System.String)
  - System.Numerics.Complex.ToString(System.String,System.IFormatProvider)
  - System.Numerics.Complex.Zero
  href: System.Numerics.Complex.yml
  name: Complex
  fullName: System.Numerics.Complex
  type: Struct
  source:
    remote: &o0
      path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 18
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Represents a complex number.
  syntax:
    content: 'public struct Complex : IEquatable<Complex>, IFormattable'
    content.vb: Public Structure Complex Implements IEquatable(Of Complex), IFormattable
  implements:
  - System.IEquatable{System.Numerics.Complex}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: System.Numerics.Complex.ImaginaryOne
  id: ImaginaryOne
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: ImaginaryOne
  fullName: System.Numerics.Complex.ImaginaryOne
  type: Field
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 68
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a new @'System.Numerics.Complex' instance with a real number equal to zero and an imaginary number equal to one.
  syntax:
    content: public static readonly Complex ImaginaryOne
    content.vb: Public Shared ReadOnly ImaginaryOne As Complex
- uid: System.Numerics.Complex.One
  id: One
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: One
  fullName: System.Numerics.Complex.One
  type: Field
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 67
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a new @'System.Numerics.Complex' instance with a real number equal to one and an imaginary number equal to zero.
  syntax:
    content: public static readonly Complex One
    content.vb: Public Shared ReadOnly One As Complex
- uid: System.Numerics.Complex.Zero
  id: Zero
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Zero
  fullName: System.Numerics.Complex.Zero
  type: Field
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 66
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a new @'System.Numerics.Complex' instance with a real number equal to zero and an imaginary number equal to zero.
  syntax:
    content: public static readonly Complex Zero
    content.vb: Public Shared ReadOnly Zero As Complex
- uid: System.Numerics.Complex.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Complex(Double, Double)
  fullName: System.Numerics.Complex.Complex(System.Double, System.Double)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 72
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Initializes a new instance of the @'System.Numerics.Complex' structure using the specified real and imaginary values.
  syntax:
    content: public Complex(double real, double imaginary)
    content.vb: Public Sub New(real As Double, imaginary As Double)
    parameters:
    - id: real
      type: System.Double
      description: The real part of the complex number.
    - id: imaginary
      type: System.Double
      description: The imaginary part of the complex number.
- uid: System.Numerics.Complex.Imaginary
  id: Imaginary
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Imaginary
  fullName: System.Numerics.Complex.Imaginary
  type: Property
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 40
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Gets the imaginary component of the current @'System.Numerics.Complex' object.
  syntax:
    content: public double Imaginary { get; }
    content.vb: Public ReadOnly Property Imaginary As Double
    parameters: []
    return:
      type: System.Double
      description: The imaginary component of a complex number.
- uid: System.Numerics.Complex.Magnitude
  id: Magnitude
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Magnitude
  fullName: System.Numerics.Complex.Magnitude
  type: Property
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 48
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Gets the magnitude (or absolute value) of a complex number.
  syntax:
    content: public double Magnitude { get; }
    content.vb: Public ReadOnly Property Magnitude As Double
    parameters: []
    return:
      type: System.Double
      description: The magnitude of the current instance.
- uid: System.Numerics.Complex.Phase
  id: Phase
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Phase
  fullName: System.Numerics.Complex.Phase
  type: Property
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 56
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Gets the phase of a complex number.
  syntax:
    content: public double Phase { get; }
    content.vb: Public ReadOnly Property Phase As Double
    parameters: []
    return:
      type: System.Double
      description: The phase of a complex number, in radians.
- uid: System.Numerics.Complex.Real
  id: Real
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Real
  fullName: System.Numerics.Complex.Real
  type: Property
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 32
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Gets the real component of the current @'System.Numerics.Complex' object.
  syntax:
    content: public double Real { get; }
    content.vb: Public ReadOnly Property Real As Double
    parameters: []
    return:
      type: System.Double
      description: The real component of a complex number.
- uid: System.Numerics.Complex.Abs(System.Numerics.Complex)
  id: Abs(System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Abs(Complex)
  fullName: System.Numerics.Complex.Abs(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 156
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Gets the absolute value (or magnitude) of a complex number.
  syntax:
    content: public static double Abs(Complex value)
    content.vb: Public Shared Function Abs(value As Complex) As Double
    parameters:
    - id: value
      type: System.Numerics.Complex
      description: A complex number.
    return:
      type: System.Double
      description: The absolute value of *value*.
- uid: System.Numerics.Complex.Acos(System.Numerics.Complex)
  id: Acos(System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Acos(Complex)
  fullName: System.Numerics.Complex.Acos(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 355
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the angle that is the arc cosine of the specified complex number.
  syntax:
    content: public static Complex Acos(Complex value)
    content.vb: Public Shared Function Acos(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
      description: A complex number that represents a cosine.
    return:
      type: System.Numerics.Complex
      description: The angle, measured in radians, which is the arc cosine of *value*.
- uid: System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)
  id: Add(System.Numerics.Complex,System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Add(Complex, Complex)
  fullName: System.Numerics.Complex.Add(System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 88
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Adds two complex numbers and returns the result.
  syntax:
    content: public static Complex Add(Complex left, Complex right)
    content.vb: Public Shared Function Add(left As Complex, right As Complex) As Complex
    parameters:
    - id: left
      type: System.Numerics.Complex
      description: The first complex number to add.
    - id: right
      type: System.Numerics.Complex
      description: The second complex number to add.
    return:
      type: System.Numerics.Complex
      description: The sum of *left* and *right*.
- uid: System.Numerics.Complex.Asin(System.Numerics.Complex)
  id: Asin(System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Asin(Complex)
  fullName: System.Numerics.Complex.Asin(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 332
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the angle that is the arc sine of the specified complex number.
  syntax:
    content: public static Complex Asin(Complex value)
    content.vb: Public Shared Function Asin(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
      description: A complex number.
    return:
      type: System.Numerics.Complex
      description: The angle which is the arc sine of *value*.
- uid: System.Numerics.Complex.Atan(System.Numerics.Complex)
  id: Atan(System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Atan(Complex)
  fullName: System.Numerics.Complex.Atan(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 373
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the angle that is the arc tangent of the specified complex number.
  syntax:
    content: public static Complex Atan(Complex value)
    content.vb: Public Shared Function Atan(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
      description: A complex number.
    return:
      type: System.Numerics.Complex
      description: The angle that is the arc tangent of *value*.
- uid: System.Numerics.Complex.Conjugate(System.Numerics.Complex)
  id: Conjugate(System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Conjugate(Complex)
  fullName: System.Numerics.Complex.Conjugate(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 186
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Computes the conjugate of a complex number and returns the result.
  syntax:
    content: public static Complex Conjugate(Complex value)
    content.vb: Public Shared Function Conjugate(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
      description: A complex number.
    return:
      type: System.Numerics.Complex
      description: The conjugate of *value*.
- uid: System.Numerics.Complex.Cos(System.Numerics.Complex)
  id: Cos(System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Cos(Complex)
  fullName: System.Numerics.Complex.Cos(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 341
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the cosine of the specified complex number.
  syntax:
    content: public static Complex Cos(Complex value)
    content.vb: Public Shared Function Cos(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
      description: A complex number.
    return:
      type: System.Numerics.Complex
      description: The cosine of *value*.
- uid: System.Numerics.Complex.Cosh(System.Numerics.Complex)
  id: Cosh(System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Cosh(Complex)
  fullName: System.Numerics.Complex.Cosh(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 348
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the hyperbolic cosine of the specified complex number.
  syntax:
    content: public static Complex Cosh(Complex value)
    content.vb: Public Shared Function Cosh(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
      description: A complex number.
    return:
      type: System.Numerics.Complex
      description: The hyperbolic cosine of *value*.
- uid: System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)
  id: Divide(System.Numerics.Complex,System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Divide(Complex, Complex)
  fullName: System.Numerics.Complex.Divide(System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 103
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Divides one complex number by another and returns the result.
  syntax:
    content: public static Complex Divide(Complex dividend, Complex divisor)
    content.vb: Public Shared Function Divide(dividend As Complex, divisor As Complex) As Complex
    parameters:
    - id: dividend
      type: System.Numerics.Complex
      description: The complex number to be divided.
    - id: divisor
      type: System.Numerics.Complex
      description: The complex number to divide by.
    return:
      type: System.Numerics.Complex
      description: The quotient of the division.
- uid: System.Numerics.Complex.Equals(System.Numerics.Complex)
  id: Equals(System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Equals(Complex)
  fullName: System.Numerics.Complex.Equals(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 221
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether the current instance and a specified complex number have the same value.
  syntax:
    content: public bool Equals(Complex value)
    content.vb: Public Function Equals(value As Complex) As Boolean
    parameters:
    - id: value
      type: System.Numerics.Complex
      description: The complex number to compare.
    return:
      type: System.Boolean
      description: true if this complex number and *value* have the same value; otherwise, false.
- uid: System.Numerics.Complex.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Equals(Object)
  fullName: System.Numerics.Complex.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 216
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether the current instance and a specified object have the same value.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare.
    return:
      type: System.Boolean
      description: true if the *obj* parameter is a @'System.Numerics.Complex' object or a type capable of implicit conversion to a @'System.Numerics.Complex' object, and its value is equal to the current @'System.Numerics.Complex' object; otherwise, false.
  overridden: System.ValueType.Equals(System.Object)
- uid: System.Numerics.Complex.Exp(System.Numerics.Complex)
  id: Exp(System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Exp(Complex)
  fullName: System.Numerics.Complex.Exp(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 394
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns e raised to the power specified by a complex number.
  syntax:
    content: public static Complex Exp(Complex value)
    content.vb: Public Shared Function Exp(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
      description: A complex number that specifies a power.
    return:
      type: System.Numerics.Complex
      description: The number e raised to the power *value*.
- uid: System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)
  id: FromPolarCoordinates(System.Double,System.Double)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: FromPolarCoordinates(Double, Double)
  fullName: System.Numerics.Complex.FromPolarCoordinates(System.Double, System.Double)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 78
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Creates a complex number from a point's polar coordinates.
  syntax:
    content: public static Complex FromPolarCoordinates(double magnitude, double phase)
    content.vb: Public Shared Function FromPolarCoordinates(magnitude As Double, phase As Double) As Complex
    parameters:
    - id: magnitude
      type: System.Double
      description: The magnitude, which is the distance from the origin (the intersection of the x-axis and the y-axis) to the number.
    - id: phase
      type: System.Double
      description: The phase, which is the angle from the line to the horizontal axis, measured in radians.
    return:
      type: System.Numerics.Complex
      description: A complex number.
- uid: System.Numerics.Complex.GetHashCode
  id: GetHashCode
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: GetHashCode()
  fullName: System.Numerics.Complex.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 305
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the hash code for the current @'System.Numerics.Complex' object.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  overridden: System.ValueType.GetHashCode
- uid: System.Numerics.Complex.Log(System.Numerics.Complex)
  id: Log(System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Log(Complex)
  fullName: System.Numerics.Complex.Log(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 381
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the natural (base e) logarithm of a specified complex number.
  syntax:
    content: public static Complex Log(Complex value)
    content.vb: Public Shared Function Log(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
      description: A complex number.
    return:
      type: System.Numerics.Complex
      description: The natural (base e) logarithm of *value*.
- uid: System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)
  id: Log(System.Numerics.Complex,System.Double)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Log(Complex, Double)
  fullName: System.Numerics.Complex.Log(System.Numerics.Complex, System.Double)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 385
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the logarithm of a specified complex number in a specified base.
  syntax:
    content: public static Complex Log(Complex value, double baseValue)
    content.vb: Public Shared Function Log(value As Complex, baseValue As Double) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
      description: A complex number.
    - id: baseValue
      type: System.Double
      description: The base of the logarithm.
    return:
      type: System.Numerics.Complex
      description: The logarithm of *value* in base *baseValue*.
- uid: System.Numerics.Complex.Log10(System.Numerics.Complex)
  id: Log10(System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Log10(Complex)
  fullName: System.Numerics.Complex.Log10(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 389
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the base-10 logarithm of a specified complex number.
  syntax:
    content: public static Complex Log10(Complex value)
    content.vb: Public Shared Function Log10(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
      description: A complex number.
    return:
      type: System.Numerics.Complex
      description: The base-10 logarithm of *value*.
- uid: System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)
  id: Multiply(System.Numerics.Complex,System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Multiply(Complex, Complex)
  fullName: System.Numerics.Complex.Multiply(System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 98
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the product of two complex numbers.
  syntax:
    content: public static Complex Multiply(Complex left, Complex right)
    content.vb: Public Shared Function Multiply(left As Complex, right As Complex) As Complex
    parameters:
    - id: left
      type: System.Numerics.Complex
      description: The first complex number to multiply.
    - id: right
      type: System.Numerics.Complex
      description: The second complex number to multiply.
    return:
      type: System.Numerics.Complex
      description: The product of the *left* and *right* parameters.
- uid: System.Numerics.Complex.Negate(System.Numerics.Complex)
  id: Negate(System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Negate(Complex)
  fullName: System.Numerics.Complex.Negate(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 83
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the additive inverse of a specified complex number.
  syntax:
    content: public static Complex Negate(Complex value)
    content.vb: Public Shared Function Negate(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
      description: A complex number.
    return:
      type: System.Numerics.Complex
      description: The result of the @'System.Numerics.Complex.Real' and @'System.Numerics.Complex.Imaginary' components of the *value* parameter multiplied by -1.
- uid: System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)
  id: op_Addition(System.Numerics.Complex,System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Addition(Complex, Complex)
  fullName: System.Numerics.Complex.Addition(System.Numerics.Complex, System.Numerics.Complex)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 115
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Adds two complex numbers.
  syntax:
    content: public static Complex operator +(Complex left, Complex right)
    content.vb: Public Shared Operator +(left As Complex, right As Complex) As Complex
    parameters:
    - id: left
      type: System.Numerics.Complex
      description: The first value to add.
    - id: right
      type: System.Numerics.Complex
      description: The second value to add.
    return:
      type: System.Numerics.Complex
      description: The sum of *left* and *right*.
- uid: System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)
  id: op_Division(System.Numerics.Complex,System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Division(Complex, Complex)
  fullName: System.Numerics.Complex.Division(System.Numerics.Complex, System.Numerics.Complex)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 133
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Divides a specified complex number by another specified complex number.
  syntax:
    content: public static Complex operator /(Complex left, Complex right)
    content.vb: Public Shared Operator /(left As Complex, right As Complex) As Complex
    parameters:
    - id: left
      type: System.Numerics.Complex
      description: The value to be divided.
    - id: right
      type: System.Numerics.Complex
      description: The value to divide by.
    return:
      type: System.Numerics.Complex
      description: The result of dividing *left* by *right*.
- uid: System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)
  id: op_Equality(System.Numerics.Complex,System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Equality(Complex, Complex)
  fullName: System.Numerics.Complex.Equality(System.Numerics.Complex, System.Numerics.Complex)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 205
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether two complex numbers are equal.
  syntax:
    content: public static bool operator ==(Complex left, Complex right)
    content.vb: Public Shared Operator =(left As Complex, right As Complex) As Boolean
    parameters:
    - id: left
      type: System.Numerics.Complex
      description: The first complex number to compare.
    - id: right
      type: System.Numerics.Complex
      description: The second complex number to compare.
    return:
      type: System.Boolean
      description: true if the *left* and *right* parameters have the same value; otherwise, false.
- uid: System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex
  id: op_Explicit(System.Decimal)~System.Numerics.Complex
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Explicit(Decimal to Complex)
  name.vb: Narrowing(Decimal to Complex)
  fullName: System.Numerics.Complex.Explicit(System.Decimal to System.Numerics.Complex)
  fullName.vb: System.Numerics.Complex.Narrowing(System.Decimal to System.Numerics.Complex)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 276
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an explicit conversion of a @'System.Decimal' value to a complex number.
  syntax:
    content: public static explicit operator Complex(decimal value)
    content.vb: Public Shared Narrowing Operator CType(value As Decimal) As Complex
    parameters:
    - id: value
      type: System.Decimal
      description: The value to convert to a complex number.
    return:
      type: System.Numerics.Complex
      description: A complex number that has a real component equal to *value* and an imaginary component equal to zero.
- uid: System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex
  id: op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Explicit(BigInteger to Complex)
  name.vb: Narrowing(BigInteger to Complex)
  fullName: System.Numerics.Complex.Explicit(System.Numerics.BigInteger to System.Numerics.Complex)
  fullName.vb: System.Numerics.Complex.Narrowing(System.Numerics.BigInteger to System.Numerics.Complex)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 272
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an explicit conversion of a @'System.Numerics.BigInteger' value to a complex number.
  syntax:
    content: public static explicit operator Complex(BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As Complex
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: The value to convert to a complex number.
    return:
      type: System.Numerics.Complex
      description: A complex number that has a real component equal to *value* and an imaginary component equal to zero.
- uid: System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex
  id: op_Implicit(System.Byte)~System.Numerics.Complex
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Implicit(Byte to Complex)
  name.vb: Widening(Byte to Complex)
  fullName: System.Numerics.Complex.Implicit(System.Byte to System.Numerics.Complex)
  fullName.vb: System.Numerics.Complex.Widening(System.Byte to System.Numerics.Complex)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 260
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an implicit conversion of an unsigned byte to a complex number.
  syntax:
    content: public static implicit operator Complex(byte value)
    content.vb: Public Shared Widening Operator CType(value As Byte) As Complex
    parameters:
    - id: value
      type: System.Byte
      description: The value to convert to a complex number.
    return:
      type: System.Numerics.Complex
      description: An object that contains the value of the *value* parameter as its real part and zero as its imaginary part.
- uid: System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex
  id: op_Implicit(System.Double)~System.Numerics.Complex
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Implicit(Double to Complex)
  name.vb: Widening(Double to Complex)
  fullName: System.Numerics.Complex.Implicit(System.Double to System.Numerics.Complex)
  fullName.vb: System.Numerics.Complex.Widening(System.Double to System.Numerics.Complex)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 268
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an implicit conversion of a double-precision floating-point number to a complex number.
  syntax:
    content: public static implicit operator Complex(double value)
    content.vb: Public Shared Widening Operator CType(value As Double) As Complex
    parameters:
    - id: value
      type: System.Double
      description: The value to convert to a complex number.
    return:
      type: System.Numerics.Complex
      description: An object that contains the value of the *value* parameter as its real part and zero as its imaginary part.
- uid: System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex
  id: op_Implicit(System.Int16)~System.Numerics.Complex
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Implicit(Int16 to Complex)
  name.vb: Widening(Int16 to Complex)
  fullName: System.Numerics.Complex.Implicit(System.Int16 to System.Numerics.Complex)
  fullName.vb: System.Numerics.Complex.Widening(System.Int16 to System.Numerics.Complex)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 228
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an implicit conversion of a 16-bit signed integer to a complex number.
  syntax:
    content: public static implicit operator Complex(short value)
    content.vb: Public Shared Widening Operator CType(value As Short) As Complex
    parameters:
    - id: value
      type: System.Int16
      description: The value to convert to a complex number.
    return:
      type: System.Numerics.Complex
      description: An object that contains the value of the *value* parameter as its real part and zero as its imaginary part.
- uid: System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex
  id: op_Implicit(System.Int32)~System.Numerics.Complex
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Implicit(Int32 to Complex)
  name.vb: Widening(Int32 to Complex)
  fullName: System.Numerics.Complex.Implicit(System.Int32 to System.Numerics.Complex)
  fullName.vb: System.Numerics.Complex.Widening(System.Int32 to System.Numerics.Complex)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 232
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an implicit conversion of a 32-bit signed integer to a complex number.
  syntax:
    content: public static implicit operator Complex(int value)
    content.vb: Public Shared Widening Operator CType(value As Integer) As Complex
    parameters:
    - id: value
      type: System.Int32
      description: The value to convert to a complex number.
    return:
      type: System.Numerics.Complex
      description: An object that contains the value of the *value* parameter as its real part and zero as its imaginary part.
- uid: System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex
  id: op_Implicit(System.Int64)~System.Numerics.Complex
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Implicit(Int64 to Complex)
  name.vb: Widening(Int64 to Complex)
  fullName: System.Numerics.Complex.Implicit(System.Int64 to System.Numerics.Complex)
  fullName.vb: System.Numerics.Complex.Widening(System.Int64 to System.Numerics.Complex)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 236
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an implicit conversion of a 64-bit signed integer to a complex number.
  syntax:
    content: public static implicit operator Complex(long value)
    content.vb: Public Shared Widening Operator CType(value As Long) As Complex
    parameters:
    - id: value
      type: System.Int64
      description: The value to convert to a complex number.
    return:
      type: System.Numerics.Complex
      description: An object that contains the value of the *value* parameter as its real part and zero as its imaginary part.
- uid: System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex
  id: op_Implicit(System.SByte)~System.Numerics.Complex
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Implicit(SByte to Complex)
  name.vb: Widening(SByte to Complex)
  fullName: System.Numerics.Complex.Implicit(System.SByte to System.Numerics.Complex)
  fullName.vb: System.Numerics.Complex.Widening(System.SByte to System.Numerics.Complex)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 255
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an implicit conversion of a signed byte to a complex number.
  syntax:
    content: public static implicit operator Complex(sbyte value)
    content.vb: Public Shared Widening Operator CType(value As SByte) As Complex
    parameters:
    - id: value
      type: System.SByte
      description: The value to convert to a complex number.
    return:
      type: System.Numerics.Complex
      description: An object that contains the value of the *value* parameter as its real part and zero as its imaginary part.
- uid: System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex
  id: op_Implicit(System.Single)~System.Numerics.Complex
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Implicit(Single to Complex)
  name.vb: Widening(Single to Complex)
  fullName: System.Numerics.Complex.Implicit(System.Single to System.Numerics.Complex)
  fullName.vb: System.Numerics.Complex.Widening(System.Single to System.Numerics.Complex)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 264
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an implicit conversion of a single-precision floating-point number to a complex number.
  syntax:
    content: public static implicit operator Complex(float value)
    content.vb: Public Shared Widening Operator CType(value As Single) As Complex
    parameters:
    - id: value
      type: System.Single
      description: The value to convert to a complex number.
    return:
      type: System.Numerics.Complex
      description: An object that contains the value of the *value* parameter as its real part and zero as its imaginary part.
- uid: System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex
  id: op_Implicit(System.UInt16)~System.Numerics.Complex
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Implicit(UInt16 to Complex)
  name.vb: Widening(UInt16 to Complex)
  fullName: System.Numerics.Complex.Implicit(System.UInt16 to System.Numerics.Complex)
  fullName.vb: System.Numerics.Complex.Widening(System.UInt16 to System.Numerics.Complex)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 240
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an implicit conversion of a 16-bit unsigned integer to a complex number.
  syntax:
    content: public static implicit operator Complex(ushort value)
    content.vb: Public Shared Widening Operator CType(value As UShort) As Complex
    parameters:
    - id: value
      type: System.UInt16
      description: The value to convert to a complex number.
    return:
      type: System.Numerics.Complex
      description: An object that contains the value of the *value* parameter as its real part and zero as its imaginary part.
- uid: System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex
  id: op_Implicit(System.UInt32)~System.Numerics.Complex
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Implicit(UInt32 to Complex)
  name.vb: Widening(UInt32 to Complex)
  fullName: System.Numerics.Complex.Implicit(System.UInt32 to System.Numerics.Complex)
  fullName.vb: System.Numerics.Complex.Widening(System.UInt32 to System.Numerics.Complex)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 245
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an implicit conversion of a 32-bit unsigned integer to a complex number.
  syntax:
    content: public static implicit operator Complex(uint value)
    content.vb: Public Shared Widening Operator CType(value As UInteger) As Complex
    parameters:
    - id: value
      type: System.UInt32
      description: The value to convert to a complex number.
    return:
      type: System.Numerics.Complex
      description: An object that contains the value of the *value* parameter as its real part and zero as its imaginary part.
- uid: System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex
  id: op_Implicit(System.UInt64)~System.Numerics.Complex
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Implicit(UInt64 to Complex)
  name.vb: Widening(UInt64 to Complex)
  fullName: System.Numerics.Complex.Implicit(System.UInt64 to System.Numerics.Complex)
  fullName.vb: System.Numerics.Complex.Widening(System.UInt64 to System.Numerics.Complex)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 250
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an implicit conversion of a 64-bit unsigned integer to a complex number.
  syntax:
    content: public static implicit operator Complex(ulong value)
    content.vb: Public Shared Widening Operator CType(value As ULong) As Complex
    parameters:
    - id: value
      type: System.UInt64
      description: The value to convert to a complex number.
    return:
      type: System.Numerics.Complex
      description: An object that contains the value of the *value* parameter as its real part and zero as its imaginary part.
- uid: System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)
  id: op_Inequality(System.Numerics.Complex,System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Inequality(Complex, Complex)
  fullName: System.Numerics.Complex.Inequality(System.Numerics.Complex, System.Numerics.Complex)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 209
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether two complex numbers are not equal.
  syntax:
    content: public static bool operator !=(Complex left, Complex right)
    content.vb: Public Shared Operator <>(left As Complex, right As Complex) As Boolean
    parameters:
    - id: left
      type: System.Numerics.Complex
      description: The first value to compare.
    - id: right
      type: System.Numerics.Complex
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* and *right* are not equal; otherwise, false.
- uid: System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)
  id: op_Multiply(System.Numerics.Complex,System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Multiply(Complex, Complex)
  fullName: System.Numerics.Complex.Multiply(System.Numerics.Complex, System.Numerics.Complex)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 125
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Multiplies two specified complex numbers.
  syntax:
    content: public static Complex operator *(Complex left, Complex right)
    content.vb: Public Shared Operator *(left As Complex, right As Complex) As Complex
    parameters:
    - id: left
      type: System.Numerics.Complex
      description: The first value to multiply.
    - id: right
      type: System.Numerics.Complex
      description: The second value to multiply.
    return:
      type: System.Numerics.Complex
      description: The product of *left* and *right*.
- uid: System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)
  id: op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Subtraction(Complex, Complex)
  fullName: System.Numerics.Complex.Subtraction(System.Numerics.Complex, System.Numerics.Complex)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 120
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Subtracts a complex number from another complex number.
  syntax:
    content: public static Complex operator -(Complex left, Complex right)
    content.vb: Public Shared Operator -(left As Complex, right As Complex) As Complex
    parameters:
    - id: left
      type: System.Numerics.Complex
      description: The value to subtract from (the minuend).
    - id: right
      type: System.Numerics.Complex
      description: The value to subtract (the subtrahend).
    return:
      type: System.Numerics.Complex
      description: The result of subtracting *right* from *left*.
- uid: System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)
  id: op_UnaryNegation(System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: UnaryNegation(Complex)
  fullName: System.Numerics.Complex.UnaryNegation(System.Numerics.Complex)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 109
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the additive inverse of a specified complex number.
  syntax:
    content: public static Complex operator -(Complex value)
    content.vb: Public Shared Operator -(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
      description: The value to negate.
    return:
      type: System.Numerics.Complex
      description: The result of the @'System.Numerics.Complex.Real' and @'System.Numerics.Complex.Imaginary' components of the *value* parameter multiplied by -1.
- uid: System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)
  id: Pow(System.Numerics.Complex,System.Double)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Pow(Complex, Double)
  fullName: System.Numerics.Complex.Pow(System.Numerics.Complex, System.Double)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 434
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a specified complex number raised to a power specified by a double-precision floating-point number.
  syntax:
    content: public static Complex Pow(Complex value, double power)
    content.vb: Public Shared Function Pow(value As Complex, power As Double) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
      description: A complex number to be raised to a power.
    - id: power
      type: System.Double
      description: A double-precision floating-point number that specifies a power.
    return:
      type: System.Numerics.Complex
      description: The complex number *value* raised to the power *power*.
- uid: System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)
  id: Pow(System.Numerics.Complex,System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Pow(Complex, Complex)
  fullName: System.Numerics.Complex.Pow(System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 408
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a specified complex number raised to a power specified by a complex number.
  syntax:
    content: public static Complex Pow(Complex value, Complex power)
    content.vb: Public Shared Function Pow(value As Complex, power As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
      description: A complex number to be raised to a power.
    - id: power
      type: System.Numerics.Complex
      description: A complex number that specifies a power.
    return:
      type: System.Numerics.Complex
      description: The complex number *value* raised to the power *power*.
- uid: System.Numerics.Complex.Reciprocal(System.Numerics.Complex)
  id: Reciprocal(System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Reciprocal(Complex)
  fullName: System.Numerics.Complex.Reciprocal(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 192
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the multiplicative inverse of a complex number.
  syntax:
    content: public static Complex Reciprocal(Complex value)
    content.vb: Public Shared Function Reciprocal(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
      description: A complex number.
    return:
      type: System.Numerics.Complex
      description: The reciprocal of *value*.
- uid: System.Numerics.Complex.Sin(System.Numerics.Complex)
  id: Sin(System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Sin(Complex)
  fullName: System.Numerics.Complex.Sin(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 318
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the sine of the specified complex number.
  syntax:
    content: public static Complex Sin(Complex value)
    content.vb: Public Shared Function Sin(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
      description: A complex number.
    return:
      type: System.Numerics.Complex
      description: The sine of *value*.
- uid: System.Numerics.Complex.Sinh(System.Numerics.Complex)
  id: Sinh(System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Sinh(Complex)
  fullName: System.Numerics.Complex.Sinh(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 325
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the hyperbolic sine of the specified complex number.
  syntax:
    content: public static Complex Sinh(Complex value)
    content.vb: Public Shared Function Sinh(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
      description: A complex number.
    return:
      type: System.Numerics.Complex
      description: The hyperbolic sine of *value*.
- uid: System.Numerics.Complex.Sqrt(System.Numerics.Complex)
  id: Sqrt(System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Sqrt(Complex)
  fullName: System.Numerics.Complex.Sqrt(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 402
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the square root of a specified complex number.
  syntax:
    content: public static Complex Sqrt(Complex value)
    content.vb: Public Shared Function Sqrt(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
      description: A complex number.
    return:
      type: System.Numerics.Complex
      description: The square root of *value*.
- uid: System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)
  id: Subtract(System.Numerics.Complex,System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Subtract(Complex, Complex)
  fullName: System.Numerics.Complex.Subtract(System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 93
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Subtracts one complex number from another and returns the result.
  syntax:
    content: public static Complex Subtract(Complex left, Complex right)
    content.vb: Public Shared Function Subtract(left As Complex, right As Complex) As Complex
    parameters:
    - id: left
      type: System.Numerics.Complex
      description: The value to subtract from (the minuend).
    - id: right
      type: System.Numerics.Complex
      description: The value to subtract (the subtrahend).
    return:
      type: System.Numerics.Complex
      description: The result of subtracting *right* from *left*.
- uid: System.Numerics.Complex.Tan(System.Numerics.Complex)
  id: Tan(System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Tan(Complex)
  fullName: System.Numerics.Complex.Tan(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 363
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the tangent of the specified complex number.
  syntax:
    content: public static Complex Tan(Complex value)
    content.vb: Public Shared Function Tan(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
      description: A complex number.
    return:
      type: System.Numerics.Complex
      description: The tangent of *value*.
- uid: System.Numerics.Complex.Tanh(System.Numerics.Complex)
  id: Tanh(System.Numerics.Complex)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Tanh(Complex)
  fullName: System.Numerics.Complex.Tanh(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 368
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the hyperbolic tangent of the specified complex number.
  syntax:
    content: public static Complex Tanh(Complex value)
    content.vb: Public Shared Function Tanh(value As Complex) As Complex
    parameters:
    - id: value
      type: System.Numerics.Complex
      description: A complex number.
    return:
      type: System.Numerics.Complex
      description: The hyperbolic tangent of *value*.
- uid: System.Numerics.Complex.ToString
  id: ToString
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: ToString()
  fullName: System.Numerics.Complex.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 284
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Converts the value of the current complex number to its equivalent string representation in Cartesian form.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: The string representation of the current instance in Cartesian form.
  overridden: System.ValueType.ToString
- uid: System.Numerics.Complex.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: ToString(IFormatProvider)
  fullName: System.Numerics.Complex.ToString(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 294
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified culture-specific formatting information.
  syntax:
    content: public string ToString(IFormatProvider provider)
    content.vb: Public Function ToString(provider As IFormatProvider) As String
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.String
      description: The string representation of the current instance in Cartesian form, as specified by *provider*.
- uid: System.Numerics.Complex.ToString(System.String)
  id: ToString(System.String)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: ToString(String)
  fullName: System.Numerics.Complex.ToString(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 289
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format for its real and imaginary parts.
  syntax:
    content: public string ToString(string format)
    content.vb: Public Function ToString(format As String) As String
    parameters:
    - id: format
      type: System.String
      description: A standard or custom numeric format string.
    return:
      type: System.String
      description: The string representation of the current instance in Cartesian form.
  exceptions:
  - type: System.FormatException
    description: '*format* is not a valid format string.'
- uid: System.Numerics.Complex.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: ToString(String, IFormatProvider)
  fullName: System.Numerics.Complex.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 299
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format and culture-specific format information for its real and imaginary parts.
  syntax:
    content: public string ToString(string format, IFormatProvider provider)
    content.vb: Public Function ToString(format As String, provider As IFormatProvider) As String
    parameters:
    - id: format
      type: System.String
      description: A standard or custom numeric format string.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.String
      description: The string representation of the current instance in Cartesian form, as specified by *format* and *provider*.
  exceptions:
  - type: System.FormatException
    description: '*format* is not a valid format string.'
references:
- uid: System.Numerics
  isExternal: false
  name: System.Numerics
  fullName: System.Numerics
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Double
  parent: System
  isExternal: false
  href: System.Double.yml
  name: Double
  fullName: System.Double
- uid: System.Numerics.Complex
  parent: System.Numerics
  isExternal: false
  href: System.Numerics.Complex.yml
  name: Complex
  fullName: System.Numerics.Complex
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: System.ValueType.yml
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    href: System.ValueType.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    href: System.ValueType.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  href: System.ValueType.yml
  name: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  href: System.ValueType.yml
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    href: System.ValueType.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    href: System.ValueType.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.Decimal
  parent: System
  isExternal: false
  href: System.Decimal.yml
  name: Decimal
  fullName: System.Decimal
- uid: System.Numerics.BigInteger
  parent: System.Numerics
  isExternal: false
  href: System.Numerics.BigInteger.yml
  name: BigInteger
  fullName: System.Numerics.BigInteger
- uid: System.Byte
  parent: System
  isExternal: false
  href: System.Byte.yml
  name: Byte
  fullName: System.Byte
- uid: System.Int16
  parent: System
  isExternal: false
  href: System.Int16.yml
  name: Int16
  fullName: System.Int16
- uid: System.Int64
  parent: System
  isExternal: false
  href: System.Int64.yml
  name: Int64
  fullName: System.Int64
- uid: System.SByte
  parent: System
  isExternal: false
  href: System.SByte.yml
  name: SByte
  fullName: System.SByte
- uid: System.Single
  parent: System
  isExternal: false
  href: System.Single.yml
  name: Single
  fullName: System.Single
- uid: System.UInt16
  parent: System
  isExternal: false
  href: System.UInt16.yml
  name: UInt16
  fullName: System.UInt16
- uid: System.UInt32
  parent: System
  isExternal: false
  href: System.UInt32.yml
  name: UInt32
  fullName: System.UInt32
- uid: System.UInt64
  parent: System
  isExternal: false
  href: System.UInt64.yml
  name: UInt64
  fullName: System.UInt64
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  href: System.ValueType.yml
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    href: System.ValueType.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    href: System.ValueType.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  href: System.IFormatProvider.yml
  name: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.FormatException
  parent: System
  isExternal: false
  href: System.FormatException.yml
  name: FormatException
  fullName: System.FormatException
  summary: The exception that is thrown when the format of an argument is invalid, or when a composite format string is not well formed.
