items:
- uid: System.Numerics.BigInteger
  id: BigInteger
  parent: System.Numerics
  children:
  - System.Numerics.BigInteger.#ctor(System.Byte[])
  - System.Numerics.BigInteger.#ctor(System.Decimal)
  - System.Numerics.BigInteger.#ctor(System.Double)
  - System.Numerics.BigInteger.#ctor(System.Int32)
  - System.Numerics.BigInteger.#ctor(System.Int64)
  - System.Numerics.BigInteger.#ctor(System.Single)
  - System.Numerics.BigInteger.#ctor(System.UInt32)
  - System.Numerics.BigInteger.#ctor(System.UInt64)
  - System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)
  - System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.CompareTo(System.Int64)
  - System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)
  - System.Numerics.BigInteger.CompareTo(System.UInt64)
  - System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)
  - System.Numerics.BigInteger.Equals(System.Int64)
  - System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)
  - System.Numerics.BigInteger.Equals(System.Object)
  - System.Numerics.BigInteger.Equals(System.UInt64)
  - System.Numerics.BigInteger.GetHashCode
  - System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.IsEven
  - System.Numerics.BigInteger.IsOne
  - System.Numerics.BigInteger.IsPowerOfTwo
  - System.Numerics.BigInteger.IsZero
  - System.Numerics.BigInteger.Log(System.Numerics.BigInteger)
  - System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)
  - System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)
  - System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.MinusOne
  - System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)
  - System.Numerics.BigInteger.One
  - System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)
  - System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)
  - System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger
  - System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger
  - System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte
  - System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal
  - System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double
  - System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16
  - System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32
  - System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64
  - System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte
  - System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single
  - System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16
  - System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32
  - System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64
  - System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger
  - System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)
  - System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)
  - System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)
  - System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)
  - System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger
  - System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger
  - System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger
  - System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger
  - System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger
  - System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger
  - System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger
  - System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger
  - System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)
  - System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)
  - System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)
  - System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)
  - System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)
  - System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)
  - System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)
  - System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)
  - System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)
  - System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)
  - System.Numerics.BigInteger.Parse(System.String)
  - System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)
  - System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  - System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)
  - System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)
  - System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.Sign
  - System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - System.Numerics.BigInteger.System#IComparable#CompareTo(System.Object)
  - System.Numerics.BigInteger.ToByteArray
  - System.Numerics.BigInteger.ToString
  - System.Numerics.BigInteger.ToString(System.IFormatProvider)
  - System.Numerics.BigInteger.ToString(System.String)
  - System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)
  - System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)
  - System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)
  - System.Numerics.BigInteger.Zero
  href: System.Numerics.BigInteger.yml
  name: BigInteger
  fullName: System.Numerics.BigInteger
  type: Struct
  source:
    remote: &o0
      path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 21
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Represents an arbitrarily large signed integer.
  syntax:
    content: 'public struct BigInteger : IComparable, IComparable<BigInteger>, IEquatable<BigInteger>, IFormattable'
    content.vb: Public Structure BigInteger Implements IComparable, IComparable(Of BigInteger), IEquatable(Of BigInteger), IFormattable
  implements:
  - System.IComparable
  - System.IComparable{System.Numerics.BigInteger}
  - System.IEquatable{System.Numerics.BigInteger}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: System.Numerics.BigInteger.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: BigInteger(Byte[])
  name.vb: BigInteger(Byte())
  fullName: System.Numerics.BigInteger.BigInteger(System.Byte[])
  fullName.vb: System.Numerics.BigInteger.BigInteger(System.Byte())
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 661
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Initializes a new instance of the @'System.Numerics.BigInteger' structure using the values in a byte array.
  syntax:
    content: public BigInteger(byte[] value)
    content.vb: Public Sub New(value As Byte())
    parameters:
    - id: value
      type: System.Byte[]
      description: An array of byte values in little-endian order.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
- uid: System.Numerics.BigInteger.#ctor(System.Decimal)
  id: '#ctor(System.Decimal)'
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: BigInteger(Decimal)
  fullName: System.Numerics.BigInteger.BigInteger(System.Decimal)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 626
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Initializes a new instance of the @'System.Numerics.BigInteger' structure using a @'System.Decimal' value.
  syntax:
    content: public BigInteger(decimal value)
    content.vb: Public Sub New(value As Decimal)
    parameters:
    - id: value
      type: System.Decimal
      description: A decimal number.
- uid: System.Numerics.BigInteger.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: BigInteger(Double)
  fullName: System.Numerics.BigInteger.BigInteger(System.Double)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 558
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Initializes a new instance of the @'System.Numerics.BigInteger' structure using a double-precision floating-point value.
  syntax:
    content: public BigInteger(double value)
    content.vb: Public Sub New(value As Double)
    parameters:
    - id: value
      type: System.Double
      description: A double-precision floating-point value.
  exceptions:
  - type: System.OverflowException
    description: The value of *value* is @'System.Double.NaN'.-or-The value of *value* is @'System.Double.NegativeInfinity'.-or-The value of *value* is @'System.Double.PositiveInfinity'.
- uid: System.Numerics.BigInteger.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: BigInteger(Int32)
  fullName: System.Numerics.BigInteger.BigInteger(System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 458
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Initializes a new instance of the @'System.Numerics.BigInteger' structure using a 32-bit signed integer value.
  syntax:
    content: public BigInteger(int value)
    content.vb: Public Sub New(value As Integer)
    parameters:
    - id: value
      type: System.Int32
      description: A 32-bit signed integer.
- uid: System.Numerics.BigInteger.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: BigInteger(Int64)
  fullName: System.Numerics.BigInteger.BigInteger(System.Int64)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 487
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Initializes a new instance of the @'System.Numerics.BigInteger' structure using a 64-bit signed integer value.
  syntax:
    content: public BigInteger(long value)
    content.vb: Public Sub New(value As Long)
    parameters:
    - id: value
      type: System.Int64
      description: A 64-bit signed integer.
- uid: System.Numerics.BigInteger.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: BigInteger(Single)
  fullName: System.Numerics.BigInteger.BigInteger(System.Single)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 553
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Initializes a new instance of the @'System.Numerics.BigInteger' structure using a single-precision floating-point value.
  syntax:
    content: public BigInteger(float value)
    content.vb: Public Sub New(value As Single)
    parameters:
    - id: value
      type: System.Single
      description: A single-precision floating-point value.
  exceptions:
  - type: System.OverflowException
    description: The value of *value* is @'System.Single.NaN'.-or-The value of *value* is @'System.Single.NegativeInfinity'.-or-The value of *value* is @'System.Single.PositiveInfinity'.
- uid: System.Numerics.BigInteger.#ctor(System.UInt32)
  id: '#ctor(System.UInt32)'
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: BigInteger(UInt32)
  fullName: System.Numerics.BigInteger.BigInteger(System.UInt32)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 470
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Initializes a new instance of the @'System.Numerics.BigInteger' structure using an unsigned 32-bit integer value.
  syntax:
    content: public BigInteger(uint value)
    content.vb: Public Sub New(value As UInteger)
    parameters:
    - id: value
      type: System.UInt32
      description: An unsigned 32-bit integer value.
- uid: System.Numerics.BigInteger.#ctor(System.UInt64)
  id: '#ctor(System.UInt64)'
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: BigInteger(UInt64)
  fullName: System.Numerics.BigInteger.BigInteger(System.UInt64)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 528
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Initializes a new instance of the @'System.Numerics.BigInteger' structure with an unsigned 64-bit integer value.
  syntax:
    content: public BigInteger(ulong value)
    content.vb: Public Sub New(value As ULong)
    parameters:
    - id: value
      type: System.UInt64
      description: An unsigned 64-bit integer.
- uid: System.Numerics.BigInteger.IsEven
  id: IsEven
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: IsEven
  fullName: System.Numerics.BigInteger.IsEven
  type: Property
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 112
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Indicates whether the value of the current @'System.Numerics.BigInteger' object is an even number.
  syntax:
    content: public bool IsEven { get; }
    content.vb: Public ReadOnly Property IsEven As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the value of the @'System.Numerics.BigInteger' object is an even number; otherwise, false.
- uid: System.Numerics.BigInteger.IsOne
  id: IsOne
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: IsOne
  fullName: System.Numerics.BigInteger.IsOne
  type: Property
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 110
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Indicates whether the value of the current @'System.Numerics.BigInteger' object is @'System.Numerics.BigInteger.One'.
  syntax:
    content: public bool IsOne { get; }
    content.vb: Public ReadOnly Property IsOne As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the value of the @'System.Numerics.BigInteger' object is @'System.Numerics.BigInteger.One'; otherwise, false.
- uid: System.Numerics.BigInteger.IsPowerOfTwo
  id: IsPowerOfTwo
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: IsPowerOfTwo
  fullName: System.Numerics.BigInteger.IsPowerOfTwo
  type: Property
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 85
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Indicates whether the value of the current @'System.Numerics.BigInteger' object is a power of two.
  syntax:
    content: public bool IsPowerOfTwo { get; }
    content.vb: Public ReadOnly Property IsPowerOfTwo As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the value of the @'System.Numerics.BigInteger' object is a power of two; otherwise, false.
- uid: System.Numerics.BigInteger.IsZero
  id: IsZero
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: IsZero
  fullName: System.Numerics.BigInteger.IsZero
  type: Property
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 108
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Indicates whether the value of the current @'System.Numerics.BigInteger' object is @'System.Numerics.BigInteger.Zero'.
  syntax:
    content: public bool IsZero { get; }
    content.vb: Public ReadOnly Property IsZero As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the value of the @'System.Numerics.BigInteger' object is @'System.Numerics.BigInteger.Zero'; otherwise, false.
- uid: System.Numerics.BigInteger.MinusOne
  id: MinusOne
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: MinusOne
  fullName: System.Numerics.BigInteger.MinusOne
  type: Property
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 80
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Gets a value that represents the number negative one (-1).
  syntax:
    content: public static BigInteger MinusOne { get; }
    content.vb: Public Shared ReadOnly Property MinusOne As BigInteger
    parameters: []
    return:
      type: System.Numerics.BigInteger
      description: An integer whose value is negative one (-1).
- uid: System.Numerics.BigInteger.One
  id: One
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: One
  fullName: System.Numerics.BigInteger.One
  type: Property
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 75
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Gets a value that represents the number one (1).
  syntax:
    content: public static BigInteger One { get; }
    content.vb: Public Shared ReadOnly Property One As BigInteger
    parameters: []
    return:
      type: System.Numerics.BigInteger
      description: An object whose value is one (1).
- uid: System.Numerics.BigInteger.Sign
  id: Sign
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Sign
  fullName: System.Numerics.BigInteger.Sign
  type: Property
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 114
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Gets a number that indicates the sign (negative, positive, or zero) of the current @'System.Numerics.BigInteger' object.
  syntax:
    content: public int Sign { get; }
    content.vb: Public ReadOnly Property Sign As Integer
    parameters: []
    return:
      type: System.Int32
      description: A number that indicates the sign of the @'System.Numerics.BigInteger' object, as shown in the following table.NumberDescription-1The value of this object is negative.0The value of this object is 0 (zero).1The value of this object is positive.
- uid: System.Numerics.BigInteger.Zero
  id: Zero
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Zero
  fullName: System.Numerics.BigInteger.Zero
  type: Property
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 70
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Gets a value that represents the number 0 (zero).
  syntax:
    content: public static BigInteger Zero { get; }
    content.vb: Public Shared ReadOnly Property Zero As BigInteger
    parameters: []
    return:
      type: System.Numerics.BigInteger
      description: An integer whose value is 0 (zero).
- uid: System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)
  id: Abs(System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Abs(BigInteger)
  fullName: System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 996
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Gets the absolute value of a @'System.Numerics.BigInteger' object.
  syntax:
    content: public static BigInteger Abs(BigInteger value)
    content.vb: Public Shared Function Abs(value As BigInteger) As BigInteger
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: A number.
    return:
      type: System.Numerics.BigInteger
      description: The absolute value of *value*.
- uid: System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: Add(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Add(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Add(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1001
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Adds two @'System.Numerics.BigInteger' values and returns the result.
  syntax:
    content: public static BigInteger Add(BigInteger left, BigInteger right)
    content.vb: Public Shared Function Add(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to add.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to add.
    return:
      type: System.Numerics.BigInteger
      description: The sum of *left* and *right*.
- uid: System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Compare(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Compare(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 991
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Compares two @'System.Numerics.BigInteger' values and returns an integer that indicates whether the first value is less than, equal to, or greater than the second value.
  syntax:
    content: public static int Compare(BigInteger left, BigInteger right)
    content.vb: Public Shared Function Compare(left As BigInteger, right As BigInteger) As Integer
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to compare.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to compare.
    return:
      type: System.Int32
      description: A signed integer that indicates the relative values of *left* and *right*, as shown in the following table.ValueConditionLess than zero*left* is less than *right*.Zero*left* equals *right*.Greater than zero*left* is greater than *right*.
- uid: System.Numerics.BigInteger.CompareTo(System.Int64)
  id: CompareTo(System.Int64)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: CompareTo(Int64)
  fullName: System.Numerics.BigInteger.CompareTo(System.Int64)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 202
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Compares this instance to a signed 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the signed 64-bit integer.
  syntax:
    content: public int CompareTo(long other)
    content.vb: Public Function CompareTo(other As Long) As Integer
    parameters:
    - id: other
      type: System.Int64
      description: The signed 64-bit integer to compare.
    return:
      type: System.Int32
      description: A signed integer value that indicates the relationship of this instance to *other*, as shown in the following table.Return valueDescriptionLess than zeroThe current instance is less than *other*.ZeroThe current instance equals *other*.Greater than zeroThe current instance is greater than *other*.
- uid: System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)
  id: CompareTo(System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: CompareTo(BigInteger)
  fullName: System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 232
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Compares this instance to a second @'System.Numerics.BigInteger' and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.
  syntax:
    content: public int CompareTo(BigInteger other)
    content.vb: Public Function CompareTo(other As BigInteger) As Integer
    parameters:
    - id: other
      type: System.Numerics.BigInteger
      description: The object to compare.
    return:
      type: System.Int32
      description: A signed integer value that indicates the relationship of this instance to *other*, as shown in the following table.Return valueDescriptionLess than zeroThe current instance is less than *other*.ZeroThe current instance equals *other*.Greater than zeroThe current instance is greater than *other*.
- uid: System.Numerics.BigInteger.CompareTo(System.UInt64)
  id: CompareTo(System.UInt64)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: CompareTo(UInt64)
  fullName: System.Numerics.BigInteger.CompareTo(System.UInt64)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 216
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Compares this instance to an unsigned 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the unsigned 64-bit integer.
  syntax:
    content: public int CompareTo(ulong other)
    content.vb: Public Function CompareTo(other As ULong) As Integer
    parameters:
    - id: other
      type: System.UInt64
      description: The unsigned 64-bit integer to compare.
    return:
      type: System.Int32
      description: A signed integer that indicates the relative value of this instance and *other*, as shown in the following table.Return valueDescriptionLess than zeroThe current instance is less than *other*.ZeroThe current instance equals *other*.Greater than zeroThe current instance is greater than *other*.
- uid: System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Divide(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Divide(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1016
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Divides one @'System.Numerics.BigInteger' value by another and returns the result.
  syntax:
    content: public static BigInteger Divide(BigInteger dividend, BigInteger divisor)
    content.vb: Public Shared Function Divide(dividend As BigInteger, divisor As BigInteger) As BigInteger
    parameters:
    - id: dividend
      type: System.Numerics.BigInteger
      description: The value to be divided.
    - id: divisor
      type: System.Numerics.BigInteger
      description: The value to divide by.
    return:
      type: System.Numerics.BigInteger
      description: The quotient of the division.
  exceptions:
  - type: System.DivideByZeroException
    description: '*divisor* is 0 (zero).'
- uid: System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)
  id: DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: DivRem(BigInteger, BigInteger, out BigInteger)
  name.vb: DivRem(BigInteger, BigInteger, ByRef BigInteger)
  fullName: System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger, System.Numerics.BigInteger, out System.Numerics.BigInteger)
  fullName.vb: System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger, System.Numerics.BigInteger, ByRef System.Numerics.BigInteger)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1026
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Divides one @'System.Numerics.BigInteger' value by another, returns the result, and returns the remainder in an output parameter.
  syntax:
    content: public static BigInteger DivRem(BigInteger dividend, BigInteger divisor, out BigInteger remainder)
    content.vb: Public Shared Function DivRem(dividend As BigInteger, divisor As BigInteger, ByRef remainder As BigInteger) As BigInteger
    parameters:
    - id: dividend
      type: System.Numerics.BigInteger
      description: The value to be divided.
    - id: divisor
      type: System.Numerics.BigInteger
      description: The value to divide by.
    - id: remainder
      type: System.Numerics.BigInteger
      description: When this method returns, contains a @'System.Numerics.BigInteger' value that represents the remainder from the division. This parameter is passed uninitialized.
    return:
      type: System.Numerics.BigInteger
      description: The quotient of the division.
  exceptions:
  - type: System.DivideByZeroException
    description: '*divisor* is 0 (zero).'
- uid: System.Numerics.BigInteger.Equals(System.Int64)
  id: Equals(System.Int64)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Equals(Int64)
  fullName: System.Numerics.BigInteger.Equals(System.Int64)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 146
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether the current instance and a signed 64-bit integer have the same value.
  syntax:
    content: public bool Equals(long other)
    content.vb: Public Function Equals(other As Long) As Boolean
    parameters:
    - id: other
      type: System.Int64
      description: The signed 64-bit integer value to compare.
    return:
      type: System.Boolean
      description: true if the signed 64-bit integer and the current instance have the same value; otherwise, false.
- uid: System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)
  id: Equals(System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Equals(BigInteger)
  fullName: System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 182
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether the current instance and a specified @'System.Numerics.BigInteger' object have the same value.
  syntax:
    content: public bool Equals(BigInteger other)
    content.vb: Public Function Equals(other As BigInteger) As Boolean
    parameters:
    - id: other
      type: System.Numerics.BigInteger
      description: The object to compare.
    return:
      type: System.Boolean
      description: true if this @'System.Numerics.BigInteger' object and *other* have the same value; otherwise, false.
- uid: System.Numerics.BigInteger.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Equals(Object)
  fullName: System.Numerics.BigInteger.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 125
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether the current instance and a specified object have the same value.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare.
    return:
      type: System.Boolean
      description: true if the *obj* parameter is a @'System.Numerics.BigInteger' object or a type capable of implicit conversion to a @'System.Numerics.BigInteger' value, and its value is equal to the value of the current @'System.Numerics.BigInteger' object; otherwise, false.
  overridden: System.ValueType.Equals(System.Object)
- uid: System.Numerics.BigInteger.Equals(System.UInt64)
  id: Equals(System.UInt64)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Equals(UInt64)
  fullName: System.Numerics.BigInteger.Equals(System.UInt64)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 164
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether the current instance and an unsigned 64-bit integer have the same value.
  syntax:
    content: public bool Equals(ulong other)
    content.vb: Public Function Equals(other As ULong) As Boolean
    parameters:
    - id: other
      type: System.UInt64
      description: The unsigned 64-bit integer to compare.
    return:
      type: System.Boolean
      description: true if the current instance and the unsigned 64-bit integer have the same value; otherwise, false.
- uid: System.Numerics.BigInteger.GetHashCode
  id: GetHashCode
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: GetHashCode()
  fullName: System.Numerics.BigInteger.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 134
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the hash code for the current @'System.Numerics.BigInteger' object.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  overridden: System.ValueType.GetHashCode
- uid: System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: GreatestCommonDivisor(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1117
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Finds the greatest common divisor of two @'System.Numerics.BigInteger' values.
  syntax:
    content: public static BigInteger GreatestCommonDivisor(BigInteger left, BigInteger right)
    content.vb: Public Shared Function GreatestCommonDivisor(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value.
    return:
      type: System.Numerics.BigInteger
      description: The greatest common divisor of *left* and *right*.
- uid: System.Numerics.BigInteger.Log(System.Numerics.BigInteger)
  id: Log(System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Log(BigInteger)
  fullName: System.Numerics.BigInteger.Log(System.Numerics.BigInteger)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1078
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the natural (base e) logarithm of a specified number.
  syntax:
    content: public static double Log(BigInteger value)
    content.vb: Public Shared Function Log(value As BigInteger) As Double
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: The number whose logarithm is to be found.
    return:
      type: System.Double
      description: The natural (base e) logarithm of *value*, as shown in the table in the Remarks section.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The natural log of *value* is out of range of the @'System.Double' data type.
- uid: System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)
  id: Log(System.Numerics.BigInteger,System.Double)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Log(BigInteger, Double)
  fullName: System.Numerics.BigInteger.Log(System.Numerics.BigInteger, System.Double)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1084
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the logarithm of a specified number in a specified base.
  syntax:
    content: public static double Log(BigInteger value, double baseValue)
    content.vb: Public Shared Function Log(value As BigInteger, baseValue As Double) As Double
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: A number whose logarithm is to be found.
    - id: baseValue
      type: System.Double
      description: The base of the logarithm.
    return:
      type: System.Double
      description: The base *baseValue* logarithm of *value*, as shown in the table in the Remarks section.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The log of *value* is out of range of the @'System.Double' data type.
- uid: System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)
  id: Log10(System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Log10(BigInteger)
  fullName: System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1112
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the base 10 logarithm of a specified number.
  syntax:
    content: public static double Log10(BigInteger value)
    content.vb: Public Shared Function Log10(value As BigInteger) As Double
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: A number whose logarithm is to be found.
    return:
      type: System.Double
      description: The base 10 logarithm of *value*, as shown in the table in the Remarks section.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The base 10 log of *value* is out of range of the @'System.Double' data type.
- uid: System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: Max(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Max(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Max(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1180
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the larger of two @'System.Numerics.BigInteger' values.
  syntax:
    content: public static BigInteger Max(BigInteger left, BigInteger right)
    content.vb: Public Shared Function Max(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to compare.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to compare.
    return:
      type: System.Numerics.BigInteger
      description: The *left* or *right* parameter, whichever is larger.
- uid: System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: Min(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Min(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Min(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1187
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the smaller of two @'System.Numerics.BigInteger' values.
  syntax:
    content: public static BigInteger Min(BigInteger left, BigInteger right)
    content.vb: Public Shared Function Min(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to compare.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to compare.
    return:
      type: System.Numerics.BigInteger
      description: The *left* or *right* parameter, whichever is smaller.
- uid: System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: ModPow(BigInteger, BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger, System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1194
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Performs modulus division on a number raised to the power of another number.
  syntax:
    content: public static BigInteger ModPow(BigInteger value, BigInteger exponent, BigInteger modulus)
    content.vb: Public Shared Function ModPow(value As BigInteger, exponent As BigInteger, modulus As BigInteger) As BigInteger
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: The number to raise to the *exponent* power.
    - id: exponent
      type: System.Numerics.BigInteger
      description: The exponent to raise *value* by.
    - id: modulus
      type: System.Numerics.BigInteger
      description: The number by which to divide *value* raised to the *exponent* power.
    return:
      type: System.Numerics.BigInteger
      description: The remainder after dividing *value*exponent by *modulus*.
  exceptions:
  - type: System.DivideByZeroException
    description: '*modulus* is zero.'
  - type: System.ArgumentOutOfRangeException
    description: '*exponent* is negative.'
- uid: System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Multiply(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1011
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the product of two @'System.Numerics.BigInteger' values.
  syntax:
    content: public static BigInteger Multiply(BigInteger left, BigInteger right)
    content.vb: Public Shared Function Multiply(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first number to multiply.
    - id: right
      type: System.Numerics.BigInteger
      description: The second number to multiply.
    return:
      type: System.Numerics.BigInteger
      description: The product of the *left* and *right* parameters.
- uid: System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)
  id: Negate(System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Negate(BigInteger)
  fullName: System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1072
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Negates a specified @'System.Numerics.BigInteger' value.
  syntax:
    content: public static BigInteger Negate(BigInteger value)
    content.vb: Public Shared Function Negate(value As BigInteger) As BigInteger
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: The value to negate.
    return:
      type: System.Numerics.BigInteger
      description: The result of the *value* parameter multiplied by negative one (-1).
- uid: System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Addition(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Addition(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1679
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Adds the values of two specified @'System.Numerics.BigInteger' objects.
  syntax:
    content: public static BigInteger operator +(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator +(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to add.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to add.
    return:
      type: System.Numerics.BigInteger
      description: The sum of *left* and *right*.
- uid: System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: BitwiseAnd(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.BitwiseAnd(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1491
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Performs a bitwise And operation on two @'System.Numerics.BigInteger' values.
  syntax:
    content: public static BigInteger operator &(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator And(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value.
    return:
      type: System.Numerics.BigInteger
      description: The result of the bitwise And operation.
- uid: System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: BitwiseOr(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.BitwiseOr(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1513
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Performs a bitwise Or operation on two @'System.Numerics.BigInteger' values.
  syntax:
    content: public static BigInteger operator |(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator Or(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value.
    return:
      type: System.Numerics.BigInteger
      description: The result of the bitwise Or operation.
- uid: System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)
  id: op_Decrement(System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Decrement(BigInteger)
  fullName: System.Numerics.BigInteger.Decrement(System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1673
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Decrements a @'System.Numerics.BigInteger' value by 1.
  syntax:
    content: public static BigInteger operator --(BigInteger value)
    content.vb: VB cannot support this operator.
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: The value to decrement.
    return:
      type: System.Numerics.BigInteger
      description: The value of the *value* parameter decremented by 1.
- uid: System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Division(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Division(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1810
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Divides a specified @'System.Numerics.BigInteger' value by another specified @'System.Numerics.BigInteger' value by using integer division.
  syntax:
    content: public static BigInteger operator /(BigInteger dividend, BigInteger divisor)
    content.vb: Public Shared Operator /(dividend As BigInteger, divisor As BigInteger) As BigInteger
    parameters:
    - id: dividend
      type: System.Numerics.BigInteger
      description: The value to be divided.
    - id: divisor
      type: System.Numerics.BigInteger
      description: The value to divide by.
    return:
      type: System.Numerics.BigInteger
      description: The integral result of the division.
  exceptions:
  - type: System.DivideByZeroException
    description: '*divisor* is 0 (zero).'
- uid: System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)
  id: op_Equality(System.Int64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Equality(Int64, BigInteger)
  fullName: System.Numerics.BigInteger.Equality(System.Int64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1950
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a signed long integer value and a @'System.Numerics.BigInteger' value are equal.
  syntax:
    content: public static bool operator ==(long left, BigInteger right)
    content.vb: Public Shared Operator =(left As Long, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Int64
      description: The first value to compare.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if the *left* and *right* parameters have the same value; otherwise, false.
- uid: System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)
  id: op_Equality(System.Numerics.BigInteger,System.Int64)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Equality(BigInteger, Int64)
  fullName: System.Numerics.BigInteger.Equality(System.Numerics.BigInteger, System.Int64)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1925
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a @'System.Numerics.BigInteger' value and a signed long integer value are equal.
  syntax:
    content: public static bool operator ==(BigInteger left, long right)
    content.vb: Public Shared Operator =(left As BigInteger, right As Long) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to compare.
    - id: right
      type: System.Int64
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if the *left* and *right* parameters have the same value; otherwise, false.
- uid: System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Equality(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Equality(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1900
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether the values of two @'System.Numerics.BigInteger' objects are equal.
  syntax:
    content: public static bool operator ==(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator =(left As BigInteger, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to compare.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if the *left* and *right* parameters have the same value; otherwise, false.
- uid: System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)
  id: op_Equality(System.Numerics.BigInteger,System.UInt64)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Equality(BigInteger, UInt64)
  fullName: System.Numerics.BigInteger.Equality(System.Numerics.BigInteger, System.UInt64)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1979
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a @'System.Numerics.BigInteger' value and an unsigned long integer value are equal.
  syntax:
    content: public static bool operator ==(BigInteger left, ulong right)
    content.vb: Public Shared Operator =(left As BigInteger, right As ULong) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to compare.
    - id: right
      type: System.UInt64
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if the *left* and *right* parameters have the same value; otherwise, false.
- uid: System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)
  id: op_Equality(System.UInt64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Equality(UInt64, BigInteger)
  fullName: System.Numerics.BigInteger.Equality(System.UInt64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 2010
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether an unsigned long integer value and a @'System.Numerics.BigInteger' value are equal.
  syntax:
    content: public static bool operator ==(ulong left, BigInteger right)
    content.vb: Public Shared Operator =(left As ULong, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.UInt64
      description: The first value to compare.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if the *left* and *right* parameters have the same value; otherwise, false.
- uid: System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: ExclusiveOr(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.ExclusiveOr(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1535
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Performs a bitwise exclusive Or (XOr) operation on two @'System.Numerics.BigInteger' values.
  syntax:
    content: public static BigInteger operator ^(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator Xor(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value.
    return:
      type: System.Numerics.BigInteger
      description: The result of the bitwise Or operation.
- uid: System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger
  id: op_Explicit(System.Decimal)~System.Numerics.BigInteger
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Explicit(Decimal to BigInteger)
  name.vb: Narrowing(Decimal to BigInteger)
  fullName: System.Numerics.BigInteger.Explicit(System.Decimal to System.Numerics.BigInteger)
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Decimal to System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1319
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an explicit conversion of a @'System.Decimal' object to a @'System.Numerics.BigInteger' value.
  syntax:
    content: public static explicit operator BigInteger(decimal value)
    content.vb: Public Shared Narrowing Operator CType(value As Decimal) As BigInteger
    parameters:
    - id: value
      type: System.Decimal
      description: The value to convert to a @'System.Numerics.BigInteger'.
    return:
      type: System.Numerics.BigInteger
      description: An object that contains the value of the *value* parameter.
- uid: System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger
  id: op_Explicit(System.Double)~System.Numerics.BigInteger
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Explicit(Double to BigInteger)
  name.vb: Narrowing(Double to BigInteger)
  fullName: System.Numerics.BigInteger.Explicit(System.Double to System.Numerics.BigInteger)
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Double to System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1314
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an explicit conversion of a @'System.Double' value to a @'System.Numerics.BigInteger' value.
  syntax:
    content: public static explicit operator BigInteger(double value)
    content.vb: Public Shared Narrowing Operator CType(value As Double) As BigInteger
    parameters:
    - id: value
      type: System.Double
      description: The value to convert to a @'System.Numerics.BigInteger'.
    return:
      type: System.Numerics.BigInteger
      description: An object that contains the value of the *value* parameter.
  exceptions:
  - type: System.OverflowException
    description: '*value* is @''System.Double.NaN''.-or-*value* is @''System.Double.PositiveInfinity''.-or-*value* is @''System.Double.NegativeInfinity''.'
- uid: System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte
  id: op_Explicit(System.Numerics.BigInteger)~System.Byte
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Explicit(BigInteger to Byte)
  name.vb: Narrowing(BigInteger to Byte)
  fullName: System.Numerics.BigInteger.Explicit(System.Numerics.BigInteger to System.Byte)
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Numerics.BigInteger to System.Byte)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1324
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an explicit conversion of a @'System.Numerics.BigInteger' object to an unsigned byte value.
  syntax:
    content: public static explicit operator byte (BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As Byte
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: The value to convert to a @'System.Byte'.
    return:
      type: System.Byte
      description: An object that contains the value of the *value* parameter.
  exceptions:
  - type: System.OverflowException
    description: '*value* is less than @''System.Byte.MinValue''. -or-*value* is greater than @''System.Byte.MaxValue''.'
- uid: System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal
  id: op_Explicit(System.Numerics.BigInteger)~System.Decimal
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Explicit(BigInteger to Decimal)
  name.vb: Narrowing(BigInteger to Decimal)
  fullName: System.Numerics.BigInteger.Explicit(System.Numerics.BigInteger to System.Decimal)
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Numerics.BigInteger to System.Decimal)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1474
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an explicit conversion of a @'System.Numerics.BigInteger' object to a @'System.Decimal' value.
  syntax:
    content: public static explicit operator decimal (BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As Decimal
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: The value to convert to a @'System.Decimal'.
    return:
      type: System.Decimal
      description: An object that contains the value of the *value* parameter.
  exceptions:
  - type: System.OverflowException
    description: '*value* is less than @''System.Decimal.MinValue''.-or-*value* is greater than @''System.Decimal.MaxValue''.'
- uid: System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double
  id: op_Explicit(System.Numerics.BigInteger)~System.Double
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Explicit(BigInteger to Double)
  name.vb: Narrowing(BigInteger to Double)
  fullName: System.Numerics.BigInteger.Explicit(System.Numerics.BigInteger to System.Double)
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Numerics.BigInteger to System.Double)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1452
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an explicit conversion of a @'System.Numerics.BigInteger' object to a @'System.Double' value.
  syntax:
    content: public static explicit operator double (BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As Double
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: The value to convert to a @'System.Double'.
    return:
      type: System.Double
      description: An object that contains the value of the *value* parameter.
- uid: System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16
  id: op_Explicit(System.Numerics.BigInteger)~System.Int16
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Explicit(BigInteger to Int16)
  name.vb: Narrowing(BigInteger to Int16)
  fullName: System.Numerics.BigInteger.Explicit(System.Numerics.BigInteger to System.Int16)
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Numerics.BigInteger to System.Int16)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1335
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an explicit conversion of a @'System.Numerics.BigInteger' object to a 16-bit signed integer value.
  syntax:
    content: public static explicit operator short (BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As Short
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: The value to convert to a 16-bit signed integer.
    return:
      type: System.Int16
      description: An object that contains the value of the *value* parameter.
  exceptions:
  - type: System.OverflowException
    description: '*value* is less than @''System.Int16.MinValue''.-or-*value* is greater than @''System.Int16.MaxValue''.'
- uid: System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32
  id: op_Explicit(System.Numerics.BigInteger)~System.Int32
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Explicit(BigInteger to Int32)
  name.vb: Narrowing(BigInteger to Int32)
  fullName: System.Numerics.BigInteger.Explicit(System.Numerics.BigInteger to System.Int32)
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Numerics.BigInteger to System.Int32)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1346
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an explicit conversion of a @'System.Numerics.BigInteger' object to a 32-bit signed integer value.
  syntax:
    content: public static explicit operator int (BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As Integer
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: The value to convert to a 32-bit signed integer.
    return:
      type: System.Int32
      description: An object that contains the value of the *value* parameter.
  exceptions:
  - type: System.OverflowException
    description: '*value* is less than @''System.Int32.MinValue''.-or-*value* is greater than @''System.Int32.MaxValue''.'
- uid: System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64
  id: op_Explicit(System.Numerics.BigInteger)~System.Int64
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Explicit(BigInteger to Int64)
  name.vb: Narrowing(BigInteger to Int64)
  fullName: System.Numerics.BigInteger.Explicit(System.Numerics.BigInteger to System.Int64)
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Numerics.BigInteger to System.Int64)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1389
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an explicit conversion of a @'System.Numerics.BigInteger' object to a 64-bit signed integer value.
  syntax:
    content: public static explicit operator long (BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As Long
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: The value to convert to a 64-bit signed integer.
    return:
      type: System.Int64
      description: An object that contains the value of the *value* parameter.
  exceptions:
  - type: System.OverflowException
    description: '*value* is less than @''System.Int64.MinValue''.-or-*value* is greater than @''System.Int64.MaxValue''.'
- uid: System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte
  id: op_Explicit(System.Numerics.BigInteger)~System.SByte
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Explicit(BigInteger to SByte)
  name.vb: Narrowing(BigInteger to SByte)
  fullName: System.Numerics.BigInteger.Explicit(System.Numerics.BigInteger to System.SByte)
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Numerics.BigInteger to System.SByte)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1329
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an explicit conversion of a @'System.Numerics.BigInteger' object to a signed 8-bit value.
  syntax:
    content: public static explicit operator sbyte (BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As SByte
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: The value to convert to a signed 8-bit value.
    return:
      type: System.SByte
      description: An object that contains the value of the *value* parameter.
  exceptions:
  - type: System.OverflowException
    description: '*value* is less than @''System.SByte.MinValue''.-or-*value* is greater than @''System.SByte.MaxValue''.'
- uid: System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single
  id: op_Explicit(System.Numerics.BigInteger)~System.Single
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Explicit(BigInteger to Single)
  name.vb: Narrowing(BigInteger to Single)
  fullName: System.Numerics.BigInteger.Explicit(System.Numerics.BigInteger to System.Single)
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Numerics.BigInteger to System.Single)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1447
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an explicit conversion of a @'System.Numerics.BigInteger' object to a single-precision floating-point value.
  syntax:
    content: public static explicit operator float (BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As Single
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: The value to convert to a single-precision floating-point value.
    return:
      type: System.Single
      description: An object that contains the closest possible representation of the *value* parameter.
- uid: System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16
  id: op_Explicit(System.Numerics.BigInteger)~System.UInt16
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Explicit(BigInteger to UInt16)
  name.vb: Narrowing(BigInteger to UInt16)
  fullName: System.Numerics.BigInteger.Explicit(System.Numerics.BigInteger to System.UInt16)
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Numerics.BigInteger to System.UInt16)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1340
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an explicit conversion of a @'System.Numerics.BigInteger' object to an unsigned 16-bit integer value.
  syntax:
    content: public static explicit operator ushort (BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As UShort
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: The value to convert to an unsigned 16-bit integer.
    return:
      type: System.UInt16
      description: An object that contains the value of the *value* parameter
  exceptions:
  - type: System.OverflowException
    description: '*value* is less than @''System.UInt16.MinValue''.-or-*value* is greater than @''System.UInt16.MaxValue''.'
- uid: System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32
  id: op_Explicit(System.Numerics.BigInteger)~System.UInt32
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Explicit(BigInteger to UInt32)
  name.vb: Narrowing(BigInteger to UInt32)
  fullName: System.Numerics.BigInteger.Explicit(System.Numerics.BigInteger to System.UInt32)
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Numerics.BigInteger to System.UInt32)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1371
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an explicit conversion of a @'System.Numerics.BigInteger' object to an unsigned 32-bit integer value.
  syntax:
    content: public static explicit operator uint (BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As UInteger
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: The value to convert to an unsigned 32-bit integer.
    return:
      type: System.UInt32
      description: An object that contains the value of the *value* parameter.
  exceptions:
  - type: System.OverflowException
    description: '*value* is less than @''System.UInt32.MinValue''.-or-*value* is greater than @''System.UInt32.MaxValue''.'
- uid: System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64
  id: op_Explicit(System.Numerics.BigInteger)~System.UInt64
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Explicit(BigInteger to UInt64)
  name.vb: Narrowing(BigInteger to UInt64)
  fullName: System.Numerics.BigInteger.Explicit(System.Numerics.BigInteger to System.UInt64)
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Numerics.BigInteger to System.UInt64)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1422
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an explicit conversion of a @'System.Numerics.BigInteger' object to an unsigned 64-bit integer value.
  syntax:
    content: public static explicit operator ulong (BigInteger value)
    content.vb: Public Shared Narrowing Operator CType(value As BigInteger) As ULong
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: The value to convert to an unsigned 64-bit integer.
    return:
      type: System.UInt64
      description: An object that contains the value of the *value* parameter.
  exceptions:
  - type: System.OverflowException
    description: '*value* is less than @''System.UInt64.MinValue''.-or-*value* is greater than @''System.UInt64.MaxValue''.'
- uid: System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger
  id: op_Explicit(System.Single)~System.Numerics.BigInteger
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Explicit(Single to BigInteger)
  name.vb: Narrowing(Single to BigInteger)
  fullName: System.Numerics.BigInteger.Explicit(System.Single to System.Numerics.BigInteger)
  fullName.vb: System.Numerics.BigInteger.Narrowing(System.Single to System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1309
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an explicit conversion of a @'System.Single' object to a @'System.Numerics.BigInteger' value.
  syntax:
    content: public static explicit operator BigInteger(float value)
    content.vb: Public Shared Narrowing Operator CType(value As Single) As BigInteger
    parameters:
    - id: value
      type: System.Single
      description: The value to convert to a @'System.Numerics.BigInteger'.
    return:
      type: System.Numerics.BigInteger
      description: An object that contains the value of the *value* parameter.
  exceptions:
  - type: System.OverflowException
    description: '*value* is @''System.Single.NaN''.-or-*value* is @''System.Single.PositiveInfinity''.-or-*value* is @''System.Single.NegativeInfinity''.'
- uid: System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)
  id: op_GreaterThan(System.Int64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: GreaterThan(Int64, BigInteger)
  fullName: System.Numerics.BigInteger.GreaterThan(System.Int64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1942
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a 64-bit signed integer is greater than a @'System.Numerics.BigInteger' value.
  syntax:
    content: public static bool operator>(long left, BigInteger right)
    content.vb: Public Shared Operator>(left As Long, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Int64
      description: The first value to compare.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is greater than *right*; otherwise, false.
- uid: System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)
  id: op_GreaterThan(System.Numerics.BigInteger,System.Int64)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: GreaterThan(BigInteger, Int64)
  fullName: System.Numerics.BigInteger.GreaterThan(System.Numerics.BigInteger, System.Int64)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1917
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a @'System.Numerics.BigInteger' is greater than a 64-bit signed integer value.
  syntax:
    content: public static bool operator>(BigInteger left, long right)
    content.vb: Public Shared Operator>(left As BigInteger, right As Long) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to compare.
    - id: right
      type: System.Int64
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is greater than *right*; otherwise, false.
- uid: System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: GreaterThan(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.GreaterThan(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1892
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a @'System.Numerics.BigInteger' value is greater than another @'System.Numerics.BigInteger' value.
  syntax:
    content: public static bool operator>(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator>(left As BigInteger, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to compare.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is greater than *right*; otherwise, false.
- uid: System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)
  id: op_GreaterThan(System.Numerics.BigInteger,System.UInt64)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: GreaterThan(BigInteger, UInt64)
  fullName: System.Numerics.BigInteger.GreaterThan(System.Numerics.BigInteger, System.UInt64)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1969
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a @'System.Numerics.BigInteger' value is greater than a 64-bit unsigned integer.
  syntax:
    content: public static bool operator>(BigInteger left, ulong right)
    content.vb: Public Shared Operator>(left As BigInteger, right As ULong) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to compare.
    - id: right
      type: System.UInt64
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is greater than *right*; otherwise, false.
- uid: System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)
  id: op_GreaterThan(System.UInt64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: GreaterThan(UInt64, BigInteger)
  fullName: System.Numerics.BigInteger.GreaterThan(System.UInt64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 2000
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a @'System.Numerics.BigInteger' value is greater than a 64-bit unsigned integer.
  syntax:
    content: public static bool operator>(ulong left, BigInteger right)
    content.vb: Public Shared Operator>(left As ULong, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.UInt64
      description: The first value to compare.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is greater than *right*; otherwise, false.
- uid: System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)
  id: op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: GreaterThanOrEqual(Int64, BigInteger)
  fullName: System.Numerics.BigInteger.GreaterThanOrEqual(System.Int64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1946
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a 64-bit signed integer is greater than or equal to a @'System.Numerics.BigInteger' value.
  syntax:
    content: public static bool operator >=(long left, BigInteger right)
    content.vb: Public Shared Operator >=(left As Long, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Int64
      description: The first value to compare.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is greater than *right*; otherwise, false.
- uid: System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)
  id: op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: GreaterThanOrEqual(BigInteger, Int64)
  fullName: System.Numerics.BigInteger.GreaterThanOrEqual(System.Numerics.BigInteger, System.Int64)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1921
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a @'System.Numerics.BigInteger' value is greater than or equal to a 64-bit signed integer value.
  syntax:
    content: public static bool operator >=(BigInteger left, long right)
    content.vb: Public Shared Operator >=(left As BigInteger, right As Long) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to compare.
    - id: right
      type: System.Int64
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is greater than *right*; otherwise, false.
- uid: System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: GreaterThanOrEqual(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.GreaterThanOrEqual(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1896
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a @'System.Numerics.BigInteger' value is greater than or equal to another @'System.Numerics.BigInteger' value.
  syntax:
    content: public static bool operator >=(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator >=(left As BigInteger, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to compare.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is greater than *right*; otherwise, false.
- uid: System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)
  id: op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: GreaterThanOrEqual(BigInteger, UInt64)
  fullName: System.Numerics.BigInteger.GreaterThanOrEqual(System.Numerics.BigInteger, System.UInt64)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1974
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a @'System.Numerics.BigInteger' value is greater than or equal to a 64-bit unsigned integer value.
  syntax:
    content: public static bool operator >=(BigInteger left, ulong right)
    content.vb: Public Shared Operator >=(left As BigInteger, right As ULong) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to compare.
    - id: right
      type: System.UInt64
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is greater than *right*; otherwise, false.
- uid: System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)
  id: op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: GreaterThanOrEqual(UInt64, BigInteger)
  fullName: System.Numerics.BigInteger.GreaterThanOrEqual(System.UInt64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 2005
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a 64-bit unsigned integer is greater than or equal to a @'System.Numerics.BigInteger' value.
  syntax:
    content: public static bool operator >=(ulong left, BigInteger right)
    content.vb: Public Shared Operator >=(left As ULong, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.UInt64
      description: The first value to compare.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is greater than *right*; otherwise, false.
- uid: System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger
  id: op_Implicit(System.Byte)~System.Numerics.BigInteger
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Implicit(Byte to BigInteger)
  name.vb: Widening(Byte to BigInteger)
  fullName: System.Numerics.BigInteger.Implicit(System.Byte to System.Numerics.BigInteger)
  fullName.vb: System.Numerics.BigInteger.Widening(System.Byte to System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1264
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an implicit conversion of an unsigned byte to a @'System.Numerics.BigInteger' value.
  syntax:
    content: public static implicit operator BigInteger(byte value)
    content.vb: Public Shared Widening Operator CType(value As Byte) As BigInteger
    parameters:
    - id: value
      type: System.Byte
      description: The value to convert to a @'System.Numerics.BigInteger'.
    return:
      type: System.Numerics.BigInteger
      description: An object that contains the value of the *value* parameter.
- uid: System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger
  id: op_Implicit(System.Int16)~System.Numerics.BigInteger
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Implicit(Int16 to BigInteger)
  name.vb: Widening(Int16 to BigInteger)
  fullName: System.Numerics.BigInteger.Implicit(System.Int16 to System.Numerics.BigInteger)
  fullName.vb: System.Numerics.BigInteger.Widening(System.Int16 to System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1275
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an implicit conversion of a signed 16-bit integer to a @'System.Numerics.BigInteger' value.
  syntax:
    content: public static implicit operator BigInteger(short value)
    content.vb: Public Shared Widening Operator CType(value As Short) As BigInteger
    parameters:
    - id: value
      type: System.Int16
      description: The value to convert to a @'System.Numerics.BigInteger'.
    return:
      type: System.Numerics.BigInteger
      description: An object that contains the value of the *value* parameter.
- uid: System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger
  id: op_Implicit(System.Int32)~System.Numerics.BigInteger
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Implicit(Int32 to BigInteger)
  name.vb: Widening(Int32 to BigInteger)
  fullName: System.Numerics.BigInteger.Implicit(System.Int32 to System.Numerics.BigInteger)
  fullName.vb: System.Numerics.BigInteger.Widening(System.Int32 to System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1287
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an implicit conversion of a signed 32-bit integer to a @'System.Numerics.BigInteger' value.
  syntax:
    content: public static implicit operator BigInteger(int value)
    content.vb: Public Shared Widening Operator CType(value As Integer) As BigInteger
    parameters:
    - id: value
      type: System.Int32
      description: The value to convert to a @'System.Numerics.BigInteger'.
    return:
      type: System.Numerics.BigInteger
      description: An object that contains the value of the *value* parameter.
- uid: System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger
  id: op_Implicit(System.Int64)~System.Numerics.BigInteger
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Implicit(Int64 to BigInteger)
  name.vb: Widening(Int64 to BigInteger)
  fullName: System.Numerics.BigInteger.Implicit(System.Int64 to System.Numerics.BigInteger)
  fullName.vb: System.Numerics.BigInteger.Widening(System.Int64 to System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1298
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an implicit conversion of a signed 64-bit integer to a @'System.Numerics.BigInteger' value.
  syntax:
    content: public static implicit operator BigInteger(long value)
    content.vb: Public Shared Widening Operator CType(value As Long) As BigInteger
    parameters:
    - id: value
      type: System.Int64
      description: The value to convert to a @'System.Numerics.BigInteger'.
    return:
      type: System.Numerics.BigInteger
      description: An object that contains the value of the *value* parameter.
- uid: System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger
  id: op_Implicit(System.SByte)~System.Numerics.BigInteger
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Implicit(SByte to BigInteger)
  name.vb: Widening(SByte to BigInteger)
  fullName: System.Numerics.BigInteger.Implicit(System.SByte to System.Numerics.BigInteger)
  fullName.vb: System.Numerics.BigInteger.Widening(System.SByte to System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1269
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an implicit conversion of an 8-bit signed integer to a @'System.Numerics.BigInteger' value.
  syntax:
    content: public static implicit operator BigInteger(sbyte value)
    content.vb: Public Shared Widening Operator CType(value As SByte) As BigInteger
    parameters:
    - id: value
      type: System.SByte
      description: The value to convert to a @'System.Numerics.BigInteger'.
    return:
      type: System.Numerics.BigInteger
      description: An object that contains the value of the *value* parameter.
- uid: System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger
  id: op_Implicit(System.UInt16)~System.Numerics.BigInteger
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Implicit(UInt16 to BigInteger)
  name.vb: Widening(UInt16 to BigInteger)
  fullName: System.Numerics.BigInteger.Implicit(System.UInt16 to System.Numerics.BigInteger)
  fullName.vb: System.Numerics.BigInteger.Widening(System.UInt16 to System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1280
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an implicit conversion of a 16-bit unsigned integer to a @'System.Numerics.BigInteger' value.
  syntax:
    content: public static implicit operator BigInteger(ushort value)
    content.vb: Public Shared Widening Operator CType(value As UShort) As BigInteger
    parameters:
    - id: value
      type: System.UInt16
      description: The value to convert to a @'System.Numerics.BigInteger'.
    return:
      type: System.Numerics.BigInteger
      description: An object that contains the value of the *value* parameter.
- uid: System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger
  id: op_Implicit(System.UInt32)~System.Numerics.BigInteger
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Implicit(UInt32 to BigInteger)
  name.vb: Widening(UInt32 to BigInteger)
  fullName: System.Numerics.BigInteger.Implicit(System.UInt32 to System.Numerics.BigInteger)
  fullName.vb: System.Numerics.BigInteger.Widening(System.UInt32 to System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1292
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an implicit conversion of a 32-bit unsigned integer to a @'System.Numerics.BigInteger' value.
  syntax:
    content: public static implicit operator BigInteger(uint value)
    content.vb: Public Shared Widening Operator CType(value As UInteger) As BigInteger
    parameters:
    - id: value
      type: System.UInt32
      description: The value to convert to a @'System.Numerics.BigInteger'.
    return:
      type: System.Numerics.BigInteger
      description: An object that contains the value of the *value* parameter.
- uid: System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger
  id: op_Implicit(System.UInt64)~System.Numerics.BigInteger
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Implicit(UInt64 to BigInteger)
  name.vb: Widening(UInt64 to BigInteger)
  fullName: System.Numerics.BigInteger.Implicit(System.UInt64 to System.Numerics.BigInteger)
  fullName.vb: System.Numerics.BigInteger.Widening(System.UInt64 to System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1303
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Defines an implicit conversion of a 64-bit unsigned integer to a @'System.Numerics.BigInteger' value.
  syntax:
    content: public static implicit operator BigInteger(ulong value)
    content.vb: Public Shared Widening Operator CType(value As ULong) As BigInteger
    parameters:
    - id: value
      type: System.UInt64
      description: The value to convert to a @'System.Numerics.BigInteger'.
    return:
      type: System.Numerics.BigInteger
      description: An object that contains the value of the *value* parameter.
- uid: System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)
  id: op_Increment(System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Increment(BigInteger)
  fullName: System.Numerics.BigInteger.Increment(System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1668
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Increments a @'System.Numerics.BigInteger' value by 1.
  syntax:
    content: public static BigInteger operator ++(BigInteger value)
    content.vb: VB cannot support this operator.
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: The value to increment.
    return:
      type: System.Numerics.BigInteger
      description: The value of the *value* parameter incremented by 1.
- uid: System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)
  id: op_Inequality(System.Int64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Inequality(Int64, BigInteger)
  fullName: System.Numerics.BigInteger.Inequality(System.Int64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1954
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a 64-bit signed integer and a @'System.Numerics.BigInteger' value are not equal.
  syntax:
    content: public static bool operator !=(long left, BigInteger right)
    content.vb: Public Shared Operator <>(left As Long, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Int64
      description: The first value to compare.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* and *right* are not equal; otherwise, false.
- uid: System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)
  id: op_Inequality(System.Numerics.BigInteger,System.Int64)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Inequality(BigInteger, Int64)
  fullName: System.Numerics.BigInteger.Inequality(System.Numerics.BigInteger, System.Int64)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1929
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a @'System.Numerics.BigInteger' value and a 64-bit signed integer are not equal.
  syntax:
    content: public static bool operator !=(BigInteger left, long right)
    content.vb: Public Shared Operator <>(left As BigInteger, right As Long) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to compare.
    - id: right
      type: System.Int64
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* and *right* are not equal; otherwise, false.
- uid: System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Inequality(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Inequality(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1904
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether two @'System.Numerics.BigInteger' objects have different values.
  syntax:
    content: public static bool operator !=(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator <>(left As BigInteger, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to compare.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* and *right* are not equal; otherwise, false.
- uid: System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)
  id: op_Inequality(System.Numerics.BigInteger,System.UInt64)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Inequality(BigInteger, UInt64)
  fullName: System.Numerics.BigInteger.Inequality(System.Numerics.BigInteger, System.UInt64)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1984
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a @'System.Numerics.BigInteger' value and a 64-bit unsigned integer are not equal.
  syntax:
    content: public static bool operator !=(BigInteger left, ulong right)
    content.vb: Public Shared Operator <>(left As BigInteger, right As ULong) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to compare.
    - id: right
      type: System.UInt64
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* and *right* are not equal; otherwise, false.
- uid: System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)
  id: op_Inequality(System.UInt64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Inequality(UInt64, BigInteger)
  fullName: System.Numerics.BigInteger.Inequality(System.UInt64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 2015
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a 64-bit unsigned integer and a @'System.Numerics.BigInteger' value are not equal.
  syntax:
    content: public static bool operator !=(ulong left, BigInteger right)
    content.vb: Public Shared Operator <>(left As ULong, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.UInt64
      description: The first value to compare.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* and *right* are not equal; otherwise, false.
- uid: System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)
  id: op_LeftShift(System.Numerics.BigInteger,System.Int32)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: LeftShift(BigInteger, Int32)
  fullName: System.Numerics.BigInteger.LeftShift(System.Numerics.BigInteger, System.Int32)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1554
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Shifts a @'System.Numerics.BigInteger' value a specified number of bits to the left.
  syntax:
    content: public static BigInteger operator <<(BigInteger value, int shift)
    content.vb: Public Shared Operator <<(value As BigInteger, shift As Integer) As BigInteger
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: The value whose bits are to be shifted.
    - id: shift
      type: System.Int32
      description: The number of bits to shift *value* to the left.
    return:
      type: System.Numerics.BigInteger
      description: A value that has been shifted to the left by the specified number of bits.
- uid: System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)
  id: op_LessThan(System.Int64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: LessThan(Int64, BigInteger)
  fullName: System.Numerics.BigInteger.LessThan(System.Int64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1934
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a 64-bit signed integer is less than a @'System.Numerics.BigInteger' value.
  syntax:
    content: public static bool operator <(long left, BigInteger right)
    content.vb: Public Shared Operator <(left As Long, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Int64
      description: The first value to compare.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is less than *right*; otherwise, false.
- uid: System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)
  id: op_LessThan(System.Numerics.BigInteger,System.Int64)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: LessThan(BigInteger, Int64)
  fullName: System.Numerics.BigInteger.LessThan(System.Numerics.BigInteger, System.Int64)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1909
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a @'System.Numerics.BigInteger' value is less than a 64-bit signed integer.
  syntax:
    content: public static bool operator <(BigInteger left, long right)
    content.vb: Public Shared Operator <(left As BigInteger, right As Long) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to compare.
    - id: right
      type: System.Int64
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is less than *right*; otherwise, false.
- uid: System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: LessThan(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.LessThan(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1884
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a @'System.Numerics.BigInteger' value is less than another @'System.Numerics.BigInteger' value.
  syntax:
    content: public static bool operator <(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator <(left As BigInteger, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to compare.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is less than *right*; otherwise, false.
- uid: System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)
  id: op_LessThan(System.Numerics.BigInteger,System.UInt64)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: LessThan(BigInteger, UInt64)
  fullName: System.Numerics.BigInteger.LessThan(System.Numerics.BigInteger, System.UInt64)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1959
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a @'System.Numerics.BigInteger' value is less than a 64-bit unsigned integer.
  syntax:
    content: public static bool operator <(BigInteger left, ulong right)
    content.vb: Public Shared Operator <(left As BigInteger, right As ULong) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to compare.
    - id: right
      type: System.UInt64
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is less than *right*; otherwise, false.
- uid: System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)
  id: op_LessThan(System.UInt64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: LessThan(UInt64, BigInteger)
  fullName: System.Numerics.BigInteger.LessThan(System.UInt64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1990
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a 64-bit unsigned integer is less than a @'System.Numerics.BigInteger' value.
  syntax:
    content: public static bool operator <(ulong left, BigInteger right)
    content.vb: Public Shared Operator <(left As ULong, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.UInt64
      description: The first value to compare.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is less than *right*; otherwise, false.
- uid: System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)
  id: op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: LessThanOrEqual(Int64, BigInteger)
  fullName: System.Numerics.BigInteger.LessThanOrEqual(System.Int64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1938
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a 64-bit signed integer is less than or equal to a @'System.Numerics.BigInteger' value.
  syntax:
    content: public static bool operator <=(long left, BigInteger right)
    content.vb: Public Shared Operator <=(left As Long, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Int64
      description: The first value to compare.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is less than or equal to *right*; otherwise, false.
- uid: System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)
  id: op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: LessThanOrEqual(BigInteger, Int64)
  fullName: System.Numerics.BigInteger.LessThanOrEqual(System.Numerics.BigInteger, System.Int64)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1913
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a @'System.Numerics.BigInteger' value is less than or equal to a 64-bit signed integer.
  syntax:
    content: public static bool operator <=(BigInteger left, long right)
    content.vb: Public Shared Operator <=(left As BigInteger, right As Long) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to compare.
    - id: right
      type: System.Int64
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is less than or equal to *right*; otherwise, false.
- uid: System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: LessThanOrEqual(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.LessThanOrEqual(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1888
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a @'System.Numerics.BigInteger' value is less than or equal to another @'System.Numerics.BigInteger' value.
  syntax:
    content: public static bool operator <=(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator <=(left As BigInteger, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to compare.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is less than or equal to *right*; otherwise, false.
- uid: System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)
  id: op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: LessThanOrEqual(BigInteger, UInt64)
  fullName: System.Numerics.BigInteger.LessThanOrEqual(System.Numerics.BigInteger, System.UInt64)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1964
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a @'System.Numerics.BigInteger' value is less than or equal to a 64-bit unsigned integer.
  syntax:
    content: public static bool operator <=(BigInteger left, ulong right)
    content.vb: Public Shared Operator <=(left As BigInteger, right As ULong) As Boolean
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to compare.
    - id: right
      type: System.UInt64
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is less than or equal to *right*; otherwise, false.
- uid: System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)
  id: op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: LessThanOrEqual(UInt64, BigInteger)
  fullName: System.Numerics.BigInteger.LessThanOrEqual(System.UInt64, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1995
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns a value that indicates whether a 64-bit unsigned integer is less than or equal to a @'System.Numerics.BigInteger' value.
  syntax:
    content: public static bool operator <=(ulong left, BigInteger right)
    content.vb: Public Shared Operator <=(left As ULong, right As BigInteger) As Boolean
    parameters:
    - id: left
      type: System.UInt64
      description: The first value to compare.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to compare.
    return:
      type: System.Boolean
      description: true if *left* is less than or equal to *right*; otherwise, false.
- uid: System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Modulus(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Modulus(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1847
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the remainder that results from division with two specified @'System.Numerics.BigInteger' values.
  syntax:
    content: public static BigInteger operator %(BigInteger dividend, BigInteger divisor)
    content.vb: Public Shared Operator Mod(dividend As BigInteger, divisor As BigInteger) As BigInteger
    parameters:
    - id: dividend
      type: System.Numerics.BigInteger
      description: The value to be divided.
    - id: divisor
      type: System.Numerics.BigInteger
      description: The value to divide by.
    return:
      type: System.Numerics.BigInteger
      description: The remainder that results from the division.
  exceptions:
  - type: System.DivideByZeroException
    description: '*divisor* is 0 (zero).'
- uid: System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Multiply(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1767
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Multiplies two specified @'System.Numerics.BigInteger' values.
  syntax:
    content: public static BigInteger operator *(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator *(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The first value to multiply.
    - id: right
      type: System.Numerics.BigInteger
      description: The second value to multiply.
    return:
      type: System.Numerics.BigInteger
      description: The product of *left* and *right*.
- uid: System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)
  id: op_OnesComplement(System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: OnesComplement(BigInteger)
  fullName: System.Numerics.BigInteger.OnesComplement(System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1650
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the bitwise one's complement of a @'System.Numerics.BigInteger' value.
  syntax:
    content: public static BigInteger operator ~(BigInteger value)
    content.vb: Public Shared Operator Not(value As BigInteger) As BigInteger
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: An integer value.
    return:
      type: System.Numerics.BigInteger
      description: The bitwise one's complement of *value*.
- uid: System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)
  id: op_RightShift(System.Numerics.BigInteger,System.Int32)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: RightShift(BigInteger, Int32)
  fullName: System.Numerics.BigInteger.RightShift(System.Numerics.BigInteger, System.Int32)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1592
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Shifts a @'System.Numerics.BigInteger' value a specified number of bits to the right.
  syntax:
    content: public static BigInteger operator >>(BigInteger value, int shift)
    content.vb: Public Shared Operator >>(value As BigInteger, shift As Integer) As BigInteger
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: The value whose bits are to be shifted.
    - id: shift
      type: System.Int32
      description: The number of bits to shift *value* to the right.
    return:
      type: System.Numerics.BigInteger
      description: A value that has been shifted to the right by the specified number of bits.
- uid: System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Subtraction(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Subtraction(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1723
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Subtracts a @'System.Numerics.BigInteger' value from another @'System.Numerics.BigInteger' value.
  syntax:
    content: public static BigInteger operator -(BigInteger left, BigInteger right)
    content.vb: Public Shared Operator -(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The value to subtract from (the minuend).
    - id: right
      type: System.Numerics.BigInteger
      description: The value to subtract (the subtrahend).
    return:
      type: System.Numerics.BigInteger
      description: The result of subtracting *right* from *left*.
- uid: System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)
  id: op_UnaryNegation(System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: UnaryNegation(BigInteger)
  fullName: System.Numerics.BigInteger.UnaryNegation(System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1655
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Negates a specified BigInteger value.
  syntax:
    content: public static BigInteger operator -(BigInteger value)
    content.vb: Public Shared Operator -(value As BigInteger) As BigInteger
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: The value to negate.
    return:
      type: System.Numerics.BigInteger
      description: The result of the *value* parameter multiplied by negative one (-1).
- uid: System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)
  id: op_UnaryPlus(System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: UnaryPlus(BigInteger)
  fullName: System.Numerics.BigInteger.UnaryPlus(System.Numerics.BigInteger)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1661
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Returns the value of the @'System.Numerics.BigInteger' operand. (The sign of the operand is unchanged.)
  syntax:
    content: public static BigInteger operator +(BigInteger value)
    content.vb: Public Shared Operator +(value As BigInteger) As BigInteger
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: An integer value.
    return:
      type: System.Numerics.BigInteger
      description: The value of the *value* operand.
- uid: System.Numerics.BigInteger.Parse(System.String)
  id: Parse(System.String)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Parse(String)
  fullName: System.Numerics.BigInteger.Parse(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 961
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Converts the string representation of a number to its @'System.Numerics.BigInteger' equivalent.
  syntax:
    content: public static BigInteger Parse(string value)
    content.vb: Public Shared Function Parse(value As String) As BigInteger
    parameters:
    - id: value
      type: System.String
      description: A string that contains the number to convert.
    return:
      type: System.Numerics.BigInteger
      description: A value that is equivalent to the number specified in the *value* parameter.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
  - type: System.FormatException
    description: '*value* is not in the correct format.'
- uid: System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)
  id: Parse(System.String,System.Globalization.NumberStyles)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Parse(String, NumberStyles)
  fullName: System.Numerics.BigInteger.Parse(System.String, System.Globalization.NumberStyles)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 966
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Converts the string representation of a number in a specified style to its @'System.Numerics.BigInteger' equivalent.
  syntax:
    content: public static BigInteger Parse(string value, NumberStyles style)
    content.vb: Public Shared Function Parse(value As String, style As NumberStyles) As BigInteger
    parameters:
    - id: value
      type: System.String
      description: A string that contains a number to convert.
    - id: style
      type: System.Globalization.NumberStyles
      description: A bitwise combination of the enumeration values that specify the permitted format of *value*.
    return:
      type: System.Numerics.BigInteger
      description: A value that is equivalent to the number specified in the *value* parameter.
  exceptions:
  - type: System.ArgumentException
    description: '*style* is not a @''System.Globalization.NumberStyles'' value.-or-*style* includes the @''System.Globalization.NumberStyles.AllowHexSpecifier'' or @''System.Globalization.NumberStyles.HexNumber'' flag along with another value.'
  - type: System.ArgumentNullException
    description: '*value* is null.'
  - type: System.FormatException
    description: '*value* does not comply with the input pattern specified by @''System.Globalization.NumberStyles''.'
- uid: System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  id: Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Parse(String, NumberStyles, IFormatProvider)
  fullName: System.Numerics.BigInteger.Parse(System.String, System.Globalization.NumberStyles, System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 976
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Converts the string representation of a number in a specified style and culture-specific format to its @'System.Numerics.BigInteger' equivalent.
  syntax:
    content: public static BigInteger Parse(string value, NumberStyles style, IFormatProvider provider)
    content.vb: Public Shared Function Parse(value As String, style As NumberStyles, provider As IFormatProvider) As BigInteger
    parameters:
    - id: value
      type: System.String
      description: A string that contains a number to convert.
    - id: style
      type: System.Globalization.NumberStyles
      description: A bitwise combination of the enumeration values that specify the permitted format of *value*.
    - id: provider
      type: System.IFormatProvider
      description: An object that provides culture-specific formatting information about *value*.
    return:
      type: System.Numerics.BigInteger
      description: A value that is equivalent to the number specified in the *value* parameter.
  exceptions:
  - type: System.ArgumentException
    description: '*style* is not a @''System.Globalization.NumberStyles'' value.-or-*style* includes the @''System.Globalization.NumberStyles.AllowHexSpecifier'' or @''System.Globalization.NumberStyles.HexNumber'' flag along with another value.'
  - type: System.ArgumentNullException
    description: '*value* is null.'
  - type: System.FormatException
    description: '*value* does not comply with the input pattern specified by *style*.'
- uid: System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)
  id: Parse(System.String,System.IFormatProvider)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Parse(String, IFormatProvider)
  fullName: System.Numerics.BigInteger.Parse(System.String, System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 971
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Converts the string representation of a number in a specified culture-specific format to its @'System.Numerics.BigInteger' equivalent.
  syntax:
    content: public static BigInteger Parse(string value, IFormatProvider provider)
    content.vb: Public Shared Function Parse(value As String, provider As IFormatProvider) As BigInteger
    parameters:
    - id: value
      type: System.String
      description: A string that contains a number to convert.
    - id: provider
      type: System.IFormatProvider
      description: An object that provides culture-specific formatting information about *value*.
    return:
      type: System.Numerics.BigInteger
      description: A value that is equivalent to the number specified in the *value* parameter.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
  - type: System.FormatException
    description: '*value* is not in the correct format.'
- uid: System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)
  id: Pow(System.Numerics.BigInteger,System.Int32)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Pow(BigInteger, Int32)
  fullName: System.Numerics.BigInteger.Pow(System.Numerics.BigInteger, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1228
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Raises a @'System.Numerics.BigInteger' value to the power of a specified value.
  syntax:
    content: public static BigInteger Pow(BigInteger value, int exponent)
    content.vb: Public Shared Function Pow(value As BigInteger, exponent As Integer) As BigInteger
    parameters:
    - id: value
      type: System.Numerics.BigInteger
      description: The number to raise to the *exponent* power.
    - id: exponent
      type: System.Int32
      description: The exponent to raise *value* by.
    return:
      type: System.Numerics.BigInteger
      description: The result of raising *value* to the *exponent* power.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The value of the *exponent* parameter is negative.
- uid: System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Remainder(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1021
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Performs integer division on two @'System.Numerics.BigInteger' values and returns the remainder.
  syntax:
    content: public static BigInteger Remainder(BigInteger dividend, BigInteger divisor)
    content.vb: Public Shared Function Remainder(dividend As BigInteger, divisor As BigInteger) As BigInteger
    parameters:
    - id: dividend
      type: System.Numerics.BigInteger
      description: The value to be divided.
    - id: divisor
      type: System.Numerics.BigInteger
      description: The value to divide by.
    return:
      type: System.Numerics.BigInteger
      description: The remainder after dividing *dividend* by *divisor*.
  exceptions:
  - type: System.DivideByZeroException
    description: '*divisor* is 0 (zero).'
- uid: System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: Subtract(BigInteger, BigInteger)
  fullName: System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 1006
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Subtracts one @'System.Numerics.BigInteger' value from another and returns the result.
  syntax:
    content: public static BigInteger Subtract(BigInteger left, BigInteger right)
    content.vb: Public Shared Function Subtract(left As BigInteger, right As BigInteger) As BigInteger
    parameters:
    - id: left
      type: System.Numerics.BigInteger
      description: The value to subtract from (the minuend).
    - id: right
      type: System.Numerics.BigInteger
      description: The value to subtract (the subtrahend).
    return:
      type: System.Numerics.BigInteger
      description: The result of subtracting *right* from *left*.
- uid: System.Numerics.BigInteger.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: IComparable.CompareTo(Object)
  name.vb: System.IComparable.CompareTo(Object)
  fullName: System.Numerics.BigInteger.System.IComparable.CompareTo(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 262
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  syntax:
    content: int IComparable.CompareTo(object obj)
    content.vb: Function System.IComparable.CompareTo(obj As Object) As Integer Implements IComparable.CompareTo
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Int32
- uid: System.Numerics.BigInteger.ToByteArray
  id: ToByteArray
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: ToByteArray()
  fullName: System.Numerics.BigInteger.ToByteArray()
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 275
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Converts a @'System.Numerics.BigInteger' value to a byte array.
  syntax:
    content: public byte[] ToByteArray()
    content.vb: Public Function ToByteArray As Byte()
    return:
      type: System.Byte[]
      description: The value of the current @'System.Numerics.BigInteger' object converted to an array of bytes.
- uid: System.Numerics.BigInteger.ToString
  id: ToString
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: ToString()
  fullName: System.Numerics.BigInteger.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 435
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Converts the numeric value of the current @'System.Numerics.BigInteger' object to its equivalent string representation.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: The string representation of the current @'System.Numerics.BigInteger' value.
  overridden: System.ValueType.ToString
- uid: System.Numerics.BigInteger.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: ToString(IFormatProvider)
  fullName: System.Numerics.BigInteger.ToString(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 440
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Converts the numeric value of the current @'System.Numerics.BigInteger' object to its equivalent string representation by using the specified culture-specific formatting information.
  syntax:
    content: public string ToString(IFormatProvider provider)
    content.vb: Public Function ToString(provider As IFormatProvider) As String
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.String
      description: The string representation of the current @'System.Numerics.BigInteger' value in the format specified by the *provider* parameter.
- uid: System.Numerics.BigInteger.ToString(System.String)
  id: ToString(System.String)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: ToString(String)
  fullName: System.Numerics.BigInteger.ToString(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 445
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Converts the numeric value of the current @'System.Numerics.BigInteger' object to its equivalent string representation by using the specified format.
  syntax:
    content: public string ToString(string format)
    content.vb: Public Function ToString(format As String) As String
    parameters:
    - id: format
      type: System.String
      description: A standard or custom numeric format string.
    return:
      type: System.String
      description: The string representation of the current @'System.Numerics.BigInteger' value in the format specified by the *format* parameter.
  exceptions:
  - type: System.FormatException
    description: '*format* is not a valid format string.'
- uid: System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: ToString(String, IFormatProvider)
  fullName: System.Numerics.BigInteger.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 450
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Converts the numeric value of the current @'System.Numerics.BigInteger' object to its equivalent string representation by using the specified format and culture-specific format information.
  syntax:
    content: public string ToString(string format, IFormatProvider provider)
    content.vb: Public Function ToString(format As String, provider As IFormatProvider) As String
    parameters:
    - id: format
      type: System.String
      description: A standard or custom numeric format string.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.String
      description: The string representation of the current @'System.Numerics.BigInteger' value as specified by the *format* and *provider* parameters.
  exceptions:
  - type: System.FormatException
    description: '*format* is not a valid format string.'
- uid: System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)
  id: TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: TryParse(String, NumberStyles, IFormatProvider, out BigInteger)
  name.vb: TryParse(String, NumberStyles, IFormatProvider, ByRef BigInteger)
  fullName: System.Numerics.BigInteger.TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, out System.Numerics.BigInteger)
  fullName.vb: System.Numerics.BigInteger.TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, ByRef System.Numerics.BigInteger)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 986
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Tries to convert the string representation of a number in a specified style and culture-specific format to its @'System.Numerics.BigInteger' equivalent, and returns a value that indicates whether the conversion succeeded.
  syntax:
    content: public static bool TryParse(string value, NumberStyles style, IFormatProvider provider, out BigInteger result)
    content.vb: Public Shared Function TryParse(value As String, style As NumberStyles, provider As IFormatProvider, ByRef result As BigInteger) As Boolean
    parameters:
    - id: value
      type: System.String
      description: The string representation of a number. The string is interpreted using the style specified by *style*.
    - id: style
      type: System.Globalization.NumberStyles
      description: A bitwise combination of enumeration values that indicates the style elements that can be present in *value*. A typical value to specify is @'System.Globalization.NumberStyles.Integer'.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information about *value*.
    - id: result
      type: System.Numerics.BigInteger
      description: When this method returns, contains the @'System.Numerics.BigInteger' equivalent to the number that is contained in *value*, or @'System.Numerics.BigInteger.Zero' if the conversion failed. The conversion fails if the *value* parameter is null or is not in a format that is compliant with *style*. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: true if the *value* parameter was converted successfully; otherwise, false.
  exceptions:
  - type: System.ArgumentException
    description: '*style* is not a @''System.Globalization.NumberStyles'' value.-or-*style* includes the @''System.Globalization.NumberStyles.AllowHexSpecifier'' or @''System.Globalization.NumberStyles.HexNumber'' flag along with another value.'
- uid: System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)
  id: TryParse(System.String,System.Numerics.BigInteger@)
  parent: System.Numerics.BigInteger
  href: System.Numerics.BigInteger.yml
  name: TryParse(String, out BigInteger)
  name.vb: TryParse(String, ByRef BigInteger)
  fullName: System.Numerics.BigInteger.TryParse(System.String, out System.Numerics.BigInteger)
  fullName.vb: System.Numerics.BigInteger.TryParse(System.String, ByRef System.Numerics.BigInteger)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/BigInteger.cs
    startLine: 981
  assemblies:
  - System.Runtime.Numerics
  namespace: System.Numerics
  summary: Tries to convert the string representation of a number to its @'System.Numerics.BigInteger' equivalent, and returns a value that indicates whether the conversion succeeded.
  syntax:
    content: public static bool TryParse(string value, out BigInteger result)
    content.vb: Public Shared Function TryParse(value As String, ByRef result As BigInteger) As Boolean
    parameters:
    - id: value
      type: System.String
      description: The string representation of a number.
    - id: result
      type: System.Numerics.BigInteger
      description: When this method returns, contains the @'System.Numerics.BigInteger' equivalent to the number that is contained in *value*, or zero (0) if the conversion fails. The conversion fails if the *value* parameter is null or is not of the correct format. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: true if *value* was converted successfully; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
references:
- uid: System.Numerics
  isExternal: false
  name: System.Numerics
  fullName: System.Numerics
  type: Namespace
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Decimal
  parent: System
  isExternal: false
  href: System.Decimal.yml
  name: Decimal
  fullName: System.Decimal
  type: Struct
- uid: System.Double
  parent: System
  isExternal: false
  href: System.Double.yml
  name: Double
  fullName: System.Double
  type: Struct
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System.Int64
  parent: System
  isExternal: false
  href: System.Int64.yml
  name: Int64
  fullName: System.Int64
  type: Struct
- uid: System.Single
  parent: System
  isExternal: false
  href: System.Single.yml
  name: Single
  fullName: System.Single
  type: Struct
- uid: System.UInt32
  parent: System
  isExternal: false
  href: System.UInt32.yml
  name: UInt32
  fullName: System.UInt32
  type: Struct
- uid: System.UInt64
  parent: System
  isExternal: false
  href: System.UInt64.yml
  name: UInt64
  fullName: System.UInt64
  type: Struct
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.Numerics.BigInteger
  parent: System.Numerics
  isExternal: false
  href: System.Numerics.BigInteger.yml
  name: BigInteger
  fullName: System.Numerics.BigInteger
  type: Struct
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: System.ValueType.yml
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    href: System.ValueType.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    href: System.ValueType.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  href: System.ValueType.yml
  name: ValueType
  fullName: System.ValueType
  type: Class
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  href: System.ValueType.yml
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    href: System.ValueType.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    href: System.ValueType.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Byte
  parent: System
  isExternal: false
  href: System.Byte.yml
  name: Byte
  fullName: System.Byte
  type: Struct
- uid: System.Int16
  parent: System
  isExternal: false
  href: System.Int16.yml
  name: Int16
  fullName: System.Int16
  type: Struct
- uid: System.SByte
  parent: System
  isExternal: false
  href: System.SByte.yml
  name: SByte
  fullName: System.SByte
  type: Struct
- uid: System.UInt16
  parent: System
  isExternal: false
  href: System.UInt16.yml
  name: UInt16
  fullName: System.UInt16
  type: Struct
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
  type: Class
- uid: System.Globalization.NumberStyles
  parent: System.Globalization
  isExternal: false
  href: System.Globalization.NumberStyles.yml
  name: NumberStyles
  fullName: System.Globalization.NumberStyles
  type: Enum
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
  type: Namespace
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  href: System.IFormatProvider.yml
  name: IFormatProvider
  fullName: System.IFormatProvider
  type: Interface
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  href: System.ValueType.yml
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    href: System.ValueType.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    href: System.ValueType.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  type: Class
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.OverflowException
  isExternal: false
  href: System.OverflowException.yml
  name: OverflowException
  fullName: System.OverflowException
  type: Class
  summary: The exception that is thrown when an arithmetic, casting, or conversion operation in a checked context results in an overflow.
- uid: System.DivideByZeroException
  isExternal: false
  href: System.DivideByZeroException.yml
  name: DivideByZeroException
  fullName: System.DivideByZeroException
  type: Class
  summary: The exception that is thrown when there is an attempt to divide an integral or decimal value by zero.
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  type: Class
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
- uid: System.FormatException
  parent: System
  isExternal: false
  href: System.FormatException.yml
  name: FormatException
  fullName: System.FormatException
  type: Class
  summary: The exception that is thrown when the format of an argument is invalid, or when a composite format string is not well formed.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  type: Class
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
