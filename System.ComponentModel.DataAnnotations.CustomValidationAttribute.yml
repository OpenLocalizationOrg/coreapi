items:
- uid: System.ComponentModel.DataAnnotations.CustomValidationAttribute
  commentId: T:System.ComponentModel.DataAnnotations.CustomValidationAttribute
  id: CustomValidationAttribute
  parent: System.ComponentModel.DataAnnotations
  children:
  - System.ComponentModel.DataAnnotations.CustomValidationAttribute.#ctor(System.Type,System.String)
  - System.ComponentModel.DataAnnotations.CustomValidationAttribute.FormatErrorMessage(System.String)
  - System.ComponentModel.DataAnnotations.CustomValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  - System.ComponentModel.DataAnnotations.CustomValidationAttribute.Method
  - System.ComponentModel.DataAnnotations.CustomValidationAttribute.ValidatorType
  langs:
  - csharp
  - vb
  name: CustomValidationAttribute
  fullName: System.ComponentModel.DataAnnotations.CustomValidationAttribute
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/CustomValidationAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CustomValidationAttribute
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/CustomValidationAttribute.cs
    startLine: 54
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Specifies a custom validation method that is used to validate a property or class instance.</p>\n"
  remarks: "\n<p>The <xref href=\"System.ComponentModel.DataAnnotations.CustomValidationAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute is used to perform custom validation when the <xref href=\"System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)\" data-throw-if-not-resolved=\"false\"></xref>method is invoked to perform validation. The <xref href=\"System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)\" data-throw-if-not-resolved=\"false\"></xref> method then redirects the call to the method that is identified by the <xref href=\"System.ComponentModel.DataAnnotations.CustomValidationAttribute.Method\" data-throw-if-not-resolved=\"false\"></xref> property, which in turn performs the actual validation.</p>\n<p>The <xref href=\"System.ComponentModel.DataAnnotations.CustomValidationAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute can be applied to types, properties, fields, methods, and method parameters. When it is applied to a property, the attribute is invoked whenever a value is assigned to that property. When it is applied to a method, the attribute is invoked whenever the program calls that method. When it is applied to a method parameter, the attribute is invoked before the method is called.</p>\n<p>For more information about using attributes, see Extending Metadata Using Attributes.</p>\n"
  example:
  - 
  syntax:
    content: 'public sealed class CustomValidationAttribute : ValidationAttribute'
    content.vb: >-
      Public NotInheritable Class CustomValidationAttribute
          Inherits ValidationAttribute
  inheritance:
  - System.Object
  - System.ComponentModel.DataAnnotations.ValidationAttribute
  inheritedMembers:
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString
  - System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext
  - System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  - System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)
  - System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  - System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.ComponentModel.DataAnnotations.CustomValidationAttribute.#ctor(System.Type,System.String)
  commentId: M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.#ctor(System.Type,System.String)
  id: '#ctor(System.Type,System.String)'
  parent: System.ComponentModel.DataAnnotations.CustomValidationAttribute
  langs:
  - csharp
  - vb
  name: CustomValidationAttribute(Type, String)
  fullName: System.ComponentModel.DataAnnotations.CustomValidationAttribute.CustomValidationAttribute(System.Type, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Annotations/ref/System.ComponentModel.Annotations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Annotations/ref/System.ComponentModel.Annotations.cs
    startLine: 46
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.CustomValidationAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>This method specifies a custom class and a related method to call at run time in order to execute custom validation logic. </p>\n"
  example:
  - 
  syntax:
    content: public CustomValidationAttribute(Type validatorType, string method)
    content.vb: Public Sub New(validatorType As Type, method As String)
    parameters:
    - id: validatorType
      type: System.Type
      description: "\n<p>The type that contains the method that performs custom validation.</p>\n"
    - id: method
      type: System.String
      description: "\n<p>The method that performs custom validation.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.CustomValidationAttribute.Method
  commentId: P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.Method
  id: Method
  parent: System.ComponentModel.DataAnnotations.CustomValidationAttribute
  langs:
  - csharp
  - vb
  name: Method
  fullName: System.ComponentModel.DataAnnotations.CustomValidationAttribute.Method
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/CustomValidationAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Method
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/CustomValidationAttribute.cs
    startLine: 110
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets the validation method.</p>\n"
  remarks: "\n<p>The custom method specified by this property must be public and static, and it must return a Boolean value. It must also take at least one input parameter that specifies the object to validate. This parameter can be strongly typed. If a process passes a value of a different type, type conversion will be attempted.</p>\n<p>The specified method should return <strong>true</strong> if a given object is valid. Otherwise it should return <strong>false</strong>.</p>\n<p>The custom method can also take parameters that specify a <xref href=\"System.ComponentModel.DataAnnotations.ValidationContext\" data-throw-if-not-resolved=\"false\"></xref> input value and a <xref href=\"System.ComponentModel.DataAnnotations.ValidationResult\" data-throw-if-not-resolved=\"false\"></xref> output value. The <xref href=\"System.ComponentModel.DataAnnotations.ValidationContext\" data-throw-if-not-resolved=\"false\"></xref> parameter provides additional context information that the method can use to determine the context that it is used in. The <xref href=\"System.ComponentModel.DataAnnotations.ValidationResult\" data-throw-if-not-resolved=\"false\"></xref> output parameter enables the method to return an error message.</p>\n<p>If the method returns <strong>null</strong> for the <xref href=\"System.ComponentModel.DataAnnotations.ValidationResult\" data-throw-if-not-resolved=\"false\"></xref> parameter or if it returns an empty value for the <xref href=\"System.ComponentModel.DataAnnotations.ValidationResult.ErrorMessage\" data-throw-if-not-resolved=\"false\"></xref> property, the default <xref href=\"System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method will be called to compose the error message.</p>\n"
  example:
  - 
  syntax:
    content: public string Method { get; }
    content.vb: Public ReadOnly Property Method As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the validation method.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.DataAnnotations.CustomValidationAttribute.ValidatorType
  commentId: P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.ValidatorType
  id: ValidatorType
  parent: System.ComponentModel.DataAnnotations.CustomValidationAttribute
  langs:
  - csharp
  - vb
  name: ValidatorType
  fullName: System.ComponentModel.DataAnnotations.CustomValidationAttribute.ValidatorType
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/CustomValidationAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ValidatorType
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/CustomValidationAttribute.cs
    startLine: 102
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets the type that performs custom validation.</p>\n"
  remarks: "\n<p>This property returns the type that is passed to the ctor <xref href=\"System.ComponentModel.DataAnnotations.CustomValidationAttribute.#ctor(System.Type,System.String)\" data-throw-if-not-resolved=\"false\"></xref>constructor overload.</p>\n"
  example:
  - 
  syntax:
    content: public Type ValidatorType { get; }
    content.vb: Public ReadOnly Property ValidatorType As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>The type that performs custom validation.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.DataAnnotations.CustomValidationAttribute.FormatErrorMessage(System.String)
  commentId: M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.FormatErrorMessage(System.String)
  id: FormatErrorMessage(System.String)
  parent: System.ComponentModel.DataAnnotations.CustomValidationAttribute
  langs:
  - csharp
  - vb
  name: FormatErrorMessage(String)
  fullName: System.ComponentModel.DataAnnotations.CustomValidationAttribute.FormatErrorMessage(System.String)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/CustomValidationAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FormatErrorMessage
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/CustomValidationAttribute.cs
    startLine: 201
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Formats a validation error message.</p>\n"
  remarks: "\n<p>The error message is formatted at run time to include the <em>name</em> value that is passed to this method.</p>\n"
  example:
  - 
  syntax:
    content: public override string FormatErrorMessage(string name)
    content.vb: Public Overrides Function FormatErrorMessage(name As String) As String
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name to include in the formatted message.</p>\n"
    return:
      type: System.String
      description: "\n<p>An instance of the formatted error message.</p>\n"
  overridden: System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.DataAnnotations.CustomValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  commentId: M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  id: IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  parent: System.ComponentModel.DataAnnotations.CustomValidationAttribute
  langs:
  - csharp
  - vb
  name: IsValid(Object, ValidationContext)
  fullName: System.ComponentModel.DataAnnotations.CustomValidationAttribute.IsValid(System.Object, System.ComponentModel.DataAnnotations.ValidationContext)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/CustomValidationAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsValid
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/CustomValidationAttribute.cs
    startLine: 137
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  syntax:
    content: protected override ValidationResult IsValid(object value, ValidationContext validationContext)
    content.vb: Protected Overrides Function IsValid(value As Object, validationContext As ValidationContext) As ValidationResult
    parameters:
    - id: value
      type: System.Object
    - id: validationContext
      type: System.ComponentModel.DataAnnotations.ValidationContext
    return:
      type: System.ComponentModel.DataAnnotations.ValidationResult
  overridden: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: System.ComponentModel.DataAnnotations
  isExternal: false
  name: System.ComponentModel.DataAnnotations
  fullName: System.ComponentModel.DataAnnotations
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute
  parent: System.ComponentModel.DataAnnotations
  isExternal: false
  name: ValidationAttribute
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: false
  name: ErrorMessage
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: false
  name: ErrorMessageResourceName
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: false
  name: ErrorMessageResourceType
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: false
  name: ErrorMessageString
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: false
  name: RequiresValidationContext
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: true
  name: GetValidationResult(Object, ValidationContext)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object, System.ComponentModel.DataAnnotations.ValidationContext)
  spec.csharp:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
    name: GetValidationResult
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ComponentModel.DataAnnotations.ValidationContext
    name: ValidationContext
    fullName: System.ComponentModel.DataAnnotations.ValidationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
    name: GetValidationResult
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ComponentModel.DataAnnotations.ValidationContext
    name: ValidationContext
    fullName: System.ComponentModel.DataAnnotations.ValidationContext
  - name: )
    fullName: )
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: true
  name: IsValid(Object)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)
    name: IsValid
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)
    name: IsValid
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: true
  name: Validate(Object, ValidationContext)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object, System.ComponentModel.DataAnnotations.ValidationContext)
  spec.csharp:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
    name: Validate
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ComponentModel.DataAnnotations.ValidationContext
    name: ValidationContext
    fullName: System.ComponentModel.DataAnnotations.ValidationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
    name: Validate
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ComponentModel.DataAnnotations.ValidationContext
    name: ValidationContext
    fullName: System.ComponentModel.DataAnnotations.ValidationContext
  - name: )
    fullName: )
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: true
  name: Validate(Object, String)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object, System.String)
  spec.csharp:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)
    name: Validate
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)
    name: Validate
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: true
  name: FormatErrorMessage(String)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)
  spec.csharp:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)
    name: FormatErrorMessage
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)
    name: FormatErrorMessage
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: true
  name: IsValid(Object, ValidationContext)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object, System.ComponentModel.DataAnnotations.ValidationContext)
  spec.csharp:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
    name: IsValid
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ComponentModel.DataAnnotations.ValidationContext
    name: ValidationContext
    fullName: System.ComponentModel.DataAnnotations.ValidationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
    name: IsValid
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ComponentModel.DataAnnotations.ValidationContext
    name: ValidationContext
    fullName: System.ComponentModel.DataAnnotations.ValidationContext
  - name: )
    fullName: )
- uid: System.ComponentModel.DataAnnotations.ValidationContext
  parent: System.ComponentModel.DataAnnotations
  isExternal: false
  name: ValidationContext
  fullName: System.ComponentModel.DataAnnotations.ValidationContext
- uid: System.ComponentModel.DataAnnotations.ValidationResult
  parent: System.ComponentModel.DataAnnotations
  isExternal: false
  name: ValidationResult
  fullName: System.ComponentModel.DataAnnotations.ValidationResult
