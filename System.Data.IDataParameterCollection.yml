items:
- uid: System.Data.IDataParameterCollection
  commentId: T:System.Data.IDataParameterCollection
  id: IDataParameterCollection
  parent: System.Data
  children:
  - System.Data.IDataParameterCollection.Contains(System.String)
  - System.Data.IDataParameterCollection.IndexOf(System.String)
  - System.Data.IDataParameterCollection.Item(System.String)
  - System.Data.IDataParameterCollection.RemoveAt(System.String)
  langs:
  - csharp
  - vb
  name: IDataParameterCollection
  fullName: System.Data.IDataParameterCollection
  type: Interface
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IDataParameterCollection
    path: src/System.Data.Common/src/System/Data/IDataParameterCollection.cs
    startLine: 10
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Collects all parameters relevant to a Command object and their mappings to <xref href=\"System.Data.DataSet\" data-throw-if-not-resolved=\"false\"></xref> columns, and is implemented by .NET Framework data providers that access data sources.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Data.IDataParameterCollection\" data-throw-if-not-resolved=\"false\"></xref> interface allows an inheriting class to implement a Parameter collection. For more information about Parameter classes, see Configuring Parameters and Parameter Data Types.</p>\n<p>An application does not create an instance of the <xref href=\"System.Data.IDataParameterCollection\" data-throw-if-not-resolved=\"false\"></xref> interface directly, but creates an instance of a class that inherits <xref href=\"System.Data.IDataParameterCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Classes that inherit <xref href=\"System.Data.IDataParameterCollection\" data-throw-if-not-resolved=\"false\"></xref> must implement the inherited members, and typically define additional members to add provider-specific functionality. For example, the <xref href=\"System.Data.IDataParameterCollection\" data-throw-if-not-resolved=\"false\"></xref> interface defines one implementation of the <xref href=\"System.Data.IDataParameterCollection.RemoveAt(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method. In turn, the <xref href=\"System.Data.OleDb.OleDbParameterCollection\" data-throw-if-not-resolved=\"false\"></xref> class inherits this method, and defines two additional overloads of <strong>RemoveAt</strong>.</p>\n"
  syntax:
    content: 'public interface IDataParameterCollection : Collections.ICollection, Collections.IEnumerable, Collections.IList'
    content.vb: >-
      Public Interface IDataParameterCollection
          Inherits Collections.ICollection, Collections.IEnumerable, Collections.IList
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Data.IDataParameterCollection.Item(System.String)
  commentId: P:System.Data.IDataParameterCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.IDataParameterCollection
  langs:
  - csharp
  - vb
  name: Item[String]
  fullName: System.Data.IDataParameterCollection.Item[System.String]
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Data.Common/src/System/Data/IDataParameterCollection.cs
    startLine: 13
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Gets or sets the parameter at the specified index.</p>\n"
  syntax:
    content: object this[string parameterName] { get; set; }
    content.vb: Property Item(parameterName As String) As Object
    parameters:
    - id: parameterName
      type: System.String
      description: "\n<p>The name of the parameter to retrieve. </p>\n"
    return:
      type: System.Object
      description: "\n<p>An <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> at the specified index.</p>\n"
  modifiers.csharp:
  - get
  - set
  fullName.vb: System.Data.IDataParameterCollection.Item(System.String)
  name.vb: Item(String)
- uid: System.Data.IDataParameterCollection.Contains(System.String)
  commentId: M:System.Data.IDataParameterCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.IDataParameterCollection
  langs:
  - csharp
  - vb
  name: Contains(String)
  fullName: System.Data.IDataParameterCollection.Contains(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Data.Common/src/System/Data/IDataParameterCollection.cs
    startLine: 19
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Gets a value indicating whether a parameter in the collection has the specified name.</p>\n"
  syntax:
    content: bool Contains(string parameterName)
    content.vb: Function Contains(parameterName As String) As Boolean
    parameters:
    - id: parameterName
      type: System.String
      description: "\n<p>The name of the parameter. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the collection contains the parameter; otherwise, <strong>false</strong>.</p>\n"
- uid: System.Data.IDataParameterCollection.IndexOf(System.String)
  commentId: M:System.Data.IDataParameterCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.IDataParameterCollection
  langs:
  - csharp
  - vb
  name: IndexOf(String)
  fullName: System.Data.IDataParameterCollection.IndexOf(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IndexOf
    path: src/System.Data.Common/src/System/Data/IDataParameterCollection.cs
    startLine: 21
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Gets the location of the <xref href=\"System.Data.IDataParameter\" data-throw-if-not-resolved=\"false\"></xref> within the collection.</p>\n"
  syntax:
    content: int IndexOf(string parameterName)
    content.vb: Function IndexOf(parameterName As String) As Integer
    parameters:
    - id: parameterName
      type: System.String
      description: "\n<p>The name of the parameter. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The zero-based location of the <xref href=\"System.Data.IDataParameter\" data-throw-if-not-resolved=\"false\"></xref> within the collection.</p>\n"
- uid: System.Data.IDataParameterCollection.RemoveAt(System.String)
  commentId: M:System.Data.IDataParameterCollection.RemoveAt(System.String)
  id: RemoveAt(System.String)
  parent: System.Data.IDataParameterCollection
  langs:
  - csharp
  - vb
  name: RemoveAt(String)
  fullName: System.Data.IDataParameterCollection.RemoveAt(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAt
    path: src/System.Data.Common/src/System/Data/IDataParameterCollection.cs
    startLine: 23
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Removes the <xref href=\"System.Data.IDataParameter\" data-throw-if-not-resolved=\"false\"></xref> from the collection.</p>\n"
  syntax:
    content: void RemoveAt(string parameterName)
    content.vb: Sub RemoveAt(parameterName As String)
    parameters:
    - id: parameterName
      type: System.String
      description: "\n<p>The name of the parameter. </p>\n"
references:
- uid: System.Data
  isExternal: false
  name: System.Data
  fullName: System.Data
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
