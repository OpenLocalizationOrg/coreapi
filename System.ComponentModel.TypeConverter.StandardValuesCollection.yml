items:
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  commentId: T:System.ComponentModel.TypeConverter.StandardValuesCollection
  id: TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  children:
  - System.ComponentModel.TypeConverter.StandardValuesCollection.#ctor(System.Collections.ICollection)
  - System.ComponentModel.TypeConverter.StandardValuesCollection.CopyTo(System.Array,System.Int32)
  - System.ComponentModel.TypeConverter.StandardValuesCollection.Count
  - System.ComponentModel.TypeConverter.StandardValuesCollection.GetEnumerator
  - System.ComponentModel.TypeConverter.StandardValuesCollection.Item(System.Int32)
  langs:
  - csharp
  - vb
  name: TypeConverter.StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter.StandardValuesCollection
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: StandardValuesCollection
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
    startLine: 526
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Represents a collection of values.</p>\n"
  remarks: "\n<p>This is a simple collection class that takes an array of values and converts it to a collection. It is lightweight and is well suited for use in <xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: 'public class StandardValuesCollection : Collections.ICollection, Collections.IEnumerable'
    content.vb: >-
      Public Class StandardValuesCollection
          Inherits Collections.ICollection
          Implements Collections.IEnumerable
  seealso:
  - type: System.ComponentModel.TypeConverter.GetStandardValues
    commentId: M:System.ComponentModel.TypeConverter.GetStandardValues
  - type: System.ComponentModel.TypeConverter
    commentId: T:System.ComponentModel.TypeConverter
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection.#ctor(System.Collections.ICollection)
  commentId: M:System.ComponentModel.TypeConverter.StandardValuesCollection.#ctor(System.Collections.ICollection)
  id: '#ctor(System.Collections.ICollection)'
  parent: System.ComponentModel.TypeConverter.StandardValuesCollection
  langs:
  - csharp
  - vb
  name: StandardValuesCollection(Collections.ICollection)
  fullName: System.ComponentModel.TypeConverter.StandardValuesCollection.StandardValuesCollection(System.Collections.ICollection)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 513
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public StandardValuesCollection(Collections.ICollection values)
    content.vb: Public Sub New(values As Collections.ICollection)
    parameters:
    - id: values
      type: System.Collections.ICollection
      description: "\n<p>An <xref href=\"System.Collections.ICollection\" data-throw-if-not-resolved=\"false\"></xref> that represents the objects to put into the collection. </p>\n"
  seealso:
  - type: System.Collections.ICollection
    commentId: T:System.Collections.ICollection
  - type: System.ComponentModel.TypeConverter.StandardValuesCollection
    commentId: T:System.ComponentModel.TypeConverter.StandardValuesCollection
  - type: System.ComponentModel.TypeConverter
    commentId: T:System.ComponentModel.TypeConverter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection.Count
  commentId: P:System.ComponentModel.TypeConverter.StandardValuesCollection.Count
  id: Count
  parent: System.ComponentModel.TypeConverter.StandardValuesCollection
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.ComponentModel.TypeConverter.StandardValuesCollection.Count
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
    startLine: 557
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets the number of objects in the collection.</p>\n"
  remarks: "\n<p>The <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection.Count\" data-throw-if-not-resolved=\"false\"></xref> property can be used to set the limits of a loop that iterates through a collection of objects. Since collection is zero-based, be sure to use <code>Count - 1</code> as the upper bound of the loop.</p>\n"
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The number of objects in the collection.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeConverter.StandardValuesCollection
    commentId: T:System.ComponentModel.TypeConverter.StandardValuesCollection
  - type: System.ComponentModel.TypeConverter
    commentId: T:System.ComponentModel.TypeConverter
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection.Item(System.Int32)
  commentId: P:System.ComponentModel.TypeConverter.StandardValuesCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.ComponentModel.TypeConverter.StandardValuesCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  fullName: System.ComponentModel.TypeConverter.StandardValuesCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
    startLine: 575
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets the object at the specified index number.</p>\n"
  remarks: "\n<p>The index number is zero-based. Therefore, you must subtract one from the numerical position of a particular <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> to access that <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>. For example, to get the third <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>, you need to specify <code>myColl[2]</code>.</p>\n"
  syntax:
    content: public object this[int index] { get; }
    content.vb: Public ReadOnly Property Item(index As Integer) As Object
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>The zero-based index of the <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> to get from the collection. </p>\n"
    return:
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> with the specified index.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeConverter.StandardValuesCollection
    commentId: T:System.ComponentModel.TypeConverter.StandardValuesCollection
  - type: System.ComponentModel.TypeConverter
    commentId: T:System.ComponentModel.TypeConverter
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.ComponentModel.TypeConverter.StandardValuesCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection.CopyTo(System.Array,System.Int32)
  commentId: M:System.ComponentModel.TypeConverter.StandardValuesCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.ComponentModel.TypeConverter.StandardValuesCollection
  langs:
  - csharp
  - vb
  name: CopyTo(Array, Int32)
  fullName: System.ComponentModel.TypeConverter.StandardValuesCollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 518
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Copies the contents of this collection to an array.</p>\n"
  remarks: "\n<p>The index number is zero-based. Therefore, you must subtract one from the numerical position of a particular <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> to access that <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>. For example, to get the third <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>, you need to specify <code>myColl[2]</code>.</p>\n"
  syntax:
    content: public void CopyTo(Array array, int index)
    content.vb: Public Sub CopyTo(array As Array, index As Integer)
    parameters:
    - id: array
      type: System.Array
      description: "\n<p>An <xref href=\"System.Array\" data-throw-if-not-resolved=\"false\"></xref> that represents the array to copy to. </p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The index to start from. </p>\n"
  seealso:
  - type: System.Array
    commentId: T:System.Array
  - type: System.ComponentModel.TypeConverter.StandardValuesCollection
    commentId: T:System.ComponentModel.TypeConverter.StandardValuesCollection
  - type: System.ComponentModel.TypeConverter
    commentId: T:System.ComponentModel.TypeConverter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection.GetEnumerator
  commentId: M:System.ComponentModel.TypeConverter.StandardValuesCollection.GetEnumerator
  id: GetEnumerator
  parent: System.ComponentModel.TypeConverter.StandardValuesCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.ComponentModel.TypeConverter.StandardValuesCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
    startLine: 611
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns an enumerator for this collection.</p>\n"
  syntax:
    content: public Collections.IEnumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As Collections.IEnumerator
    return:
      type: System.Collections.IEnumerator
      description: "\n<p>An enumerator of type <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.Collections.IEnumerator
    commentId: T:System.Collections.IEnumerator
  - type: System.ComponentModel.TypeConverter.StandardValuesCollection
    commentId: T:System.ComponentModel.TypeConverter.StandardValuesCollection
  - type: System.ComponentModel.TypeConverter
    commentId: T:System.ComponentModel.TypeConverter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: Collections.ICollection
  fullName: System.Collections.ICollection
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  fullName: System.Array
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerator
  fullName: System.Collections.IEnumerator
