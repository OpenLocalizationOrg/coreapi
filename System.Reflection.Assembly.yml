items:
- uid: System.Reflection.Assembly
  id: Assembly
  parent: System.Reflection
  children:
  - System.Reflection.Assembly.CustomAttributes
  - System.Reflection.Assembly.DefinedTypes
  - System.Reflection.Assembly.EntryPoint
  - System.Reflection.Assembly.Equals(System.Object)
  - System.Reflection.Assembly.ExportedTypes
  - System.Reflection.Assembly.FullName
  - System.Reflection.Assembly.GetEntryAssembly
  - System.Reflection.Assembly.GetHashCode
  - System.Reflection.Assembly.GetManifestResourceInfo(System.String)
  - System.Reflection.Assembly.GetManifestResourceNames
  - System.Reflection.Assembly.GetManifestResourceStream(System.String)
  - System.Reflection.Assembly.GetName
  - System.Reflection.Assembly.GetType(System.String)
  - System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)
  - System.Reflection.Assembly.IsDynamic
  - System.Reflection.Assembly.Load(System.Reflection.AssemblyName)
  - System.Reflection.Assembly.Location
  - System.Reflection.Assembly.ManifestModule
  - System.Reflection.Assembly.Modules
  - System.Reflection.Assembly.ToString
  href: System.Reflection.Assembly.yml
  name: Assembly
  fullName: System.Reflection.Assembly
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Reflection/Assembly.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Reflection/Assembly.cs
    startLine: 48
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Represents an assembly, which is a reusable, versionable, and self-describing building block of a common language runtime application.
  syntax:
    content: 'public abstract class Assembly : object'
    content.vb: Public MustInherit Class Assembly Inherits Object
  inheritance:
  - System.Object
- uid: System.Reflection.Assembly.CustomAttributes
  id: CustomAttributes
  parent: System.Reflection.Assembly
  href: System.Reflection.Assembly.yml
  name: CustomAttributes
  fullName: System.Reflection.Assembly.CustomAttributes
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Assembly.cs
    startLine: 847
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a collection that contains this assembly's custom attributes.
  syntax:
    content: public virtual Collections.Generic.IEnumerable<CustomAttributeData> CustomAttributes { get; }
    content.vb: Public Overridable ReadOnly Property CustomAttributes As Collections.Generic.IEnumerable(Of CustomAttributeData)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}
      description: A collection that contains this assembly's custom attributes.
- uid: System.Reflection.Assembly.DefinedTypes
  id: DefinedTypes
  parent: System.Reflection.Assembly
  href: System.Reflection.Assembly.yml
  name: DefinedTypes
  fullName: System.Reflection.Assembly.DefinedTypes
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Assembly.cs
    startLine: 716
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a collection of the types defined in this assembly.
  syntax:
    content: public abstract Collections.Generic.IEnumerable<TypeInfo> DefinedTypes { get; }
    content.vb: Public MustOverride ReadOnly Property DefinedTypes As Collections.Generic.IEnumerable(Of TypeInfo)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}
      description: A collection of the types defined in this assembly.
- uid: System.Reflection.Assembly.ExportedTypes
  id: ExportedTypes
  parent: System.Reflection.Assembly
  href: System.Reflection.Assembly.yml
  name: ExportedTypes
  fullName: System.Reflection.Assembly.ExportedTypes
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Assembly.cs
    startLine: 703
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a collection of the public types defined in this assembly that are visible outside the assembly.
  syntax:
    content: public virtual Collections.Generic.IEnumerable<Type> ExportedTypes { get; }
    content.vb: Public Overridable ReadOnly Property ExportedTypes As Collections.Generic.IEnumerable(Of Type)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: A collection of the public types defined in this assembly that are visible outside the assembly.
- uid: System.Reflection.Assembly.EntryPoint
  id: EntryPoint
  parent: System.Reflection.Assembly
  href: System.Reflection.Assembly.yml
  name: EntryPoint
  fullName: System.Reflection.Assembly.EntryPoint
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Assembly.cs
    startLine: 673
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the entry point of this assembly.
  syntax:
    content: public virtual MethodInfo EntryPoint { get; }
    content.vb: Public Overridable ReadOnly Property EntryPoint As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: An object that represents the entry point of this assembly. If no entry point is found (for example, the assembly is a DLL), null is returned.
- uid: System.Reflection.Assembly.FullName
  id: FullName
  parent: System.Reflection.Assembly
  href: System.Reflection.Assembly.yml
  name: FullName
  fullName: System.Reflection.Assembly.FullName
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Assembly.cs
    startLine: 665
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the display name of the assembly.
  syntax:
    content: public virtual string FullName { get; }
    content.vb: Public Overridable ReadOnly Property FullName As String
    parameters: []
    return:
      type: System.String
      description: The display name of the assembly.
- uid: System.Reflection.Assembly.IsDynamic
  id: IsDynamic
  parent: System.Reflection.Assembly
  href: System.Reflection.Assembly.yml
  name: IsDynamic
  fullName: System.Reflection.Assembly.IsDynamic
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Assembly.cs
    startLine: 1089
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value that indicates whether the current assembly was generated dynamically in the current process by using reflection emit.
  syntax:
    content: public virtual bool IsDynamic { get; }
    content.vb: Public Overridable ReadOnly Property IsDynamic As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the current assembly was generated dynamically in the current process; otherwise, false.
- uid: System.Reflection.Assembly.ManifestModule
  id: ManifestModule
  parent: System.Reflection.Assembly
  href: System.Reflection.Assembly.yml
  name: ManifestModule
  fullName: System.Reflection.Assembly.ManifestModule
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Assembly.cs
    startLine: 831
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the module that contains the manifest for the current assembly.
  syntax:
    content: public virtual Module ManifestModule { get; }
    content.vb: Public Overridable ReadOnly Property ManifestModule As
    parameters: []
    return:
      type: System.Reflection.Module
      description: The module that contains the manifest for the assembly.
- uid: System.Reflection.Assembly.Modules
  id: Modules
  parent: System.Reflection.Assembly
  href: System.Reflection.Assembly.yml
  name: Modules
  fullName: System.Reflection.Assembly.Modules
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Assembly.cs
    startLine: 959
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a collection that contains the modules in this assembly.
  syntax:
    content: public abstract Collections.Generic.IEnumerable<Module> Modules { get; }
    content.vb: Public MustOverride ReadOnly Property Modules As Collections.Generic.IEnumerable(Of Module)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.Module}
      description: A collection that contains the modules in this assembly.
- uid: System.Reflection.Assembly.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Assembly
  href: System.Reflection.Assembly.yml
  name: Equals(Object)
  fullName: System.Reflection.Assembly.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Assembly.cs
    startLine: 101
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Determines whether this assembly and the specified object are equal.
  syntax:
    content: public override bool Equals(object o)
    content.vb: Public Overrides Function Equals(o As Object) As Boolean
    parameters:
    - id: o
      type: System.Object
      description: The object to compare with this instance.
    return:
      type: System.Boolean
      description: true if *o* is equal to this instance; otherwise, false.
- uid: System.Reflection.Assembly.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Assembly
  href: System.Reflection.Assembly.yml
  name: GetHashCode()
  fullName: System.Reflection.Assembly.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Assembly.cs
    startLine: 106
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Returns the hash code for this instance.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
- uid: System.Reflection.Assembly.GetManifestResourceInfo(System.String)
  id: GetManifestResourceInfo(System.String)
  parent: System.Reflection.Assembly
  href: System.Reflection.Assembly.yml
  name: GetManifestResourceInfo(String)
  fullName: System.Reflection.Assembly.GetManifestResourceInfo(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Assembly.cs
    startLine: 1026
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Returns information about how the given resource has been persisted.
  syntax:
    content: public virtual ManifestResourceInfo GetManifestResourceInfo(string resourceName)
    content.vb: Public Overridable Function GetManifestResourceInfo(resourceName As String) As ManifestResourceInfo
    parameters:
    - id: resourceName
      type: System.String
      description: The case-sensitive name of the resource.
    return:
      type: System.Reflection.ManifestResourceInfo
      description: An object that is populated with information about the resource's topology, or null if the resource is not found.
  exceptions:
  - type: System.ArgumentNullException
    description: '*resourceName* is null.'
  - type: System.ArgumentException
    description: The *resourceName* parameter is an empty string ("").
- uid: System.Reflection.Assembly.GetManifestResourceNames
  id: GetManifestResourceNames
  parent: System.Reflection.Assembly
  href: System.Reflection.Assembly.yml
  name: GetManifestResourceNames()
  fullName: System.Reflection.Assembly.GetManifestResourceNames()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Assembly.cs
    startLine: 1016
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Returns the names of all the resources in this assembly.
  syntax:
    content: public virtual string[] GetManifestResourceNames()
    content.vb: Public Overridable Function GetManifestResourceNames As String()
    return:
      type: System.String[]
      description: An array that contains the names of all the resources.
- uid: System.Reflection.Assembly.GetManifestResourceStream(System.String)
  id: GetManifestResourceStream(System.String)
  parent: System.Reflection.Assembly
  href: System.Reflection.Assembly.yml
  name: GetManifestResourceStream(String)
  fullName: System.Reflection.Assembly.GetManifestResourceStream(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Assembly.cs
    startLine: 770
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Loads the specified manifest resource from this assembly.
  syntax:
    content: public virtual IO.Stream GetManifestResourceStream(string name)
    content.vb: Public Overridable Function GetManifestResourceStream(name As String) As IO.Stream
    parameters:
    - id: name
      type: System.String
      description: The case-sensitive name of the manifest resource being requested.
    return:
      type: System.IO.Stream
      description: The manifest resource; or null if no resources were specified during compilation or if the resource is not visible to the caller.
  exceptions:
  - type: System.ArgumentNullException
    description: The *name* parameter is null.
  - type: System.ArgumentException
    description: The *name* parameter is an empty string ("").
  - type: System.IO.FileLoadException
    description: In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, @'System.IO.IOException', instead.A file that was found could not be loaded.
  - type: System.IO.FileNotFoundException
    description: '*name* was not found.'
  - type: System.BadImageFormatException
    description: '*name* is not a valid assembly.'
  - type: System.NotImplementedException
    description: Resource length is greater than @'System.Int64.MaxValue'.
- uid: System.Reflection.Assembly.GetName
  id: GetName
  parent: System.Reflection.Assembly
  href: System.Reflection.Assembly.yml
  name: GetName()
  fullName: System.Reflection.Assembly.GetName()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Assembly.cs
    startLine: 650
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets an @'System.Reflection.AssemblyName' for this assembly.
  syntax:
    content: public virtual AssemblyName GetName()
    content.vb: Public Overridable Function GetName As AssemblyName
    return:
      type: System.Reflection.AssemblyName
      description: An object that contains the fully parsed display name for this assembly.
- uid: System.Reflection.Assembly.GetType(System.String)
  id: GetType(System.String)
  parent: System.Reflection.Assembly
  href: System.Reflection.Assembly.yml
  name: GetType(String)
  fullName: System.Reflection.Assembly.GetType(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Assembly.cs
    startLine: 688
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the @'System.Type' object with the specified name in the assembly instance.
  syntax:
    content: public virtual Type GetType(string name)
    content.vb: Public Overridable Function GetType(name As String) As Type
    parameters:
    - id: name
      type: System.String
      description: The full name of the type.
    return:
      type: System.Type
      description: An object that represents the specified class, or null if the class is not found.
  exceptions:
  - type: System.ArgumentException
    description: '*name* is invalid.'
  - type: System.ArgumentNullException
    description: '*name* is null.'
  - type: System.IO.FileNotFoundException
    description: '*name* requires a dependent assembly that could not be found.'
  - type: System.IO.FileLoadException
    description: In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, @'System.IO.IOException', instead.*name* requires a dependent assembly that was found but could not be loaded.-or-The current assembly was loaded into the reflection-only context, and *name* requires a dependent assembly that was not preloaded.
  - type: System.BadImageFormatException
    description: '*name* requires a dependent assembly, but the file is not a valid assembly. -or-*name* requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.'
- uid: System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)
  id: GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Reflection.Assembly
  href: System.Reflection.Assembly.yml
  name: GetType(String, Boolean, Boolean)
  fullName: System.Reflection.Assembly.GetType(System.String, System.Boolean, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Assembly.cs
    startLine: 698
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the @'System.Type' object with the specified name in the assembly instance, with the options of ignoring the case, and of throwing an exception if the type is not found.
  syntax:
    content: public virtual Type GetType(string name, bool throwOnError, bool ignoreCase)
    content.vb: Public Overridable Function GetType(name As String, throwOnError As Boolean, ignoreCase As Boolean) As Type
    parameters:
    - id: name
      type: System.String
      description: The full name of the type.
    - id: throwOnError
      type: System.Boolean
      description: true to throw an exception if the type is not found; false to return null.
    - id: ignoreCase
      type: System.Boolean
      description: true to ignore the case of the type name; otherwise, false.
    return:
      type: System.Type
      description: An object that represents the specified class.
  exceptions:
  - type: System.ArgumentException
    description: '*name* is invalid.-or- The length of *name* exceeds 1024 characters.'
  - type: System.ArgumentNullException
    description: '*name* is null.'
  - type: System.TypeLoadException
    description: '*throwOnError* is true, and the type cannot be found.'
  - type: System.IO.FileNotFoundException
    description: '*name* requires a dependent assembly that could not be found.'
  - type: System.IO.FileLoadException
    description: '*name* requires a dependent assembly that was found but could not be loaded.-or-The current assembly was loaded into the reflection-only context, and *name* requires a dependent assembly that was not preloaded.'
  - type: System.BadImageFormatException
    description: '*name* requires a dependent assembly, but the file is not a valid assembly. -or-*name* requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.'
- uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName)
  id: Load(System.Reflection.AssemblyName)
  parent: System.Reflection.Assembly
  href: System.Reflection.Assembly.yml
  name: Load(AssemblyName)
  fullName: System.Reflection.Assembly.Load(System.Reflection.AssemblyName)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Assembly.cs
    startLine: 329
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Loads an assembly given its @'System.Reflection.AssemblyName'.
  syntax:
    content: public static Assembly Load(AssemblyName assemblyRef)
    content.vb: Public Shared Function Load(assemblyRef As AssemblyName) As Assembly
    parameters:
    - id: assemblyRef
      type: System.Reflection.AssemblyName
      description: The object that describes the assembly to be loaded.
    return:
      type: System.Reflection.Assembly
      description: The loaded assembly.
  exceptions:
  - type: System.ArgumentNullException
    description: '*assemblyRef* is null.'
  - type: System.IO.FileNotFoundException
    description: '*assemblyRef* is not found.'
  - type: System.IO.FileLoadException
    description: In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, @'System.IO.IOException', instead.A file that was found could not be loaded.
  - type: System.BadImageFormatException
    description: '*assemblyRef* is not a valid assembly. -or-Version 2.0 or later of the common language runtime is currently loaded and *assemblyRef* was compiled with a later version.'
- uid: System.Reflection.Assembly.GetEntryAssembly
  id: GetEntryAssembly
  parent: System.Reflection.Assembly
  href: System.Reflection.Assembly.yml
  name: GetEntryAssembly()
  fullName: System.Reflection.Assembly.GetEntryAssembly()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Assembly.cs
    startLine: 604
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the process executable in the default application domain. In other application domains, this is the first executable that was executed by @'System.AppDomain.ExecuteAssembly(System.String)'.
  syntax:
    content: public static Assembly GetEntryAssembly()
    content.vb: Public Shared Function GetEntryAssembly As Assembly
    return:
      type: System.Reflection.Assembly
      description: The assembly that is the process executable in the default application domain, or the first executable that was executed by @'System.AppDomain.ExecuteAssembly(System.String)'. Can return null when called from unmanaged code.
- uid: System.Reflection.Assembly.Location
  id: Location
  parent: System.Reflection.Assembly
  href: System.Reflection.Assembly.yml
  name: Location
  fullName: System.Reflection.Assembly.Location
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Assembly.cs
    startLine: 1040
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the full path or UNC location of the loaded file that contains the manifest.
  syntax:
    content: public virtual string Location { get; }
    content.vb: Public Overridable ReadOnly Property Location As String
    parameters: []
    return:
      type: System.String
      description: The location of the loaded file that contains the manifest. If the loaded file was shadow-copied, the location is that of the file after being shadow-copied. If the assembly is loaded from a byte array, such as when using the @'System.Reflection.Assembly.Load(System.Byte[])' method overload, the value returned is an empty string ("").
  exceptions:
  - type: System.NotSupportedException
    description: The current assembly is a dynamic assembly, represented by an @'System.Reflection.Emit.AssemblyBuilder' object.
- uid: System.Reflection.Assembly.ToString
  id: ToString
  parent: System.Reflection.Assembly
  href: System.Reflection.Assembly.yml
  name: ToString()
  fullName: System.Reflection.Assembly.ToString()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Assembly.cs
    startLine: 1031
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Returns the full name of the assembly, also known as the display name.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: The full name of the assembly, or the class name if the full name of the assembly cannot be determined.
references:
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Reflection.CustomAttributeData.yml
  name: Collections.Generic.IEnumerable<CustomAttributeData>
  name.vb: Collections.Generic.IEnumerable(Of CustomAttributeData)
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.CustomAttributeData>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.CustomAttributeData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Reflection.CustomAttributeData
    name: CustomAttributeData
    fullName: System.Reflection.CustomAttributeData
    href: System.Reflection.CustomAttributeData.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.CustomAttributeData
    name: CustomAttributeData
    fullName: System.Reflection.CustomAttributeData
    href: System.Reflection.CustomAttributeData.yml
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.IEnumerable`1.yml
  name: Collections.Generic.IEnumerable<>
  name.vb: Collections.Generic.IEnumerable(Of )
  fullName: System.Collections.Generic.IEnumerable<>
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Reflection.TypeInfo.yml
  name: Collections.Generic.IEnumerable<TypeInfo>
  name.vb: Collections.Generic.IEnumerable(Of TypeInfo)
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.TypeInfo>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.TypeInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    fullName: System.Reflection.TypeInfo
    href: System.Reflection.TypeInfo.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    fullName: System.Reflection.TypeInfo
    href: System.Reflection.TypeInfo.yml
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Type}
  definition: System.Collections.Generic.IEnumerable`1
  name: Collections.Generic.IEnumerable<Type>
  name.vb: Collections.Generic.IEnumerable(Of Type)
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.MethodInfo.yml
  name: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.Module.yml
  name: Module
  fullName: System.Reflection.Module
- uid: System.Collections.Generic.IEnumerable{System.Reflection.Module}
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Reflection.Module.yml
  name: Collections.Generic.IEnumerable<Module>
  name.vb: Collections.Generic.IEnumerable(Of Module)
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Module>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.Module)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Reflection.Module
    name: Module
    fullName: System.Reflection.Module
    href: System.Reflection.Module.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.Module
    name: Module
    fullName: System.Reflection.Module
    href: System.Reflection.Module.yml
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.Reflection.ManifestResourceInfo
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.ManifestResourceInfo.yml
  name: ManifestResourceInfo
  fullName: System.Reflection.ManifestResourceInfo
- uid: System.String[]
  isExternal: false
  href: System.String.yml
  name: String[]
  name.vb: String()
  fullName: System.String[]
  fullName.vb: System.String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ()
    fullName: ()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  href: System.IO.Stream.yml
  name: IO.Stream
  fullName: System.IO.Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.AssemblyName.yml
  name: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Type
  parent: System
  isExternal: false
  href: System.Type.yml
  name: Type
  fullName: System.Type
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.Assembly.yml
  name: Reflection.Assembly
  fullName: System.Reflection.Assembly
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.IO.FileLoadException
  isExternal: false
  href: System.IO.FileLoadException.yml
  name: FileLoadException
  fullName: System.IO.FileLoadException
  summary: The exception that is thrown when a managed assembly is found but cannot be loaded.
- uid: System.IO.FileNotFoundException
  isExternal: false
  href: System.IO.FileNotFoundException.yml
  name: FileNotFoundException
  fullName: System.IO.FileNotFoundException
  summary: The exception that is thrown when an attempt to access a file that does not exist on disk fails.
- uid: System.BadImageFormatException
  isExternal: false
  href: System.BadImageFormatException.yml
  name: BadImageFormatException
  fullName: System.BadImageFormatException
  summary: The exception that is thrown when the file image of a dynamic link library (DLL) or an executable program is invalid.
- uid: System.NotImplementedException
  isExternal: false
  href: System.NotImplementedException.yml
  name: NotImplementedException
  fullName: System.NotImplementedException
  summary: The exception that is thrown when a requested method or operation is not implemented.
- uid: System.TypeLoadException
  parent: System
  isExternal: false
  href: System.TypeLoadException.yml
  name: TypeLoadException
  fullName: System.TypeLoadException
  summary: The exception that is thrown when type-loading failures occur.
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  href: System.NotSupportedException.yml
  name: NotSupportedException
  fullName: System.NotSupportedException
  summary: The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.
