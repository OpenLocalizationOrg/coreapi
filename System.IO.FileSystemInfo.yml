items:
- uid: System.IO.FileSystemInfo
  id: FileSystemInfo
  parent: System.IO
  children:
  - System.IO.FileSystemInfo.#ctor
  - System.IO.FileSystemInfo.Attributes
  - System.IO.FileSystemInfo.CreationTime
  - System.IO.FileSystemInfo.CreationTimeUtc
  - System.IO.FileSystemInfo.Delete
  - System.IO.FileSystemInfo.Exists
  - System.IO.FileSystemInfo.Extension
  - System.IO.FileSystemInfo.FullName
  - System.IO.FileSystemInfo.FullPath
  - System.IO.FileSystemInfo.LastAccessTime
  - System.IO.FileSystemInfo.LastAccessTimeUtc
  - System.IO.FileSystemInfo.LastWriteTime
  - System.IO.FileSystemInfo.LastWriteTimeUtc
  - System.IO.FileSystemInfo.Name
  - System.IO.FileSystemInfo.OriginalPath
  - System.IO.FileSystemInfo.Refresh
  href: System.IO.FileSystemInfo.yml
  name: FileSystemInfo
  fullName: System.IO.FileSystemInfo
  type: Class
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileSystemInfo.Win32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.IO.FileSystem/src/System/IO/FileSystemInfo.Win32.cs
    startLine: 5
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Provides the base class for both @'System.IO.FileInfo' and @'System.IO.DirectoryInfo' objects.
  syntax:
    content: 'public abstract class FileSystemInfo : object'
    content.vb: Public MustInherit Class FileSystemInfo Inherits Object
  inheritance:
  - System.Object
- uid: System.IO.FileSystemInfo.FullPath
  id: FullPath
  parent: System.IO.FileSystemInfo
  href: System.IO.FileSystemInfo.yml
  name: FullPath
  fullName: System.IO.FileSystemInfo.FullPath
  type: Field
  source:
    remote: &o0
      path: src/System.IO.FileSystem/src/System/IO/FileSystemInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.IO.FileSystem/src/System/IO/FileSystemInfo.cs
    startLine: 16
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Represents the fully qualified path of the directory or file.
  syntax:
    content: protected string FullPath
    content.vb: Protected FullPath As String
  exceptions:
  - type: System.IO.PathTooLongException
    description: The fully qualified path is 260 or more characters.
- uid: System.IO.FileSystemInfo.OriginalPath
  id: OriginalPath
  parent: System.IO.FileSystemInfo
  href: System.IO.FileSystemInfo.yml
  name: OriginalPath
  fullName: System.IO.FileSystemInfo.OriginalPath
  type: Field
  source:
    remote: *o0
    path: src/System.IO.FileSystem/src/System/IO/FileSystemInfo.cs
    startLine: 17
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: The path originally specified by the user, whether relative or absolute.
  syntax:
    content: protected string OriginalPath
    content.vb: Protected OriginalPath As String
- uid: System.IO.FileSystemInfo.#ctor
  id: '#ctor'
  parent: System.IO.FileSystemInfo
  href: System.IO.FileSystemInfo.yml
  name: FileSystemInfo()
  fullName: System.IO.FileSystemInfo.FileSystemInfo()
  type: Constructor
  source:
    remote: *o0
    path: src/System.IO.FileSystem/src/System/IO/FileSystemInfo.cs
    startLine: 20
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Initializes a new instance of the @'System.IO.FileSystemInfo' class.
  syntax:
    content: protected FileSystemInfo()
    content.vb: Protected Sub New
- uid: System.IO.FileSystemInfo.Attributes
  id: Attributes
  parent: System.IO.FileSystemInfo
  href: System.IO.FileSystemInfo.yml
  name: Attributes
  fullName: System.IO.FileSystemInfo.Attributes
  type: Property
  source:
    remote: *o0
    path: src/System.IO.FileSystem/src/System/IO/FileSystemInfo.cs
    startLine: 157
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Gets or sets the attributes for the current file or directory.
  syntax:
    content: public FileAttributes Attributes { get; set; }
    content.vb: Public Property Attributes As FileAttributes
    parameters: []
    return:
      type: System.IO.FileAttributes
      description: '@''System.IO.FileAttributes'' of the current @''System.IO.FileSystemInfo''.'
  exceptions:
  - type: System.IO.FileNotFoundException
    description: The specified file does not exist.
  - type: System.IO.DirectoryNotFoundException
    description: The specified path is invalid; for example, it is on an unmapped drive.
  - type: System.Security.SecurityException
    description: The caller does not have the required permission.
  - type: System.ArgumentException
    description: The caller attempts to set an invalid file attribute. -or-The user attempts to set an attribute value but does not have write permission.
  - type: System.IO.IOException
    description: '@''System.IO.FileSystemInfo.Refresh'' cannot initialize the data.'
- uid: System.IO.FileSystemInfo.CreationTime
  id: CreationTime
  parent: System.IO.FileSystemInfo
  href: System.IO.FileSystemInfo.yml
  name: CreationTime
  fullName: System.IO.FileSystemInfo.CreationTime
  type: Property
  source:
    remote: *o0
    path: src/System.IO.FileSystem/src/System/IO/FileSystemInfo.cs
    startLine: 69
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Gets or sets the creation time of the current file or directory.
  syntax:
    content: public DateTime CreationTime { get; set; }
    content.vb: Public Property CreationTime As DateTime
    parameters: []
    return:
      type: System.DateTime
      description: The creation date and time of the current @'System.IO.FileSystemInfo' object.
  exceptions:
  - type: System.IO.IOException
    description: '@''System.IO.FileSystemInfo.Refresh'' cannot initialize the data.'
  - type: System.IO.DirectoryNotFoundException
    description: The specified path is invalid; for example, it is on an unmapped drive.
  - type: System.PlatformNotSupportedException
    description: The current operating system is not Windows NT or later.
  - type: System.ArgumentOutOfRangeException
    description: The caller attempts to set an invalid creation time.
- uid: System.IO.FileSystemInfo.CreationTimeUtc
  id: CreationTimeUtc
  parent: System.IO.FileSystemInfo
  href: System.IO.FileSystemInfo.yml
  name: CreationTimeUtc
  fullName: System.IO.FileSystemInfo.CreationTimeUtc
  type: Property
  source:
    remote: *o0
    path: src/System.IO.FileSystem/src/System/IO/FileSystemInfo.cs
    startLine: 82
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Gets or sets the creation time, in coordinated universal time (UTC), of the current file or directory.
  syntax:
    content: public DateTime CreationTimeUtc { get; set; }
    content.vb: Public Property CreationTimeUtc As DateTime
    parameters: []
    return:
      type: System.DateTime
      description: The creation date and time in UTC format of the current @'System.IO.FileSystemInfo' object.
  exceptions:
  - type: System.IO.IOException
    description: '@''System.IO.FileSystemInfo.Refresh'' cannot initialize the data.'
  - type: System.IO.DirectoryNotFoundException
    description: The specified path is invalid; for example, it is on an unmapped drive.
  - type: System.PlatformNotSupportedException
    description: The current operating system is not Windows NT or later.
  - type: System.ArgumentOutOfRangeException
    description: The caller attempts to set an invalid access time.
- uid: System.IO.FileSystemInfo.Exists
  id: Exists
  parent: System.IO.FileSystemInfo
  href: System.IO.FileSystemInfo.yml
  name: Exists
  fullName: System.IO.FileSystemInfo.Exists
  type: Property
  source:
    remote: *o0
    path: src/System.IO.FileSystem/src/System/IO/FileSystemInfo.cs
    startLine: 61
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Gets a value indicating whether the file or directory exists.
  syntax:
    content: public abstract bool Exists { get; }
    content.vb: Public MustOverride ReadOnly Property Exists As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the file or directory exists; otherwise, false.
- uid: System.IO.FileSystemInfo.Extension
  id: Extension
  parent: System.IO.FileSystemInfo
  href: System.IO.FileSystemInfo.yml
  name: Extension
  fullName: System.IO.FileSystemInfo.Extension
  type: Property
  source:
    remote: *o0
    path: src/System.IO.FileSystem/src/System/IO/FileSystemInfo.cs
    startLine: 35
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Gets the string representing the extension part of the file.
  syntax:
    content: public string Extension { get; }
    content.vb: Public ReadOnly Property Extension As String
    parameters: []
    return:
      type: System.String
      description: A string containing the @'System.IO.FileSystemInfo' extension.
- uid: System.IO.FileSystemInfo.FullName
  id: FullName
  parent: System.IO.FileSystemInfo
  href: System.IO.FileSystemInfo.yml
  name: FullName
  fullName: System.IO.FileSystemInfo.FullName
  type: Property
  source:
    remote: *o0
    path: src/System.IO.FileSystem/src/System/IO/FileSystemInfo.cs
    startLine: 26
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Gets the full path of the directory or file.
  syntax:
    content: public virtual string FullName { get; }
    content.vb: Public Overridable ReadOnly Property FullName As String
    parameters: []
    return:
      type: System.String
      description: A string containing the full path.
  exceptions:
  - type: System.IO.PathTooLongException
    description: The fully qualified path and file name is 260 or more characters.
  - type: System.Security.SecurityException
    description: The caller does not have the required permission.
- uid: System.IO.FileSystemInfo.LastAccessTime
  id: LastAccessTime
  parent: System.IO.FileSystemInfo
  href: System.IO.FileSystemInfo.yml
  name: LastAccessTime
  fullName: System.IO.FileSystemInfo.LastAccessTime
  type: Property
  source:
    remote: *o0
    path: src/System.IO.FileSystem/src/System/IO/FileSystemInfo.cs
    startLine: 97
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Gets or sets the time the current file or directory was last accessed.
  syntax:
    content: public DateTime LastAccessTime { get; set; }
    content.vb: Public Property LastAccessTime As DateTime
    parameters: []
    return:
      type: System.DateTime
      description: The time that the current file or directory was last accessed.
  exceptions:
  - type: System.IO.IOException
    description: '@''System.IO.FileSystemInfo.Refresh'' cannot initialize the data.'
  - type: System.PlatformNotSupportedException
    description: The current operating system is not Windows NT or later.
  - type: System.ArgumentOutOfRangeException
    description: The caller attempts to set an invalid access time
- uid: System.IO.FileSystemInfo.LastAccessTimeUtc
  id: LastAccessTimeUtc
  parent: System.IO.FileSystemInfo
  href: System.IO.FileSystemInfo.yml
  name: LastAccessTimeUtc
  fullName: System.IO.FileSystemInfo.LastAccessTimeUtc
  type: Property
  source:
    remote: *o0
    path: src/System.IO.FileSystem/src/System/IO/FileSystemInfo.cs
    startLine: 110
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Gets or sets the time, in coordinated universal time (UTC), that the current file or directory was last accessed.
  syntax:
    content: public DateTime LastAccessTimeUtc { get; set; }
    content.vb: Public Property LastAccessTimeUtc As DateTime
    parameters: []
    return:
      type: System.DateTime
      description: The UTC time that the current file or directory was last accessed.
  exceptions:
  - type: System.IO.IOException
    description: '@''System.IO.FileSystemInfo.Refresh'' cannot initialize the data.'
  - type: System.PlatformNotSupportedException
    description: The current operating system is not Windows NT or later.
  - type: System.ArgumentOutOfRangeException
    description: The caller attempts to set an invalid access time.
- uid: System.IO.FileSystemInfo.LastWriteTime
  id: LastWriteTime
  parent: System.IO.FileSystemInfo
  href: System.IO.FileSystemInfo.yml
  name: LastWriteTime
  fullName: System.IO.FileSystemInfo.LastWriteTime
  type: Property
  source:
    remote: *o0
    path: src/System.IO.FileSystem/src/System/IO/FileSystemInfo.cs
    startLine: 124
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Gets or sets the time when the current file or directory was last written to.
  syntax:
    content: public DateTime LastWriteTime { get; set; }
    content.vb: Public Property LastWriteTime As DateTime
    parameters: []
    return:
      type: System.DateTime
      description: The time the current file was last written.
  exceptions:
  - type: System.IO.IOException
    description: '@''System.IO.FileSystemInfo.Refresh'' cannot initialize the data.'
  - type: System.PlatformNotSupportedException
    description: The current operating system is not Windows NT or later.
  - type: System.ArgumentOutOfRangeException
    description: The caller attempts to set an invalid write time.
- uid: System.IO.FileSystemInfo.LastWriteTimeUtc
  id: LastWriteTimeUtc
  parent: System.IO.FileSystemInfo
  href: System.IO.FileSystemInfo.yml
  name: LastWriteTimeUtc
  fullName: System.IO.FileSystemInfo.LastWriteTimeUtc
  type: Property
  source:
    remote: *o0
    path: src/System.IO.FileSystem/src/System/IO/FileSystemInfo.cs
    startLine: 138
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Gets or sets the time, in coordinated universal time (UTC), when the current file or directory was last written to.
  syntax:
    content: public DateTime LastWriteTimeUtc { get; set; }
    content.vb: Public Property LastWriteTimeUtc As DateTime
    parameters: []
    return:
      type: System.DateTime
      description: The UTC time when the current file was last written to.
  exceptions:
  - type: System.IO.IOException
    description: '@''System.IO.FileSystemInfo.Refresh'' cannot initialize the data.'
  - type: System.PlatformNotSupportedException
    description: The current operating system is not Windows NT or later.
  - type: System.ArgumentOutOfRangeException
    description: The caller attempts to set an invalid write time.
- uid: System.IO.FileSystemInfo.Name
  id: Name
  parent: System.IO.FileSystemInfo
  href: System.IO.FileSystemInfo.yml
  name: Name
  fullName: System.IO.FileSystemInfo.Name
  type: Property
  source:
    remote: *o0
    path: src/System.IO.FileSystem/src/System/IO/FileSystemInfo.cs
    startLine: 55
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: For files, gets the name of the file. For directories, gets the name of the last directory in the hierarchy if a hierarchy exists. Otherwise, the Name property gets the name of the directory.
  syntax:
    content: public abstract string Name { get; }
    content.vb: Public MustOverride ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: A string that is the name of the parent directory, the name of the last directory in the hierarchy, or the name of a file, including the file name extension.
- uid: System.IO.FileSystemInfo.Delete
  id: Delete
  parent: System.IO.FileSystemInfo
  href: System.IO.FileSystemInfo.yml
  name: Delete()
  fullName: System.IO.FileSystemInfo.Delete()
  type: Method
  source:
    remote: *o0
    path: src/System.IO.FileSystem/src/System/IO/FileSystemInfo.cs
    startLine: 67
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Deletes a file or directory.
  syntax:
    content: public abstract void Delete()
    content.vb: Public MustOverride Sub Delete
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    description: The specified path is invalid; for example, it is on an unmapped drive.
  - type: System.IO.IOException
    description: 'There is an open handle on the file or directory, and the operating system is Windows XP or earlier. This open handle can result from enumerating directories and files. For more information, see How to: Enumerate Directories and Files.'
- uid: System.IO.FileSystemInfo.Refresh
  id: Refresh
  parent: System.IO.FileSystemInfo
  href: System.IO.FileSystemInfo.yml
  name: Refresh()
  fullName: System.IO.FileSystemInfo.Refresh()
  type: Method
  source:
    remote: *o0
    path: src/System.IO.FileSystem/src/System/IO/FileSystemInfo.cs
    startLine: 152
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Refreshes the state of the object.
  syntax:
    content: public void Refresh()
    content.vb: Public Sub Refresh
  exceptions:
  - type: System.IO.IOException
    description: A device such as a disk drive is not ready.
references:
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IO.FileAttributes
  parent: System.IO
  isExternal: false
  href: System.IO.FileAttributes.yml
  name: FileAttributes
  fullName: System.IO.FileAttributes
- uid: System.DateTime
  parent: System
  isExternal: false
  href: System.DateTime.yml
  name: DateTime
  fullName: System.DateTime
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
- uid: System.IO.PathTooLongException
  isExternal: false
  href: System.IO.PathTooLongException.yml
  name: PathTooLongException
  fullName: System.IO.PathTooLongException
  summary: The exception that is thrown when a path or file name is longer than the system-defined maximum length.
- uid: System.IO.FileNotFoundException
  isExternal: false
  href: System.IO.FileNotFoundException.yml
  name: FileNotFoundException
  fullName: System.IO.FileNotFoundException
  summary: The exception that is thrown when an attempt to access a file that does not exist on disk fails.
- uid: System.IO.DirectoryNotFoundException
  isExternal: false
  href: System.IO.DirectoryNotFoundException.yml
  name: DirectoryNotFoundException
  fullName: System.IO.DirectoryNotFoundException
  summary: The exception that is thrown when part of a file or directory cannot be found.
- uid: System.Security.SecurityException
  isExternal: false
  href: System.Security.SecurityException.yml
  name: SecurityException
  fullName: System.Security.SecurityException
  summary: The exception that is thrown when a security error is detected.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  href: System.IO.IOException.yml
  name: IOException
  fullName: System.IO.IOException
  summary: The exception that is thrown when an I/O error occurs.
- uid: System.PlatformNotSupportedException
  isExternal: false
  href: System.PlatformNotSupportedException.yml
  name: PlatformNotSupportedException
  fullName: System.PlatformNotSupportedException
  summary: The exception that is thrown when a feature does not run on a particular platform.
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
