items:
- uid: System.Linq.Expressions.DynamicExpression
  id: DynamicExpression
  parent: System.Linq.Expressions
  children:
  - System.Linq.Expressions.DynamicExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  - System.Linq.Expressions.DynamicExpression.Arguments
  - System.Linq.Expressions.DynamicExpression.Binder
  - System.Linq.Expressions.DynamicExpression.DelegateType
  - System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.DynamicExpression.NodeType
  - System.Linq.Expressions.DynamicExpression.Type
  - System.Linq.Expressions.DynamicExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  href: System.Linq.Expressions.DynamicExpression.yml
  name: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
  type: Class
  source:
    remote: &o0
      path: src/System.Dynamic.Runtime/src/System/Linq/Expressions/DynamicExpression.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Dynamic.Runtime/src/System/Linq/Expressions/DynamicExpression.cs
    startLine: 20
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Linq.Expressions
  syntax:
    content: 'public class DynamicExpression : Expression, IArgumentProvider, IDynamicExpression'
    content.vb: Public Class DynamicExpression Inherits Expression Implements IArgumentProvider, IDynamicExpression
  inheritance:
  - System.Object
  implements:
  - System.Linq.Expressions.IArgumentProvider
  - System.Linq.Expressions.IDynamicExpression
- uid: System.Linq.Expressions.DynamicExpression.Arguments
  id: Arguments
  parent: System.Linq.Expressions.DynamicExpression
  href: System.Linq.Expressions.DynamicExpression.yml
  name: Arguments
  fullName: System.Linq.Expressions.DynamicExpression.Arguments
  type: Property
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Linq/Expressions/DynamicExpression.cs
    startLine: 149
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Linq.Expressions
  syntax:
    content: public ReadOnlyCollection<Expression> Arguments { get; }
    content.vb: Public ReadOnly Property Arguments As ReadOnlyCollection(Of Expression)
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}
- uid: System.Linq.Expressions.DynamicExpression.Binder
  id: Binder
  parent: System.Linq.Expressions.DynamicExpression
  href: System.Linq.Expressions.DynamicExpression.yml
  name: Binder
  fullName: System.Linq.Expressions.DynamicExpression.Binder
  type: Property
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Linq/Expressions/DynamicExpression.cs
    startLine: 133
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Linq.Expressions
  syntax:
    content: public CallSiteBinder Binder { get; }
    content.vb: Public ReadOnly Property Binder As CallSiteBinder
    parameters: []
    return:
      type: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Linq.Expressions.DynamicExpression.DelegateType
  id: DelegateType
  parent: System.Linq.Expressions.DynamicExpression
  href: System.Linq.Expressions.DynamicExpression.yml
  name: DelegateType
  fullName: System.Linq.Expressions.DynamicExpression.DelegateType
  type: Property
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Linq/Expressions/DynamicExpression.cs
    startLine: 141
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Linq.Expressions
  syntax:
    content: public Type DelegateType { get; }
    content.vb: Public ReadOnly Property DelegateType As Type
    parameters: []
    return:
      type: System.Type
- uid: System.Linq.Expressions.DynamicExpression.NodeType
  id: NodeType
  parent: System.Linq.Expressions.DynamicExpression
  href: System.Linq.Expressions.DynamicExpression.yml
  name: NodeType
  fullName: System.Linq.Expressions.DynamicExpression.NodeType
  type: Property
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Linq/Expressions/DynamicExpression.cs
    startLine: 124
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Linq.Expressions
  syntax:
    content: public override sealed ExpressionType NodeType { get; }
    content.vb: Public NotOverridable Overrides ReadOnly Property NodeType As ExpressionType
    parameters: []
    return:
      type: System.Linq.Expressions.ExpressionType
- uid: System.Linq.Expressions.DynamicExpression.Type
  id: Type
  parent: System.Linq.Expressions.DynamicExpression
  href: System.Linq.Expressions.DynamicExpression.yml
  name: Type
  fullName: System.Linq.Expressions.DynamicExpression.Type
  type: Property
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Linq/Expressions/DynamicExpression.cs
    startLine: 114
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Linq.Expressions
  syntax:
    content: public override Type Type { get; }
    content.vb: Public Overrides ReadOnly Property Type As Type
    parameters: []
    return:
      type: System.Type
- uid: System.Linq.Expressions.DynamicExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  id: Accept(System.Linq.Expressions.ExpressionVisitor)
  parent: System.Linq.Expressions.DynamicExpression
  href: System.Linq.Expressions.DynamicExpression.yml
  name: Accept(ExpressionVisitor)
  fullName: System.Linq.Expressions.DynamicExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  type: Method
  source:
    remote: &o1
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 240
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Linq.Expressions
  syntax:
    content: protected override Expression Accept(ExpressionVisitor visitor)
    content.vb: Protected Overrides Function Accept(visitor As ExpressionVisitor) As Expression
    parameters:
    - id: visitor
      type: System.Linq.Expressions.ExpressionVisitor
    return:
      type: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.DynamicExpression
  href: System.Linq.Expressions.DynamicExpression.yml
  name: Dynamic(CallSiteBinder, Type, IEnumerable<Expression>)
  name.vb: Dynamic(CallSiteBinder, Type, IEnumerable(Of Expression))
  fullName: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder, System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullName.vb: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder, System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  type: Method
  source:
    remote: *o1
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 241
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Linq.Expressions
  syntax:
    content: public static DynamicExpression Dynamic(CallSiteBinder binder, Type returnType, IEnumerable<Expression> arguments)
    content.vb: Public Shared Function Dynamic(binder As CallSiteBinder, returnType As Type, arguments As IEnumerable(Of Expression)) As DynamicExpression
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
    - id: returnType
      type: System.Type
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
    return:
      type: System.Linq.Expressions.DynamicExpression
- uid: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  href: System.Linq.Expressions.DynamicExpression.yml
  name: Dynamic(CallSiteBinder, Type, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder, System.Type, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o1
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 242
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Linq.Expressions
  syntax:
    content: public static DynamicExpression Dynamic(CallSiteBinder binder, Type returnType, Expression arg0)
    content.vb: Public Shared Function Dynamic(binder As CallSiteBinder, returnType As Type, arg0 As Expression) As DynamicExpression
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
    - id: returnType
      type: System.Type
    - id: arg0
      type: System.Linq.Expressions.Expression
    return:
      type: System.Linq.Expressions.DynamicExpression
- uid: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  href: System.Linq.Expressions.DynamicExpression.yml
  name: Dynamic(CallSiteBinder, Type, Expression, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder, System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o1
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 243
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Linq.Expressions
  syntax:
    content: public static DynamicExpression Dynamic(CallSiteBinder binder, Type returnType, Expression arg0, Expression arg1)
    content.vb: Public Shared Function Dynamic(binder As CallSiteBinder, returnType As Type, arg0 As Expression, arg1 As Expression) As DynamicExpression
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
    - id: returnType
      type: System.Type
    - id: arg0
      type: System.Linq.Expressions.Expression
    - id: arg1
      type: System.Linq.Expressions.Expression
    return:
      type: System.Linq.Expressions.DynamicExpression
- uid: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  href: System.Linq.Expressions.DynamicExpression.yml
  name: Dynamic(CallSiteBinder, Type, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder, System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o1
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 244
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Linq.Expressions
  syntax:
    content: public static DynamicExpression Dynamic(CallSiteBinder binder, Type returnType, Expression arg0, Expression arg1, Expression arg2)
    content.vb: Public Shared Function Dynamic(binder As CallSiteBinder, returnType As Type, arg0 As Expression, arg1 As Expression, arg2 As Expression) As DynamicExpression
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
    - id: returnType
      type: System.Type
    - id: arg0
      type: System.Linq.Expressions.Expression
    - id: arg1
      type: System.Linq.Expressions.Expression
    - id: arg2
      type: System.Linq.Expressions.Expression
    return:
      type: System.Linq.Expressions.DynamicExpression
- uid: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  href: System.Linq.Expressions.DynamicExpression.yml
  name: Dynamic(CallSiteBinder, Type, Expression, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder, System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o1
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 245
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Linq.Expressions
  syntax:
    content: public static DynamicExpression Dynamic(CallSiteBinder binder, Type returnType, Expression arg0, Expression arg1, Expression arg2, Expression arg3)
    content.vb: Public Shared Function Dynamic(binder As CallSiteBinder, returnType As Type, arg0 As Expression, arg1 As Expression, arg2 As Expression, arg3 As Expression) As DynamicExpression
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
    - id: returnType
      type: System.Type
    - id: arg0
      type: System.Linq.Expressions.Expression
    - id: arg1
      type: System.Linq.Expressions.Expression
    - id: arg2
      type: System.Linq.Expressions.Expression
    - id: arg3
      type: System.Linq.Expressions.Expression
    return:
      type: System.Linq.Expressions.DynamicExpression
- uid: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.DynamicExpression
  href: System.Linq.Expressions.DynamicExpression.yml
  name: Dynamic(CallSiteBinder, Type, Expression[])
  name.vb: Dynamic(CallSiteBinder, Type, Expression())
  fullName: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder, System.Type, System.Linq.Expressions.Expression[])
  fullName.vb: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder, System.Type, System.Linq.Expressions.Expression())
  type: Method
  source:
    remote: *o1
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 246
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Linq.Expressions
  syntax:
    content: public static DynamicExpression Dynamic(CallSiteBinder binder, Type returnType, params Expression[] arguments)
    content.vb: Public Shared Function Dynamic(binder As CallSiteBinder, returnType As Type, ParamArray arguments As Expression()) As DynamicExpression
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
    - id: returnType
      type: System.Type
    - id: arguments
      type: System.Linq.Expressions.Expression[]
    return:
      type: System.Linq.Expressions.DynamicExpression
- uid: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.DynamicExpression
  href: System.Linq.Expressions.DynamicExpression.yml
  name: MakeDynamic(Type, CallSiteBinder, IEnumerable<Expression>)
  name.vb: MakeDynamic(Type, CallSiteBinder, IEnumerable(Of Expression))
  fullName: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type, System.Runtime.CompilerServices.CallSiteBinder, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullName.vb: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type, System.Runtime.CompilerServices.CallSiteBinder, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  type: Method
  source:
    remote: *o1
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 247
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Linq.Expressions
  syntax:
    content: public static DynamicExpression MakeDynamic(Type delegateType, CallSiteBinder binder, IEnumerable<Expression> arguments)
    content.vb: Public Shared Function MakeDynamic(delegateType As Type, binder As CallSiteBinder, arguments As IEnumerable(Of Expression)) As DynamicExpression
    parameters:
    - id: delegateType
      type: System.Type
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
    return:
      type: System.Linq.Expressions.DynamicExpression
- uid: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  href: System.Linq.Expressions.DynamicExpression.yml
  name: MakeDynamic(Type, CallSiteBinder, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type, System.Runtime.CompilerServices.CallSiteBinder, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o1
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 248
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Linq.Expressions
  syntax:
    content: public static DynamicExpression MakeDynamic(Type delegateType, CallSiteBinder binder, Expression arg0)
    content.vb: Public Shared Function MakeDynamic(delegateType As Type, binder As CallSiteBinder, arg0 As Expression) As DynamicExpression
    parameters:
    - id: delegateType
      type: System.Type
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
    - id: arg0
      type: System.Linq.Expressions.Expression
    return:
      type: System.Linq.Expressions.DynamicExpression
- uid: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  href: System.Linq.Expressions.DynamicExpression.yml
  name: MakeDynamic(Type, CallSiteBinder, Expression, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type, System.Runtime.CompilerServices.CallSiteBinder, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o1
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 249
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Linq.Expressions
  syntax:
    content: public static DynamicExpression MakeDynamic(Type delegateType, CallSiteBinder binder, Expression arg0, Expression arg1)
    content.vb: Public Shared Function MakeDynamic(delegateType As Type, binder As CallSiteBinder, arg0 As Expression, arg1 As Expression) As DynamicExpression
    parameters:
    - id: delegateType
      type: System.Type
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
    - id: arg0
      type: System.Linq.Expressions.Expression
    - id: arg1
      type: System.Linq.Expressions.Expression
    return:
      type: System.Linq.Expressions.DynamicExpression
- uid: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  href: System.Linq.Expressions.DynamicExpression.yml
  name: MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type, System.Runtime.CompilerServices.CallSiteBinder, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o1
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 250
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Linq.Expressions
  syntax:
    content: public static DynamicExpression MakeDynamic(Type delegateType, CallSiteBinder binder, Expression arg0, Expression arg1, Expression arg2)
    content.vb: Public Shared Function MakeDynamic(delegateType As Type, binder As CallSiteBinder, arg0 As Expression, arg1 As Expression, arg2 As Expression) As DynamicExpression
    parameters:
    - id: delegateType
      type: System.Type
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
    - id: arg0
      type: System.Linq.Expressions.Expression
    - id: arg1
      type: System.Linq.Expressions.Expression
    - id: arg2
      type: System.Linq.Expressions.Expression
    return:
      type: System.Linq.Expressions.DynamicExpression
- uid: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  href: System.Linq.Expressions.DynamicExpression.yml
  name: MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type, System.Runtime.CompilerServices.CallSiteBinder, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o1
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 251
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Linq.Expressions
  syntax:
    content: public static DynamicExpression MakeDynamic(Type delegateType, CallSiteBinder binder, Expression arg0, Expression arg1, Expression arg2, Expression arg3)
    content.vb: Public Shared Function MakeDynamic(delegateType As Type, binder As CallSiteBinder, arg0 As Expression, arg1 As Expression, arg2 As Expression, arg3 As Expression) As DynamicExpression
    parameters:
    - id: delegateType
      type: System.Type
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
    - id: arg0
      type: System.Linq.Expressions.Expression
    - id: arg1
      type: System.Linq.Expressions.Expression
    - id: arg2
      type: System.Linq.Expressions.Expression
    - id: arg3
      type: System.Linq.Expressions.Expression
    return:
      type: System.Linq.Expressions.DynamicExpression
- uid: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.DynamicExpression
  href: System.Linq.Expressions.DynamicExpression.yml
  name: MakeDynamic(Type, CallSiteBinder, Expression[])
  name.vb: MakeDynamic(Type, CallSiteBinder, Expression())
  fullName: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type, System.Runtime.CompilerServices.CallSiteBinder, System.Linq.Expressions.Expression[])
  fullName.vb: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type, System.Runtime.CompilerServices.CallSiteBinder, System.Linq.Expressions.Expression())
  type: Method
  source:
    remote: *o1
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 252
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Linq.Expressions
  syntax:
    content: public static DynamicExpression MakeDynamic(Type delegateType, CallSiteBinder binder, params Expression[] arguments)
    content.vb: Public Shared Function MakeDynamic(delegateType As Type, binder As CallSiteBinder, ParamArray arguments As Expression()) As DynamicExpression
    parameters:
    - id: delegateType
      type: System.Type
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
    - id: arguments
      type: System.Linq.Expressions.Expression[]
    return:
      type: System.Linq.Expressions.DynamicExpression
- uid: System.Linq.Expressions.DynamicExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.DynamicExpression
  href: System.Linq.Expressions.DynamicExpression.yml
  name: Update(IEnumerable<Expression>)
  name.vb: Update(IEnumerable(Of Expression))
  fullName: System.Linq.Expressions.DynamicExpression.Update(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullName.vb: System.Linq.Expressions.DynamicExpression.Update(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  type: Method
  source:
    remote: *o1
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 256
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Linq.Expressions
  syntax:
    content: public DynamicExpression Update(IEnumerable<Expression> arguments)
    content.vb: Public Function Update(arguments As IEnumerable(Of Expression)) As DynamicExpression
    parameters:
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
    return:
      type: System.Linq.Expressions.DynamicExpression
references:
- uid: System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  fullName: System.Linq.Expressions
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Linq.Expressions.Expression.yml
  name: ReadOnlyCollection<Expression>
  name.vb: ReadOnlyCollection(Of Expression)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
    href: System.Linq.Expressions.Expression.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
    href: System.Linq.Expressions.Expression.yml
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  parent: System.Collections.ObjectModel
  isExternal: false
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: ReadOnlyCollection<T>
  name.vb: ReadOnlyCollection(Of T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  type: Class
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  type: Namespace
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  href: System.Runtime.CompilerServices.CallSiteBinder.yml
  name: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
  type: Class
- uid: System.Runtime.CompilerServices
  isExternal: false
  name: System.Runtime.CompilerServices
  fullName: System.Runtime.CompilerServices
  type: Namespace
- uid: System.Type
  parent: System
  isExternal: false
  href: System.Type.yml
  name: Type
  fullName: System.Type
  type: Class
- uid: System.Linq.Expressions.ExpressionType
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.ExpressionType.yml
  name: ExpressionType
  fullName: System.Linq.Expressions.ExpressionType
  type: Enum
- uid: System.Linq.Expressions.ExpressionVisitor
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: ExpressionVisitor
  fullName: System.Linq.Expressions.ExpressionVisitor
  type: Class
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.Expression.yml
  name: Expression
  fullName: System.Linq.Expressions.Expression
  type: Class
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Linq.Expressions.Expression.yml
  name: IEnumerable<Expression>
  name.vb: IEnumerable(Of Expression)
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
    href: System.Linq.Expressions.Expression.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
    href: System.Linq.Expressions.Expression.yml
  - name: )
    fullName: )
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.DynamicExpression.yml
  name: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
  type: Class
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.IEnumerable`1.yml
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  type: Interface
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
  type: Namespace
- uid: System.Linq.Expressions.Expression[]
  isExternal: false
  href: System.Linq.Expressions.Expression.yml
  name: Expression[]
  name.vb: Expression()
  fullName: System.Linq.Expressions.Expression[]
  fullName.vb: System.Linq.Expressions.Expression()
  spec.csharp:
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
    href: System.Linq.Expressions.Expression.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
    href: System.Linq.Expressions.Expression.yml
  - name: ()
    fullName: ()
