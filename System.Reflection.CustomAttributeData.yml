items:
- uid: System.Reflection.CustomAttributeData
  id: CustomAttributeData
  parent: System.Reflection
  children:
  - System.Reflection.CustomAttributeData.AttributeType
  - System.Reflection.CustomAttributeData.Constructor
  - System.Reflection.CustomAttributeData.ConstructorArguments
  - System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)
  - System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)
  - System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Reflection.CustomAttributeData.NamedArguments
  langs:
  - csharp
  - vb
  name: CustomAttributeData
  fullName: System.Reflection.CustomAttributeData
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CustomAttributeData
    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
    startLine: 23
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Provides access to custom attribute data for assemblies, modules, types, members and parameters that are loaded into the reflection-only context.
  syntax:
    content: 'public class CustomAttributeData : object'
    content.vb: >-
      Public Class CustomAttributeData
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  commentId: T:System.Reflection.CustomAttributeData
- uid: System.Reflection.CustomAttributeData.AttributeType
  id: AttributeType
  parent: System.Reflection.CustomAttributeData
  langs:
  - csharp
  - vb
  name: AttributeType
  fullName: System.Reflection.CustomAttributeData.AttributeType
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AttributeType
    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
    startLine: 522
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the type of the attribute.
  syntax:
    content: >-
      public virtual Type AttributeType

      {
          get;
      }
    content.vb: Public Overridable ReadOnly Property AttributeType As Type
    parameters: []
    return:
      type: System.Type
      description: The type of the attribute.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  commentId: P:System.Reflection.CustomAttributeData.AttributeType
- uid: System.Reflection.CustomAttributeData.ConstructorArguments
  id: ConstructorArguments
  parent: System.Reflection.CustomAttributeData
  langs:
  - csharp
  - vb
  name: ConstructorArguments
  fullName: System.Reflection.CustomAttributeData.ConstructorArguments
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ConstructorArguments
    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
    startLine: 527
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the list of positional arguments specified for the attribute instance represented by the <xref href="System.Reflection.CustomAttributeData" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: >-
      public virtual Collections.Generic.IList<CustomAttributeTypedArgument> ConstructorArguments

      {
          get;
      }
    content.vb: Public Overridable ReadOnly Property ConstructorArguments As Collections.Generic.IList(Of CustomAttributeTypedArgument)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Reflection.CustomAttributeTypedArgument}
      description: A collection of structures that represent the positional arguments specified for the custom attribute instance.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  commentId: P:System.Reflection.CustomAttributeData.ConstructorArguments
- uid: System.Reflection.CustomAttributeData.NamedArguments
  id: NamedArguments
  parent: System.Reflection.CustomAttributeData
  langs:
  - csharp
  - vb
  name: NamedArguments
  fullName: System.Reflection.CustomAttributeData.NamedArguments
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NamedArguments
    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
    startLine: 550
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the list of named arguments specified for the attribute instance represented by the <xref href="System.Reflection.CustomAttributeData" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: >-
      public virtual Collections.Generic.IList<CustomAttributeNamedArgument> NamedArguments

      {
          get;
      }
    content.vb: Public Overridable ReadOnly Property NamedArguments As Collections.Generic.IList(Of CustomAttributeNamedArgument)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Reflection.CustomAttributeNamedArgument}
      description: A collection of structures that represent the named arguments specified for the custom attribute instance.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  commentId: P:System.Reflection.CustomAttributeData.NamedArguments
- uid: System.Reflection.CustomAttributeData.Constructor
  id: Constructor
  parent: System.Reflection.CustomAttributeData
  langs:
  - csharp
  - vb
  name: Constructor
  fullName: System.Reflection.CustomAttributeData.Constructor
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Constructor
    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
    startLine: 524
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a <xref href="System.Reflection.ConstructorInfo" data-throw-if-not-resolved="false"></xref> object that represents the constructor that would have initialized the custom attribute.
  syntax:
    content: >-
      public virtual ConstructorInfo Constructor

      {
          get;
      }
    content.vb: Public Overridable ReadOnly Property Constructor As ConstructorInfo
    parameters: []
    return:
      type: System.Reflection.ConstructorInfo
      description: An object that represents the constructor that would have initialized the custom attribute represented by the current instance of the <xref href="System.Reflection.CustomAttributeData" data-throw-if-not-resolved="false"></xref> class.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  commentId: P:System.Reflection.CustomAttributeData.Constructor
- uid: System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)
  id: GetCustomAttributes(System.Reflection.Assembly)
  parent: System.Reflection.CustomAttributeData
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(Assembly)
  fullName: System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetCustomAttributes
    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
    startLine: 45
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Returns a list of <xref href="System.Reflection.CustomAttributeData" data-throw-if-not-resolved="false"></xref> objects representing data about the attributes that have been applied to the target assembly.
  syntax:
    content: public static Collections.Generic.IList<CustomAttributeData> GetCustomAttributes(Assembly target)
    content.vb: Public Shared Function GetCustomAttributes(target As Assembly) As Collections.Generic.IList(Of CustomAttributeData)
    parameters:
    - id: target
      type: System.Reflection.Assembly
      description: The assembly whose custom attribute data is to be retrieved.
    return:
      type: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}
      description: A list of objects that represent data about the attributes that have been applied to the target assembly.
  exceptions:
  - type: System.ArgumentNullException
    description: "\r\n  <em>target</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  commentId: M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)
- uid: System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)
  id: GetCustomAttributes(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeData
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(MemberInfo)
  fullName: System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetCustomAttributes
    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
    startLine: 28
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Returns a list of <xref href="System.Reflection.CustomAttributeData" data-throw-if-not-resolved="false"></xref> objects representing data about the attributes that have been applied to the target member.
  syntax:
    content: public static Collections.Generic.IList<CustomAttributeData> GetCustomAttributes(MemberInfo target)
    content.vb: Public Shared Function GetCustomAttributes(target As MemberInfo) As Collections.Generic.IList(Of CustomAttributeData)
    parameters:
    - id: target
      type: System.Reflection.MemberInfo
      description: The member whose attribute data is to be retrieved.
    return:
      type: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}
      description: A list of objects that represent data about the attributes that have been applied to the target member.
  exceptions:
  - type: System.ArgumentNullException
    description: "\r\n  <em>target</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  commentId: M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)
- uid: System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)
  id: GetCustomAttributes(System.Reflection.Module)
  parent: System.Reflection.CustomAttributeData
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(Module)
  fullName: System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetCustomAttributes
    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
    startLine: 36
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Returns a list of <xref href="System.Reflection.CustomAttributeData" data-throw-if-not-resolved="false"></xref> objects representing data about the attributes that have been applied to the target module.
  syntax:
    content: public static Collections.Generic.IList<CustomAttributeData> GetCustomAttributes(Module target)
    content.vb: Public Shared Function GetCustomAttributes(target As  Module) As Collections.Generic.IList(Of CustomAttributeData)
    parameters:
    - id: target
      type: System.Reflection.Module
      description: The module whose custom attribute data is to be retrieved.
    return:
      type: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}
      description: A list of objects that represent data about the attributes that have been applied to the target module.
  exceptions:
  - type: System.ArgumentNullException
    description: "\r\n  <em>target</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  commentId: M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)
- uid: System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)
  id: GetCustomAttributes(System.Reflection.ParameterInfo)
  parent: System.Reflection.CustomAttributeData
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(ParameterInfo)
  fullName: System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetCustomAttributes
    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
    startLine: 54
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Returns a list of <xref href="System.Reflection.CustomAttributeData" data-throw-if-not-resolved="false"></xref> objects representing data about the attributes that have been applied to the target parameter.
  syntax:
    content: public static Collections.Generic.IList<CustomAttributeData> GetCustomAttributes(ParameterInfo target)
    content.vb: Public Shared Function GetCustomAttributes(target As ParameterInfo) As Collections.Generic.IList(Of CustomAttributeData)
    parameters:
    - id: target
      type: System.Reflection.ParameterInfo
      description: The parameter whose attribute data is to be retrieved.
    return:
      type: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}
      description: A list of objects that represent data about the attributes that have been applied to the target parameter.
  exceptions:
  - type: System.ArgumentNullException
    description: "\r\n  <em>target</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  commentId: M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)
references:
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Collections.Generic.IList{System.Reflection.CustomAttributeTypedArgument}
  definition: System.Collections.Generic.IList`1
  name: Collections.Generic.IList<CustomAttributeTypedArgument>
  fullName: System.Collections.Generic.IList<System.Reflection.CustomAttributeTypedArgument>
  fullname.vb: System.Collections.Generic.IList(Of System.Reflection.CustomAttributeTypedArgument)
  name.vb: Collections.Generic.IList(Of CustomAttributeTypedArgument)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Reflection.CustomAttributeTypedArgument
    name: CustomAttributeTypedArgument
    fullName: System.Reflection.CustomAttributeTypedArgument
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.CustomAttributeTypedArgument
    name: CustomAttributeTypedArgument
    fullName: System.Reflection.CustomAttributeTypedArgument
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: false
  name: Generic.IList<>
  fullName: System.Collections.Generic.IList<>
  fullname.vb: System.Collections.Generic.IList(Of )
  name.vb: Generic.IList(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: Generic.IList
    fullName: System.Collections.Generic.IList
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: Generic.IList
    fullName: System.Collections.Generic.IList
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList{System.Reflection.CustomAttributeNamedArgument}
  definition: System.Collections.Generic.IList`1
  name: Collections.Generic.IList<CustomAttributeNamedArgument>
  fullName: System.Collections.Generic.IList<System.Reflection.CustomAttributeNamedArgument>
  fullname.vb: System.Collections.Generic.IList(Of System.Reflection.CustomAttributeNamedArgument)
  name.vb: Collections.Generic.IList(Of CustomAttributeNamedArgument)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Reflection.CustomAttributeNamedArgument
    name: CustomAttributeNamedArgument
    fullName: System.Reflection.CustomAttributeNamedArgument
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.CustomAttributeNamedArgument
    name: CustomAttributeNamedArgument
    fullName: System.Reflection.CustomAttributeNamedArgument
  - name: )
    fullName: )
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}
  definition: System.Collections.Generic.IList`1
  name: Collections.Generic.IList<CustomAttributeData>
  fullName: System.Collections.Generic.IList<System.Reflection.CustomAttributeData>
  fullname.vb: System.Collections.Generic.IList(Of System.Reflection.CustomAttributeData)
  name.vb: Collections.Generic.IList(Of CustomAttributeData)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Reflection.CustomAttributeData
    name: CustomAttributeData
    fullName: System.Reflection.CustomAttributeData
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.CustomAttributeData
    name: CustomAttributeData
    fullName: System.Reflection.CustomAttributeData
  - name: )
    fullName: )
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: Reflection.MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  fullName: System.Reflection.Module
- uid: System.Reflection.ParameterInfo
  parent: System.Reflection
  isExternal: false
  name: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
