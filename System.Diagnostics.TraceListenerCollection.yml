items:
- uid: System.Diagnostics.TraceListenerCollection
  commentId: T:System.Diagnostics.TraceListenerCollection
  id: TraceListenerCollection
  parent: System.Diagnostics
  children:
  - System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])
  - System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)
  - System.Diagnostics.TraceListenerCollection.Clear
  - System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)
  - System.Diagnostics.TraceListenerCollection.Count
  - System.Diagnostics.TraceListenerCollection.GetEnumerator
  - System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.Item(System.Int32)
  - System.Diagnostics.TraceListenerCollection.Item(System.String)
  - System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.Remove(System.String)
  - System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)
  langs:
  - csharp
  - vb
  name: TraceListenerCollection
  fullName: System.Diagnostics.TraceListenerCollection
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceListenerCollection
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
    startLine: 13
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Provides a thread-safe list of <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Diagnostics.TraceListenerCollection\" data-throw-if-not-resolved=\"false\"></xref> list is used to specify the output listeners for the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> and the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collections. You cannot create an instance of this class.</p>\n<p>This list is thread-safe, however the methods used to access the list and the enumerator do not take synchronization locks. Instead, the collection is copied, the copy is modified, and a reference is set to the copy of the collection. Methods like <xref href=\"System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Diagnostics.TraceListenerCollection.Clear\" data-throw-if-not-resolved=\"false\"></xref> modify the elements in the collection.</p>\n<p>The <xref href=\"System.Diagnostics.TraceListenerCollection\" data-throw-if-not-resolved=\"false\"></xref> class provides the <xref href=\"System.Diagnostics.TraceListenerCollection.Count\" data-throw-if-not-resolved=\"false\"></xref> property for information about the list. It also provides the following methods: <xref href=\"System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Diagnostics.TraceListenerCollection.GetEnumerator\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This class also provides the following methods to modify the list: <xref href=\"System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Diagnostics.TraceListenerCollection.Clear\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)\" data-throw-if-not-resolved=\"false\"></xref>. The <xref href=\"System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method copies a part of the list to an array. The <xref href=\"System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method deletes the list member at a specified index number.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Diagnostics.TextWriterTraceListener\" data-throw-if-not-resolved=\"false\"></xref> that writes to the console screen. The code then adds the new listener to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref>.</p>Classic Trace.Listeners Example#1"
  syntax:
    content: 'public class TraceListenerCollection : Collections.ICollection, Collections.IEnumerable, Collections.IList'
    content.vb: >-
      Public Class TraceListenerCollection
          Inherits Collections.ICollection
          Implements Collections.IEnumerable, Collections.IList
  seealso:
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.TextWriterTraceListener
    commentId: T:System.Diagnostics.TextWriterTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  - System.Collections.IList
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Diagnostics.TraceListenerCollection.Count
  commentId: P:System.Diagnostics.TraceListenerCollection.Count
  id: Count
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Diagnostics.TraceListenerCollection.Count
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
    startLine: 61
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Gets the number of listeners in the list.</p>\n"
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The number of listeners in the list.</p>\n"
  seealso:
  - type: System.Diagnostics.TraceListenerCollection
    commentId: T:System.Diagnostics.TraceListenerCollection
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.TextWriterTraceListener
    commentId: T:System.Diagnostics.TextWriterTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.TraceListenerCollection.Item(System.Int32)
  commentId: P:System.Diagnostics.TraceListenerCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  fullName: System.Diagnostics.TraceListenerCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
    startLine: 26
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Gets or sets the <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> at the specified index.</p>\n"
  remarks: "\n<p>The index is zero-based. Therefore, you must subtract one from the numerical position of a particular <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> to access that <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref>. For example, to get the third <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref>, you need to specify <code>myTraceListenerColl[2]</code>.</p>\n"
  syntax:
    content: public TraceListener this[int i] { get; set; }
    content.vb: Public Property Item(i As Integer) As TraceListener
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based index of the <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> to get from the list. </p>\n"
    return:
      type: System.Diagnostics.TraceListener
      description: "\n<p>A <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> with the specified index.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The value is <strong>null</strong>.</p>\n"
  seealso:
  - type: System.Diagnostics.TraceListenerCollection
    commentId: T:System.Diagnostics.TraceListenerCollection
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.TextWriterTraceListener
    commentId: T:System.Diagnostics.TextWriterTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: System.Diagnostics.TraceListenerCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.Diagnostics.TraceListenerCollection.Item(System.String)
  commentId: P:System.Diagnostics.TraceListenerCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  - vb
  name: Item[String]
  fullName: System.Diagnostics.TraceListenerCollection.Item[System.String]
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
    startLine: 43
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Gets the first <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> in the list with the specified name.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Diagnostics.TraceListenerCollection.Item(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> property is case-sensitive when searching for names. That is, if two listeners exist with the names \"Lname\" and \"lname\", <xref href=\"System.Diagnostics.TraceListenerCollection.Item(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> property will find only the <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> with the <xref href=\"System.Diagnostics.TraceListener.Name\" data-throw-if-not-resolved=\"false\"></xref> that you specify, not both.</p>\n"
  syntax:
    content: public TraceListener this[string name] { get; }
    content.vb: Public ReadOnly Property Item(name As String) As TraceListener
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> to get from the list. </p>\n"
    return:
      type: System.Diagnostics.TraceListener
      description: "\n<p>The first <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> in the list with the given <xref href=\"System.Diagnostics.TraceListener.Name\" data-throw-if-not-resolved=\"false\"></xref>. This item returns <strong>null</strong> if no <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> with the given name can be found.</p>\n"
  seealso:
  - type: System.Diagnostics.TraceListenerCollection
    commentId: T:System.Diagnostics.TraceListenerCollection
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.TextWriterTraceListener
    commentId: T:System.Diagnostics.TextWriterTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Diagnostics.TraceListenerCollection.Item(System.String)
  name.vb: Item(String)
- uid: System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)
  commentId: M:System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)
  id: Add(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  - vb
  name: Add(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
    startLine: 72
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Adds a <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> to the list.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Diagnostics.TextWriterTraceListener\" data-throw-if-not-resolved=\"false\"></xref> that outputs to the console screen. The code then adds the new listener to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref>.</p>Classic TraceListenerCollection.Add Example#1"
  syntax:
    content: public int Add(TraceListener listener)
    content.vb: Public Function Add(listener As TraceListener) As Integer
    parameters:
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "\n<p>A <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> to add to the list. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The position at which the new listener was inserted.</p>\n"
  seealso:
  - type: System.Diagnostics.TraceListenerCollection
    commentId: T:System.Diagnostics.TraceListenerCollection
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.TextWriterTraceListener
    commentId: T:System.Diagnostics.TextWriterTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])
  commentId: M:System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])
  id: AddRange(System.Diagnostics.TraceListener[])
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  - vb
  name: AddRange(TraceListener[])
  fullName: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddRange
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
    startLine: 85
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Adds an array of <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> objects to the list.</p>\n"
  syntax:
    content: public void AddRange(TraceListener[] value)
    content.vb: Public Sub AddRange(value As TraceListener())
    parameters:
    - id: value
      type: System.Diagnostics.TraceListener[]
      description: "\n<p>An array of <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> objects to add to the list. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>value</em> is <strong>null</strong>.</p>\n"
  seealso:
  - type: System.Diagnostics.TraceListenerCollection
    commentId: T:System.Diagnostics.TraceListenerCollection
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.TextWriterTraceListener
    commentId: T:System.Diagnostics.TextWriterTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener())
  name.vb: AddRange(TraceListener())
- uid: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)
  commentId: M:System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)
  id: AddRange(System.Diagnostics.TraceListenerCollection)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  - vb
  name: AddRange(TraceListenerCollection)
  fullName: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddRange
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
    startLine: 100
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Adds the contents of another <xref href=\"System.Diagnostics.TraceListenerCollection\" data-throw-if-not-resolved=\"false\"></xref> to the list.</p>\n"
  syntax:
    content: public void AddRange(TraceListenerCollection value)
    content.vb: Public Sub AddRange(value As TraceListenerCollection)
    parameters:
    - id: value
      type: System.Diagnostics.TraceListenerCollection
      description: "\n<p>Another <xref href=\"System.Diagnostics.TraceListenerCollection\" data-throw-if-not-resolved=\"false\"></xref> whose contents are added to the list. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>value</em> is <strong>null</strong>.</p>\n"
  seealso:
  - type: System.Diagnostics.TraceListenerCollection
    commentId: T:System.Diagnostics.TraceListenerCollection
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.TextWriterTraceListener
    commentId: T:System.Diagnostics.TextWriterTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.TraceListenerCollection.Clear
  commentId: M:System.Diagnostics.TraceListenerCollection.Clear
  id: Clear
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  - vb
  name: Clear()
  fullName: System.Diagnostics.TraceListenerCollection.Clear()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clear
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
    startLine: 119
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Clears all the listeners from the list.</p>\n"
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  seealso:
  - type: System.Diagnostics.TraceListenerCollection
    commentId: T:System.Diagnostics.TraceListenerCollection
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.TextWriterTraceListener
    commentId: T:System.Diagnostics.TextWriterTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)
  commentId: M:System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)
  id: Contains(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  - vb
  name: Contains(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
    startLine: 128
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Checks whether the list contains the specified listener.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)\" data-throw-if-not-resolved=\"false\"></xref> method can confirm the existence of a <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> before you perform further operations.</p>\n"
  syntax:
    content: public bool Contains(TraceListener listener)
    content.vb: Public Function Contains(listener As TraceListener) As Boolean
    parameters:
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "\n<p>A <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> to find in the list. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the listener is in the list; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.Diagnostics.TraceListenerCollection
    commentId: T:System.Diagnostics.TraceListenerCollection
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.TextWriterTraceListener
    commentId: T:System.Diagnostics.TextWriterTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)
  commentId: M:System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)
  id: CopyTo(System.Diagnostics.TraceListener[],System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  - vb
  name: CopyTo(TraceListener[], Int32)
  fullName: System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
    startLine: 137
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Copies a section of the current <xref href=\"System.Diagnostics.TraceListenerCollection\" data-throw-if-not-resolved=\"false\"></xref> list to the specified array at the specified index.</p>\n"
  syntax:
    content: public void CopyTo(TraceListener[] listeners, int index)
    content.vb: Public Sub CopyTo(listeners As TraceListener(), index As Integer)
    parameters:
    - id: listeners
      type: System.Diagnostics.TraceListener[]
      description: "\n<p>An array of type <xref href=\"System.Array\" data-throw-if-not-resolved=\"false\"></xref> to copy the elements into. </p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The starting index number in the current list to copy from. </p>\n"
  seealso:
  - type: System.Diagnostics.TraceListenerCollection
    commentId: T:System.Diagnostics.TraceListenerCollection
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.TextWriterTraceListener
    commentId: T:System.Diagnostics.TextWriterTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener(), System.Int32)
  name.vb: CopyTo(TraceListener(), Int32)
- uid: System.Diagnostics.TraceListenerCollection.GetEnumerator
  commentId: M:System.Diagnostics.TraceListenerCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Diagnostics.TraceListenerCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
    startLine: 147
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Gets an enumerator for this list.</p>\n"
  syntax:
    content: public Collections.IEnumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As Collections.IEnumerator
    return:
      type: System.Collections.IEnumerator
      description: "\n<p>An enumerator of type <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.Diagnostics.TraceListenerCollection
    commentId: T:System.Diagnostics.TraceListenerCollection
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.TextWriterTraceListener
    commentId: T:System.Diagnostics.TextWriterTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)
  commentId: M:System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)
  id: IndexOf(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  - vb
  name: IndexOf(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IndexOf
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
    startLine: 164
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Gets the index of the specified listener.</p>\n"
  syntax:
    content: public int IndexOf(TraceListener listener)
    content.vb: Public Function IndexOf(listener As TraceListener) As Integer
    parameters:
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "\n<p>A <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> to find in the list. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The index of the listener, if it can be found in the list; otherwise, -1.</p>\n"
  seealso:
  - type: System.Diagnostics.TraceListenerCollection
    commentId: T:System.Diagnostics.TraceListenerCollection
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.TextWriterTraceListener
    commentId: T:System.Diagnostics.TextWriterTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)
  commentId: M:System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)
  id: Insert(System.Int32,System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  - vb
  name: Insert(Int32, TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Insert(System.Int32, System.Diagnostics.TraceListener)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Insert
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
    startLine: 172
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Inserts the listener at the specified index.</p>\n"
  remarks: "\n<p>If the index equals the number of items in the list, then the listener is appended to the end of the list.</p>\n<p>The index is zero-based. Therefore, if you want to insert the listener into the third position, you must call <code>myTraceListenerColl.Insert(2, myNewListener)</code>.</p>\n"
  syntax:
    content: public void Insert(int index, TraceListener listener)
    content.vb: Public Sub Insert(index As Integer, listener As TraceListener)
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>The position in the list to insert the new <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "\n<p>A <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> to insert in the list. </p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The <em>index</em> is not a valid index in the list. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>listener</em> is <strong>null</strong>.</p>\n"
  seealso:
  - type: System.Diagnostics.TraceListenerCollection
    commentId: T:System.Diagnostics.TraceListenerCollection
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.TextWriterTraceListener
    commentId: T:System.Diagnostics.TextWriterTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)
  commentId: M:System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)
  id: Remove(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  - vb
  name: Remove(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
    startLine: 186
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Removes from the collection the specified <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void Remove(TraceListener listener)
    content.vb: Public Sub Remove(listener As TraceListener)
    parameters:
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "\n<p>A <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> to remove from the list. </p>\n"
  seealso:
  - type: System.Diagnostics.TraceListenerCollection
    commentId: T:System.Diagnostics.TraceListenerCollection
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.TextWriterTraceListener
    commentId: T:System.Diagnostics.TextWriterTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.TraceListenerCollection.Remove(System.String)
  commentId: M:System.Diagnostics.TraceListenerCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  - vb
  name: Remove(String)
  fullName: System.Diagnostics.TraceListenerCollection.Remove(System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
    startLine: 195
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Removes from the collection the first <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> with the specified name.</p>\n"
  remarks: "\n<p>The <em>name</em> parameter is case-sensitive. That is, if two listeners exist with the names \"Rname\" and \"rname\", the <xref href=\"System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)\" data-throw-if-not-resolved=\"false\"></xref> method will find the specific listener you name.</p>\n"
  syntax:
    content: public void Remove(string name)
    content.vb: Public Sub Remove(name As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> to remove from the list. </p>\n"
  seealso:
  - type: System.Diagnostics.TraceListenerCollection
    commentId: T:System.Diagnostics.TraceListenerCollection
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.TextWriterTraceListener
    commentId: T:System.Diagnostics.TextWriterTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)
  commentId: M:System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAt
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListeners.cs
    startLine: 205
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Removes from the collection the <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> at the specified index.</p>\n"
  remarks: "\n<p>The index is zero-based. Therefore, you must subtract one from the numerical position of a particular <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> to delete that <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref>. For example, to remove the third <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref>, you need to specify <code>myTraceListenerColl.RemoveAt(2)</code>.</p>\n"
  syntax:
    content: public void RemoveAt(int index)
    content.vb: Public Sub RemoveAt(index As Integer)
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>The zero-based index of the <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> to remove from the list. </p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The <em>index</em> is not a valid index in the list. </p>\n"
  seealso:
  - type: System.Diagnostics.TraceListenerCollection
    commentId: T:System.Diagnostics.TraceListenerCollection
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.TextWriterTraceListener
    commentId: T:System.Diagnostics.TextWriterTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  fullName: System.Diagnostics
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: IList
  fullName: System.Collections.IList
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Diagnostics.TraceListener
  parent: System.Diagnostics
  isExternal: false
  name: TraceListener
  fullName: System.Diagnostics.TraceListener
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Diagnostics.TraceListener[]
  isExternal: false
  name: TraceListener[]
  fullName: System.Diagnostics.TraceListener[]
  fullname.vb: System.Diagnostics.TraceListener()
  name.vb: TraceListener()
  spec.csharp:
  - uid: System.Diagnostics.TraceListener
    name: TraceListener
    fullName: System.Diagnostics.TraceListener
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Diagnostics.TraceListener
    name: TraceListener
    fullName: System.Diagnostics.TraceListener
  - name: ()
    fullName: ()
- uid: System.Diagnostics.TraceListenerCollection
  parent: System.Diagnostics
  isExternal: false
  name: TraceListenerCollection
  fullName: System.Diagnostics.TraceListenerCollection
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
