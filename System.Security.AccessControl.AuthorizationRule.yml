items:
- uid: System.Security.AccessControl.AuthorizationRule
  id: AuthorizationRule
  parent: System.Security.AccessControl
  children:
  - System.Security.AccessControl.AuthorizationRule.#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  href: System.Security.AccessControl.AuthorizationRule.yml
  name: AuthorizationRule
  fullName: System.Security.AccessControl.AuthorizationRule
  type: Class
  source:
    remote: &o0
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 123
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Determines access to securable objects. The derived classes @'System.Security.AccessControl.AccessRule' and @'System.Security.AccessControl.AuditRule' offer specializations for access and audit functionality.
  syntax:
    content: public abstract class AuthorizationRule
    content.vb: Public MustInherit Class AuthorizationRule
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Security.AccessControl.AuthorizationRule.#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)'
  parent: System.Security.AccessControl.AuthorizationRule
  href: System.Security.AccessControl.AuthorizationRule.yml
  name: AuthorizationRule(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags)
  fullName: System.Security.AccessControl.AuthorizationRule.AuthorizationRule(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 125
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the @'System.Security.AccessControl.AccessRule' class by using the specified values.
  syntax:
    content: protected AuthorizationRule(IdentityReference identity, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)
    content.vb: Protected Sub New(identity As IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags)
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: The identity to which the access rule applies. This parameter must be an object that can be cast as a @'System.Security.Principal.SecurityIdentifier'.
    - id: accessMask
      type: System.Int32
      description: The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.
    - id: isInherited
      type: System.Boolean
      description: true to inherit this rule from a parent container.
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: The inheritance properties of the access rule.
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: Whether inherited access rules are automatically propagated. The propagation flags are ignored if *inheritanceFlags* is set to @'System.Security.AccessControl.InheritanceFlags.None'.
  exceptions:
  - type: System.ArgumentException
    description: The value of the *identity* parameter cannot be cast as a @'System.Security.Principal.SecurityIdentifier'.
  - type: System.ArgumentOutOfRangeException
    description: The value of the *accessMask* parameter is zero, or the *inheritanceFlags* or *propagationFlags* parameters contain unrecognized flag values.
- uid: System.Security.AccessControl.AuthorizationRule.AccessMask
  id: AccessMask
  parent: System.Security.AccessControl.AuthorizationRule
  href: System.Security.AccessControl.AuthorizationRule.yml
  name: AccessMask
  fullName: System.Security.AccessControl.AuthorizationRule.AccessMask
  type: Property
  source:
    remote: *o0
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 126
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Gets the access mask for this rule.
  syntax:
    content: protected int AccessMask { get; }
    content.vb: Protected ReadOnly Property AccessMask As Integer
    parameters: []
    return:
      type: System.Int32
      description: The access mask for this rule.
- uid: System.Security.AccessControl.AuthorizationRule.IdentityReference
  id: IdentityReference
  parent: System.Security.AccessControl.AuthorizationRule
  href: System.Security.AccessControl.AuthorizationRule.yml
  name: IdentityReference
  fullName: System.Security.AccessControl.AuthorizationRule.IdentityReference
  type: Property
  source:
    remote: *o0
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 127
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Gets the @'System.Security.Principal.IdentityReference' to which this rule applies.
  syntax:
    content: public IdentityReference IdentityReference { get; }
    content.vb: Public ReadOnly Property IdentityReference As IdentityReference
    parameters: []
    return:
      type: System.Security.Principal.IdentityReference
      description: The @'System.Security.Principal.IdentityReference' to which this rule applies.
- uid: System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  id: InheritanceFlags
  parent: System.Security.AccessControl.AuthorizationRule
  href: System.Security.AccessControl.AuthorizationRule.yml
  name: InheritanceFlags
  fullName: System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  type: Property
  source:
    remote: *o0
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 128
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Gets the value of flags that determine how this rule is inherited by child objects.
  syntax:
    content: public InheritanceFlags InheritanceFlags { get; }
    content.vb: Public ReadOnly Property InheritanceFlags As InheritanceFlags
    parameters: []
    return:
      type: System.Security.AccessControl.InheritanceFlags
      description: A bitwise combination of the enumeration values.
- uid: System.Security.AccessControl.AuthorizationRule.IsInherited
  id: IsInherited
  parent: System.Security.AccessControl.AuthorizationRule
  href: System.Security.AccessControl.AuthorizationRule.yml
  name: IsInherited
  fullName: System.Security.AccessControl.AuthorizationRule.IsInherited
  type: Property
  source:
    remote: *o0
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 129
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Gets a value indicating whether this rule is explicitly set or is inherited from a parent container object.
  syntax:
    content: public bool IsInherited { get; }
    content.vb: Public ReadOnly Property IsInherited As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if this rule is not explicitly set but is instead inherited from a parent container.
- uid: System.Security.AccessControl.AuthorizationRule.PropagationFlags
  id: PropagationFlags
  parent: System.Security.AccessControl.AuthorizationRule
  href: System.Security.AccessControl.AuthorizationRule.yml
  name: PropagationFlags
  fullName: System.Security.AccessControl.AuthorizationRule.PropagationFlags
  type: Property
  source:
    remote: *o0
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 130
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Gets the value of the propagation flags, which determine how inheritance of this rule is propagated to child objects. This property is significant only when the value of the @'System.Security.AccessControl.InheritanceFlags' enumeration is not @'System.Security.AccessControl.InheritanceFlags.None'.
  syntax:
    content: public PropagationFlags PropagationFlags { get; }
    content.vb: Public ReadOnly Property PropagationFlags As PropagationFlags
    parameters: []
    return:
      type: System.Security.AccessControl.PropagationFlags
      description: A bitwise combination of the enumeration values.
references:
- uid: System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  href: System.Security.Principal.IdentityReference.yml
  name: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  href: System.Security.AccessControl.InheritanceFlags.yml
  name: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  href: System.Security.AccessControl.PropagationFlags.yml
  name: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
