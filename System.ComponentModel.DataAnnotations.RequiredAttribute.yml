items:
- uid: System.ComponentModel.DataAnnotations.RequiredAttribute
  commentId: T:System.ComponentModel.DataAnnotations.RequiredAttribute
  id: RequiredAttribute
  parent: System.ComponentModel.DataAnnotations
  children:
  - System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
  - System.ComponentModel.DataAnnotations.RequiredAttribute.AllowEmptyStrings
  - System.ComponentModel.DataAnnotations.RequiredAttribute.IsValid(System.Object)
  langs:
  - csharp
  - vb
  name: RequiredAttribute
  fullName: System.ComponentModel.DataAnnotations.RequiredAttribute
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/RequiredAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RequiredAttribute
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/RequiredAttribute.cs
    startLine: 9
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Specifies that a data field value is required.</p>\n"
  remarks: "\n<p>The <xref href=\"System.ComponentModel.DataAnnotations.RequiredAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute specifies that when a field on a form is validated, the field must contain a value. A validation exception is raised if the property is <strong>null</strong>, contains an empty string (\"\"), or contains only white-space characters.</p>\n<p>If the MVC data model or entity partial class contains a field that is annotated with the <xref href=\"System.ComponentModel.DataAnnotations.RequiredAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute, but the page does not contain the property, an error is not raised. Validation occurs only for fields that are submitted to the server.</p>\n<p>A Visual Studio project with source code is available to accompany this topic: <see href=\"http://go.microsoft.com/fwlink/?linkid=158686\">Download</see>.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.ComponentModel.DataAnnotations.RequiredAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute to override the database schema rule that allows a data field to be empty. The example performs the following steps: </p>\n<ul><li>\n<p>Implements a metadata partial class and the associated metadata class. </p>\n</li><li>\n<p>In the associated metadata class, it applies the <xref href=\"System.ComponentModel.DataAnnotations.RequiredAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute, which specifies the following requirements:</p>\n<ul><li>\n<p>The Title data field cannot be empty. If validation fails, the code in the example throws a validation exception and displays an error message. The error message is specified at the time that the attribute is applied to the data field.</p>\n</li><li>\n<p>The MiddleName data field cannot be empty. If validation fails, the code in the example throws a validation exception and displays an error message.</p>\n</li></ul>\n</li></ul>System.ComponentModel.DataAnnotations.RequiredAttribute#1"
  syntax:
    content: 'public class RequiredAttribute : ValidationAttribute'
    content.vb: >-
      Public Class RequiredAttribute
          Inherits ValidationAttribute
  inheritance:
  - System.Object
  - System.ComponentModel.DataAnnotations.ValidationAttribute
  inheritedMembers:
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString
  - System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext
  - System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)
  - System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  - System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  - System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  - System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
  commentId: M:System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.DataAnnotations.RequiredAttribute
  langs:
  - csharp
  - vb
  name: RequiredAttribute()
  fullName: System.ComponentModel.DataAnnotations.RequiredAttribute.RequiredAttribute()
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/RequiredAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/RequiredAttribute.cs
    startLine: 20
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.RequiredAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example:
  - "\n<p>The following example shows how to use the <xref href=\"System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor\" data-throw-if-not-resolved=\"false\"></xref> constructor. If validation fails, the example displays a validation error message that is provided by Dynamic Data.</p>System.ComponentModel.DataAnnotations.RequiredAttribute#3"
  syntax:
    content: public RequiredAttribute()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.RequiredAttribute.AllowEmptyStrings
  commentId: P:System.ComponentModel.DataAnnotations.RequiredAttribute.AllowEmptyStrings
  id: AllowEmptyStrings
  parent: System.ComponentModel.DataAnnotations.RequiredAttribute
  langs:
  - csharp
  - vb
  name: AllowEmptyStrings
  fullName: System.ComponentModel.DataAnnotations.RequiredAttribute.AllowEmptyStrings
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/RequiredAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AllowEmptyStrings
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/RequiredAttribute.cs
    startLine: 28
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets or sets a value that indicates whether an empty string is allowed.</p>\n"
  remarks: "\n<p>When you set <xref href=\"System.ComponentModel.DataAnnotations.RequiredAttribute.AllowEmptyStrings\" data-throw-if-not-resolved=\"false\"></xref> to <strong>true</strong> for a data field, Dynamic Data does not perform validation and transforms the empty string to a <strong>null</strong> value. This value is then passed to the database. </p>\n<p>If the database does not allow <strong>null</strong> values, it raises an error. To avoid this error, you must also set the <xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull\" data-throw-if-not-resolved=\"false\"></xref> to <strong>false</strong>.</p>\n"
  example:
  - 
  syntax:
    content: public bool AllowEmptyStrings { get; set; }
    content.vb: Public Property AllowEmptyStrings As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if an empty string is allowed; otherwise, <strong>false</strong>. The default value is <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.RequiredAttribute.IsValid(System.Object)
  commentId: M:System.ComponentModel.DataAnnotations.RequiredAttribute.IsValid(System.Object)
  id: IsValid(System.Object)
  parent: System.ComponentModel.DataAnnotations.RequiredAttribute
  langs:
  - csharp
  - vb
  name: IsValid(Object)
  fullName: System.ComponentModel.DataAnnotations.RequiredAttribute.IsValid(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/RequiredAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsValid
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/RequiredAttribute.cs
    startLine: 39
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Checks that the value of the required data field is not empty.</p>\n"
  remarks: "\n<p>If the value is an empty string, the method returns <strong>false</strong> and a validation error is displayed.</p>\n"
  example:
  - 
  syntax:
    content: public override bool IsValid(object value)
    content.vb: Public Overrides Function IsValid(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>The data field value to validate.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if validation is successful; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)
  exceptions:
  - type: System.ComponentModel.DataAnnotations.ValidationException
    commentId: T:System.ComponentModel.DataAnnotations.ValidationException
    description: "\n<p>The data field value was <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.ComponentModel.DataAnnotations
  isExternal: false
  name: System.ComponentModel.DataAnnotations
  fullName: System.ComponentModel.DataAnnotations
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute
  parent: System.ComponentModel.DataAnnotations
  isExternal: false
  name: ValidationAttribute
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: false
  name: ErrorMessage
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: false
  name: ErrorMessageResourceName
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: false
  name: ErrorMessageResourceType
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: false
  name: ErrorMessageString
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: false
  name: RequiresValidationContext
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: true
  name: FormatErrorMessage(String)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)
  spec.csharp:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)
    name: FormatErrorMessage
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)
    name: FormatErrorMessage
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: true
  name: GetValidationResult(Object, ValidationContext)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object, System.ComponentModel.DataAnnotations.ValidationContext)
  spec.csharp:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
    name: GetValidationResult
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ComponentModel.DataAnnotations.ValidationContext
    name: ValidationContext
    fullName: System.ComponentModel.DataAnnotations.ValidationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
    name: GetValidationResult
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ComponentModel.DataAnnotations.ValidationContext
    name: ValidationContext
    fullName: System.ComponentModel.DataAnnotations.ValidationContext
  - name: )
    fullName: )
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: true
  name: IsValid(Object, ValidationContext)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object, System.ComponentModel.DataAnnotations.ValidationContext)
  spec.csharp:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
    name: IsValid
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ComponentModel.DataAnnotations.ValidationContext
    name: ValidationContext
    fullName: System.ComponentModel.DataAnnotations.ValidationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
    name: IsValid
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ComponentModel.DataAnnotations.ValidationContext
    name: ValidationContext
    fullName: System.ComponentModel.DataAnnotations.ValidationContext
  - name: )
    fullName: )
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: true
  name: Validate(Object, ValidationContext)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object, System.ComponentModel.DataAnnotations.ValidationContext)
  spec.csharp:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
    name: Validate
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ComponentModel.DataAnnotations.ValidationContext
    name: ValidationContext
    fullName: System.ComponentModel.DataAnnotations.ValidationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
    name: Validate
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ComponentModel.DataAnnotations.ValidationContext
    name: ValidationContext
    fullName: System.ComponentModel.DataAnnotations.ValidationContext
  - name: )
    fullName: )
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: true
  name: Validate(Object, String)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object, System.String)
  spec.csharp:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)
    name: Validate
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)
    name: Validate
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: true
  name: IsValid(Object)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)
    name: IsValid
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)
    name: IsValid
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ComponentModel.DataAnnotations.ValidationException
  isExternal: false
  name: ValidationException
  fullName: System.ComponentModel.DataAnnotations.ValidationException
