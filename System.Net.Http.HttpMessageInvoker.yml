items:
- uid: System.Net.Http.HttpMessageInvoker
  id: HttpMessageInvoker
  parent: System.Net.Http
  children:
  - System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)
  - System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)
  - System.Net.Http.HttpMessageInvoker.Dispose
  - System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)
  - System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  href: System.Net.Http.HttpMessageInvoker.yml
  name: HttpMessageInvoker
  fullName: System.Net.Http.HttpMessageInvoker
  type: Class
  source:
    remote: &o0
      path: src/System.Net.Http/src/System/Net/Http/HttpMessageInvoker.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Net.Http/src/System/Net/Http/HttpMessageInvoker.cs
    startLine: 12
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: A specialty class that allows applications to call the @'System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)' method on an Http handler chain.
  syntax:
    content: 'public class HttpMessageInvoker : IDisposable'
    content.vb: Public Class HttpMessageInvoker Inherits IDisposable
  inheritance:
  - System.Object
- uid: System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)
  id: '#ctor(System.Net.Http.HttpMessageHandler)'
  parent: System.Net.Http.HttpMessageInvoker
  href: System.Net.Http.HttpMessageInvoker.yml
  name: HttpMessageInvoker(HttpMessageHandler)
  fullName: System.Net.Http.HttpMessageInvoker.HttpMessageInvoker(System.Net.Http.HttpMessageHandler)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpMessageInvoker.cs
    startLine: 18
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Initializes an instance of a @'System.Net.Http.HttpMessageInvoker' class with a specific @'System.Net.Http.HttpMessageHandler'.
  syntax:
    content: public HttpMessageInvoker(HttpMessageHandler handler)
    content.vb: Public Sub New(handler As HttpMessageHandler)
    parameters:
    - id: handler
      type: System.Net.Http.HttpMessageHandler
      description: The @'System.Net.Http.HttpMessageHandler' responsible for processing the HTTP response messages.
- uid: System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)
  id: '#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)'
  parent: System.Net.Http.HttpMessageInvoker
  href: System.Net.Http.HttpMessageInvoker.yml
  name: HttpMessageInvoker(HttpMessageHandler, Boolean)
  fullName: System.Net.Http.HttpMessageInvoker.HttpMessageInvoker(System.Net.Http.HttpMessageHandler, System.Boolean)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpMessageInvoker.cs
    startLine: 23
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Initializes an instance of a @'System.Net.Http.HttpMessageInvoker' class with a specific @'System.Net.Http.HttpMessageHandler'.
  syntax:
    content: public HttpMessageInvoker(HttpMessageHandler handler, bool disposeHandler)
    content.vb: Public Sub New(handler As HttpMessageHandler, disposeHandler As Boolean)
    parameters:
    - id: handler
      type: System.Net.Http.HttpMessageHandler
      description: The @'System.Net.Http.HttpMessageHandler' responsible for processing the HTTP response messages.
    - id: disposeHandler
      type: System.Boolean
      description: true if the inner handler should be disposed of by Dispose(),false if you intend to reuse the inner handler.
- uid: System.Net.Http.HttpMessageInvoker.Dispose
  id: Dispose
  parent: System.Net.Http.HttpMessageInvoker
  href: System.Net.Http.HttpMessageInvoker.yml
  name: Dispose()
  fullName: System.Net.Http.HttpMessageInvoker.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpMessageInvoker.cs
    startLine: 60
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Releases the unmanaged resources and disposes of the managed resources used by the @'System.Net.Http.HttpMessageInvoker'.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
- uid: System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.HttpMessageInvoker
  href: System.Net.Http.HttpMessageInvoker.yml
  name: Dispose(Boolean)
  fullName: System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Http/src/System/Net/Http/HttpMessageInvoker.cs
    startLine: 66
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Releases the unmanaged resources used by the @'System.Net.Http.HttpMessageInvoker' and optionally disposes of the managed resources.
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: true to release both managed and unmanaged resources; false to releases only unmanaged resources.
- uid: System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpMessageInvoker
  href: System.Net.Http.HttpMessageInvoker.yml
  name: SendAsync(HttpRequestMessage, Threading.CancellationToken)
  fullName: System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 130
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Send an HTTP request as an asynchronous operation.
  syntax:
    content: public virtual Threading.Tasks.Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, Threading.CancellationToken cancellationToken)
    content.vb: Public Overridable Function SendAsync(request As HttpRequestMessage, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task(Of HttpResponseMessage)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The HTTP request message to send.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token to cancel operation.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: Returns @'System.Threading.Tasks.Task`1'.The task object representing the asynchronous operation.
  exceptions:
  - type: System.ArgumentNullException
    description: The *request* was null.
references:
- uid: System.Net.Http
  isExternal: false
  name: System.Net.Http
  fullName: System.Net.Http
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Net.Http.HttpMessageHandler
  parent: System.Net.Http
  isExternal: false
  href: System.Net.Http.HttpMessageHandler.yml
  name: HttpMessageHandler
  fullName: System.Net.Http.HttpMessageHandler
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: false
  href: System.Net.Http.HttpRequestMessage.yml
  name: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  href: System.Threading.CancellationToken.yml
  name: Threading.CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  definition: System.Threading.Tasks.Task`1
  href: System.Net.Http.HttpResponseMessage.yml
  name: Threading.Tasks.Task<HttpResponseMessage>
  name.vb: Threading.Tasks.Task(Of HttpResponseMessage)
  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>
  fullName.vb: System.Threading.Tasks.Task(Of System.Net.Http.HttpResponseMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    href: System.Net.Http.HttpResponseMessage.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    href: System.Net.Http.HttpResponseMessage.yml
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: false
  href: System.Threading.Tasks.Task`1.yml
  name: Threading.Tasks.Task<>
  name.vb: Threading.Tasks.Task(Of )
  fullName: System.Threading.Tasks.Task<>
  fullName.vb: System.Threading.Tasks.Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
