items:
- uid: System.Runtime.InteropServices.HandleCollector
  id: HandleCollector
  parent: System.Runtime.InteropServices
  children:
  - System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32)
  - System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32,System.Int32)
  - System.Runtime.InteropServices.HandleCollector.Add
  - System.Runtime.InteropServices.HandleCollector.Count
  - System.Runtime.InteropServices.HandleCollector.InitialThreshold
  - System.Runtime.InteropServices.HandleCollector.MaximumThreshold
  - System.Runtime.InteropServices.HandleCollector.Name
  - System.Runtime.InteropServices.HandleCollector.Remove
  href: System.Runtime.InteropServices.HandleCollector.yml
  name: HandleCollector
  fullName: System.Runtime.InteropServices.HandleCollector
  type: Class
  source:
    remote: &o0
      path: src/System.Runtime.InteropServices/src/System/Runtime/InteropServices/HandleCollector.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Runtime.InteropServices/src/System/Runtime/InteropServices/HandleCollector.cs
    startLine: 7
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: Tracks outstanding handles and forces a garbage collection when the specified threshold is reached.
  syntax:
    content: public sealed class HandleCollector
    content.vb: Public NotInheritable Class HandleCollector
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Runtime.InteropServices.HandleCollector
  href: System.Runtime.InteropServices.HandleCollector.yml
  name: HandleCollector(String, Int32)
  fullName: System.Runtime.InteropServices.HandleCollector.HandleCollector(System.String, System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime.InteropServices/src/System/Runtime/InteropServices/HandleCollector.cs
    startLine: 19
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: Initializes a new instance of the @'System.Runtime.InteropServices.HandleCollector' class using a name and a threshold at which to begin handle collection.
  syntax:
    content: public HandleCollector(string name, int initialThreshold)
    content.vb: Public Sub New(name As String, initialThreshold As Integer)
    parameters:
    - id: name
      type: System.String
      description: A name for the collector. This parameter allows you to name collectors that track handle types separately.
    - id: initialThreshold
      type: System.Int32
      description: A value that specifies the point at which collections should begin.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The *initialThreshold* parameter is less than 0.
- uid: System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32)'
  parent: System.Runtime.InteropServices.HandleCollector
  href: System.Runtime.InteropServices.HandleCollector.yml
  name: HandleCollector(String, Int32, Int32)
  fullName: System.Runtime.InteropServices.HandleCollector.HandleCollector(System.String, System.Int32, System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime.InteropServices/src/System/Runtime/InteropServices/HandleCollector.cs
    startLine: 24
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: Initializes a new instance of the @'System.Runtime.InteropServices.HandleCollector' class using a name, a threshold at which to begin handle collection, and a threshold at which handle collection must occur.
  syntax:
    content: public HandleCollector(string name, int initialThreshold, int maximumThreshold)
    content.vb: Public Sub New(name As String, initialThreshold As Integer, maximumThreshold As Integer)
    parameters:
    - id: name
      type: System.String
      description: A name for the collector.  This parameter allows you to name collectors that track handle types separately.
    - id: initialThreshold
      type: System.Int32
      description: A value that specifies the point at which collections should begin.
    - id: maximumThreshold
      type: System.Int32
      description: A value that specifies the point at which collections must occur. This should be set to the maximum number of available handles.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The *initialThreshold* parameter is less than 0.-or-The *maximumThreshold* parameter is less than 0.
  - type: System.ArgumentException
    description: The *maximumThreshold* parameter is less than the *initialThreshold* parameter.
- uid: System.Runtime.InteropServices.HandleCollector.Count
  id: Count
  parent: System.Runtime.InteropServices.HandleCollector
  href: System.Runtime.InteropServices.HandleCollector.yml
  name: Count
  fullName: System.Runtime.InteropServices.HandleCollector.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Runtime.InteropServices/src/System/Runtime/InteropServices/HandleCollector.cs
    startLine: 56
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: Gets the number of handles collected.
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of handles collected.
- uid: System.Runtime.InteropServices.HandleCollector.InitialThreshold
  id: InitialThreshold
  parent: System.Runtime.InteropServices.HandleCollector
  href: System.Runtime.InteropServices.HandleCollector.yml
  name: InitialThreshold
  fullName: System.Runtime.InteropServices.HandleCollector.InitialThreshold
  type: Property
  source:
    remote: *o0
    path: src/System.Runtime.InteropServices/src/System/Runtime/InteropServices/HandleCollector.cs
    startLine: 58
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: Gets a value that specifies the point at which collections should begin.
  syntax:
    content: public int InitialThreshold { get; }
    content.vb: Public ReadOnly Property InitialThreshold As Integer
    parameters: []
    return:
      type: System.Int32
      description: A value that specifies the point at which collections should begin.
- uid: System.Runtime.InteropServices.HandleCollector.MaximumThreshold
  id: MaximumThreshold
  parent: System.Runtime.InteropServices.HandleCollector
  href: System.Runtime.InteropServices.HandleCollector.yml
  name: MaximumThreshold
  fullName: System.Runtime.InteropServices.HandleCollector.MaximumThreshold
  type: Property
  source:
    remote: *o0
    path: src/System.Runtime.InteropServices/src/System/Runtime/InteropServices/HandleCollector.cs
    startLine: 60
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: Gets a value that specifies the point at which collections must occur.
  syntax:
    content: public int MaximumThreshold { get; }
    content.vb: Public ReadOnly Property MaximumThreshold As Integer
    parameters: []
    return:
      type: System.Int32
      description: A value that specifies the point at which collections must occur.
- uid: System.Runtime.InteropServices.HandleCollector.Name
  id: Name
  parent: System.Runtime.InteropServices.HandleCollector
  href: System.Runtime.InteropServices.HandleCollector.yml
  name: Name
  fullName: System.Runtime.InteropServices.HandleCollector.Name
  type: Property
  source:
    remote: *o0
    path: src/System.Runtime.InteropServices/src/System/Runtime/InteropServices/HandleCollector.cs
    startLine: 62
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: Gets the name of a @'System.Runtime.InteropServices.HandleCollector' object.
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: This @'System.Runtime.InteropServices.HandleCollector.Name' property allows you to name collectors that track handle types separately.
- uid: System.Runtime.InteropServices.HandleCollector.Add
  id: Add
  parent: System.Runtime.InteropServices.HandleCollector
  href: System.Runtime.InteropServices.HandleCollector.yml
  name: Add()
  fullName: System.Runtime.InteropServices.HandleCollector.Add()
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.InteropServices/src/System/Runtime/InteropServices/HandleCollector.cs
    startLine: 64
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: Increments the current handle count.
  syntax:
    content: public void Add()
    content.vb: Public Sub Add
  exceptions:
  - type: System.InvalidOperationException
    description: The @'System.Runtime.InteropServices.HandleCollector.Count' property is less than 0.
- uid: System.Runtime.InteropServices.HandleCollector.Remove
  id: Remove
  parent: System.Runtime.InteropServices.HandleCollector
  href: System.Runtime.InteropServices.HandleCollector.yml
  name: Remove()
  fullName: System.Runtime.InteropServices.HandleCollector.Remove()
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.InteropServices/src/System/Runtime/InteropServices/HandleCollector.cs
    startLine: 101
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: Decrements the current handle count.
  syntax:
    content: public void Remove()
    content.vb: Public Sub Remove
  exceptions:
  - type: System.InvalidOperationException
    description: The @'System.Runtime.InteropServices.HandleCollector.Count' property is less than 0.
references:
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
  type: Class
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  type: Class
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  type: Class
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  href: System.InvalidOperationException.yml
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  type: Class
  summary: The exception that is thrown when a method call is invalid for the object's current state.
