items:
- uid: System.Xml.XmlNamedNodeMap
  id: XmlNamedNodeMap
  parent: System.Xml
  children:
  - System.Xml.XmlNamedNodeMap.Count
  - System.Xml.XmlNamedNodeMap.GetEnumerator
  - System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)
  - System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)
  - System.Xml.XmlNamedNodeMap.Item(System.Int32)
  - System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)
  - System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)
  - System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)
  href: System.Xml.XmlNamedNodeMap.yml
  name: XmlNamedNodeMap
  fullName: System.Xml.XmlNamedNodeMap
  type: Class
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNamedNodeMap.SmallXmlNodeList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNamedNodeMap.SmallXmlNodeList.cs
    startLine: 8
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Represents a collection of nodes that can be accessed by name or index.
  syntax:
    content: 'public class XmlNamedNodeMap : IEnumerable'
    content.vb: Public Class XmlNamedNodeMap Implements IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Xml.XmlNamedNodeMap.Count
  id: Count
  parent: System.Xml.XmlNamedNodeMap
  href: System.Xml.XmlNamedNodeMap.yml
  name: Count
  fullName: System.Xml.XmlNamedNodeMap.Count
  type: Property
  source:
    remote: &o0
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNamedNodeMap.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNamedNodeMap.cs
    startLine: 57
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the number of nodes in the XmlNamedNodeMap.
  syntax:
    content: public virtual int Count { get; }
    content.vb: Public Overridable ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of nodes.
- uid: System.Xml.XmlNamedNodeMap.GetEnumerator
  id: GetEnumerator
  parent: System.Xml.XmlNamedNodeMap
  href: System.Xml.XmlNamedNodeMap.yml
  name: GetEnumerator()
  fullName: System.Xml.XmlNamedNodeMap.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNamedNodeMap.cs
    startLine: 104
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Provides support for the "foreach" style iteration over the collection of nodes in the XmlNamedNodeMap.
  syntax:
    content: public virtual IEnumerator GetEnumerator()
    content.vb: Public Overridable Function GetEnumerator As IEnumerator
    return:
      type: System.Collections.IEnumerator
      description: An enumerator object.
- uid: System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)
  id: GetNamedItem(System.String)
  parent: System.Xml.XmlNamedNodeMap
  href: System.Xml.XmlNamedNodeMap.yml
  name: GetNamedItem(String)
  fullName: System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNamedNodeMap.cs
    startLine: 19
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Retrieves an @'System.Xml.XmlNode' specified by name.
  syntax:
    content: public virtual XmlNode GetNamedItem(string name)
    content.vb: Public Overridable Function GetNamedItem(name As String) As XmlNode
    parameters:
    - id: name
      type: System.String
      description: The qualified name of the node to retrieve. It is matched against the @'System.Xml.XmlNode.Name' property of the matching node.
    return:
      type: System.Xml.XmlNode
      description: An XmlNode with the specified name or null if a matching node is not found.
- uid: System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)
  id: GetNamedItem(System.String,System.String)
  parent: System.Xml.XmlNamedNodeMap
  href: System.Xml.XmlNamedNodeMap.yml
  name: GetNamedItem(String, String)
  fullName: System.Xml.XmlNamedNodeMap.GetNamedItem(System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNamedNodeMap.cs
    startLine: 85
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Retrieves a node with the matching @'System.Xml.XmlNode.LocalName' and @'System.Xml.XmlNode.NamespaceURI'.
  syntax:
    content: public virtual XmlNode GetNamedItem(string localName, string namespaceURI)
    content.vb: Public Overridable Function GetNamedItem(localName As String, namespaceURI As String) As XmlNode
    parameters:
    - id: localName
      type: System.String
      description: The local name of the node to retrieve.
    - id: namespaceURI
      type: System.String
      description: The namespace Uniform Resource Identifier (URI) of the node to retrieve.
    return:
      type: System.Xml.XmlNode
      description: An @'System.Xml.XmlNode' with the matching local name and namespace URI or null if a matching node was not found.
- uid: System.Xml.XmlNamedNodeMap.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Xml.XmlNamedNodeMap
  href: System.Xml.XmlNamedNodeMap.yml
  name: Item(Int32)
  fullName: System.Xml.XmlNamedNodeMap.Item(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNamedNodeMap.cs
    startLine: 66
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Retrieves the node at the specified index in the XmlNamedNodeMap.
  syntax:
    content: public virtual XmlNode Item(int index)
    content.vb: Public Overridable Function Item(index As Integer) As XmlNode
    parameters:
    - id: index
      type: System.Int32
      description: The index position of the node to retrieve from the XmlNamedNodeMap. The index is zero-based; therefore, the index of the first node is 0 and the index of the last node is @'System.Xml.XmlNamedNodeMap.Count' -1.
    return:
      type: System.Xml.XmlNode
      description: The @'System.Xml.XmlNode' at the specified index. If *index* is less than 0 or greater than or equal to the @'System.Xml.XmlNamedNodeMap.Count' property, null is returned.
- uid: System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)
  id: RemoveNamedItem(System.String)
  parent: System.Xml.XmlNamedNodeMap
  href: System.Xml.XmlNamedNodeMap.yml
  name: RemoveNamedItem(String)
  fullName: System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNamedNodeMap.cs
    startLine: 46
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Removes the node from the XmlNamedNodeMap.
  syntax:
    content: public virtual XmlNode RemoveNamedItem(string name)
    content.vb: Public Overridable Function RemoveNamedItem(name As String) As XmlNode
    parameters:
    - id: name
      type: System.String
      description: The qualified name of the node to remove. The name is matched against the @'System.Xml.XmlNode.Name' property of the matching node.
    return:
      type: System.Xml.XmlNode
      description: The XmlNode removed from this XmlNamedNodeMap or null if a matching node was not found.
- uid: System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)
  id: RemoveNamedItem(System.String,System.String)
  parent: System.Xml.XmlNamedNodeMap
  href: System.Xml.XmlNamedNodeMap.yml
  name: RemoveNamedItem(String, String)
  fullName: System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNamedNodeMap.cs
    startLine: 94
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Removes a node with the matching @'System.Xml.XmlNode.LocalName' and @'System.Xml.XmlNode.NamespaceURI'.
  syntax:
    content: public virtual XmlNode RemoveNamedItem(string localName, string namespaceURI)
    content.vb: Public Overridable Function RemoveNamedItem(localName As String, namespaceURI As String) As XmlNode
    parameters:
    - id: localName
      type: System.String
      description: The local name of the node to remove.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the node to remove.
    return:
      type: System.Xml.XmlNode
      description: The @'System.Xml.XmlNode' removed or null if a matching node was not found.
- uid: System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)
  id: SetNamedItem(System.Xml.XmlNode)
  parent: System.Xml.XmlNamedNodeMap
  href: System.Xml.XmlNamedNodeMap.yml
  name: SetNamedItem(XmlNode)
  fullName: System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNamedNodeMap.cs
    startLine: 28
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Adds an @'System.Xml.XmlNode' using its @'System.Xml.XmlNode.Name' property.
  syntax:
    content: public virtual XmlNode SetNamedItem(XmlNode node)
    content.vb: Public Overridable Function SetNamedItem(node As XmlNode) As XmlNode
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: An XmlNode to store in the XmlNamedNodeMap. If a node with that name is already present in the map, it is replaced by the new one.
    return:
      type: System.Xml.XmlNode
      description: If the *node* replaces an existing node with the same name, the old node is returned; otherwise, null is returned.
  exceptions:
  - type: System.ArgumentException
    description: The *node* was created from a different @'System.Xml.XmlDocument' than the one that created the XmlNamedNodeMap; or the XmlNamedNodeMap is read-only.
references:
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  href: System.Collections.IEnumerator.yml
  name: IEnumerator
  fullName: System.Collections.IEnumerator
  type: Interface
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
  type: Namespace
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
  type: Class
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  href: System.Xml.XmlNode.yml
  name: XmlNode
  fullName: System.Xml.XmlNode
  type: Class
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  type: Class
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
