items:
- uid: System.Runtime.Serialization.KnownTypeAttribute
  commentId: T:System.Runtime.Serialization.KnownTypeAttribute
  id: KnownTypeAttribute
  parent: System.Runtime.Serialization
  children:
  - System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)
  - System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
  - System.Runtime.Serialization.KnownTypeAttribute.MethodName
  - System.Runtime.Serialization.KnownTypeAttribute.Type
  langs:
  - csharp
  - vb
  name: KnownTypeAttribute
  fullName: System.Runtime.Serialization.KnownTypeAttribute
  type: Class
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/KnownTypeAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KnownTypeAttribute
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/KnownTypeAttribute.cs
    startLine: 6
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Specifies types that should be recognized by the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> when serializing or deserializing a given type. </p>\n"
  remarks: "\n<p>Apply the <xref href=\"System.Runtime.Serialization.KnownTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute to a type to indicate to the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> types that should be recognized when serializing or deserializing an instance of the type to which the attribute is applied. This attribute could also be recognized by other serializers that understand data contracts.</p>\n<p>In your code, you can use the word <strong>KnownType</strong> instead of the longer <strong>KnownTypeAttribute</strong>. </p>\n<p>You can either apply exactly one <xref href=\"System.Runtime.Serialization.KnownTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> instance with the <xref href=\"System.Runtime.Serialization.KnownTypeAttribute.MethodName\" data-throw-if-not-resolved=\"false\"></xref> property set, or one or more <xref href=\"System.Runtime.Serialization.KnownTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> instances with the <xref href=\"System.Runtime.Serialization.KnownTypeAttribute.Type\" data-throw-if-not-resolved=\"false\"></xref> property set.</p>\n"
  example:
  - "\n<p>The following example shows a type named <code>Person</code> and a type named <code>IDInformation</code> that should be recognized when serializing or deserializing the <code>Person</code> type. </p>KnownTypeAttribute#0"
  syntax:
    content: 'public sealed class KnownTypeAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class KnownTypeAttribute
          Inherits Attribute
  seealso:
  - type: System.Runtime.Serialization.DataContractAttribute
    commentId: T:System.Runtime.Serialization.DataContractAttribute
  - type: System.Runtime.Serialization.DataMemberAttribute
    commentId: T:System.Runtime.Serialization.DataMemberAttribute
  - type: System.Runtime.Serialization.DataContractSerializer
    commentId: T:System.Runtime.Serialization.DataContractSerializer
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)
  commentId: M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Runtime.Serialization.KnownTypeAttribute
  langs:
  - csharp
  - vb
  name: KnownTypeAttribute(String)
  fullName: System.Runtime.Serialization.KnownTypeAttribute.KnownTypeAttribute(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/KnownTypeAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/KnownTypeAttribute.cs
    startLine: 22
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.Serialization.KnownTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> class with the name of a method that returns an <xref href=\"System.Collections.IEnumerable\" data-throw-if-not-resolved=\"false\"></xref> of known types. </p>\n"
  remarks: "\n<p>This constructor uses a method name that matches a method of the class.  The method returns a <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> objects. During serialization or deserialization, the types found in the collection can be used within the root type to which the attribute is applied.</p>\n"
  example:
  - "\n<p>The following example uses the <em>methodName</em> parameter to identify a method in the type that contains an array of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> objects. </p>KnownTypeAttribute_Ctor_String#1"
  syntax:
    content: public KnownTypeAttribute(string methodName)
    content.vb: Public Sub New(methodName As String)
    parameters:
    - id: methodName
      type: System.String
      description: "\n<p>The name of the method that returns an <xref href=\"System.Collections.IEnumerable\" data-throw-if-not-resolved=\"false\"></xref> of types used when serializing or deserializing data.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
  commentId: M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Runtime.Serialization.KnownTypeAttribute
  langs:
  - csharp
  - vb
  name: KnownTypeAttribute(Type)
  fullName: System.Runtime.Serialization.KnownTypeAttribute.KnownTypeAttribute(System.Type)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
    startLine: 83
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.Serialization.KnownTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> class with the specified type. </p>\n"
  example:
  - "\n<p>The following example shows a type named <code>Person</code> and a type named <code>IDInformation</code> that should be included when or deserializing. </p>KnownTypeAttribute#0"
  syntax:
    content: public KnownTypeAttribute(Type type)
    content.vb: Public Sub New(type As Type)
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that is included as a known type when serializing or deserializing data.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.KnownTypeAttribute.MethodName
  commentId: P:System.Runtime.Serialization.KnownTypeAttribute.MethodName
  id: MethodName
  parent: System.Runtime.Serialization.KnownTypeAttribute
  langs:
  - csharp
  - vb
  name: MethodName
  fullName: System.Runtime.Serialization.KnownTypeAttribute.MethodName
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/KnownTypeAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MethodName
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/KnownTypeAttribute.cs
    startLine: 27
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets the name of a method that will return a list of types that should be recognized during serialization or deserialization. </p>\n"
  remarks: "\n<p>The method must exist on the class or structure that the <xref href=\"System.Runtime.Serialization.KnownTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> is applied to, must be static, must accept no parameters, and must return an instance of any type that implements the generic <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref> interface, such as the <xref href=\"System.Collections.ObjectModel.Collection`1\" data-throw-if-not-resolved=\"false\"></xref> class, or an array of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n<p>The method is called once per application domain when the data contract is loaded for the type. </p>\n"
  example:
  - "\n<p>The following example uses the <em>methodName</em> parameter to identify a method in the type that contains an array of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> objects. </p>KnownTypeAttribute_Ctor_String#1"
  syntax:
    content: public string MethodName { get; }
    content.vb: Public ReadOnly Property MethodName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains the name of the method on the type defined by the <xref href=\"System.Runtime.Serialization.KnownTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.Serialization.KnownTypeAttribute.Type
  commentId: P:System.Runtime.Serialization.KnownTypeAttribute.Type
  id: Type
  parent: System.Runtime.Serialization.KnownTypeAttribute
  langs:
  - csharp
  - vb
  name: Type
  fullName: System.Runtime.Serialization.KnownTypeAttribute.Type
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/KnownTypeAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Type
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/KnownTypeAttribute.cs
    startLine: 33
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets the type that should be recognized during serialization or deserialization by the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: public Type Type { get; }
    content.vb: Public ReadOnly Property Type As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that is used during serialization or deserialization. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
