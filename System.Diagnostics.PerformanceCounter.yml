items:
- uid: System.Diagnostics.PerformanceCounter
  id: PerformanceCounter
  parent: System.Diagnostics
  children:
  - System.Diagnostics.PerformanceCounter.#ctor
  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)
  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)
  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)
  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)
  - System.Diagnostics.PerformanceCounter.BeginInit
  - System.Diagnostics.PerformanceCounter.CategoryName
  - System.Diagnostics.PerformanceCounter.Close
  - System.Diagnostics.PerformanceCounter.CounterHelp
  - System.Diagnostics.PerformanceCounter.CounterName
  - System.Diagnostics.PerformanceCounter.CounterType
  - System.Diagnostics.PerformanceCounter.DefaultFileMappingSize
  - System.Diagnostics.PerformanceCounter.EndInit
  - System.Diagnostics.PerformanceCounter.Increment
  - System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)
  - System.Diagnostics.PerformanceCounter.InstanceLifetime
  - System.Diagnostics.PerformanceCounter.InstanceName
  - System.Diagnostics.PerformanceCounter.MachineName
  - System.Diagnostics.PerformanceCounter.NextSample
  - System.Diagnostics.PerformanceCounter.NextValue
  - System.Diagnostics.PerformanceCounter.RawValue
  - System.Diagnostics.PerformanceCounter.ReadOnly
  - System.Diagnostics.PerformanceCounter.RemoveInstance
  href: System.Diagnostics.PerformanceCounter.yml
  name: PerformanceCounter
  fullName: System.Diagnostics.PerformanceCounter
  type: Class
  source:
    remote: &o0
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 31
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Represents a Windows NT performance counter component.
  syntax:
    content: public sealed class PerformanceCounter
    content.vb: Public NotInheritable Class PerformanceCounter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Diagnostics.PerformanceCounter.DefaultFileMappingSize
  id: DefaultFileMappingSize
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: DefaultFileMappingSize
  fullName: System.Diagnostics.PerformanceCounter.DefaultFileMappingSize
  type: Field
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 34
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Specifies the size, in bytes, of the global memory shared by performance counters. The default size is 524,288 bytes.
  syntax:
    content: public static int DefaultFileMappingSize
    content.vb: Public Shared DefaultFileMappingSize As Integer
- uid: System.Diagnostics.PerformanceCounter.#ctor
  id: '#ctor'
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: PerformanceCounter()
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 35
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Initializes a new, read-only instance of the @'System.Diagnostics.PerformanceCounter' class, without associating the instance with any system or custom performance counter.
  syntax:
    content: public PerformanceCounter()
    content.vb: Public Sub New
  exceptions:
  - type: System.PlatformNotSupportedException
    description: The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: PerformanceCounter(String, String)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(System.String, System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 36
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Initializes a new, read-only instance of the @'System.Diagnostics.PerformanceCounter' class and associates it with the specified system or custom performance counter on the local computer. This constructor requires that the category have a single instance.
  syntax:
    content: public PerformanceCounter(string categoryName, string counterName)
    content.vb: Public Sub New(categoryName As String, counterName As String)
    parameters:
    - id: categoryName
      type: System.String
      description: The name of the performance counter category (performance object) with which this performance counter is associated.
    - id: counterName
      type: System.String
      description: The name of the performance counter.
  exceptions:
  - type: System.InvalidOperationException
    description: '*categoryName* is an empty string ("").-or- *counterName* is an empty string ("").-or- The category specified does not exist. -or-The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.-or-*categoryName* and *counterName* have been localized into different languages.'
  - type: System.ArgumentNullException
    description: '*categoryName* or *counterName* is null.'
  - type: System.ComponentModel.Win32Exception
    description: An error occurred when accessing a system API.
  - type: System.PlatformNotSupportedException
    description: The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.
  - type: System.UnauthorizedAccessException
    description: Code that is executing without administrative privileges attempted to read a performance counter.
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.Boolean)'
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: PerformanceCounter(String, String, Boolean)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(System.String, System.String, System.Boolean)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 37
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Initializes a new, read-only or read/write instance of the @'System.Diagnostics.PerformanceCounter' class and associates it with the specified system or custom performance counter on the local computer. This constructor requires that the category contain a single instance.
  syntax:
    content: public PerformanceCounter(string categoryName, string counterName, bool readOnly)
    content.vb: Public Sub New(categoryName As String, counterName As String, readOnly As Boolean)
    parameters:
    - id: categoryName
      type: System.String
      description: The name of the performance counter category (performance object) with which this performance counter is associated.
    - id: counterName
      type: System.String
      description: The name of the performance counter.
    - id: readOnly
      type: System.Boolean
      description: true to access the counter in read-only mode (although the counter itself could be read/write); false to access the counter in read/write mode.
  exceptions:
  - type: System.InvalidOperationException
    description: The *categoryName* is an empty string ("").-or- The *counterName* is an empty string ("").-or- The category specified does not exist. (if *readOnly* is true). -or- The category specified is not a .NET Framework custom category (if *readOnly* is false). -or-The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.-or-*categoryName* and *counterName* have been localized into different languages.
  - type: System.ArgumentNullException
    description: '*categoryName* or *counterName* is null.'
  - type: System.ComponentModel.Win32Exception
    description: An error occurred when accessing a system API.
  - type: System.PlatformNotSupportedException
    description: The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.
  - type: System.UnauthorizedAccessException
    description: Code that is executing without administrative privileges attempted to read a performance counter.
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: PerformanceCounter(String, String, String)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(System.String, System.String, System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 38
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Initializes a new, read-only instance of the @'System.Diagnostics.PerformanceCounter' class and associates it with the specified system or custom performance counter and category instance on the local computer.
  syntax:
    content: public PerformanceCounter(string categoryName, string counterName, string instanceName)
    content.vb: Public Sub New(categoryName As String, counterName As String, instanceName As String)
    parameters:
    - id: categoryName
      type: System.String
      description: The name of the performance counter category (performance object) with which this performance counter is associated.
    - id: counterName
      type: System.String
      description: The name of the performance counter.
    - id: instanceName
      type: System.String
      description: The name of the performance counter category instance, or an empty string (""), if the category contains a single instance.
  exceptions:
  - type: System.InvalidOperationException
    description: '*categoryName* is an empty string ("").-or- *counterName* is an empty string ("").-or- The category specified is not valid. -or-The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.-or-*instanceName* is longer than 127 characters.-or-*categoryName* and *counterName* have been localized into different languages.'
  - type: System.ArgumentNullException
    description: '*categoryName* or *counterName* is null.'
  - type: System.ComponentModel.Win32Exception
    description: An error occurred when accessing a system API.
  - type: System.PlatformNotSupportedException
    description: The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.
  - type: System.UnauthorizedAccessException
    description: Code that is executing without administrative privileges attempted to read a performance counter.
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.Boolean)'
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: PerformanceCounter(String, String, String, Boolean)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(System.String, System.String, System.String, System.Boolean)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 39
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Initializes a new, read-only or read/write instance of the @'System.Diagnostics.PerformanceCounter' class and associates it with the specified system or custom performance counter and category instance on the local computer.
  syntax:
    content: public PerformanceCounter(string categoryName, string counterName, string instanceName, bool readOnly)
    content.vb: Public Sub New(categoryName As String, counterName As String, instanceName As String, readOnly As Boolean)
    parameters:
    - id: categoryName
      type: System.String
      description: The name of the performance counter category (performance object) with which this performance counter is associated.
    - id: counterName
      type: System.String
      description: The name of the performance counter.
    - id: instanceName
      type: System.String
      description: The name of the performance counter category instance, or an empty string (""), if the category contains a single instance.
    - id: readOnly
      type: System.Boolean
      description: true to access a counter in read-only mode; false to access a counter in read/write mode.
  exceptions:
  - type: System.InvalidOperationException
    description: '*categoryName* is an empty string ("").-or- *counterName* is an empty string ("").-or- The read/write permission setting requested is invalid for this counter.-or- The category specified does not exist (if *readOnly* is true). -or- The category specified is not a .NET Framework custom category (if *readOnly* is false). -or-The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.-or-*instanceName* is longer than 127 characters.-or-*categoryName* and *counterName* have been localized into different languages.'
  - type: System.ArgumentNullException
    description: '*categoryName* or *counterName* is null.'
  - type: System.ComponentModel.Win32Exception
    description: An error occurred when accessing a system API.
  - type: System.PlatformNotSupportedException
    description: The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.
  - type: System.UnauthorizedAccessException
    description: Code that is executing without administrative privileges attempted to read a performance counter.
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: PerformanceCounter(String, String, String, String)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 40
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Initializes a new, read-only instance of the @'System.Diagnostics.PerformanceCounter' class and associates it with the specified system or custom performance counter and category instance, on the specified computer.
  syntax:
    content: public PerformanceCounter(string categoryName, string counterName, string instanceName, string machineName)
    content.vb: Public Sub New(categoryName As String, counterName As String, instanceName As String, machineName As String)
    parameters:
    - id: categoryName
      type: System.String
      description: The name of the performance counter category (performance object) with which this performance counter is associated.
    - id: counterName
      type: System.String
      description: The name of the performance counter.
    - id: instanceName
      type: System.String
      description: The name of the performance counter category instance, or an empty string (""), if the category contains a single instance.
    - id: machineName
      type: System.String
      description: The computer on which the performance counter and its associated category exist.
  exceptions:
  - type: System.InvalidOperationException
    description: '*categoryName* is an empty string ("").-or- *counterName* is an empty string ("").-or- The read/write permission setting requested is invalid for this counter.-or- The counter does not exist on the specified computer. -or-The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.-or-*instanceName* is longer than 127 characters.-or-*categoryName* and *counterName* have been localized into different languages.'
  - type: System.ArgumentException
    description: The *machineName* parameter is not valid.
  - type: System.ArgumentNullException
    description: '*categoryName* or *counterName* is null.'
  - type: System.ComponentModel.Win32Exception
    description: An error occurred when accessing a system API.
  - type: System.PlatformNotSupportedException
    description: The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.
  - type: System.UnauthorizedAccessException
    description: Code that is executing without administrative privileges attempted to read a performance counter.
- uid: System.Diagnostics.PerformanceCounter.CategoryName
  id: CategoryName
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: CategoryName
  fullName: System.Diagnostics.PerformanceCounter.CategoryName
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 41
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Gets or sets the name of the performance counter category for this performance counter.
  syntax:
    content: public string CategoryName { get; set; }
    content.vb: Public Property CategoryName As String
    parameters: []
    return:
      type: System.String
      description: The name of the performance counter category (performance object) with which this performance counter is associated.
  exceptions:
  - type: System.ArgumentNullException
    description: The @'System.Diagnostics.PerformanceCounter.CategoryName' is null.
  - type: System.PlatformNotSupportedException
    description: The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.
- uid: System.Diagnostics.PerformanceCounter.CounterHelp
  id: CounterHelp
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: CounterHelp
  fullName: System.Diagnostics.PerformanceCounter.CounterHelp
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 43
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Gets the description for this performance counter.
  syntax:
    content: public string CounterHelp { get; }
    content.vb: Public ReadOnly Property CounterHelp As String
    parameters: []
    return:
      type: System.String
      description: A description of the item or quantity that this performance counter measures.
  exceptions:
  - type: System.InvalidOperationException
    description: The @'System.Diagnostics.PerformanceCounter' instance is not associated with a performance counter. -or-The @'System.Diagnostics.PerformanceCounter.InstanceLifetime' property is set to @'System.Diagnostics.PerformanceCounterInstanceLifetime.Process'  when using global shared memory.
  - type: System.PlatformNotSupportedException
    description: The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.
  - type: System.UnauthorizedAccessException
    description: Code that is executing without administrative privileges attempted to read a performance counter.
- uid: System.Diagnostics.PerformanceCounter.CounterName
  id: CounterName
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: CounterName
  fullName: System.Diagnostics.PerformanceCounter.CounterName
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 44
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Gets or sets the name of the performance counter that is associated with this @'System.Diagnostics.PerformanceCounter' instance.
  syntax:
    content: public string CounterName { get; set; }
    content.vb: Public Property CounterName As String
    parameters: []
    return:
      type: System.String
      description: The name of the counter, which generally describes the quantity being counted. This name is displayed in the list of counters of the Performance Counter Manager MMC snap in's Add Counters dialog box.
  exceptions:
  - type: System.ArgumentNullException
    description: The @'System.Diagnostics.PerformanceCounter.CounterName' is null.
  - type: System.PlatformNotSupportedException
    description: The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.
- uid: System.Diagnostics.PerformanceCounter.CounterType
  id: CounterType
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: CounterType
  fullName: System.Diagnostics.PerformanceCounter.CounterType
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 46
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Gets the counter type of the associated performance counter.
  syntax:
    content: public PerformanceCounterType CounterType { get; }
    content.vb: Public ReadOnly Property CounterType As PerformanceCounterType
    parameters: []
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: A @'System.Diagnostics.PerformanceCounterType' that describes both how the counter interacts with a monitoring application and the nature of the values it contains (for example, calculated or uncalculated).
  exceptions:
  - type: System.InvalidOperationException
    description: The instance is not correctly associated with a performance counter. -or-The @'System.Diagnostics.PerformanceCounter.InstanceLifetime' property is set to @'System.Diagnostics.PerformanceCounterInstanceLifetime.Process'  when using global shared memory.
  - type: System.PlatformNotSupportedException
    description: The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.
  - type: System.UnauthorizedAccessException
    description: Code that is executing without administrative privileges attempted to read a performance counter.
- uid: System.Diagnostics.PerformanceCounter.InstanceLifetime
  id: InstanceLifetime
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: InstanceLifetime
  fullName: System.Diagnostics.PerformanceCounter.InstanceLifetime
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 47
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Gets or sets the lifetime of a process.
  syntax:
    content: public PerformanceCounterInstanceLifetime InstanceLifetime { get; set; }
    content.vb: Public Property InstanceLifetime As PerformanceCounterInstanceLifetime
    parameters: []
    return:
      type: System.Diagnostics.PerformanceCounterInstanceLifetime
      description: One of the @'System.Diagnostics.PerformanceCounterInstanceLifetime' values. The default is @'System.Diagnostics.PerformanceCounterInstanceLifetime.Global'.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The value set is not a member of the @'System.Diagnostics.PerformanceCounterInstanceLifetime' enumeration.
  - type: System.InvalidOperationException
    description: '@''System.Diagnostics.PerformanceCounter.InstanceLifetime'' is set after the @''System.Diagnostics.PerformanceCounter'' has been initialized.'
- uid: System.Diagnostics.PerformanceCounter.InstanceName
  id: InstanceName
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: InstanceName
  fullName: System.Diagnostics.PerformanceCounter.InstanceName
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 49
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Gets or sets an instance name for this performance counter.
  syntax:
    content: public string InstanceName { get; set; }
    content.vb: Public Property InstanceName As String
    parameters: []
    return:
      type: System.String
      description: The name of the performance counter category instance, or an empty string (""), if the counter is a single-instance counter.
- uid: System.Diagnostics.PerformanceCounter.MachineName
  id: MachineName
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: MachineName
  fullName: System.Diagnostics.PerformanceCounter.MachineName
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 51
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Gets or sets the computer name for this performance counter
  syntax:
    content: public string MachineName { get; set; }
    content.vb: Public Property MachineName As String
    parameters: []
    return:
      type: System.String
      description: The server on which the performance counter and its associated category reside.
  exceptions:
  - type: System.ArgumentException
    description: The @'System.Diagnostics.PerformanceCounter.MachineName' format is invalid.
  - type: System.PlatformNotSupportedException
    description: The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.
- uid: System.Diagnostics.PerformanceCounter.RawValue
  id: RawValue
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: RawValue
  fullName: System.Diagnostics.PerformanceCounter.RawValue
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 53
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Gets or sets the raw, or uncalculated, value of this counter.
  syntax:
    content: public long RawValue { get; set; }
    content.vb: Public Property RawValue As Long
    parameters: []
    return:
      type: System.Int64
      description: The raw value of the counter.
  exceptions:
  - type: System.InvalidOperationException
    description: You are trying to set the counter's raw value, but the counter is read-only.-or- The instance is not correctly associated with a performance counter. -or-The @'System.Diagnostics.PerformanceCounter.InstanceLifetime' property is set to @'System.Diagnostics.PerformanceCounterInstanceLifetime.Process'  when using global shared memory.
  - type: System.ComponentModel.Win32Exception
    description: An error occurred when accessing a system API.
  - type: System.PlatformNotSupportedException
    description: The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.
  - type: System.UnauthorizedAccessException
    description: Code that is executing without administrative privileges attempted to read a performance counter.
- uid: System.Diagnostics.PerformanceCounter.ReadOnly
  id: ReadOnly
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: ReadOnly
  fullName: System.Diagnostics.PerformanceCounter.ReadOnly
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 54
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Gets or sets a value indicating whether this @'System.Diagnostics.PerformanceCounter' instance is in read-only mode.
  syntax:
    content: public bool ReadOnly { get; set; }
    content.vb: Public Property ReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true, if the @'System.Diagnostics.PerformanceCounter' instance is in read-only mode (even if the counter itself is a custom .NET Framework counter); false if it is in read/write mode. The default is the value set by the constructor.
- uid: System.Diagnostics.PerformanceCounter.BeginInit
  id: BeginInit
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: BeginInit()
  fullName: System.Diagnostics.PerformanceCounter.BeginInit()
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 56
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Begins the initialization of a @'System.Diagnostics.PerformanceCounter' instance used on a form or by another component. The initialization occurs at runtime.
  syntax:
    content: public void BeginInit()
    content.vb: Public Sub BeginInit
- uid: System.Diagnostics.PerformanceCounter.Close
  id: Close
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: Close()
  fullName: System.Diagnostics.PerformanceCounter.Close()
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 57
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Closes the performance counter and frees all the resources allocated by this performance counter instance.
  syntax:
    content: public void Close()
    content.vb: Public Sub Close
- uid: System.Diagnostics.PerformanceCounter.EndInit
  id: EndInit
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: EndInit()
  fullName: System.Diagnostics.PerformanceCounter.EndInit()
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 58
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Ends the initialization of a @'System.Diagnostics.PerformanceCounter' instance that is used on a form or by another component. The initialization occurs at runtime.
  syntax:
    content: public void EndInit()
    content.vb: Public Sub
- uid: System.Diagnostics.PerformanceCounter.Increment
  id: Increment
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: Increment()
  fullName: System.Diagnostics.PerformanceCounter.Increment()
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 59
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Increments the associated performance counter by one through an efficient atomic operation.
  syntax:
    content: public long Increment()
    content.vb: Public Function Increment As Long
    return:
      type: System.Int64
      description: The incremented counter value.
  exceptions:
  - type: System.InvalidOperationException
    description: The counter is read-only, so the application cannot increment it.-or- The instance is not correctly associated with a performance counter. -or-The @'System.Diagnostics.PerformanceCounter.InstanceLifetime' property is set to @'System.Diagnostics.PerformanceCounterInstanceLifetime.Process'  when using global shared memory.
  - type: System.ComponentModel.Win32Exception
    description: An error occurred when accessing a system API.
  - type: System.PlatformNotSupportedException
    description: The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.
- uid: System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)
  id: IncrementBy(System.Int64)
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: IncrementBy(Int64)
  fullName: System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 60
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Increments or decrements the value of the associated performance counter by a specified amount through an efficient atomic operation.
  syntax:
    content: public long IncrementBy(long value)
    content.vb: Public Function IncrementBy(value As Long) As Long
    parameters:
    - id: value
      type: System.Int64
      description: The value to increment by. (A negative value decrements the counter.)
    return:
      type: System.Int64
      description: The new counter value.
  exceptions:
  - type: System.InvalidOperationException
    description: The counter is read-only, so the application cannot increment it.-or- The instance is not correctly associated with a performance counter. -or-The @'System.Diagnostics.PerformanceCounter.InstanceLifetime' property is set to @'System.Diagnostics.PerformanceCounterInstanceLifetime.Process'  when using global shared memory.
  - type: System.ComponentModel.Win32Exception
    description: An error occurred when accessing a system API.
  - type: System.PlatformNotSupportedException
    description: The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.
- uid: System.Diagnostics.PerformanceCounter.NextSample
  id: NextSample
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: NextSample()
  fullName: System.Diagnostics.PerformanceCounter.NextSample()
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 61
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Obtains a counter sample, and returns the raw, or uncalculated, value for it.
  syntax:
    content: public CounterSample NextSample()
    content.vb: Public Function NextSample As CounterSample
    return:
      type: System.Diagnostics.CounterSample
      description: A @'System.Diagnostics.CounterSample' that represents the next raw value that the system obtains for this counter.
  exceptions:
  - type: System.InvalidOperationException
    description: The instance is not correctly associated with a performance counter. -or-The @'System.Diagnostics.PerformanceCounter.InstanceLifetime' property is set to @'System.Diagnostics.PerformanceCounterInstanceLifetime.Process'  when using global shared memory.
  - type: System.ComponentModel.Win32Exception
    description: An error occurred when accessing a system API.
  - type: System.PlatformNotSupportedException
    description: The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.
  - type: System.UnauthorizedAccessException
    description: Code that is executing without administrative privileges attempted to read a performance counter.
- uid: System.Diagnostics.PerformanceCounter.NextValue
  id: NextValue
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: NextValue()
  fullName: System.Diagnostics.PerformanceCounter.NextValue()
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 62
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Obtains a counter sample and returns the calculated value for it.
  syntax:
    content: public float NextValue()
    content.vb: Public Function NextValue As Single
    return:
      type: System.Single
      description: The next calculated value that the system obtains for this counter.
  exceptions:
  - type: System.InvalidOperationException
    description: The instance is not correctly associated with a performance counter.
  - type: System.ComponentModel.Win32Exception
    description: An error occurred when accessing a system API.
  - type: System.PlatformNotSupportedException
    description: The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.
  - type: System.UnauthorizedAccessException
    description: Code that is executing without administrative privileges attempted to read a performance counter.
- uid: System.Diagnostics.PerformanceCounter.RemoveInstance
  id: RemoveInstance
  parent: System.Diagnostics.PerformanceCounter
  href: System.Diagnostics.PerformanceCounter.yml
  name: RemoveInstance()
  fullName: System.Diagnostics.PerformanceCounter.RemoveInstance()
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 63
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Deletes the category instance specified by the @'System.Diagnostics.PerformanceCounter' object @'System.Diagnostics.PerformanceCounter.InstanceName' property.
  syntax:
    content: public void RemoveInstance()
    content.vb: Public Sub RemoveInstance
  exceptions:
  - type: System.InvalidOperationException
    description: This counter is read-only, so any instance that is associated with the category cannot be removed.-or- The instance is not correctly associated with a performance counter. -or-The @'System.Diagnostics.PerformanceCounter.InstanceLifetime' property is set to @'System.Diagnostics.PerformanceCounterInstanceLifetime.Process'  when using global shared memory.
  - type: System.ComponentModel.Win32Exception
    description: An error occurred when accessing a system API.
  - type: System.PlatformNotSupportedException
    description: The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.
references:
- uid: System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  fullName: System.Diagnostics
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
  type: Class
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.Diagnostics.PerformanceCounterType
  parent: System.Diagnostics
  isExternal: false
  href: System.Diagnostics.PerformanceCounterType.yml
  name: PerformanceCounterType
  fullName: System.Diagnostics.PerformanceCounterType
  type: Enum
- uid: System.Diagnostics.PerformanceCounterInstanceLifetime
  parent: System.Diagnostics
  isExternal: false
  href: System.Diagnostics.PerformanceCounterInstanceLifetime.yml
  name: PerformanceCounterInstanceLifetime
  fullName: System.Diagnostics.PerformanceCounterInstanceLifetime
  type: Enum
- uid: System.Int64
  parent: System
  isExternal: false
  href: System.Int64.yml
  name: Int64
  fullName: System.Int64
  type: Struct
- uid: System.Diagnostics.CounterSample
  parent: System.Diagnostics
  isExternal: false
  href: System.Diagnostics.CounterSample.yml
  name: CounterSample
  fullName: System.Diagnostics.CounterSample
  type: Struct
- uid: System.Single
  parent: System
  isExternal: false
  href: System.Single.yml
  name: Single
  fullName: System.Single
  type: Struct
- uid: System.PlatformNotSupportedException
  isExternal: false
  href: System.PlatformNotSupportedException.yml
  name: PlatformNotSupportedException
  fullName: System.PlatformNotSupportedException
  type: Class
  summary: The exception that is thrown when a feature does not run on a particular platform.
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  href: System.InvalidOperationException.yml
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  type: Class
  summary: The exception that is thrown when a method call is invalid for the object's current state.
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  type: Class
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.ComponentModel.Win32Exception
  isExternal: false
  href: System.ComponentModel.Win32Exception.yml
  name: Win32Exception
  fullName: System.ComponentModel.Win32Exception
  type: Class
  summary: Throws an exception for a Win32 error code.
- uid: System.UnauthorizedAccessException
  parent: System
  isExternal: false
  href: System.UnauthorizedAccessException.yml
  name: UnauthorizedAccessException
  fullName: System.UnauthorizedAccessException
  type: Class
  summary: The exception that is thrown when the operating system denies access because of an I/O error or a specific type of security error.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  type: Class
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  type: Class
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
