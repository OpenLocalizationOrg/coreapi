items:
- uid: System.Net.NetworkInformation.IPAddressInformation
  id: IPAddressInformation
  parent: System.Net.NetworkInformation
  children:
  - System.Net.NetworkInformation.IPAddressInformation.#ctor
  - System.Net.NetworkInformation.IPAddressInformation.Address
  - System.Net.NetworkInformation.IPAddressInformation.IsDnsEligible
  - System.Net.NetworkInformation.IPAddressInformation.IsTransient
  href: System.Net.NetworkInformation.IPAddressInformation.yml
  name: IPAddressInformation
  fullName: System.Net.NetworkInformation.IPAddressInformation
  type: Class
  source:
    remote: &o0
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformation.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformation.cs
    startLine: 8
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Provides information about a network interface address.
  syntax:
    content: public abstract class IPAddressInformation
    content.vb: Public MustInherit Class IPAddressInformation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Net.NetworkInformation.IPAddressInformation.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.IPAddressInformation
  href: System.Net.NetworkInformation.IPAddressInformation.yml
  name: IPAddressInformation()
  fullName: System.Net.NetworkInformation.IPAddressInformation.IPAddressInformation()
  type: Constructor
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 104
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Initializes a new instance of the @'System.Net.NetworkInformation.IPAddressInformation' class.
  syntax:
    content: protected IPAddressInformation()
    content.vb: Protected Sub New
- uid: System.Net.NetworkInformation.IPAddressInformation.Address
  id: Address
  parent: System.Net.NetworkInformation.IPAddressInformation
  href: System.Net.NetworkInformation.IPAddressInformation.yml
  name: Address
  fullName: System.Net.NetworkInformation.IPAddressInformation.Address
  type: Property
  source:
    remote: *o0
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformation.cs
    startLine: 13
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Gets the Internet Protocol (IP) address.
  syntax:
    content: public abstract IPAddress Address { get; }
    content.vb: Public MustOverride ReadOnly Property Address As IPAddress
    parameters: []
    return:
      type: System.Net.IPAddress
      description: An @'System.Net.IPAddress' instance that contains the IP address of an interface.
- uid: System.Net.NetworkInformation.IPAddressInformation.IsDnsEligible
  id: IsDnsEligible
  parent: System.Net.NetworkInformation.IPAddressInformation
  href: System.Net.NetworkInformation.IPAddressInformation.yml
  name: IsDnsEligible
  fullName: System.Net.NetworkInformation.IPAddressInformation.IsDnsEligible
  type: Property
  source:
    remote: *o0
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformation.cs
    startLine: 18
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Gets a @'System.Boolean' value that indicates whether the Internet Protocol (IP) address is valid to appear in a Domain Name System (DNS) server database.
  syntax:
    content: public abstract bool IsDnsEligible { get; }
    content.vb: Public MustOverride ReadOnly Property IsDnsEligible As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the address can appear in a DNS database; otherwise, false.
- uid: System.Net.NetworkInformation.IPAddressInformation.IsTransient
  id: IsTransient
  parent: System.Net.NetworkInformation.IPAddressInformation
  href: System.Net.NetworkInformation.IPAddressInformation.yml
  name: IsTransient
  fullName: System.Net.NetworkInformation.IPAddressInformation.IsTransient
  type: Property
  source:
    remote: *o0
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformation.cs
    startLine: 23
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Gets a @'System.Boolean' value that indicates whether the Internet Protocol (IP) address is transient (a cluster address).
  syntax:
    content: public abstract bool IsTransient { get; }
    content.vb: Public MustOverride ReadOnly Property IsTransient As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the address is transient; otherwise, false.
references:
- uid: System.Net.NetworkInformation
  isExternal: false
  name: System.Net.NetworkInformation
  fullName: System.Net.NetworkInformation
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: false
  href: System.Net.IPAddress.yml
  name: IPAddress
  fullName: System.Net.IPAddress
  type: Class
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
  type: Namespace
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
