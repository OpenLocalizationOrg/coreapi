items:
- uid: System.Activator
  id: Activator
  parent: System
  children:
  - System.Activator.CreateInstance(System.Type)
  - System.Activator.CreateInstance(System.Type,System.Object[])
  - System.Activator.CreateInstance``1
  href: System.Activator.yml
  name: Activator
  fullName: System.Activator
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Activator.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Activator.cs
    startLine: 34
  assemblies:
  - System.Runtime
  namespace: System
  summary: Contains methods to create types of objects locally or remotely, or obtain references to existing remote objects. This class cannot be inherited.
  syntax:
    content: public class Activator
    content.vb: Public Class Activator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: System.Activator.CreateInstance(System.Type)
  id: CreateInstance(System.Type)
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstance(Type)
  fullName: System.Activator.CreateInstance(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 130
  assemblies:
  - System.Runtime
  namespace: System
  summary: Creates an instance of the specified type using that type's default constructor.
  syntax:
    content: public static object CreateInstance(Type type)
    content.vb: Public Shared Function CreateInstance(type As Type) As Object
    parameters:
    - id: type
      type: System.Type
      description: The type of object to create.
    return:
      type: System.Object
      description: A reference to the newly created object.
  exceptions:
  - type: System.ArgumentNullException
    description: '*type* is null.'
  - type: System.ArgumentException
    description: '*type* is not a RuntimeType. -or-*type* is an open generic type (that is, the @''System.Type.ContainsGenericParameters'' property returns true).'
  - type: System.NotSupportedException
    description: '*type* cannot be a @''System.Reflection.Emit.TypeBuilder''.-or- Creation of @''System.TypedReference'', @''System.ArgIterator'', @''System.Void'', and @''System.RuntimeArgumentHandle'' types, or arrays of those types, is not supported.-or-The assembly that contains *type* is a dynamic assembly that was created with @''System.Reflection.Emit.AssemblyBuilderAccess.Save''.'
  - type: System.Reflection.TargetInvocationException
    description: The constructor being called throws an exception.
  - type: System.MethodAccessException
    description: In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, @'System.MemberAccessException', instead.The caller does not have permission to call this constructor.
  - type: System.MemberAccessException
    description: Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.
  - type: System.Runtime.InteropServices.InvalidComObjectException
    description: The COM type was not obtained through  or .
  - type: System.MissingMethodException
    description: In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, @'System.MissingMemberException', instead.No matching public constructor was found.
  - type: System.Runtime.InteropServices.COMException
    description: '*type* is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.'
  - type: System.TypeLoadException
    description: '*type* is not a valid type.'
- uid: System.Activator.CreateInstance(System.Type,System.Object[])
  id: CreateInstance(System.Type,System.Object[])
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstance(Type, Object[])
  name.vb: CreateInstance(Type, Object())
  fullName: System.Activator.CreateInstance(System.Type, System.Object[])
  fullName.vb: System.Activator.CreateInstance(System.Type, System.Object())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 108
  assemblies:
  - System.Runtime
  namespace: System
  summary: Creates an instance of the specified type using the constructor that best matches the specified parameters.
  syntax:
    content: public static object CreateInstance(Type type, params object[] args)
    content.vb: Public Shared Function CreateInstance(type As Type, ParamArray args As Object()) As Object
    parameters:
    - id: type
      type: System.Type
      description: The type of object to create.
    - id: args
      type: System.Object[]
      description: An array of arguments that match in number, order, and type the parameters of the constructor to invoke. If *args* is an empty array or null, the constructor that takes no parameters (the default constructor) is invoked.
    return:
      type: System.Object
      description: A reference to the newly created object.
  exceptions:
  - type: System.ArgumentNullException
    description: '*type* is null.'
  - type: System.ArgumentException
    description: '*type* is not a RuntimeType. -or-*type* is an open generic type (that is, the @''System.Type.ContainsGenericParameters'' property returns true).'
  - type: System.NotSupportedException
    description: '*type* cannot be a @''System.Reflection.Emit.TypeBuilder''.-or- Creation of @''System.TypedReference'', @''System.ArgIterator'', @''System.Void'', and @''System.RuntimeArgumentHandle'' types, or arrays of those types, is not supported. -or-The assembly that contains *type* is a dynamic assembly that was created with @''System.Reflection.Emit.AssemblyBuilderAccess.Save''.-or-The constructor that best matches *args* has varargs arguments.'
  - type: System.Reflection.TargetInvocationException
    description: The constructor being called throws an exception.
  - type: System.MethodAccessException
    description: In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, @'System.MemberAccessException', instead.The caller does not have permission to call this constructor.
  - type: System.MemberAccessException
    description: Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.
  - type: System.Runtime.InteropServices.InvalidComObjectException
    description: The COM type was not obtained through  or .
  - type: System.MissingMethodException
    description: In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, @'System.MissingMemberException', instead.No matching public constructor was found.
  - type: System.Runtime.InteropServices.COMException
    description: '*type* is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.'
  - type: System.TypeLoadException
    description: '*type* is not a valid type.'
- uid: System.Activator.CreateInstance``1
  id: CreateInstance``1
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstance<T>()
  name.vb: CreateInstance(Of T)()
  fullName: System.Activator.CreateInstance<T>()
  fullName.vb: System.Activator.CreateInstance(Of T)()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 194
  assemblies:
  - System.Runtime
  namespace: System
  summary: Creates an instance of the type designated by the specified generic type parameter, using the parameterless constructor.
  syntax:
    content: public static T CreateInstance<T>()
    content.vb: Public Shared Function CreateInstance(Of T) As T
    typeParameters:
    - id: T
    return:
      type: '{T}'
      description: A reference to the newly created object.
  exceptions:
  - type: System.MissingMethodException
    description: In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, @'System.MissingMemberException', instead.The type that is specified for *T* does not have a parameterless constructor.
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type
  parent: System
  isExternal: false
  href: System.Type.yml
  name: Type
  fullName: System.Type
- uid: System.Object[]
  isExternal: false
  href: System.Object.yml
  name: Object[]
  name.vb: Object()
  fullName: System.Object[]
  fullName.vb: System.Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ()
    fullName: ()
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  href: System.NotSupportedException.yml
  name: NotSupportedException
  fullName: System.NotSupportedException
  summary: The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.
- uid: System.Reflection.TargetInvocationException
  isExternal: false
  href: System.Reflection.TargetInvocationException.yml
  name: TargetInvocationException
  fullName: System.Reflection.TargetInvocationException
  summary: The exception that is thrown by methods invoked through reflection. This class cannot be inherited.
- uid: System.MethodAccessException
  isExternal: false
  href: System.MethodAccessException.yml
  name: MethodAccessException
  fullName: System.MethodAccessException
  summary: The exception that is thrown when there is an invalid attempt to access a method, such as accessing a private method from partially trusted code.
- uid: System.MemberAccessException
  parent: System
  isExternal: false
  href: System.MemberAccessException.yml
  name: MemberAccessException
  fullName: System.MemberAccessException
  summary: The exception that is thrown when an attempt to access a class member fails.
- uid: System.Runtime.InteropServices.InvalidComObjectException
  isExternal: false
  href: System.Runtime.InteropServices.InvalidComObjectException.yml
  name: InvalidComObjectException
  fullName: System.Runtime.InteropServices.InvalidComObjectException
  summary: The exception thrown when an invalid COM object is used.
- uid: System.MissingMethodException
  isExternal: false
  href: System.MissingMethodException.yml
  name: MissingMethodException
  fullName: System.MissingMethodException
  summary: The exception that is thrown when there is an attempt to dynamically access a method that does not exist.
- uid: System.Runtime.InteropServices.COMException
  isExternal: false
  href: System.Runtime.InteropServices.COMException.yml
  name: COMException
  fullName: System.Runtime.InteropServices.COMException
  summary: The exception that is thrown when an unrecognized HRESULT is returned from a COM method call.
- uid: System.TypeLoadException
  parent: System
  isExternal: false
  href: System.TypeLoadException.yml
  name: TypeLoadException
  fullName: System.TypeLoadException
  summary: The exception that is thrown when type-loading failures occur.
