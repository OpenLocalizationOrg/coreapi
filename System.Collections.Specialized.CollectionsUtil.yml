items:
- uid: System.Collections.Specialized.CollectionsUtil
  id: CollectionsUtil
  parent: System.Collections.Specialized
  children:
  - System.Collections.Specialized.CollectionsUtil.#ctor
  - System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable
  - System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)
  - System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)
  - System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList
  href: System.Collections.Specialized.CollectionsUtil.yml
  name: CollectionsUtil
  fullName: System.Collections.Specialized.CollectionsUtil
  type: Class
  source:
    remote: &o0
      path: src/System.Collections.NonGeneric/src/System/Collections/Specialized/CollectionsUtil.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Collections.NonGeneric/src/System/Collections/Specialized/CollectionsUtil.cs
    startLine: 15
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections.Specialized
  summary: Creates collections that ignore the case in strings.
  syntax:
    content: public class CollectionsUtil
    content.vb: Public Class CollectionsUtil
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Collections.Specialized.CollectionsUtil.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.CollectionsUtil
  href: System.Collections.Specialized.CollectionsUtil.yml
  name: CollectionsUtil()
  fullName: System.Collections.Specialized.CollectionsUtil.CollectionsUtil()
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 270
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections.Specialized
  summary: Initializes a new instance of the @'System.Collections.Specialized.CollectionsUtil' class.
  syntax:
    content: public CollectionsUtil()
    content.vb: Public Sub New
- uid: System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable
  id: CreateCaseInsensitiveHashtable
  parent: System.Collections.Specialized.CollectionsUtil
  href: System.Collections.Specialized.CollectionsUtil.yml
  name: CreateCaseInsensitiveHashtable()
  fullName: System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Specialized/CollectionsUtil.cs
    startLine: 17
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections.Specialized
  summary: Creates a new case-insensitive instance of the @'System.Collections.Hashtable' class with the default initial capacity.
  syntax:
    content: public static Hashtable CreateCaseInsensitiveHashtable()
    content.vb: Public Shared Function CreateCaseInsensitiveHashtable As Hashtable
    return:
      type: System.Collections.Hashtable
      description: A new case-insensitive instance of the @'System.Collections.Hashtable' class with the default initial capacity.
- uid: System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)
  id: CreateCaseInsensitiveHashtable(System.Collections.IDictionary)
  parent: System.Collections.Specialized.CollectionsUtil
  href: System.Collections.Specialized.CollectionsUtil.yml
  name: CreateCaseInsensitiveHashtable(IDictionary)
  fullName: System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Specialized/CollectionsUtil.cs
    startLine: 27
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections.Specialized
  summary: Copies the entries from the specified dictionary to a new case-insensitive instance of the @'System.Collections.Hashtable' class with the same initial capacity as the number of entries copied.
  syntax:
    content: public static Hashtable CreateCaseInsensitiveHashtable(IDictionary d)
    content.vb: Public Shared Function CreateCaseInsensitiveHashtable(d As IDictionary) As Hashtable
    parameters:
    - id: d
      type: System.Collections.IDictionary
      description: The @'System.Collections.IDictionary' to copy to a new case-insensitive @'System.Collections.Hashtable'.
    return:
      type: System.Collections.Hashtable
      description: A new case-insensitive instance of the @'System.Collections.Hashtable' class containing the entries from the specified @'System.Collections.IDictionary'.
  exceptions:
  - type: System.ArgumentNullException
    description: '*d* is null.'
- uid: System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)
  id: CreateCaseInsensitiveHashtable(System.Int32)
  parent: System.Collections.Specialized.CollectionsUtil
  href: System.Collections.Specialized.CollectionsUtil.yml
  name: CreateCaseInsensitiveHashtable(Int32)
  fullName: System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Specialized/CollectionsUtil.cs
    startLine: 22
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections.Specialized
  summary: Creates a new case-insensitive instance of the @'System.Collections.Hashtable' class with the specified initial capacity.
  syntax:
    content: public static Hashtable CreateCaseInsensitiveHashtable(int capacity)
    content.vb: Public Shared Function CreateCaseInsensitiveHashtable(capacity As Integer) As Hashtable
    parameters:
    - id: capacity
      type: System.Int32
      description: The approximate number of entries that the @'System.Collections.Hashtable' can initially contain.
    return:
      type: System.Collections.Hashtable
      description: A new case-insensitive instance of the @'System.Collections.Hashtable' class with the specified initial capacity.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*capacity* is less than zero.'
- uid: System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList
  id: CreateCaseInsensitiveSortedList
  parent: System.Collections.Specialized.CollectionsUtil
  href: System.Collections.Specialized.CollectionsUtil.yml
  name: CreateCaseInsensitiveSortedList()
  fullName: System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Specialized/CollectionsUtil.cs
    startLine: 32
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections.Specialized
  summary: Creates a new instance of the @'System.Collections.SortedList' class that ignores the case of strings.
  syntax:
    content: public static SortedList CreateCaseInsensitiveSortedList()
    content.vb: Public Shared Function CreateCaseInsensitiveSortedList As SortedList
    return:
      type: System.Collections.SortedList
      description: A new instance of the @'System.Collections.SortedList' class that ignores the case of strings.
references:
- uid: System.Collections.Specialized
  isExternal: false
  name: System.Collections.Specialized
  fullName: System.Collections.Specialized
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  href: System.Collections.Hashtable.yml
  name: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  href: System.Collections.IDictionary.yml
  name: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.Collections.SortedList
  parent: System.Collections
  isExternal: false
  href: System.Collections.SortedList.yml
  name: SortedList
  fullName: System.Collections.SortedList
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
