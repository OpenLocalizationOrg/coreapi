items:
- uid: System.Xml.Linq.XDeclaration
  commentId: T:System.Xml.Linq.XDeclaration
  id: XDeclaration
  parent: System.Xml.Linq
  children:
  - System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)
  - System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)
  - System.Xml.Linq.XDeclaration.Encoding
  - System.Xml.Linq.XDeclaration.Standalone
  - System.Xml.Linq.XDeclaration.ToString
  - System.Xml.Linq.XDeclaration.Version
  langs:
  - csharp
  - vb
  name: XDeclaration
  fullName: System.Xml.Linq.XDeclaration
  type: Class
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XDeclaration
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 153
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Represents an XML declaration.</p>\n"
  remarks: "\n<p>An XML declaration is used to declare the XML version, the encoding, and whether or not the XML document is standalone. This class represents the XML concept of an XML declaration. </p>\n<p>Just as in the XML standard, declarations are associated with a document. When you create a document, you have the option to specify the declaration for the document. The <xref href=\"System.Xml.Linq.XDocument\" data-throw-if-not-resolved=\"false\"></xref> class contains the <xref href=\"System.Xml.Linq.XDocument.Declaration\" data-throw-if-not-resolved=\"false\"></xref> property, which allows you to set or get the declaration. For information about how to serialize an XML tree with an XML declaration, see Serializing with an XML Declaration. </p>\n"
  syntax:
    content: public class XDeclaration
    content.vb: Public Class XDeclaration
  seealso:
  - type: System.Xml.Linq.XDocument.Declaration
    commentId: P:System.Xml.Linq.XDocument.Declaration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)
  commentId: M:System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Xml.Linq.XDeclaration
  langs:
  - csharp
  - vb
  name: XDeclaration(String, String, String)
  fullName: System.Xml.Linq.XDeclaration.XDeclaration(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 155
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Linq.XDeclaration\" data-throw-if-not-resolved=\"false\"></xref> class with the specified version, encoding, and standalone status.</p>\n"
  syntax:
    content: public XDeclaration(string version, string encoding, string standalone)
    content.vb: Public Sub New(version As String, encoding As String, standalone As String)
    parameters:
    - id: version
      type: System.String
      description: "\n<p>The version of the XML, usually \"1.0\".</p>\n"
    - id: encoding
      type: System.String
      description: "\n<p>The encoding for the XML document.</p>\n"
    - id: standalone
      type: System.String
      description: "\n<p>A string containing \"yes\" or \"no\" that specifies whether the XML is standalone or requires external entities to be resolved.</p>\n"
  seealso:
  - type: System.Xml.Linq.XDeclaration.ToString
    commentId: M:System.Xml.Linq.XDeclaration.ToString
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)
  commentId: M:System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)
  id: '#ctor(System.Xml.Linq.XDeclaration)'
  parent: System.Xml.Linq.XDeclaration
  langs:
  - csharp
  - vb
  name: XDeclaration(XDeclaration)
  fullName: System.Xml.Linq.XDeclaration.XDeclaration(System.Xml.Linq.XDeclaration)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 156
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Linq.XDeclaration\" data-throw-if-not-resolved=\"false\"></xref> class from another <xref href=\"System.Xml.Linq.XDeclaration\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
  remarks: "\n<p>This constructor is primarily used internally to make a deep copy of an XML tree.</p>\n"
  syntax:
    content: public XDeclaration(XDeclaration other)
    content.vb: Public Sub New(other As XDeclaration)
    parameters:
    - id: other
      type: System.Xml.Linq.XDeclaration
      description: "\n<p>The <xref href=\"System.Xml.Linq.XDeclaration\" data-throw-if-not-resolved=\"false\"></xref> used to initialize this <xref href=\"System.Xml.Linq.XDeclaration\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  seealso:
  - type: System.Xml.Linq.XDeclaration.ToString
    commentId: M:System.Xml.Linq.XDeclaration.ToString
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XDeclaration.Encoding
  commentId: P:System.Xml.Linq.XDeclaration.Encoding
  id: Encoding
  parent: System.Xml.Linq.XDeclaration
  langs:
  - csharp
  - vb
  name: Encoding
  fullName: System.Xml.Linq.XDeclaration.Encoding
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Encoding
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 157
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets or sets the encoding for this document.</p>\n"
  remarks: "\n<p>Any value returned by <xref href=\"System.Text.Encoding.WebName\" data-throw-if-not-resolved=\"false\"></xref> is a valid value.</p>\n<p>If you read an encoded document, then this property will be set to the code page name.</p>\n<p>If you set this property to a valid code page name, then when serializing, LINQ to XML will serialize with the specified encoding.</p>\n"
  syntax:
    content: public string Encoding { get; set; }
    content.vb: Public Property Encoding As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> containing the code page name for this document.</p>\n"
  seealso:
  - type: System.Xml.Linq.XDeclaration.ToString
    commentId: M:System.Xml.Linq.XDeclaration.ToString
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XDeclaration.Standalone
  commentId: P:System.Xml.Linq.XDeclaration.Standalone
  id: Standalone
  parent: System.Xml.Linq.XDeclaration
  langs:
  - csharp
  - vb
  name: Standalone
  fullName: System.Xml.Linq.XDeclaration.Standalone
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Standalone
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 158
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets or sets the standalone property for this document.</p>\n"
  remarks: "\n<p>The valid values for standalone are \"yes\" or \"no\". These values are not enforced.</p>\n"
  syntax:
    content: public string Standalone { get; set; }
    content.vb: Public Property Standalone As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> containing the standalone property for this document.</p>\n"
  seealso:
  - type: System.Xml.Linq.XDeclaration.Version
    commentId: P:System.Xml.Linq.XDeclaration.Version
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XDeclaration.Version
  commentId: P:System.Xml.Linq.XDeclaration.Version
  id: Version
  parent: System.Xml.Linq.XDeclaration
  langs:
  - csharp
  - vb
  name: Version
  fullName: System.Xml.Linq.XDeclaration.Version
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Version
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 159
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets or sets the version property for this document.</p>\n"
  remarks: "\n<p>The value is usually \"1.0\". This value is not enforced.</p>\n"
  syntax:
    content: public string Version { get; set; }
    content.vb: Public Property Version As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> containing the version property for this document.</p>\n"
  seealso:
  - type: System.Xml.Linq.XDeclaration.Standalone
    commentId: P:System.Xml.Linq.XDeclaration.Standalone
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XDeclaration.ToString
  commentId: M:System.Xml.Linq.XDeclaration.ToString
  id: ToString
  parent: System.Xml.Linq.XDeclaration
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Xml.Linq.XDeclaration.ToString()
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 160
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Provides the declaration as a formatted string.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains the formatted XML string.</p>\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Xml.Linq
  isExternal: false
  name: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Xml.Linq.XDeclaration
  parent: System.Xml.Linq
  isExternal: false
  name: XDeclaration
  fullName: System.Xml.Linq.XDeclaration
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
