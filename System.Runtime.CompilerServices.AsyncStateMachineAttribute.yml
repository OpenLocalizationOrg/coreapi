items:
- uid: System.Runtime.CompilerServices.AsyncStateMachineAttribute
  commentId: T:System.Runtime.CompilerServices.AsyncStateMachineAttribute
  id: AsyncStateMachineAttribute
  parent: System.Runtime.CompilerServices
  children:
  - System.Runtime.CompilerServices.AsyncStateMachineAttribute.#ctor(System.Type)
  langs:
  - csharp
  - vb
  name: AsyncStateMachineAttribute
  fullName: System.Runtime.CompilerServices.AsyncStateMachineAttribute
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncStateMachineAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AsyncStateMachineAttribute
    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncStateMachineAttribute.cs
    startLine: 9
  assemblies:
  - System.Runtime
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>Indicates whether a method is marked with either the Async (Visual Basic) or async (C# Reference) modifier.</p>\n"
  example:
  - "\n<p>As the following example shows, you can determine whether a method is marked with Async (Visual Basic) or async (C# Reference) modifier. In the example, <code>IsAsyncMethod</code> performs the following steps:</p>\n<ul><li>\n<p>Obtains a <xref href=\"System.Reflection.MethodInfo\" data-throw-if-not-resolved=\"false\"></xref> object for the method name by using <xref href=\"System.Type.GetMethod(System.String)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</li><li>\n<p>Obtains a <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object for the attribute by using GetType Operator (Visual Basic) or typeof (C# Reference).</p>\n</li><li>\n<p>Obtains an attribute object for the method and attribute type by using MethodInfo.GetCustomAttribute. If GetCustomAttribute returns <strong>Nothing</strong> (Visual Basic) or <strong>null</strong> (C#), the method doesn't contain the attribute.</p>\n</li></ul>Runtime.CompilerServices.AsyncStateMachineAttribute#1"
  syntax:
    content: >-
      [Serializable]

      [AttributeUsage(AttributeTargets.Method, Inherited = false, AllowMultiple = false)]

      public sealed class AsyncStateMachineAttribute : StateMachineAttribute, _Attribute
    content.vb: >-
      <Serializable>

      <AttributeUsage(AttributeTargets.Method, Inherited:=False, AllowMultiple:=False)>

      Public NotInheritable Class AsyncStateMachineAttribute
          Inherits StateMachineAttribute
          Implements _Attribute
  seealso:
  - type: System.Runtime.CompilerServices.IteratorStateMachineAttribute
    commentId: T:System.Runtime.CompilerServices.IteratorStateMachineAttribute
  - type: System.Runtime.CompilerServices.StateMachineAttribute.StateMachineType
    commentId: P:System.Runtime.CompilerServices.StateMachineAttribute.StateMachineType
  inheritance:
  - System.Object
  - System.Attribute
  - System.Runtime.CompilerServices.StateMachineAttribute
  inheritedMembers:
  - System.Runtime.CompilerServices.StateMachineAttribute.StateMachineType
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetHashCode
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 64
    namedArguments:
    - name: Inherited
      type: System.Boolean
      value: false
    - name: AllowMultiple
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: AsyncStateMachineAttribute
- uid: System.Runtime.CompilerServices.AsyncStateMachineAttribute.#ctor(System.Type)
  commentId: M:System.Runtime.CompilerServices.AsyncStateMachineAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Runtime.CompilerServices.AsyncStateMachineAttribute
  langs:
  - csharp
  - vb
  name: AsyncStateMachineAttribute(Type)
  fullName: System.Runtime.CompilerServices.AsyncStateMachineAttribute.AsyncStateMachineAttribute(System.Type)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncStateMachineAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncStateMachineAttribute.cs
    startLine: 12
  assemblies:
  - System.Runtime
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.CompilerServices.AsyncStateMachineAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public AsyncStateMachineAttribute(Type stateMachineType)
    content.vb: Public Sub New(stateMachineType As Type)
    parameters:
    - id: stateMachineType
      type: System.Type
      description: "\n<p>The type object for the underlying state machine type that's used to implement a state machine method.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: AsyncStateMachineAttribute.AsyncStateMachineAttribute(Type)
references:
- uid: System.Runtime.CompilerServices
  isExternal: false
  name: System.Runtime.CompilerServices
  fullName: System.Runtime.CompilerServices
  nameWithType: System.Runtime.CompilerServices
  commentId: N:System.Runtime.CompilerServices
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Attribute
  parent: System
  isExternal: false
  name: Attribute
  fullName: System.Attribute
  nameWithType: Attribute
  commentId: T:System.Attribute
- uid: System.Runtime.CompilerServices.StateMachineAttribute
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: StateMachineAttribute
  fullName: System.Runtime.CompilerServices.StateMachineAttribute
  nameWithType: StateMachineAttribute
  commentId: T:System.Runtime.CompilerServices.StateMachineAttribute
- uid: System.Runtime.CompilerServices.StateMachineAttribute.StateMachineType
  parent: System.Runtime.CompilerServices.StateMachineAttribute
  isExternal: false
  name: StateMachineType
  fullName: System.Runtime.CompilerServices.StateMachineAttribute.StateMachineType
  nameWithType: StateMachineAttribute.StateMachineType
  commentId: P:System.Runtime.CompilerServices.StateMachineAttribute.StateMachineType
- uid: System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: true
  name: Equals(Object)
  fullName: System.Attribute.Equals(System.Object)
  spec.csharp:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    fullName: System.Attribute.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    fullName: System.Attribute.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Attribute.Equals(Object)
  commentId: M:System.Attribute.Equals(System.Object)
- uid: System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: false
  name: GetHashCode()
  fullName: System.Attribute.GetHashCode()
  spec.csharp:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    fullName: System.Attribute.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    fullName: System.Attribute.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Attribute.GetHashCode()
  commentId: M:System.Attribute.GetHashCode
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
  nameWithType: Type
  commentId: T:System.Type
