items:
- uid: System.Threading.Thread
  id: Thread
  parent: System.Threading
  children:
  - System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart)
  - System.Threading.Thread.#ctor(System.Threading.ThreadStart)
  - System.Threading.Thread.CurrentThread
  - System.Threading.Thread.IsAlive
  - System.Threading.Thread.IsBackground
  - System.Threading.Thread.Join
  - System.Threading.Thread.Join(System.Int32)
  - System.Threading.Thread.ManagedThreadId
  - System.Threading.Thread.Name
  - System.Threading.Thread.Sleep(System.Int32)
  - System.Threading.Thread.Sleep(System.TimeSpan)
  - System.Threading.Thread.Start
  - System.Threading.Thread.Start(System.Object)
  - System.Threading.Thread.ThreadState
  href: System.Threading.Thread.yml
  name: Thread
  fullName: System.Threading.Thread
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Threading/Thread.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Threading/Thread.cs
    startLine: 120
  assemblies:
  - System.Threading.Thread
  namespace: System.Threading
  summary: Creates and controls a thread, sets its priority, and gets its status. To browse the .NET Framework source code for this type, see the Reference Source.
  syntax:
    content: public sealed class Thread
    content.vb: Public NotInheritable Class Thread
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart)
  id: '#ctor(System.Threading.ParameterizedThreadStart)'
  parent: System.Threading.Thread
  href: System.Threading.Thread.yml
  name: Thread(ParameterizedThreadStart)
  fullName: System.Threading.Thread.Thread(System.Threading.ParameterizedThreadStart)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Thread.cs
    startLine: 243
  assemblies:
  - System.Threading.Thread
  namespace: System.Threading
  summary: Initializes a new instance of the @'System.Threading.Thread' class, specifying a delegate that allows an object to be passed to the thread when the thread is started.
  syntax:
    content: public Thread(ParameterizedThreadStart start)
    content.vb: Public Sub New(start As ParameterizedThreadStart)
    parameters:
    - id: start
      type: System.Threading.ParameterizedThreadStart
      description: A delegate that represents the methods to be invoked when this thread begins executing.
  exceptions:
  - type: System.ArgumentNullException
    description: '*start* is null.'
- uid: System.Threading.Thread.#ctor(System.Threading.ThreadStart)
  id: '#ctor(System.Threading.ThreadStart)'
  parent: System.Threading.Thread
  href: System.Threading.Thread.yml
  name: Thread(ThreadStart)
  fullName: System.Threading.Thread.Thread(System.Threading.ThreadStart)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Thread.cs
    startLine: 224
  assemblies:
  - System.Threading.Thread
  namespace: System.Threading
  summary: Initializes a new instance of the @'System.Threading.Thread' class.
  syntax:
    content: public Thread(ThreadStart start)
    content.vb: Public Sub New(start As ThreadStart)
    parameters:
    - id: start
      type: System.Threading.ThreadStart
      description: A @'System.Threading.ThreadStart' delegate that represents the methods to be invoked when this thread begins executing.
  exceptions:
  - type: System.ArgumentNullException
    description: The *start* parameter is null.
- uid: System.Threading.Thread.CurrentThread
  id: CurrentThread
  parent: System.Threading.Thread
  href: System.Threading.Thread.yml
  name: CurrentThread
  fullName: System.Threading.Thread.CurrentThread
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Thread.cs
    startLine: 752
  assemblies:
  - System.Threading.Thread
  namespace: System.Threading
  summary: Gets the currently running thread.
  syntax:
    content: public static Thread CurrentThread { get; }
    content.vb: Public Shared ReadOnly Property CurrentThread As Thread
    parameters: []
    return:
      type: System.Threading.Thread
      description: A @'System.Threading.Thread' that is the representation of the currently running thread.
- uid: System.Threading.Thread.IsAlive
  id: IsAlive
  parent: System.Threading.Thread
  href: System.Threading.Thread.yml
  name: IsAlive
  fullName: System.Threading.Thread.IsAlive
  type: Property
  source:
    path: mscorlib
    isExternal: true
  assemblies:
  - System.Threading.Thread
  namespace: System.Threading
  summary: Gets a value indicating the execution status of the current thread.
  syntax:
    content: public bool IsAlive { get; }
    content.vb: Public ReadOnly Property IsAlive As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if this thread has been started and has not terminated normally or aborted; otherwise, false.
- uid: System.Threading.Thread.IsBackground
  id: IsBackground
  parent: System.Threading.Thread
  href: System.Threading.Thread.yml
  name: IsBackground
  fullName: System.Threading.Thread.IsBackground
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Thread.cs
    startLine: 840
  assemblies:
  - System.Threading.Thread
  namespace: System.Threading
  summary: Gets or sets a value indicating whether or not a thread is a background thread.
  syntax:
    content: public bool IsBackground { get; set; }
    content.vb: Public Property IsBackground As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if this thread is or is to become a background thread; otherwise, false.
  exceptions:
  - type: System.Threading.ThreadStateException
    description: The thread is dead.
- uid: System.Threading.Thread.ManagedThreadId
  id: ManagedThreadId
  parent: System.Threading.Thread
  href: System.Threading.Thread.yml
  name: ManagedThreadId
  fullName: System.Threading.Thread.ManagedThreadId
  type: Property
  source:
    path: mscorlib
    isExternal: true
  assemblies:
  - System.Threading.Thread
  namespace: System.Threading
  summary: Gets a unique identifier for the current managed thread.
  syntax:
    content: public int ManagedThreadId { get; }
    content.vb: Public ReadOnly Property ManagedThreadId As Integer
    parameters: []
    return:
      type: System.Int32
      description: An integer that represents a unique identifier for this managed thread.
- uid: System.Threading.Thread.Name
  id: Name
  parent: System.Threading.Thread
  href: System.Threading.Thread.yml
  name: Name
  fullName: System.Threading.Thread.Name
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Thread.cs
    startLine: 1411
  assemblies:
  - System.Threading.Thread
  namespace: System.Threading
  summary: Gets or sets the name of the thread.
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
      description: A string containing the name of the thread, or null if no name was set.
  exceptions:
  - type: System.InvalidOperationException
    description: A set operation was requested, but the Name property has already been set.
- uid: System.Threading.Thread.ThreadState
  id: ThreadState
  parent: System.Threading.Thread
  href: System.Threading.Thread.yml
  name: ThreadState
  fullName: System.Threading.Thread.ThreadState
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Thread.cs
    startLine: 859
  assemblies:
  - System.Threading.Thread
  namespace: System.Threading
  summary: Gets a value containing the states of the current thread.
  syntax:
    content: public ThreadState ThreadState { get; }
    content.vb: Public ReadOnly Property ThreadState As ThreadState
    parameters: []
    return:
      type: System.Threading.ThreadState
      description: One of the @'System.Threading.ThreadState' values indicating the state of the current thread. The initial value is Unstarted.
- uid: System.Threading.Thread.Join
  id: Join
  parent: System.Threading.Thread
  href: System.Threading.Thread.yml
  name: Join()
  fullName: System.Threading.Thread.Join()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Thread.cs
    startLine: 665
  assemblies:
  - System.Threading.Thread
  namespace: System.Threading
  summary: Blocks the calling thread until a thread terminates, while continuing to perform standard COM and SendMessage pumping.
  syntax:
    content: public void Join()
    content.vb: Public Sub Join
  exceptions:
  - type: System.Threading.ThreadStateException
    description: The caller attempted to join a thread that is in the @'System.Threading.ThreadState.Unstarted' state.
  - type: System.Threading.ThreadInterruptedException
    description: The thread is interrupted while waiting.
- uid: System.Threading.Thread.Join(System.Int32)
  id: Join(System.Int32)
  parent: System.Threading.Thread
  href: System.Threading.Thread.yml
  name: Join(Int32)
  fullName: System.Threading.Thread.Join(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Thread.cs
    startLine: 672
  assemblies:
  - System.Threading.Thread
  namespace: System.Threading
  summary: Blocks the calling thread until a thread terminates or the specified time elapses, while continuing to perform standard COM and SendMessage pumping.
  syntax:
    content: public bool Join(int millisecondsTimeout)
    content.vb: Public Function Join(millisecondsTimeout As Integer) As Boolean
    parameters:
    - id: millisecondsTimeout
      type: System.Int32
      description: The number of milliseconds to wait for the thread to terminate.
    return:
      type: System.Boolean
      description: true if the thread has terminated; false if the thread has not terminated after the amount of time specified by the *millisecondsTimeout* parameter has elapsed.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The value of *millisecondsTimeout* is negative and is not equal to @'System.Threading.Timeout.Infinite' in milliseconds.
  - type: System.Threading.ThreadStateException
    description: The thread has not been started.
- uid: System.Threading.Thread.Sleep(System.Int32)
  id: Sleep(System.Int32)
  parent: System.Threading.Thread
  href: System.Threading.Thread.yml
  name: Sleep(Int32)
  fullName: System.Threading.Thread.Sleep(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Thread.cs
    startLine: 701
  assemblies:
  - System.Threading.Thread
  namespace: System.Threading
  summary: Suspends the current thread for the specified number of milliseconds.
  syntax:
    content: public static void Sleep(int millisecondsTimeout)
    content.vb: Public Shared Sub Sleep(millisecondsTimeout As Integer)
    parameters:
    - id: millisecondsTimeout
      type: System.Int32
      description: The number of milliseconds for which the thread is suspended. If the value of the *millisecondsTimeout* argument is zero, the thread relinquishes the remainder of its time slice to any thread of equal priority that is ready to run. If there are no other threads of equal priority that are ready to run, execution of the current thread is not suspended.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The time-out value is negative and is not equal to @'System.Threading.Timeout.Infinite'.
- uid: System.Threading.Thread.Sleep(System.TimeSpan)
  id: Sleep(System.TimeSpan)
  parent: System.Threading.Thread
  href: System.Threading.Thread.yml
  name: Sleep(TimeSpan)
  fullName: System.Threading.Thread.Sleep(System.TimeSpan)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Thread.cs
    startLine: 710
  assemblies:
  - System.Threading.Thread
  namespace: System.Threading
  summary: Suspends the current thread for the specified amount of time.
  syntax:
    content: public static void Sleep(TimeSpan timeout)
    content.vb: Public Shared Sub Sleep(timeout As TimeSpan)
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The amount of time for which the thread is suspended. If the value of the *millisecondsTimeout* argument is @'System.TimeSpan.Zero', the thread relinquishes the remainder of its time slice to any thread of equal priority that is ready to run. If there are no other threads of equal priority that are ready to run, execution of the current thread is not suspended.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The value of *timeout* is negative and is not equal to @'System.Threading.Timeout.Infinite' in milliseconds, or is greater than @'System.Int32.MaxValue' milliseconds.
- uid: System.Threading.Thread.Start
  id: Start
  parent: System.Threading.Thread
  href: System.Threading.Thread.yml
  name: Start()
  fullName: System.Threading.Thread.Start()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Thread.cs
    startLine: 299
  assemblies:
  - System.Threading.Thread
  namespace: System.Threading
  summary: Causes the operating system to change the state of the current instance to @'System.Threading.ThreadState.Running'.
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  exceptions:
  - type: System.Threading.ThreadStateException
    description: The thread has already been started.
  - type: System.OutOfMemoryException
    description: There is not enough memory available to start this thread.
- uid: System.Threading.Thread.Start(System.Object)
  id: Start(System.Object)
  parent: System.Threading.Thread
  href: System.Threading.Thread.yml
  name: Start(Object)
  fullName: System.Threading.Thread.Start(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Thread.cs
    startLine: 307
  assemblies:
  - System.Threading.Thread
  namespace: System.Threading
  summary: Causes the operating system to change the state of the current instance to @'System.Threading.ThreadState.Running', and optionally supplies an object containing data to be used by the method the thread executes.
  syntax:
    content: public void Start(object parameter)
    content.vb: Public Sub Start(parameter As Object)
    parameters:
    - id: parameter
      type: System.Object
      description: An object that contains data to be used by the method the thread executes.
  exceptions:
  - type: System.Threading.ThreadStateException
    description: The thread has already been started.
  - type: System.OutOfMemoryException
    description: There is not enough memory available to start this thread.
  - type: System.InvalidOperationException
    description: This thread was created using a @'System.Threading.ThreadStart' delegate instead of a @'System.Threading.ParameterizedThreadStart' delegate.
references:
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Threading.ParameterizedThreadStart
  parent: System.Threading
  isExternal: false
  href: System.Threading.ParameterizedThreadStart.yml
  name: ParameterizedThreadStart
  fullName: System.Threading.ParameterizedThreadStart
  type: Delegate
- uid: System.Threading.ThreadStart
  parent: System.Threading
  isExternal: false
  href: System.Threading.ThreadStart.yml
  name: ThreadStart
  fullName: System.Threading.ThreadStart
  type: Delegate
- uid: System.Threading.Thread
  parent: System.Threading
  isExternal: false
  href: System.Threading.Thread.yml
  name: Thread
  fullName: System.Threading.Thread
  type: Class
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
  type: Class
- uid: System.Threading.ThreadState
  parent: System.Threading
  isExternal: false
  href: System.Threading.ThreadState.yml
  name: ThreadState
  fullName: System.Threading.ThreadState
  type: Enum
- uid: System.TimeSpan
  parent: System
  isExternal: false
  href: System.TimeSpan.yml
  name: TimeSpan
  fullName: System.TimeSpan
  type: Struct
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  type: Class
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.Threading.ThreadStateException
  isExternal: false
  href: System.Threading.ThreadStateException.yml
  name: ThreadStateException
  fullName: System.Threading.ThreadStateException
  type: Class
  summary: The exception that is thrown when a @'System.Threading.Thread' is in an invalid @'System.Threading.Thread.ThreadState' for the method call.
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  href: System.InvalidOperationException.yml
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  type: Class
  summary: The exception that is thrown when a method call is invalid for the object's current state.
- uid: System.Threading.ThreadInterruptedException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  type: Class
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
- uid: System.OutOfMemoryException
  isExternal: false
  href: System.OutOfMemoryException.yml
  name: OutOfMemoryException
  fullName: System.OutOfMemoryException
  type: Class
  summary: The exception that is thrown when there is not enough memory to continue the execution of a program.
