items:
- uid: System.ComponentModel.DataAnnotations.StringLengthAttribute
  commentId: T:System.ComponentModel.DataAnnotations.StringLengthAttribute
  id: StringLengthAttribute
  parent: System.ComponentModel.DataAnnotations
  children:
  - System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
  - System.ComponentModel.DataAnnotations.StringLengthAttribute.FormatErrorMessage(System.String)
  - System.ComponentModel.DataAnnotations.StringLengthAttribute.IsValid(System.Object)
  - System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength
  - System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength
  langs:
  - csharp
  - vb
  name: StringLengthAttribute
  fullName: System.ComponentModel.DataAnnotations.StringLengthAttribute
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/StringLengthAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: StringLengthAttribute
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/StringLengthAttribute.cs
    startLine: 11
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Specifies the minimum and maximum length of characters that are allowed in a data field.</p>\n"
  remarks: "\n<p>ASP.NET Dynamic Data enables CRUD (Create, Read, Update and Delete) operations in a data model. You can specify the minimum and maximum length of characters for each field when data is being inserted or updated. For character data types, the <xref href=\"System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength\" data-throw-if-not-resolved=\"false\"></xref> properties identify the largest number of bytes that are required in order to store a string. </p>\n"
  example:
  - "\n<p>The following example shows how to limit the number of characters in a field. This example works with the ThumbnailPhotoFileName field in the Products table in the AdventureWorksLT database. The field is limited 4 characters by applying the <xref href=\"System.ComponentModel.DataAnnotations.StringLengthAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute to the partial class that represents the Product entity. </p>System.ComponentModel.DataAnnotations.StringLengthAttribute#1<pre><code class=\"vb#\"><MetadataType(GetType(ProductMetadata))> _ \nPublic Partial Class Product \n\nEnd Class \n\nPublic Class ProductMetadata \n\n<ScaffoldColumn(True)> _ \n<StringLength(4, ErrorMessage := \"The ThumbnailPhotoFileName value cannot exceed 4 characters. \")> _ \nPublic ThumbnailPhotoFileName As Object \n\nEnd Class</code></pre><pre><code class=\"c#\">[MetadataType(typeof(ProductMetadata))]\npublic partial class Product\n{\n\n}\n\npublic class ProductMetadata\n{\n\n    [ScaffoldColumn(true)]\n    [StringLength(4, ErrorMessage = \"The ThumbnailPhotoFileName value cannot exceed 4 characters. \")]\n    public object ThumbnailPhotoFileName;\n\n}</code></pre>"
  syntax:
    content: 'public class StringLengthAttribute : ValidationAttribute'
    content.vb: >-
      Public Class StringLengthAttribute
          Inherits ValidationAttribute
  inheritance:
  - System.Object
  - System.ComponentModel.DataAnnotations.ValidationAttribute
  inheritedMembers:
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString
  - System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext
  - System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  - System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  - System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  - System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
  commentId: M:System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.ComponentModel.DataAnnotations.StringLengthAttribute
  langs:
  - csharp
  - vb
  name: StringLengthAttribute(Int32)
  fullName: System.ComponentModel.DataAnnotations.StringLengthAttribute.StringLengthAttribute(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/StringLengthAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/StringLengthAttribute.cs
    startLine: 19
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.StringLengthAttribute\" data-throw-if-not-resolved=\"false\"></xref> class by using a specified maximum length.</p>\n"
  example:
  - 
  syntax:
    content: public StringLengthAttribute(int maximumLength)
    content.vb: Public Sub New(maximumLength As Integer)
    parameters:
    - id: maximumLength
      type: System.Int32
      description: "\n<p>The maximum length of a string. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength
  commentId: P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength
  id: MaximumLength
  parent: System.ComponentModel.DataAnnotations.StringLengthAttribute
  langs:
  - csharp
  - vb
  name: MaximumLength
  fullName: System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/StringLengthAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaximumLength
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/StringLengthAttribute.cs
    startLine: 28
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets or sets the maximum length of a string.</p>\n"
  example:
  - 
  syntax:
    content: public int MaximumLength { get; }
    content.vb: Public ReadOnly Property MaximumLength As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The maximum length a string. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength
  commentId: P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength
  id: MinimumLength
  parent: System.ComponentModel.DataAnnotations.StringLengthAttribute
  langs:
  - csharp
  - vb
  name: MinimumLength
  fullName: System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/StringLengthAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MinimumLength
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/StringLengthAttribute.cs
    startLine: 33
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets or sets the minimum length of a string.</p>\n"
  example:
  - 
  syntax:
    content: public int MinimumLength { get; set; }
    content.vb: Public Property MinimumLength As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The minimum length of a string.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.StringLengthAttribute.FormatErrorMessage(System.String)
  commentId: M:System.ComponentModel.DataAnnotations.StringLengthAttribute.FormatErrorMessage(System.String)
  id: FormatErrorMessage(System.String)
  parent: System.ComponentModel.DataAnnotations.StringLengthAttribute
  langs:
  - csharp
  - vb
  name: FormatErrorMessage(String)
  fullName: System.ComponentModel.DataAnnotations.StringLengthAttribute.FormatErrorMessage(System.String)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/StringLengthAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FormatErrorMessage
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/StringLengthAttribute.cs
    startLine: 62
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Applies formatting to a specified error message.</p>\n"
  example:
  - 
  syntax:
    content: public override string FormatErrorMessage(string name)
    content.vb: Public Overrides Function FormatErrorMessage(name As String) As String
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the field that caused the validation failure.</p>\n"
    return:
      type: System.String
      description: "\n<p>The formatted error message.</p>\n"
  overridden: System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>maximumLength</em> is negative. </p>\n<p>-or-</p>\n<p>\n<em>maximumLength</em> is less than <em>minimumLength</em>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.DataAnnotations.StringLengthAttribute.IsValid(System.Object)
  commentId: M:System.ComponentModel.DataAnnotations.StringLengthAttribute.IsValid(System.Object)
  id: IsValid(System.Object)
  parent: System.ComponentModel.DataAnnotations.StringLengthAttribute
  langs:
  - csharp
  - vb
  name: IsValid(Object)
  fullName: System.ComponentModel.DataAnnotations.StringLengthAttribute.IsValid(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/StringLengthAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsValid
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/StringLengthAttribute.cs
    startLine: 45
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Determines whether a specified object is valid.</p>\n"
  remarks: "\n<p>This method determines whether an object is valid. If the value of the object is <strong>null</strong>, the method automatically validates object. </p>\n"
  example:
  - 
  syntax:
    content: public override bool IsValid(object value)
    content.vb: Public Overrides Function IsValid(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>The object to validate.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified object is valid; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>maximumLength</em> is negative.</p>\n<p>-or-</p>\n<p>\n<em>maximumLength</em> is less than <xref href=\"System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.ComponentModel.DataAnnotations
  isExternal: false
  name: System.ComponentModel.DataAnnotations
  fullName: System.ComponentModel.DataAnnotations
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute
  parent: System.ComponentModel.DataAnnotations
  isExternal: false
  name: ValidationAttribute
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: false
  name: ErrorMessage
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: false
  name: ErrorMessageResourceName
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: false
  name: ErrorMessageResourceType
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: false
  name: ErrorMessageString
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: false
  name: RequiresValidationContext
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: true
  name: GetValidationResult(Object, ValidationContext)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object, System.ComponentModel.DataAnnotations.ValidationContext)
  spec.csharp:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
    name: GetValidationResult
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ComponentModel.DataAnnotations.ValidationContext
    name: ValidationContext
    fullName: System.ComponentModel.DataAnnotations.ValidationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
    name: GetValidationResult
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ComponentModel.DataAnnotations.ValidationContext
    name: ValidationContext
    fullName: System.ComponentModel.DataAnnotations.ValidationContext
  - name: )
    fullName: )
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: true
  name: IsValid(Object, ValidationContext)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object, System.ComponentModel.DataAnnotations.ValidationContext)
  spec.csharp:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
    name: IsValid
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ComponentModel.DataAnnotations.ValidationContext
    name: ValidationContext
    fullName: System.ComponentModel.DataAnnotations.ValidationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
    name: IsValid
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ComponentModel.DataAnnotations.ValidationContext
    name: ValidationContext
    fullName: System.ComponentModel.DataAnnotations.ValidationContext
  - name: )
    fullName: )
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: true
  name: Validate(Object, ValidationContext)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object, System.ComponentModel.DataAnnotations.ValidationContext)
  spec.csharp:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
    name: Validate
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ComponentModel.DataAnnotations.ValidationContext
    name: ValidationContext
    fullName: System.ComponentModel.DataAnnotations.ValidationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
    name: Validate
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ComponentModel.DataAnnotations.ValidationContext
    name: ValidationContext
    fullName: System.ComponentModel.DataAnnotations.ValidationContext
  - name: )
    fullName: )
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: true
  name: Validate(Object, String)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object, System.String)
  spec.csharp:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)
    name: Validate
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)
    name: Validate
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: true
  name: FormatErrorMessage(String)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)
  spec.csharp:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)
    name: FormatErrorMessage
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)
    name: FormatErrorMessage
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: true
  name: IsValid(Object)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)
    name: IsValid
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)
    name: IsValid
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
