items:
- uid: System.Linq.ILookup`2
  id: ILookup`2
  parent: System.Linq
  children:
  - System.Linq.ILookup`2.Contains(`0)
  - System.Linq.ILookup`2.Count
  - System.Linq.ILookup`2.Item(`0)
  href: System.Linq.ILookup`2.yml
  name: ILookup<TKey, TElement>
  name.vb: ILookup(Of TKey, TElement)
  fullName: System.Linq.ILookup<TKey, TElement>
  fullName.vb: System.Linq.ILookup(Of TKey, TElement)
  type: Interface
  source:
    remote: &o0
      path: src/System.Linq/src/System/Linq/Enumerable.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 3222
  assemblies:
  - System.Linq
  namespace: System.Linq
  summary: Defines an indexer, size property, and Boolean search method for data structures that map keys to @'System.Collections.Generic.IEnumerable`1' sequences of values.
  syntax:
    content: 'public interface ILookup<TKey, TElement> : IEnumerable<IGrouping<TKey, TElement>>, IEnumerable'
    content.vb: Public Interface ILookup(Of TKey, TElement) Inherits IEnumerable(Of IGrouping(Of TKey, TElement)), IEnumerable
    typeParameters:
    - id: TKey
    - id: TElement
  inheritedMembers:
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}}.GetEnumerator
  - System.Collections.IEnumerable.GetEnumerator
- uid: System.Linq.ILookup`2.Count
  id: Count
  parent: System.Linq.ILookup`2
  href: System.Linq.ILookup`2.yml
  name: Count
  fullName: System.Linq.ILookup<TKey, TElement>.Count
  fullName.vb: System.Linq.ILookup(Of TKey, TElement).Count
  type: Property
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 3224
  assemblies:
  - System.Linq
  namespace: System.Linq
  summary: Gets the number of key/value collection pairs in the @'System.Linq.ILookup`2'.
  syntax:
    content: int Count { get; }
    content.vb: ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of key/value collection pairs in the @'System.Linq.ILookup`2'.
- uid: System.Linq.ILookup`2.Item(`0)
  id: Item(`0)
  parent: System.Linq.ILookup`2
  href: System.Linq.ILookup`2.yml
  name: Item[TKey]
  name.vb: Item(TKey)
  fullName: System.Linq.ILookup<TKey, TElement>.Item[TKey]
  fullName.vb: System.Linq.ILookup(Of TKey, TElement).Item(TKey)
  type: Property
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 3225
  assemblies:
  - System.Linq
  namespace: System.Linq
  summary: Gets the @'System.Collections.Generic.IEnumerable`1' sequence of values indexed by a specified key.
  syntax:
    content: IEnumerable<TElement> this[TKey key] { get; }
    content.vb: ReadOnly Property Item(key As TKey) As IEnumerable(Of TElement)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key of the desired sequence of values.
    return:
      type: System.Collections.Generic.IEnumerable{{TElement}}
      description: The @'System.Collections.Generic.IEnumerable`1' sequence of values indexed by the specified key.
- uid: System.Linq.ILookup`2.Contains(`0)
  id: Contains(`0)
  parent: System.Linq.ILookup`2
  href: System.Linq.ILookup`2.yml
  name: Contains(TKey)
  fullName: System.Linq.ILookup<TKey, TElement>.Contains(TKey)
  fullName.vb: System.Linq.ILookup(Of TKey, TElement).Contains(TKey)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 3226
  assemblies:
  - System.Linq
  namespace: System.Linq
  summary: Determines whether a specified key exists in the @'System.Linq.ILookup`2'.
  syntax:
    content: bool Contains(TKey key)
    content.vb: Function Contains(key As TKey) As Boolean
    parameters:
    - id: key
      type: '{TKey}'
      description: The key to search for in the @'System.Linq.ILookup`2'.
    return:
      type: System.Boolean
      description: true if *key* is in the @'System.Linq.ILookup`2'; otherwise, false.
references:
- uid: System.Linq
  isExternal: false
  name: System.Linq
  fullName: System.Linq
  type: Namespace
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey, TElement>>.GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Linq.IGrouping(Of TKey, TElement)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey, TElement>>.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Linq.IGrouping(Of TKey, TElement)).GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: false
  href: System.Collections.IEnumerable.yml
  name: GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    href: System.Collections.IEnumerable.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    href: System.Collections.IEnumerable.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  parent: System.Collections.Generic.IEnumerable`1
  isExternal: false
  href: System.Collections.Generic.IEnumerable`1.yml
  name: GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Linq.IGrouping`2.yml
  name: IEnumerable<IGrouping<TKey, TElement>>
  name.vb: IEnumerable(Of IGrouping(Of TKey, TElement))
  fullName: System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey, TElement>>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Linq.IGrouping(Of TKey, TElement))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: IGrouping
    fullName: System.Linq.IGrouping
    href: System.Linq.IGrouping`2.yml
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: IGrouping
    fullName: System.Linq.IGrouping
    href: System.Linq.IGrouping`2.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  href: System.Collections.IEnumerable.yml
  name: IEnumerable
  fullName: System.Collections.IEnumerable
  type: Interface
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.IEnumerable`1.yml
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  type: Interface
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
  type: Namespace
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
  type: Namespace
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: '{TKey}'
  isExternal: false
  name: TKey
  fullName: TKey
- uid: System.Collections.Generic.IEnumerable{{TElement}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TElement>
  name.vb: IEnumerable(Of TElement)
  fullName: System.Collections.Generic.IEnumerable<TElement>
  fullName.vb: System.Collections.Generic.IEnumerable(Of TElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
