items:
- uid: System.ComponentModel.BackgroundWorker
  id: BackgroundWorker
  parent: System.ComponentModel
  children:
  - System.ComponentModel.BackgroundWorker.#ctor
  - System.ComponentModel.BackgroundWorker.CancelAsync
  - System.ComponentModel.BackgroundWorker.CancellationPending
  - System.ComponentModel.BackgroundWorker.Dispose
  - System.ComponentModel.BackgroundWorker.Dispose(System.Boolean)
  - System.ComponentModel.BackgroundWorker.DoWork
  - System.ComponentModel.BackgroundWorker.IsBusy
  - System.ComponentModel.BackgroundWorker.OnDoWork(System.ComponentModel.DoWorkEventArgs)
  - System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)
  - System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)
  - System.ComponentModel.BackgroundWorker.ProgressChanged
  - System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)
  - System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32,System.Object)
  - System.ComponentModel.BackgroundWorker.RunWorkerAsync
  - System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)
  - System.ComponentModel.BackgroundWorker.RunWorkerCompleted
  - System.ComponentModel.BackgroundWorker.WorkerReportsProgress
  - System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation
  href: System.ComponentModel.BackgroundWorker.yml
  name: BackgroundWorker
  fullName: System.ComponentModel.BackgroundWorker
  type: Class
  source:
    remote: &o0
      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/BackgroundWorker.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/BackgroundWorker.cs
    startLine: 9
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Executes an operation on a separate thread.
  syntax:
    content: 'public class BackgroundWorker : IDisposable'
    content.vb: Public Class BackgroundWorker Inherits IDisposable
  inheritance:
  - System.Object
- uid: System.ComponentModel.BackgroundWorker.#ctor
  id: '#ctor'
  parent: System.ComponentModel.BackgroundWorker
  href: System.ComponentModel.BackgroundWorker.yml
  name: BackgroundWorker()
  fullName: System.ComponentModel.BackgroundWorker.BackgroundWorker()
  type: Constructor
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/BackgroundWorker.cs
    startLine: 20
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Initializes a new instance of the @'System.ComponentModel.BackgroundWorker' class.
  syntax:
    content: public BackgroundWorker()
    content.vb: Public Sub New
- uid: System.ComponentModel.BackgroundWorker.CancellationPending
  id: CancellationPending
  parent: System.ComponentModel.BackgroundWorker
  href: System.ComponentModel.BackgroundWorker.yml
  name: CancellationPending
  fullName: System.ComponentModel.BackgroundWorker.CancellationPending
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/BackgroundWorker.cs
    startLine: 38
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Gets a value indicating whether the application has requested cancellation of a background operation.
  syntax:
    content: public bool CancellationPending { get; }
    content.vb: Public ReadOnly Property CancellationPending As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the application has requested cancellation of a background operation; otherwise, false. The default is false.
- uid: System.ComponentModel.BackgroundWorker.IsBusy
  id: IsBusy
  parent: System.ComponentModel.BackgroundWorker
  href: System.ComponentModel.BackgroundWorker.yml
  name: IsBusy
  fullName: System.ComponentModel.BackgroundWorker.IsBusy
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/BackgroundWorker.cs
    startLine: 58
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Gets a value indicating whether the @'System.ComponentModel.BackgroundWorker' is running an asynchronous operation.
  syntax:
    content: public bool IsBusy { get; }
    content.vb: Public ReadOnly Property IsBusy As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true, if the @'System.ComponentModel.BackgroundWorker' is running an asynchronous operation; otherwise, false.
- uid: System.ComponentModel.BackgroundWorker.WorkerReportsProgress
  id: WorkerReportsProgress
  parent: System.ComponentModel.BackgroundWorker
  href: System.ComponentModel.BackgroundWorker.yml
  name: WorkerReportsProgress
  fullName: System.ComponentModel.BackgroundWorker.WorkerReportsProgress
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/BackgroundWorker.cs
    startLine: 154
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Gets or sets a value indicating whether the @'System.ComponentModel.BackgroundWorker' can report progress updates.
  syntax:
    content: public bool WorkerReportsProgress { get; set; }
    content.vb: Public Property WorkerReportsProgress As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the @'System.ComponentModel.BackgroundWorker' supports progress updates; otherwise false. The default is false.
- uid: System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation
  id: WorkerSupportsCancellation
  parent: System.ComponentModel.BackgroundWorker
  href: System.ComponentModel.BackgroundWorker.yml
  name: WorkerSupportsCancellation
  fullName: System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/BackgroundWorker.cs
    startLine: 167
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Gets or sets a value indicating whether the @'System.ComponentModel.BackgroundWorker' supports asynchronous cancellation.
  syntax:
    content: public bool WorkerSupportsCancellation { get; set; }
    content.vb: Public Property WorkerSupportsCancellation As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the @'System.ComponentModel.BackgroundWorker' supports cancellation; otherwise false. The default is false.
- uid: System.ComponentModel.BackgroundWorker.DoWork
  id: DoWork
  parent: System.ComponentModel.BackgroundWorker
  href: System.ComponentModel.BackgroundWorker.yml
  name: DoWork
  fullName: System.ComponentModel.BackgroundWorker.DoWork
  type: Event
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/BackgroundWorker.cs
    startLine: 56
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Occurs when @'System.ComponentModel.BackgroundWorker.RunWorkerAsync' is called.
  syntax:
    content: public event DoWorkEventHandler DoWork
    content.vb: Public Event DoWork As DoWorkEventHandler
- uid: System.ComponentModel.BackgroundWorker.ProgressChanged
  id: ProgressChanged
  parent: System.ComponentModel.BackgroundWorker
  href: System.ComponentModel.BackgroundWorker.yml
  name: ProgressChanged
  fullName: System.ComponentModel.BackgroundWorker.ProgressChanged
  type: Event
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/BackgroundWorker.cs
    startLine: 93
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Occurs when @'System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)' is called.
  syntax:
    content: public event ProgressChangedEventHandler ProgressChanged
    content.vb: Public Event ProgressChanged As ProgressChangedEventHandler
- uid: System.ComponentModel.BackgroundWorker.RunWorkerCompleted
  id: RunWorkerCompleted
  parent: System.ComponentModel.BackgroundWorker
  href: System.ComponentModel.BackgroundWorker.yml
  name: RunWorkerCompleted
  fullName: System.ComponentModel.BackgroundWorker.RunWorkerCompleted
  type: Event
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/BackgroundWorker.cs
    startLine: 152
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Occurs when the background operation has completed, has been canceled, or has raised an exception.
  syntax:
    content: public event RunWorkerCompletedEventHandler RunWorkerCompleted
    content.vb: Public Event RunWorkerCompleted As RunWorkerCompletedEventHandler
- uid: System.ComponentModel.BackgroundWorker.CancelAsync
  id: CancelAsync
  parent: System.ComponentModel.BackgroundWorker
  href: System.ComponentModel.BackgroundWorker.yml
  name: CancelAsync()
  fullName: System.ComponentModel.BackgroundWorker.CancelAsync()
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/BackgroundWorker.cs
    startLine: 46
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Requests cancellation of a pending background operation.
  syntax:
    content: public void CancelAsync()
    content.vb: Public Sub CancelAsync
  exceptions:
  - type: System.InvalidOperationException
    description: '@''System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation'' is false.'
- uid: System.ComponentModel.BackgroundWorker.OnDoWork(System.ComponentModel.DoWorkEventArgs)
  id: OnDoWork(System.ComponentModel.DoWorkEventArgs)
  parent: System.ComponentModel.BackgroundWorker
  href: System.ComponentModel.BackgroundWorker.yml
  name: OnDoWork(DoWorkEventArgs)
  fullName: System.ComponentModel.BackgroundWorker.OnDoWork(System.ComponentModel.DoWorkEventArgs)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/BackgroundWorker.cs
    startLine: 66
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Raises the @'System.ComponentModel.BackgroundWorker.DoWork' event.
  syntax:
    content: protected virtual void OnDoWork(DoWorkEventArgs e)
    content.vb: Protected Overridable Sub OnDoWork(e As DoWorkEventArgs)
    parameters:
    - id: e
      type: System.ComponentModel.DoWorkEventArgs
      description: An @'System.EventArgs' that contains the event data.
- uid: System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)
  id: OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)
  parent: System.ComponentModel.BackgroundWorker
  href: System.ComponentModel.BackgroundWorker.yml
  name: OnProgressChanged(ProgressChangedEventArgs)
  fullName: System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/BackgroundWorker.cs
    startLine: 84
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Raises the @'System.ComponentModel.BackgroundWorker.ProgressChanged' event.
  syntax:
    content: protected virtual void OnProgressChanged(ProgressChangedEventArgs e)
    content.vb: Protected Overridable Sub OnProgressChanged(e As ProgressChangedEventArgs)
    parameters:
    - id: e
      type: System.ComponentModel.ProgressChangedEventArgs
      description: An @'System.EventArgs' that contains the event data.
- uid: System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)
  id: OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)
  parent: System.ComponentModel.BackgroundWorker
  href: System.ComponentModel.BackgroundWorker.yml
  name: OnRunWorkerCompleted(RunWorkerCompletedEventArgs)
  fullName: System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/BackgroundWorker.cs
    startLine: 75
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Raises the @'System.ComponentModel.BackgroundWorker.RunWorkerCompleted' event.
  syntax:
    content: protected virtual void OnRunWorkerCompleted(RunWorkerCompletedEventArgs e)
    content.vb: Protected Overridable Sub OnRunWorkerCompleted(e As RunWorkerCompletedEventArgs)
    parameters:
    - id: e
      type: System.ComponentModel.RunWorkerCompletedEventArgs
      description: An @'System.EventArgs' that contains the event data.
- uid: System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)
  id: ReportProgress(System.Int32)
  parent: System.ComponentModel.BackgroundWorker
  href: System.ComponentModel.BackgroundWorker.yml
  name: ReportProgress(Int32)
  fullName: System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/BackgroundWorker.cs
    startLine: 102
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Raises the @'System.ComponentModel.BackgroundWorker.ProgressChanged' event.
  syntax:
    content: public void ReportProgress(int percentProgress)
    content.vb: Public Sub ReportProgress(percentProgress As Integer)
    parameters:
    - id: percentProgress
      type: System.Int32
      description: The percentage, from 0 to 100, of the background operation that is complete.
  exceptions:
  - type: System.InvalidOperationException
    description: The @'System.ComponentModel.BackgroundWorker.WorkerReportsProgress' property is set to false.
- uid: System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32,System.Object)
  id: ReportProgress(System.Int32,System.Object)
  parent: System.ComponentModel.BackgroundWorker
  href: System.ComponentModel.BackgroundWorker.yml
  name: ReportProgress(Int32, Object)
  fullName: System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/BackgroundWorker.cs
    startLine: 108
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Raises the @'System.ComponentModel.BackgroundWorker.ProgressChanged' event.
  syntax:
    content: public void ReportProgress(int percentProgress, object userState)
    content.vb: Public Sub ReportProgress(percentProgress As Integer, userState As Object)
    parameters:
    - id: percentProgress
      type: System.Int32
      description: The percentage, from 0 to 100, of the background operation that is complete.
    - id: userState
      type: System.Object
      description: The state object passed to @'System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)'.
  exceptions:
  - type: System.InvalidOperationException
    description: The @'System.ComponentModel.BackgroundWorker.WorkerReportsProgress' property is set to false.
- uid: System.ComponentModel.BackgroundWorker.RunWorkerAsync
  id: RunWorkerAsync
  parent: System.ComponentModel.BackgroundWorker
  href: System.ComponentModel.BackgroundWorker.yml
  name: RunWorkerAsync()
  fullName: System.ComponentModel.BackgroundWorker.RunWorkerAsync()
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/BackgroundWorker.cs
    startLine: 127
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Starts execution of a background operation.
  syntax:
    content: public void RunWorkerAsync()
    content.vb: Public Sub RunWorkerAsync
  exceptions:
  - type: System.InvalidOperationException
    description: '@''System.ComponentModel.BackgroundWorker.IsBusy'' is true.'
- uid: System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)
  id: RunWorkerAsync(System.Object)
  parent: System.ComponentModel.BackgroundWorker
  href: System.ComponentModel.BackgroundWorker.yml
  name: RunWorkerAsync(Object)
  fullName: System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/BackgroundWorker.cs
    startLine: 132
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Starts execution of a background operation.
  syntax:
    content: public void RunWorkerAsync(object argument)
    content.vb: Public Sub RunWorkerAsync(argument As Object)
    parameters:
    - id: argument
      type: System.Object
      description: A parameter for use by the background operation to be executed in the @'System.ComponentModel.BackgroundWorker.DoWork' event handler.
  exceptions:
  - type: System.InvalidOperationException
    description: '@''System.ComponentModel.BackgroundWorker.IsBusy'' is true.'
- uid: System.ComponentModel.BackgroundWorker.Dispose
  id: Dispose
  parent: System.ComponentModel.BackgroundWorker
  href: System.ComponentModel.BackgroundWorker.yml
  name: Dispose()
  fullName: System.ComponentModel.BackgroundWorker.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/BackgroundWorker.cs
    startLine: 210
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
- uid: System.ComponentModel.BackgroundWorker.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.BackgroundWorker
  href: System.ComponentModel.BackgroundWorker.yml
  name: Dispose(Boolean)
  fullName: System.ComponentModel.BackgroundWorker.Dispose(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/BackgroundWorker.cs
    startLine: 216
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.DoWorkEventArgs
  parent: System.ComponentModel
  isExternal: false
  href: System.ComponentModel.DoWorkEventArgs.yml
  name: DoWorkEventArgs
  fullName: System.ComponentModel.DoWorkEventArgs
- uid: System.ComponentModel.ProgressChangedEventArgs
  parent: System.ComponentModel
  isExternal: false
  href: System.ComponentModel.ProgressChangedEventArgs.yml
  name: ProgressChangedEventArgs
  fullName: System.ComponentModel.ProgressChangedEventArgs
- uid: System.ComponentModel.RunWorkerCompletedEventArgs
  parent: System.ComponentModel
  isExternal: false
  href: System.ComponentModel.RunWorkerCompletedEventArgs.yml
  name: RunWorkerCompletedEventArgs
  fullName: System.ComponentModel.RunWorkerCompletedEventArgs
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  href: System.InvalidOperationException.yml
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  summary: The exception that is thrown when a method call is invalid for the object's current state.
