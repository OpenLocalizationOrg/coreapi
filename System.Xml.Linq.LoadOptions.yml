items:
- uid: System.Xml.Linq.LoadOptions
  commentId: T:System.Xml.Linq.LoadOptions
  id: LoadOptions
  parent: System.Xml.Linq
  children:
  - System.Xml.Linq.LoadOptions.None
  - System.Xml.Linq.LoadOptions.PreserveWhitespace
  - System.Xml.Linq.LoadOptions.SetBaseUri
  - System.Xml.Linq.LoadOptions.SetLineInfo
  langs:
  - csharp
  - vb
  name: LoadOptions
  fullName: System.Xml.Linq.LoadOptions
  type: Enum
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LoadOptions
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 31
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Specifies load options when parsing XML. </p>\n"
  example:
  - "\n<p>This example loads a small XML tree from a file, setting the options to set base URI and retain line information. It then adds another element that does not have line information. It then prints the line information for each element in the tree.</p>\n<pre><code class=\"c#\">string markup = @\"<Root>\n<Child1 />\n<Child2 />\n<Child4 />\n</Root>\";\n\nFile.WriteAllText(\"Test.xml\", markup);\n\nXElement po = XElement.Load(\"Test.xml\",\nLoadOptions.SetBaseUri | LoadOptions.SetLineInfo);\n\n// add a node to the tree.\n// the newly added node will not have line information.\npo.Element(\"Child2\").AddAfterSelf(new XElement(\"Child3\"));\n\nstring[] splitUri = po.BaseUri.Split('/');\nConsole.WriteLine(\"BaseUri: {0}\", splitUri[splitUri.Length - 1]);\nConsole.WriteLine();\nConsole.WriteLine(\"{0}{1}{2}\",\n\"Element Name\".PadRight(20),\n\"Line\".PadRight(5),\n\"Position\");\nConsole.WriteLine(\"{0}{1}{2}\",\n\"------------\".PadRight(20),\n\"----\".PadRight(5),\n\"--------\");\nforeach (XElement e in po.DescendantsAndSelf())\nConsole.WriteLine(\"{0}{1}{2}\",\n(\"\".PadRight(e.Ancestors().Count() * 2) + e.Name).PadRight(20),\n((IXmlLineInfo)e).HasLineInfo() ?\n    ((IXmlLineInfo)e).LineNumber.ToString().PadRight(5) :\n    \"\",\n((IXmlLineInfo)e).HasLineInfo() ?\n    ((IXmlLineInfo)e).LinePosition.ToString() :\n    \"No Line Information\");</code></pre>\n<pre><code class=\"vb\">Dim markup As String = _\n\"<Root>\" + Environment.NewLine & _\n\"    <Child1 />\" + Environment.NewLine & _\n\"    <Child2 />\" + Environment.NewLine & _\n\"    <Child4 />\" + Environment.NewLine & _\n\"</Root>\"\n\nFile.WriteAllText(\"Test.xml\", markup)\n\nDim po As XElement = XElement.Load(\"Test.xml\", LoadOptions.SetBaseUri Or LoadOptions.SetLineInfo)\n\n' add a node to the tree.\n' the newly added node will not have line information.\npo.Element(\"Child2\").AddAfterSelf(New XElement(\"Child3\"))\n\nDim splitUri() As String = po.BaseUri.Split(\"/\"c)\nConsole.WriteLine(\"BaseUri: {0}\", splitUri(splitUri.Length - 1))\nConsole.WriteLine()\nConsole.WriteLine(\"{0}{1}{2}\", _\n\"Element Name\".PadRight(20), _\n\"Line\".PadRight(5), _\n\"Position\")\nConsole.WriteLine(\"{0}{1}{2}\", _\n\"------------\".PadRight(20), _\n\"----\".PadRight(5), _\n\"--------\")\nFor Each e As XElement In po.DescendantsAndSelf()\nConsole.WriteLine(\"{0}{1}{2}\", _\n(\"\".PadRight(e.Ancestors().Count() * 2) & e.Name.ToString).PadRight(20), _\nIIf(DirectCast(e, IXmlLineInfo).HasLineInfo(), _\n    DirectCast(e, IXmlLineInfo).LineNumber.ToString().PadRight(5), _\n    \"\"), _\nIIf(DirectCast(e, IXmlLineInfo).HasLineInfo(), _\n    DirectCast(e, IXmlLineInfo).LinePosition.ToString(), _\n    \"No Line Information\"))\nNext</code></pre>\n<p>This example produces the following output:</p>\n<pre><code>BaseUri: Test.xml\n\nElement Name        Line Position\n------------        ---- --------\nRoot                1    2\nChild1            2    6\nChild2            3    6\nChild3            No Line Information\nChild4            4    6</code></pre>\n"
  syntax:
    content: >-
      [Flags]

      public enum LoadOptions
    content.vb: >-
      <Flags>

      Public Enum LoadOptions
  seealso:
  - type: System.Xml.Linq.SaveOptions
    commentId: T:System.Xml.Linq.SaveOptions
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
  nameWithType: LoadOptions
- uid: System.Xml.Linq.LoadOptions.None
  commentId: F:System.Xml.Linq.LoadOptions.None
  id: None
  parent: System.Xml.Linq.LoadOptions
  langs:
  - csharp
  - vb
  name: None
  fullName: System.Xml.Linq.LoadOptions.None
  type: Field
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: None
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 34
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Does not preserve insignificant white space or load base URI and line information.</p>\n"
  syntax:
    content: None = 0
    return:
      type: System.Xml.Linq.LoadOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: LoadOptions.None
- uid: System.Xml.Linq.LoadOptions.PreserveWhitespace
  commentId: F:System.Xml.Linq.LoadOptions.PreserveWhitespace
  id: PreserveWhitespace
  parent: System.Xml.Linq.LoadOptions
  langs:
  - csharp
  - vb
  name: PreserveWhitespace
  fullName: System.Xml.Linq.LoadOptions.PreserveWhitespace
  type: Field
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PreserveWhitespace
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 35
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Preserves insignificant white space while parsing.</p>\n"
  syntax:
    content: PreserveWhitespace = 1
    return:
      type: System.Xml.Linq.LoadOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: LoadOptions.PreserveWhitespace
- uid: System.Xml.Linq.LoadOptions.SetBaseUri
  commentId: F:System.Xml.Linq.LoadOptions.SetBaseUri
  id: SetBaseUri
  parent: System.Xml.Linq.LoadOptions
  langs:
  - csharp
  - vb
  name: SetBaseUri
  fullName: System.Xml.Linq.LoadOptions.SetBaseUri
  type: Field
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetBaseUri
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 36
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Requests the base URI information from the <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref>, and makes it available via the <xref href=\"System.Xml.Linq.XObject.BaseUri\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  syntax:
    content: SetBaseUri = 2
    return:
      type: System.Xml.Linq.LoadOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: LoadOptions.SetBaseUri
- uid: System.Xml.Linq.LoadOptions.SetLineInfo
  commentId: F:System.Xml.Linq.LoadOptions.SetLineInfo
  id: SetLineInfo
  parent: System.Xml.Linq.LoadOptions
  langs:
  - csharp
  - vb
  name: SetLineInfo
  fullName: System.Xml.Linq.LoadOptions.SetLineInfo
  type: Field
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetLineInfo
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 37
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Requests the line information from the <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> and makes it available via properties on <xref href=\"System.Xml.Linq.XObject\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: SetLineInfo = 4
    return:
      type: System.Xml.Linq.LoadOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: LoadOptions.SetLineInfo
references:
- uid: System.Xml.Linq
  isExternal: false
  name: System.Xml.Linq
  fullName: System.Xml.Linq
  commentId: N:System.Xml.Linq
  nameWithType: System.Xml.Linq
- uid: System.Xml.Linq.LoadOptions
  parent: System.Xml.Linq
  isExternal: false
  name: LoadOptions
  fullName: System.Xml.Linq.LoadOptions
  commentId: T:System.Xml.Linq.LoadOptions
  nameWithType: LoadOptions
