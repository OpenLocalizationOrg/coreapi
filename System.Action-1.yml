items:
- uid: System.Action`1
  commentId: T:System.Action`1
  id: Action`1
  parent: System
  children: []
  langs:
  - csharp
  - vb
  name: Action<T>
  fullName: System.Action<T>
  type: Delegate
  source:
    remote:
      path: src/mscorlib/src/System/Action.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Action
    path: src/mscorlib/src/System/Action.cs
    startLine: 9
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Encapsulates a method that has a single parameter and does not return a value.</p>\n"
  example:
  - "\n<p>The following example demonstrates the use of the <xref href=\"System.Action`1\" data-throw-if-not-resolved=\"false\"></xref> delegate to print the contents of a <xref href=\"System.Collections.Generic.List`1\" data-throw-if-not-resolved=\"false\"></xref> object. In this example, the <code>Print</code> method is used to display the contents of the list to the console. In addition, the C# example also demonstrates the use of anonymous methods to display the contents to the console. Note that the example does not explicitly declare an <xref href=\"System.Action`1\" data-throw-if-not-resolved=\"false\"></xref> variable. Instead, it passes a reference to a method that takes a single parameter and that does not return a value to the <xref href=\"System.Collections.Generic.List`1.ForEach(System.Action{`0})\" data-throw-if-not-resolved=\"false\"></xref> method, whose single parameter is an <xref href=\"System.Action`1\" data-throw-if-not-resolved=\"false\"></xref> delegate. Similarly, in the C# example, an <xref href=\"System.Action`1\" data-throw-if-not-resolved=\"false\"></xref> delegate is not explicitly instantiated because the signature of the anonymous method matches the signature of the <xref href=\"System.Action`1\" data-throw-if-not-resolved=\"false\"></xref> delegate that is expected by the <xref href=\"System.Collections.Generic.List`1.ForEach(System.Action{`0})\" data-throw-if-not-resolved=\"false\"></xref> method.</p>System.Action_PrintExample#01<p></p>"
  syntax:
    content: public delegate void Action<in T>(T obj);
    content.vb: Public Delegate Sub Action(Of In T)(obj As T)
    parameters:
    - id: obj
      type: '{T}'
      description: "\n<p>The parameter of the method that this delegate encapsulates.</p>\n"
    typeParameters:
    - id: T
      description: "\n<p>The type of the parameter of the method that this delegate encapsulates.</p>\n"
  seealso:
  - type: System.Func`2
    commentId: T:System.Func`2
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  nameWithType: Action<T>
  extensionMethods:
  - System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  nameWithType.vb: Action(Of T)
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  parent: System.Reflection.RuntimeReflectionExtensions
  definition: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  name: GetMethodInfo()
  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo()
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
    name: GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
    name: GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetMethodInfo()
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
- uid: '{T}'
  definition: T
  name: T
  fullName: T
  nameWithType: T
  commentId: '!:T'
- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  isExternal: true
  name: GetMethodInfo(Delegate)
  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
    name: GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    fullName: (
  - uid: System.Delegate
    name: Delegate
    fullName: System.Delegate
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
    name: GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    fullName: (
  - uid: System.Delegate
    name: Delegate
    fullName: System.Delegate
    isExternal: true
  - name: )
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
- uid: System.Reflection.RuntimeReflectionExtensions
  parent: System.Reflection
  isExternal: false
  name: RuntimeReflectionExtensions
  fullName: System.Reflection.RuntimeReflectionExtensions
  nameWithType: RuntimeReflectionExtensions
  commentId: T:System.Reflection.RuntimeReflectionExtensions
- uid: T
  isExternal: false
  name: T
  fullName: T
  nameWithType: T
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
  nameWithType: System.Reflection
  commentId: N:System.Reflection
