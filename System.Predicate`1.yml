items:
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  id: Predicate`1
  parent: System
  children: []
  langs:
  - csharp
  - vb
  name: Predicate<T>
  fullName: System.Predicate<T>
  type: Delegate
  source:
    remote:
      path: src/mscorlib/src/System/Action.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Predicate
    path: src/mscorlib/src/System/Action.cs
    startLine: 92
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the method that defines a set of criteria and determines whether the specified object meets those criteria.</p>\n"
  remarks: "\n<p>This delegate is used by several methods of the <xref href=\"System.Array\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Collections.Generic.List`1\" data-throw-if-not-resolved=\"false\"></xref> classes to search for elements in the collection.</p>\n<p>Typically, the <xref href=\"System.Predicate`1\" data-throw-if-not-resolved=\"false\"></xref> delegate is represented by a lambda expression. Because locally scoped variables are available to the lambda expression, it is easy to test for a condition that is not precisely known at compile time. This is simulated in the following example, which defines a <code>HockeyTeam</code> class that contains information about a National Hockey League team and the year in which it was founded. The example defines an array of integer values that represent years, and randomly assigns one element of the array to <code>foundedBeforeYear</code>, which is a variable that is locally scoped to the example's <code>Main</code> method. Because locally scoped variables are available to a lambda expression, the lambda expression passed to the <xref href=\"System.Collections.Generic.List`1.FindAll(System.Predicate{`0})\" data-throw-if-not-resolved=\"false\"></xref> method is able to return a <code>HockeyTeam</code> object for each team founded on or before that year. </p>System.Predicate`1#3"
  syntax:
    content: public delegate bool Predicate<in T>(T obj);
    content.vb: Public Delegate Function Predicate(Of In T)(obj As T) As Boolean
    parameters:
    - id: obj
      type: '{T}'
      description: "\n<p>The object to compare against the criteria defined within the method represented by this delegate.</p>\n"
    typeParameters:
    - id: T
      description: "\n<p>The type of the object to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>obj</em> meets the criteria defined within the method represented by this delegate; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.Array.Find``1(``0[],System.Predicate{``0})
    commentId: M:System.Array.Find``1(``0[],System.Predicate{``0})
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
