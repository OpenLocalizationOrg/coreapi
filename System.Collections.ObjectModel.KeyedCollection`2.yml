items:
- uid: System.Collections.ObjectModel.KeyedCollection`2
  id: KeyedCollection`2
  parent: System.Collections.ObjectModel
  children:
  - System.Collections.ObjectModel.KeyedCollection`2.#ctor
  - System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  - System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)
  - System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
  - System.Collections.ObjectModel.KeyedCollection`2.ClearItems
  - System.Collections.ObjectModel.KeyedCollection`2.Comparer
  - System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
  - System.Collections.ObjectModel.KeyedCollection`2.Dictionary
  - System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
  - System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
  - System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
  - System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
  - System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
  - System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
  href: System.Collections.ObjectModel.KeyedCollection`2.yml
  name: KeyedCollection<TKey, TItem>
  name.vb: KeyedCollection(Of TKey, TItem)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem)
  type: Class
  source:
    remote: &o0
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/KeyedCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 11
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Provides the abstract base class for a collection whose keys are embedded in the values.
  syntax:
    content: 'public abstract class KeyedCollection<TKey, TItem> : Collection<TItem>'
    content.vb: Public MustInherit Class KeyedCollection(Of TKey, TItem) Inherits Collection(Of TItem)
    typeParameters:
    - id: TKey
    - id: TItem
  inheritance:
  - System.Object
- uid: System.Collections.ObjectModel.KeyedCollection`2.#ctor
  id: '#ctor'
  parent: System.Collections.ObjectModel.KeyedCollection`2
  href: System.Collections.ObjectModel.KeyedCollection`2.yml
  name: KeyedCollection()
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.KeyedCollection()
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).KeyedCollection()
  type: Constructor
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 22
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Initializes a new instance of the @'System.Collections.ObjectModel.KeyedCollection`2' class that uses the default equality comparer.
  syntax:
    content: protected KeyedCollection()
    content.vb: Protected Sub New
- uid: System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  id: '#ctor(System.Collections.Generic.IEqualityComparer{`0})'
  parent: System.Collections.ObjectModel.KeyedCollection`2
  href: System.Collections.ObjectModel.KeyedCollection`2.yml
  name: KeyedCollection(Generic.IEqualityComparer<TKey>)
  name.vb: KeyedCollection(Generic.IEqualityComparer(Of TKey))
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.KeyedCollection(System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).KeyedCollection(System.Collections.Generic.IEqualityComparer(Of TKey))
  type: Constructor
  source:
    remote: &o1
      path: src/System.ObjectModel/ref/System.ObjectModel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.ObjectModel/ref/System.ObjectModel.cs
    startLine: 10
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Initializes a new instance of the @'System.Collections.ObjectModel.KeyedCollection`2' class that uses the specified equality comparer.
  syntax:
    content: protected KeyedCollection(Generic.IEqualityComparer<TKey> comparer)
    content.vb: Protected Sub New(comparer As Generic.IEqualityComparer(Of TKey))
    parameters:
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
      description: The implementation of the @'System.Collections.Generic.IEqualityComparer`1' generic interface to use when comparing keys, or null to use the default equality comparer for the type of the key, obtained from @'System.Collections.Generic.EqualityComparer`1.Default'.
- uid: System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)
  id: '#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)'
  parent: System.Collections.ObjectModel.KeyedCollection`2
  href: System.Collections.ObjectModel.KeyedCollection`2.yml
  name: KeyedCollection(Generic.IEqualityComparer<TKey>, Int32)
  name.vb: KeyedCollection(Generic.IEqualityComparer(Of TKey), Int32)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.KeyedCollection(System.Collections.Generic.IEqualityComparer<TKey>, System.Int32)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).KeyedCollection(System.Collections.Generic.IEqualityComparer(Of TKey), System.Int32)
  type: Constructor
  source:
    remote: *o1
    path: src/System.ObjectModel/ref/System.ObjectModel.cs
    startLine: 11
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Initializes a new instance of the @'System.Collections.ObjectModel.KeyedCollection`2' class that uses the specified equality comparer and creates a lookup dictionary when the specified threshold is exceeded.
  syntax:
    content: protected KeyedCollection(Generic.IEqualityComparer<TKey> comparer, int dictionaryCreationThreshold)
    content.vb: Protected Sub New(comparer As Generic.IEqualityComparer(Of TKey), dictionaryCreationThreshold As Integer)
    parameters:
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
      description: The implementation of the @'System.Collections.Generic.IEqualityComparer`1' generic interface to use when comparing keys, or null to use the default equality comparer for the type of the key, obtained from @'System.Collections.Generic.EqualityComparer`1.Default'.
    - id: dictionaryCreationThreshold
      type: System.Int32
      description: "The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or –1 to specify that a lookup dictionary is never created."
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: "*dictionaryCreationThreshold* is less than –1."
- uid: System.Collections.ObjectModel.KeyedCollection`2.Comparer
  id: Comparer
  parent: System.Collections.ObjectModel.KeyedCollection`2
  href: System.Collections.ObjectModel.KeyedCollection`2.yml
  name: Comparer
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Comparer
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Comparer
  type: Property
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 63
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Gets the generic equality comparer that is used to determine equality of keys in the collection.
  syntax:
    content: public Generic.IEqualityComparer<TKey> Comparer { get; }
    content.vb: Public ReadOnly Property Comparer As Generic.IEqualityComparer(Of TKey)
    parameters: []
    return:
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
      description: The implementation of the @'System.Collections.Generic.IEqualityComparer`1' generic interface that is used to determine equality of keys in the collection.
- uid: System.Collections.ObjectModel.KeyedCollection`2.Dictionary
  id: Dictionary
  parent: System.Collections.ObjectModel.KeyedCollection`2
  href: System.Collections.ObjectModel.KeyedCollection`2.yml
  name: Dictionary
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Dictionary
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Dictionary
  type: Property
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 154
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Gets the lookup dictionary of the @'System.Collections.ObjectModel.KeyedCollection`2'.
  syntax:
    content: protected Generic.IDictionary<TKey, TItem> Dictionary { get; }
    content.vb: Protected ReadOnly Property Dictionary As Generic.IDictionary(Of TKey, TItem)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{{TKey},{TItem}}
      description: The lookup dictionary of the @'System.Collections.ObjectModel.KeyedCollection`2', if it exists; otherwise, null.
- uid: System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
  id: Item(`0)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  href: System.Collections.ObjectModel.KeyedCollection`2.yml
  name: Item[TKey]
  name.vb: Item(TKey)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Item[TKey]
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Item(TKey)
  type: Property
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 71
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Gets the element with the specified key.
  syntax:
    content: public TItem this[TKey key] { get; }
    content.vb: Public ReadOnly Property Item(key As TKey) As TItem
    parameters:
    - id: key
      type: '{TKey}'
      description: The key of the element to get.
    return:
      type: '{TItem}'
      description: The element with the specified key. If an element with the specified key is not found, an exception is thrown.
  exceptions:
  - type: System.ArgumentNullException
    description: '*key* is null.'
  - type: System.Collections.Generic.KeyNotFoundException
    description: An element with the specified key does not exist in the collection.
- uid: System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
  id: ChangeItemKey(`1,`0)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  href: System.Collections.ObjectModel.KeyedCollection`2.yml
  name: ChangeItemKey(TItem, TKey)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.ChangeItemKey(TItem, TKey)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).ChangeItemKey(TItem, TKey)
  type: Method
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 159
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Changes the key associated with the specified element in the lookup dictionary.
  syntax:
    content: protected void ChangeItemKey(TItem item, TKey newKey)
    content.vb: Protected Sub ChangeItemKey(item As TItem, newKey As TKey)
    parameters:
    - id: item
      type: '{TItem}'
      description: The element to change the key of.
    - id: newKey
      type: '{TKey}'
      description: The new key for *item*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*item* is null.-or-*key* is null.'
  - type: System.ArgumentException
    description: '*item* is not found.-or-*key* already exists in the @''System.Collections.ObjectModel.KeyedCollection`2''.'
- uid: System.Collections.ObjectModel.KeyedCollection`2.ClearItems
  id: ClearItems
  parent: System.Collections.ObjectModel.KeyedCollection`2
  href: System.Collections.ObjectModel.KeyedCollection`2.yml
  name: ClearItems()
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.ClearItems()
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).ClearItems()
  type: Method
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 182
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Removes all elements from the @'System.Collections.ObjectModel.KeyedCollection`2'.
  syntax:
    content: protected override void ClearItems()
    content.vb: Protected Overrides Sub ClearItems
- uid: System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
  id: Contains(`0)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  href: System.Collections.ObjectModel.KeyedCollection`2.yml
  name: Contains(TKey)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Contains(TKey)
  type: Method
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 94
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Determines whether the collection contains an element with the specified key.
  syntax:
    content: public bool Contains(TKey key)
    content.vb: Public Function Contains(key As TKey) As Boolean
    parameters:
    - id: key
      type: '{TKey}'
      description: The key to locate in the @'System.Collections.ObjectModel.KeyedCollection`2'.
    return:
      type: System.Boolean
      description: true if the @'System.Collections.ObjectModel.KeyedCollection`2' contains an element with the specified key; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*key* is null.'
- uid: System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
  id: GetKeyForItem(`1)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  href: System.Collections.ObjectModel.KeyedCollection`2.yml
  name: GetKeyForItem(TItem)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.GetKeyForItem(TItem)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).GetKeyForItem(TItem)
  type: Method
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 193
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: When implemented in a derived class, extracts the key from the specified element.
  syntax:
    content: protected abstract TKey GetKeyForItem(TItem item)
    content.vb: Protected MustOverride Function GetKeyForItem(item As TItem) As TKey
    parameters:
    - id: item
      type: '{TItem}'
      description: The element from which to extract the key.
    return:
      type: '{TKey}'
      description: The key for the specified element.
- uid: System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
  id: InsertItem(System.Int32,`1)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  href: System.Collections.ObjectModel.KeyedCollection`2.yml
  name: InsertItem(Int32, TItem)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.InsertItem(System.Int32, TItem)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).InsertItem(System.Int32, TItem)
  type: Method
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 195
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Inserts an element into the @'System.Collections.ObjectModel.KeyedCollection`2' at the specified index.
  syntax:
    content: protected override void InsertItem(int index, TItem item)
    content.vb: Protected Overrides Sub InsertItem(index As Integer, item As TItem)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which *item* should be inserted.
    - id: item
      type: '{TItem}'
      description: The object to insert.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*index* is less than 0.-or-*index* is greater than @''System.Collections.ObjectModel.Collection`1.Count''.'
- uid: System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
  id: Remove(`0)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  href: System.Collections.ObjectModel.KeyedCollection`2.yml
  name: Remove(TKey)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Remove(TKey)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Remove(TKey)
  type: Method
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 130
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Removes the element with the specified key from the @'System.Collections.ObjectModel.KeyedCollection`2'.
  syntax:
    content: public bool Remove(TKey key)
    content.vb: Public Function Remove(key As TKey) As Boolean
    parameters:
    - id: key
      type: '{TKey}'
      description: The key of the element to remove.
    return:
      type: System.Boolean
      description: true if the element is successfully removed; otherwise, false.  This method also returns false if *key* is not found in the @'System.Collections.ObjectModel.KeyedCollection`2'.
  exceptions:
  - type: System.ArgumentNullException
    description: '*key* is null.'
- uid: System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
  id: RemoveItem(System.Int32)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  href: System.Collections.ObjectModel.KeyedCollection`2.yml
  name: RemoveItem(Int32)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.RemoveItem(System.Int32)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).RemoveItem(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 205
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Removes the element at the specified index of the @'System.Collections.ObjectModel.KeyedCollection`2'.
  syntax:
    content: protected override void RemoveItem(int index)
    content.vb: Protected Overrides Sub RemoveItem(index As Integer)
    parameters:
    - id: index
      type: System.Int32
      description: The index of the element to remove.
- uid: System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
  id: SetItem(System.Int32,`1)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  href: System.Collections.ObjectModel.KeyedCollection`2.yml
  name: SetItem(Int32, TItem)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.SetItem(System.Int32, TItem)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).SetItem(System.Int32, TItem)
  type: Method
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 215
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Replaces the item at the specified index with the specified item.
  syntax:
    content: protected override void SetItem(int index, TItem item)
    content.vb: Protected Overrides Sub SetItem(index As Integer, item As TItem)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the item to be replaced.
    - id: item
      type: '{TItem}'
      description: The new item.
references:
- uid: System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IEqualityComparer{{TKey}}
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<TKey>
  name.vb: IEqualityComparer(Of TKey)
  fullName: System.Collections.Generic.IEqualityComparer<TKey>
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer`1
  isExternal: false
  href: System.Collections.Generic.IEqualityComparer`1.yml
  name: IEqualityComparer<>
  name.vb: IEqualityComparer(Of )
  fullName: System.Collections.Generic.IEqualityComparer<>
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    href: System.Collections.Generic.IEqualityComparer`1.yml
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    href: System.Collections.Generic.IEqualityComparer`1.yml
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IDictionary{{TKey},{TItem}}
  definition: System.Collections.Generic.IDictionary`2
  name: Generic.IDictionary<TKey, TItem>
  name.vb: Generic.IDictionary(Of TKey, TItem)
  fullName: System.Collections.Generic.IDictionary<TKey, TItem>
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TItem)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TItem
    fullName: TItem
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TItem
    fullName: TItem
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  isExternal: false
  href: System.Collections.Generic.IDictionary`2.yml
  name: Collections.Generic.IDictionary<, >
  name.vb: Collections.Generic.IDictionary(Of , )
  fullName: System.Collections.Generic.IDictionary<, >
  fullName.vb: System.Collections.Generic.IDictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    href: System.Collections.Generic.IDictionary`2.yml
  - name: <
    fullName: <
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    href: System.Collections.Generic.IDictionary`2.yml
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: )
    fullName: )
- uid: '{TKey}'
  isExternal: false
  name: TKey
  fullName: TKey
- uid: '{TItem}'
  isExternal: false
  name: TItem
  fullName: TItem
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.Collections.Generic.KeyNotFoundException
  isExternal: false
  href: System.Collections.Generic.KeyNotFoundException.yml
  name: KeyNotFoundException
  fullName: System.Collections.Generic.KeyNotFoundException
  summary: The exception that is thrown when the key specified for accessing an element in a collection does not match any key in the collection.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
