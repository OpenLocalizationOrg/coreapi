items:
- uid: System.Threading.AutoResetEvent
  commentId: T:System.Threading.AutoResetEvent
  id: AutoResetEvent
  parent: System.Threading
  children:
  - System.Threading.AutoResetEvent.#ctor(System.Boolean)
  langs:
  - csharp
  - vb
  name: AutoResetEvent
  fullName: System.Threading.AutoResetEvent
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Threading/AutoResetEvent.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AutoResetEvent
    path: src/mscorlib/src/System/Threading/AutoResetEvent.cs
    startLine: 19
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: "\n<p>Notifies a waiting thread that an event has occurred. This class cannot be inherited.</p>\n"
  syntax:
    content: >-
      [HostProtection(Synchronization = true, ExternalThreading = true)]

      [ComVisible(true)]

      public sealed class AutoResetEvent : EventWaitHandle, IDisposable
    content.vb: >-
      <HostProtection(Synchronization:=True, ExternalThreading:=True)>

      <ComVisible(True)>

      Public NotInheritable Class AutoResetEvent
          Inherits EventWaitHandle
          Implements IDisposable
  seealso:
  - type: System.Threading.WaitHandle
    commentId: T:System.Threading.WaitHandle
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Threading.WaitHandle
  - System.Threading.EventWaitHandle
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Threading.EventWaitHandle.OpenExisting(System.String)
  - System.Threading.EventWaitHandle.Reset
  - System.Threading.EventWaitHandle.Set
  - System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Threading.EventWaitHandle@)
  - System.Threading.WaitHandle.WaitTimeout
  - System.Threading.WaitHandle.InvalidHandle
  - System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)
  - System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)
  - System.Threading.WaitHandle.WaitOne
  - System.Threading.WaitHandle.WaitOne(System.Int32)
  - System.Threading.WaitHandle.WaitOne(System.TimeSpan)
  - System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)
  - System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)
  - System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])
  - System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)
  - System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)
  - System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)
  - System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)
  - System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)
  - System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])
  - System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)
  - System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)
  - System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)
  - System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)
  - System.Threading.WaitHandle.Close
  - System.Threading.WaitHandle.Dispose(System.Boolean)
  - System.Threading.WaitHandle.Dispose
  - System.Threading.WaitHandle.Handle
  - System.Threading.WaitHandle.SafeWaitHandle
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: AutoResetEvent
  extensionMethods:
  - System.Threading.WaitHandle.System.Threading.WaitHandleExtensions.GetSafeWaitHandle
  - System.Threading.WaitHandle.System.Threading.WaitHandleExtensions.SetSafeWaitHandle(Microsoft.Win32.SafeHandles.SafeWaitHandle)
- uid: System.Threading.AutoResetEvent.#ctor(System.Boolean)
  commentId: M:System.Threading.AutoResetEvent.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Threading.AutoResetEvent
  langs:
  - csharp
  - vb
  name: AutoResetEvent(Boolean)
  fullName: System.Threading.AutoResetEvent.AutoResetEvent(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Threading/AutoResetEvent.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Threading/AutoResetEvent.cs
    startLine: 23
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Threading.AutoResetEvent\" data-throw-if-not-resolved=\"false\"></xref> class with a Boolean value indicating whether to set the initial state to signaled.</p>\n"
  syntax:
    content: public AutoResetEvent(bool initialState)
    content.vb: Public Sub New(initialState As Boolean)
    parameters:
    - id: initialState
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to set the initial state to signaled; <strong>false</strong> to set the initial state to non-signaled. </p>\n"
  seealso:
  - type: System.Threading.WaitHandle
    commentId: T:System.Threading.WaitHandle
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: AutoResetEvent.AutoResetEvent(Boolean)
references:
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
  nameWithType: System.Threading
  commentId: N:System.Threading
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  fullName: System.MarshalByRefObject
  nameWithType: MarshalByRefObject
  commentId: T:System.MarshalByRefObject
- uid: System.Threading.WaitHandle
  parent: System.Threading
  isExternal: false
  name: WaitHandle
  fullName: System.Threading.WaitHandle
  nameWithType: WaitHandle
  commentId: T:System.Threading.WaitHandle
- uid: System.Threading.EventWaitHandle
  parent: System.Threading
  isExternal: false
  name: EventWaitHandle
  fullName: System.Threading.EventWaitHandle
  nameWithType: EventWaitHandle
  commentId: T:System.Threading.EventWaitHandle
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
  nameWithType: IDisposable
  commentId: T:System.IDisposable
- uid: System.Threading.EventWaitHandle.OpenExisting(System.String)
  parent: System.Threading.EventWaitHandle
  isExternal: true
  name: OpenExisting(String)
  fullName: System.Threading.EventWaitHandle.OpenExisting(System.String)
  spec.csharp:
  - uid: System.Threading.EventWaitHandle.OpenExisting(System.String)
    name: OpenExisting
    fullName: System.Threading.EventWaitHandle.OpenExisting
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.EventWaitHandle.OpenExisting(System.String)
    name: OpenExisting
    fullName: System.Threading.EventWaitHandle.OpenExisting
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: EventWaitHandle.OpenExisting(String)
  commentId: M:System.Threading.EventWaitHandle.OpenExisting(System.String)
- uid: System.Threading.EventWaitHandle.Reset
  parent: System.Threading.EventWaitHandle
  isExternal: false
  name: Reset()
  fullName: System.Threading.EventWaitHandle.Reset()
  spec.csharp:
  - uid: System.Threading.EventWaitHandle.Reset
    name: Reset
    fullName: System.Threading.EventWaitHandle.Reset
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.EventWaitHandle.Reset
    name: Reset
    fullName: System.Threading.EventWaitHandle.Reset
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: EventWaitHandle.Reset()
  commentId: M:System.Threading.EventWaitHandle.Reset
- uid: System.Threading.EventWaitHandle.Set
  parent: System.Threading.EventWaitHandle
  isExternal: false
  name: Set()
  fullName: System.Threading.EventWaitHandle.Set()
  spec.csharp:
  - uid: System.Threading.EventWaitHandle.Set
    name: Set
    fullName: System.Threading.EventWaitHandle.Set
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.EventWaitHandle.Set
    name: Set
    fullName: System.Threading.EventWaitHandle.Set
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: EventWaitHandle.Set()
  commentId: M:System.Threading.EventWaitHandle.Set
- uid: System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Threading.EventWaitHandle@)
  parent: System.Threading.EventWaitHandle
  isExternal: true
  name: TryOpenExisting(String, EventWaitHandle)
  fullName: System.Threading.EventWaitHandle.TryOpenExisting(System.String, System.Threading.EventWaitHandle)
  spec.csharp:
  - uid: System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Threading.EventWaitHandle@)
    name: TryOpenExisting
    fullName: System.Threading.EventWaitHandle.TryOpenExisting
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.EventWaitHandle
    name: EventWaitHandle
    fullName: System.Threading.EventWaitHandle
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Threading.EventWaitHandle@)
    name: TryOpenExisting
    fullName: System.Threading.EventWaitHandle.TryOpenExisting
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.EventWaitHandle
    name: EventWaitHandle
    fullName: System.Threading.EventWaitHandle
  - name: )
    fullName: )
  nameWithType: EventWaitHandle.TryOpenExisting(String, EventWaitHandle)
  commentId: M:System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Threading.EventWaitHandle@)
- uid: System.Threading.WaitHandle.WaitTimeout
  parent: System.Threading.WaitHandle
  isExternal: true
  name: WaitTimeout
  fullName: System.Threading.WaitHandle.WaitTimeout
  nameWithType: WaitHandle.WaitTimeout
  commentId: F:System.Threading.WaitHandle.WaitTimeout
- uid: System.Threading.WaitHandle.InvalidHandle
  parent: System.Threading.WaitHandle
  isExternal: true
  name: InvalidHandle
  fullName: System.Threading.WaitHandle.InvalidHandle
  nameWithType: WaitHandle.InvalidHandle
  commentId: F:System.Threading.WaitHandle.InvalidHandle
- uid: System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)
  parent: System.Threading.WaitHandle
  isExternal: true
  name: WaitOne(Int32, Boolean)
  fullName: System.Threading.WaitHandle.WaitOne(System.Int32, System.Boolean)
  spec.csharp:
  - uid: System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)
    name: WaitOne
    fullName: System.Threading.WaitHandle.WaitOne
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)
    name: WaitOne
    fullName: System.Threading.WaitHandle.WaitOne
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: WaitHandle.WaitOne(Int32, Boolean)
  commentId: M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)
- uid: System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)
  parent: System.Threading.WaitHandle
  isExternal: true
  name: WaitOne(TimeSpan, Boolean)
  fullName: System.Threading.WaitHandle.WaitOne(System.TimeSpan, System.Boolean)
  spec.csharp:
  - uid: System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)
    name: WaitOne
    fullName: System.Threading.WaitHandle.WaitOne
    isExternal: true
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)
    name: WaitOne
    fullName: System.Threading.WaitHandle.WaitOne
    isExternal: true
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: WaitHandle.WaitOne(TimeSpan, Boolean)
  commentId: M:System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)
- uid: System.Threading.WaitHandle.WaitOne
  parent: System.Threading.WaitHandle
  isExternal: true
  name: WaitOne()
  fullName: System.Threading.WaitHandle.WaitOne()
  spec.csharp:
  - uid: System.Threading.WaitHandle.WaitOne
    name: WaitOne
    fullName: System.Threading.WaitHandle.WaitOne
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandle.WaitOne
    name: WaitOne
    fullName: System.Threading.WaitHandle.WaitOne
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: WaitHandle.WaitOne()
  commentId: M:System.Threading.WaitHandle.WaitOne
- uid: System.Threading.WaitHandle.WaitOne(System.Int32)
  parent: System.Threading.WaitHandle
  isExternal: true
  name: WaitOne(Int32)
  fullName: System.Threading.WaitHandle.WaitOne(System.Int32)
  spec.csharp:
  - uid: System.Threading.WaitHandle.WaitOne(System.Int32)
    name: WaitOne
    fullName: System.Threading.WaitHandle.WaitOne
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandle.WaitOne(System.Int32)
    name: WaitOne
    fullName: System.Threading.WaitHandle.WaitOne
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: WaitHandle.WaitOne(Int32)
  commentId: M:System.Threading.WaitHandle.WaitOne(System.Int32)
- uid: System.Threading.WaitHandle.WaitOne(System.TimeSpan)
  parent: System.Threading.WaitHandle
  isExternal: true
  name: WaitOne(TimeSpan)
  fullName: System.Threading.WaitHandle.WaitOne(System.TimeSpan)
  spec.csharp:
  - uid: System.Threading.WaitHandle.WaitOne(System.TimeSpan)
    name: WaitOne
    fullName: System.Threading.WaitHandle.WaitOne
    isExternal: true
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandle.WaitOne(System.TimeSpan)
    name: WaitOne
    fullName: System.Threading.WaitHandle.WaitOne
    isExternal: true
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  nameWithType: WaitHandle.WaitOne(TimeSpan)
  commentId: M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)
- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)
  parent: System.Threading.WaitHandle
  isExternal: true
  name: WaitAll(WaitHandle[], Int32, Boolean)
  fullName: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[], System.Int32, System.Boolean)
  fullname.vb: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle(), System.Int32, System.Boolean)
  name.vb: WaitAll(WaitHandle(), Int32, Boolean)
  spec.csharp:
  - uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)
    name: WaitAll
    fullName: System.Threading.WaitHandle.WaitAll
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)
    name: WaitAll
    fullName: System.Threading.WaitHandle.WaitAll
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: WaitHandle.WaitAll(WaitHandle[], Int32, Boolean)
  nameWithType.vb: WaitHandle.WaitAll(WaitHandle(), Int32, Boolean)
  commentId: M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)
- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)
  parent: System.Threading.WaitHandle
  isExternal: true
  name: WaitAll(WaitHandle[], TimeSpan, Boolean)
  fullName: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[], System.TimeSpan, System.Boolean)
  fullname.vb: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle(), System.TimeSpan, System.Boolean)
  name.vb: WaitAll(WaitHandle(), TimeSpan, Boolean)
  spec.csharp:
  - uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)
    name: WaitAll
    fullName: System.Threading.WaitHandle.WaitAll
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)
    name: WaitAll
    fullName: System.Threading.WaitHandle.WaitAll
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: WaitHandle.WaitAll(WaitHandle[], TimeSpan, Boolean)
  nameWithType.vb: WaitHandle.WaitAll(WaitHandle(), TimeSpan, Boolean)
  commentId: M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)
- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])
  parent: System.Threading.WaitHandle
  isExternal: true
  name: WaitAll(WaitHandle[])
  fullName: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])
  fullname.vb: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle())
  name.vb: WaitAll(WaitHandle())
  spec.csharp:
  - uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])
    name: WaitAll
    fullName: System.Threading.WaitHandle.WaitAll
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])
    name: WaitAll
    fullName: System.Threading.WaitHandle.WaitAll
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: WaitHandle.WaitAll(WaitHandle[])
  nameWithType.vb: WaitHandle.WaitAll(WaitHandle())
  commentId: M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])
- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)
  parent: System.Threading.WaitHandle
  isExternal: true
  name: WaitAll(WaitHandle[], Int32)
  fullName: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[], System.Int32)
  fullname.vb: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle(), System.Int32)
  name.vb: WaitAll(WaitHandle(), Int32)
  spec.csharp:
  - uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)
    name: WaitAll
    fullName: System.Threading.WaitHandle.WaitAll
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)
    name: WaitAll
    fullName: System.Threading.WaitHandle.WaitAll
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: WaitHandle.WaitAll(WaitHandle[], Int32)
  nameWithType.vb: WaitHandle.WaitAll(WaitHandle(), Int32)
  commentId: M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)
- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)
  parent: System.Threading.WaitHandle
  isExternal: true
  name: WaitAll(WaitHandle[], TimeSpan)
  fullName: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[], System.TimeSpan)
  fullname.vb: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle(), System.TimeSpan)
  name.vb: WaitAll(WaitHandle(), TimeSpan)
  spec.csharp:
  - uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)
    name: WaitAll
    fullName: System.Threading.WaitHandle.WaitAll
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)
    name: WaitAll
    fullName: System.Threading.WaitHandle.WaitAll
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  nameWithType: WaitHandle.WaitAll(WaitHandle[], TimeSpan)
  nameWithType.vb: WaitHandle.WaitAll(WaitHandle(), TimeSpan)
  commentId: M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)
- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)
  parent: System.Threading.WaitHandle
  isExternal: true
  name: WaitAny(WaitHandle[], Int32, Boolean)
  fullName: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], System.Int32, System.Boolean)
  fullname.vb: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle(), System.Int32, System.Boolean)
  name.vb: WaitAny(WaitHandle(), Int32, Boolean)
  spec.csharp:
  - uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)
    name: WaitAny
    fullName: System.Threading.WaitHandle.WaitAny
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)
    name: WaitAny
    fullName: System.Threading.WaitHandle.WaitAny
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: WaitHandle.WaitAny(WaitHandle[], Int32, Boolean)
  nameWithType.vb: WaitHandle.WaitAny(WaitHandle(), Int32, Boolean)
  commentId: M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)
- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)
  parent: System.Threading.WaitHandle
  isExternal: true
  name: WaitAny(WaitHandle[], TimeSpan, Boolean)
  fullName: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], System.TimeSpan, System.Boolean)
  fullname.vb: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle(), System.TimeSpan, System.Boolean)
  name.vb: WaitAny(WaitHandle(), TimeSpan, Boolean)
  spec.csharp:
  - uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)
    name: WaitAny
    fullName: System.Threading.WaitHandle.WaitAny
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)
    name: WaitAny
    fullName: System.Threading.WaitHandle.WaitAny
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: WaitHandle.WaitAny(WaitHandle[], TimeSpan, Boolean)
  nameWithType.vb: WaitHandle.WaitAny(WaitHandle(), TimeSpan, Boolean)
  commentId: M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)
- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)
  parent: System.Threading.WaitHandle
  isExternal: true
  name: WaitAny(WaitHandle[], TimeSpan)
  fullName: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], System.TimeSpan)
  fullname.vb: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle(), System.TimeSpan)
  name.vb: WaitAny(WaitHandle(), TimeSpan)
  spec.csharp:
  - uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)
    name: WaitAny
    fullName: System.Threading.WaitHandle.WaitAny
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)
    name: WaitAny
    fullName: System.Threading.WaitHandle.WaitAny
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  nameWithType: WaitHandle.WaitAny(WaitHandle[], TimeSpan)
  nameWithType.vb: WaitHandle.WaitAny(WaitHandle(), TimeSpan)
  commentId: M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)
- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])
  parent: System.Threading.WaitHandle
  isExternal: true
  name: WaitAny(WaitHandle[])
  fullName: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])
  fullname.vb: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle())
  name.vb: WaitAny(WaitHandle())
  spec.csharp:
  - uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])
    name: WaitAny
    fullName: System.Threading.WaitHandle.WaitAny
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])
    name: WaitAny
    fullName: System.Threading.WaitHandle.WaitAny
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: WaitHandle.WaitAny(WaitHandle[])
  nameWithType.vb: WaitHandle.WaitAny(WaitHandle())
  commentId: M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])
- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)
  parent: System.Threading.WaitHandle
  isExternal: true
  name: WaitAny(WaitHandle[], Int32)
  fullName: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], System.Int32)
  fullname.vb: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle(), System.Int32)
  name.vb: WaitAny(WaitHandle(), Int32)
  spec.csharp:
  - uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)
    name: WaitAny
    fullName: System.Threading.WaitHandle.WaitAny
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)
    name: WaitAny
    fullName: System.Threading.WaitHandle.WaitAny
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: WaitHandle.WaitAny(WaitHandle[], Int32)
  nameWithType.vb: WaitHandle.WaitAny(WaitHandle(), Int32)
  commentId: M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)
- uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)
  parent: System.Threading.WaitHandle
  isExternal: true
  name: SignalAndWait(WaitHandle, WaitHandle)
  fullName: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle, System.Threading.WaitHandle)
  spec.csharp:
  - uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)
    name: SignalAndWait
    fullName: System.Threading.WaitHandle.SignalAndWait
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)
    name: SignalAndWait
    fullName: System.Threading.WaitHandle.SignalAndWait
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: )
    fullName: )
  nameWithType: WaitHandle.SignalAndWait(WaitHandle, WaitHandle)
  commentId: M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)
- uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)
  parent: System.Threading.WaitHandle
  isExternal: true
  name: SignalAndWait(WaitHandle, WaitHandle, TimeSpan, Boolean)
  fullName: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle, System.Threading.WaitHandle, System.TimeSpan, System.Boolean)
  spec.csharp:
  - uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)
    name: SignalAndWait
    fullName: System.Threading.WaitHandle.SignalAndWait
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)
    name: SignalAndWait
    fullName: System.Threading.WaitHandle.SignalAndWait
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: WaitHandle.SignalAndWait(WaitHandle, WaitHandle, TimeSpan, Boolean)
  commentId: M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)
- uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)
  parent: System.Threading.WaitHandle
  isExternal: true
  name: SignalAndWait(WaitHandle, WaitHandle, Int32, Boolean)
  fullName: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle, System.Threading.WaitHandle, System.Int32, System.Boolean)
  spec.csharp:
  - uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)
    name: SignalAndWait
    fullName: System.Threading.WaitHandle.SignalAndWait
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)
    name: SignalAndWait
    fullName: System.Threading.WaitHandle.SignalAndWait
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: WaitHandle.SignalAndWait(WaitHandle, WaitHandle, Int32, Boolean)
  commentId: M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)
- uid: System.Threading.WaitHandle.Close
  parent: System.Threading.WaitHandle
  isExternal: true
  name: Close()
  fullName: System.Threading.WaitHandle.Close()
  spec.csharp:
  - uid: System.Threading.WaitHandle.Close
    name: Close
    fullName: System.Threading.WaitHandle.Close
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandle.Close
    name: Close
    fullName: System.Threading.WaitHandle.Close
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: WaitHandle.Close()
  commentId: M:System.Threading.WaitHandle.Close
- uid: System.Threading.WaitHandle.Dispose(System.Boolean)
  parent: System.Threading.WaitHandle
  isExternal: true
  name: Dispose(Boolean)
  fullName: System.Threading.WaitHandle.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.Threading.WaitHandle.Dispose(System.Boolean)
    name: Dispose
    fullName: System.Threading.WaitHandle.Dispose
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandle.Dispose(System.Boolean)
    name: Dispose
    fullName: System.Threading.WaitHandle.Dispose
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: WaitHandle.Dispose(Boolean)
  commentId: M:System.Threading.WaitHandle.Dispose(System.Boolean)
- uid: System.Threading.WaitHandle.Dispose
  parent: System.Threading.WaitHandle
  isExternal: true
  name: Dispose()
  fullName: System.Threading.WaitHandle.Dispose()
  spec.csharp:
  - uid: System.Threading.WaitHandle.Dispose
    name: Dispose
    fullName: System.Threading.WaitHandle.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandle.Dispose
    name: Dispose
    fullName: System.Threading.WaitHandle.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: WaitHandle.Dispose()
  commentId: M:System.Threading.WaitHandle.Dispose
- uid: System.Threading.WaitHandle.Handle
  parent: System.Threading.WaitHandle
  isExternal: true
  name: Handle
  fullName: System.Threading.WaitHandle.Handle
  nameWithType: WaitHandle.Handle
  commentId: P:System.Threading.WaitHandle.Handle
- uid: System.Threading.WaitHandle.SafeWaitHandle
  parent: System.Threading.WaitHandle
  isExternal: true
  name: SafeWaitHandle
  fullName: System.Threading.WaitHandle.SafeWaitHandle
  nameWithType: WaitHandle.SafeWaitHandle
  commentId: P:System.Threading.WaitHandle.SafeWaitHandle
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
- uid: System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: MarshalByRefObject.GetLifetimeService()
  commentId: M:System.MarshalByRefObject.GetLifetimeService
- uid: System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    fullName: System.MarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    fullName: System.MarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  commentId: M:System.MarshalByRefObject.InitializeLifetimeService
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: true
  name: CreateObjRef(Type)
  fullName: System.MarshalByRefObject.CreateObjRef(System.Type)
  spec.csharp:
  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)
    name: CreateObjRef
    fullName: System.MarshalByRefObject.CreateObjRef
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)
    name: CreateObjRef
    fullName: System.MarshalByRefObject.CreateObjRef
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  commentId: M:System.MarshalByRefObject.CreateObjRef(System.Type)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System.Threading.WaitHandle.System.Threading.WaitHandleExtensions.GetSafeWaitHandle
  parent: System.Threading.WaitHandleExtensions
  definition: System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)
  name: GetSafeWaitHandle()
  fullName: System.Threading.WaitHandleExtensions.GetSafeWaitHandle()
  spec.csharp:
  - uid: System.Threading.WaitHandleExtensions.GetSafeWaitHandle
    name: GetSafeWaitHandle
    fullName: System.Threading.WaitHandleExtensions.GetSafeWaitHandle
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandleExtensions.GetSafeWaitHandle
    name: GetSafeWaitHandle
    fullName: System.Threading.WaitHandleExtensions.GetSafeWaitHandle
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: WaitHandleExtensions.GetSafeWaitHandle()
  commentId: M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)
- uid: System.Threading.WaitHandle.System.Threading.WaitHandleExtensions.SetSafeWaitHandle(Microsoft.Win32.SafeHandles.SafeWaitHandle)
  parent: System.Threading.WaitHandleExtensions
  definition: System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)
  name: SetSafeWaitHandle(SafeWaitHandle)
  fullName: System.Threading.WaitHandleExtensions.SetSafeWaitHandle(Microsoft.Win32.SafeHandles.SafeWaitHandle)
  spec.csharp:
  - uid: System.Threading.WaitHandleExtensions.SetSafeWaitHandle(Microsoft.Win32.SafeHandles.SafeWaitHandle)
    name: SetSafeWaitHandle
    fullName: System.Threading.WaitHandleExtensions.SetSafeWaitHandle
  - name: (
    fullName: (
  - uid: Microsoft.Win32.SafeHandles.SafeWaitHandle
    name: SafeWaitHandle
    fullName: Microsoft.Win32.SafeHandles.SafeWaitHandle
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandleExtensions.SetSafeWaitHandle(Microsoft.Win32.SafeHandles.SafeWaitHandle)
    name: SetSafeWaitHandle
    fullName: System.Threading.WaitHandleExtensions.SetSafeWaitHandle
  - name: (
    fullName: (
  - uid: Microsoft.Win32.SafeHandles.SafeWaitHandle
    name: SafeWaitHandle
    fullName: Microsoft.Win32.SafeHandles.SafeWaitHandle
  - name: )
    fullName: )
  nameWithType: WaitHandleExtensions.SetSafeWaitHandle(SafeWaitHandle)
  commentId: M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)
  isExternal: true
  name: GetSafeWaitHandle(WaitHandle)
  fullName: System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)
  spec.csharp:
  - uid: System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)
    name: GetSafeWaitHandle
    fullName: System.Threading.WaitHandleExtensions.GetSafeWaitHandle
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)
    name: GetSafeWaitHandle
    fullName: System.Threading.WaitHandleExtensions.GetSafeWaitHandle
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: )
    fullName: )
  nameWithType: WaitHandleExtensions.GetSafeWaitHandle(WaitHandle)
  commentId: M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)
- uid: System.Threading.WaitHandleExtensions
  parent: System.Threading
  isExternal: false
  name: WaitHandleExtensions
  fullName: System.Threading.WaitHandleExtensions
  nameWithType: WaitHandleExtensions
  commentId: T:System.Threading.WaitHandleExtensions
- uid: System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)
  isExternal: true
  name: SetSafeWaitHandle(WaitHandle, SafeWaitHandle)
  fullName: System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle, Microsoft.Win32.SafeHandles.SafeWaitHandle)
  spec.csharp:
  - uid: System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)
    name: SetSafeWaitHandle
    fullName: System.Threading.WaitHandleExtensions.SetSafeWaitHandle
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Win32.SafeHandles.SafeWaitHandle
    name: SafeWaitHandle
    fullName: Microsoft.Win32.SafeHandles.SafeWaitHandle
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)
    name: SetSafeWaitHandle
    fullName: System.Threading.WaitHandleExtensions.SetSafeWaitHandle
  - name: (
    fullName: (
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    fullName: System.Threading.WaitHandle
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Win32.SafeHandles.SafeWaitHandle
    name: SafeWaitHandle
    fullName: Microsoft.Win32.SafeHandles.SafeWaitHandle
  - name: )
    fullName: )
  nameWithType: WaitHandleExtensions.SetSafeWaitHandle(WaitHandle, SafeWaitHandle)
  commentId: M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
