items:
- uid: System.Xml.Serialization.XmlTypeAttribute
  commentId: T:System.Xml.Serialization.XmlTypeAttribute
  id: XmlTypeAttribute
  parent: System.Xml.Serialization
  children:
  - System.Xml.Serialization.XmlTypeAttribute.#ctor
  - System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)
  - System.Xml.Serialization.XmlTypeAttribute.AnonymousType
  - System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema
  - System.Xml.Serialization.XmlTypeAttribute.Namespace
  - System.Xml.Serialization.XmlTypeAttribute.TypeName
  langs:
  - csharp
  - vb
  name: XmlTypeAttribute
  fullName: System.Xml.Serialization.XmlTypeAttribute
  type: Class
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlTypeAttribute
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 216
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Controls the XML schema that is generated when the attribute target is serialized by the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> belongs to a family of attributes that controls how the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes or deserializes an object. For a complete list of similar attributes, see Attributes That Control XML Serialization.</p>\n<p>You can apply the <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a class, structure, enumeration, or interface declaration.</p>\n<p>Apply the <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document. To see the results of setting the properties of the <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> class, compile your application as an executable or DLL, and pass the resulting file to the XML Schema Definition Tool (Xsd.exe). The tool writes the schema, including the type definition.</p>\n<p>If you set the <xref href=\"System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema\" data-throw-if-not-resolved=\"false\"></xref> property to <strong>false</strong>, the XML Schema Definition Tool (Xsd.exe) does not include the type in the schema. By default, for each public class, the XSD tool generates a <code>complexType</code> and an element of that type.</p>\n<p>For more information about using attributes, see Extending Metadata Using Attributes.</p>\n<p>You can use the word <strong>XmlType</strong> in your code instead of the longer <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example shows two classes to which the <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> has been applied.</p>Classic XmlTypeAttribute Example#1"
  syntax:
    content: 'public class XmlTypeAttribute : Attribute'
    content.vb: >-
      Public Class XmlTypeAttribute
          Inherits Attribute
  seealso:
  - type: System.Xml.Serialization.XmlAttributeOverrides
    commentId: T:System.Xml.Serialization.XmlAttributeOverrides
  - type: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  - type: System.Xml.Serialization.XmlSerializer
    commentId: T:System.Xml.Serialization.XmlSerializer
  - type: System.Xml.Serialization.XmlAttributes.XmlText
    commentId: P:System.Xml.Serialization.XmlAttributes.XmlText
  - type: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.Serialization.XmlTypeAttribute.#ctor
  commentId: M:System.Xml.Serialization.XmlTypeAttribute.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlTypeAttribute
  langs:
  - csharp
  - vb
  name: XmlTypeAttribute()
  fullName: System.Xml.Serialization.XmlTypeAttribute.XmlTypeAttribute()
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 219
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example:
  - "\n<p>The following example creates two instances of the <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> class that are used to override the serialization of the two classes.</p>XMLTypeAttribute1_2#2"
  syntax:
    content: public XmlTypeAttribute()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)
  commentId: M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Xml.Serialization.XmlTypeAttribute
  langs:
  - csharp
  - vb
  name: XmlTypeAttribute(String)
  fullName: System.Xml.Serialization.XmlTypeAttribute.XmlTypeAttribute(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 220
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> class and specifies the name of the XML type.</p>\n"
  remarks: "\n<p>Apply the <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document. To see the results of setting the properties of the <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> class, compile your application as an executable or DLL, and pass the resulting file to the XML Schema Definition Tool (Xsd.exe). The tool writes the schema, including the type definition.</p>\n"
  example:
  - "\n<p>The following example creates two instances of the <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> class that are used to override the serialization of the two classes.</p>XMLTypeAttribute1_2#2"
  syntax:
    content: public XmlTypeAttribute(string typeName)
    content.vb: Public Sub New(typeName As String)
    parameters:
    - id: typeName
      type: System.String
      description: "\n<p>The name of the XML type that the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> generates when it serializes the class instance (and recognizes when it deserializes the class instance). </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlTypeAttribute.AnonymousType
  commentId: P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType
  id: AnonymousType
  parent: System.Xml.Serialization.XmlTypeAttribute
  langs:
  - csharp
  - vb
  name: AnonymousType
  fullName: System.Xml.Serialization.XmlTypeAttribute.AnonymousType
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AnonymousType
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 221
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets a value that determines whether the resulting schema type is an XSD anonymous type.</p>\n"
  example:
  - 
  syntax:
    content: public bool AnonymousType { get; set; }
    content.vb: Public Property AnonymousType As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong>, if the resulting schema type is an XSD anonymous type; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema
  commentId: P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema
  id: IncludeInSchema
  parent: System.Xml.Serialization.XmlTypeAttribute
  langs:
  - csharp
  - vb
  name: IncludeInSchema
  fullName: System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IncludeInSchema
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 222
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets a value that indicates whether to include the type in XML schema documents.</p>\n"
  remarks: "\n<p>Apply the <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document. To see the results of setting the properties of the <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> class, compile your application as an executable or DLL, and pass the resulting file to the XML Schema Definition tool (XSD.exe). The tool writes the schema, including the type definition.</p>\n"
  example:
  - "\n<p>The following example applies the <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the <strong>ExtraneousInfo</strong> class, setting the <xref href=\"System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema\" data-throw-if-not-resolved=\"false\"></xref> property to <strong>false</strong>.</p>Classic XmlTypeAttribute.IncludeInSchema Example#1"
  syntax:
    content: public bool IncludeInSchema { get; set; }
    content.vb: Public Property IncludeInSchema As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to include the type in XML schema documents; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlTypeAttribute.Namespace
  commentId: P:System.Xml.Serialization.XmlTypeAttribute.Namespace
  id: Namespace
  parent: System.Xml.Serialization.XmlTypeAttribute
  langs:
  - csharp
  - vb
  name: Namespace
  fullName: System.Xml.Serialization.XmlTypeAttribute.Namespace
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Namespace
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 223
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets the namespace of the XML type.</p>\n"
  example:
  - "\n<p>The following example applies the <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a class while setting the <xref href=\"System.Xml.Serialization.XmlTypeAttribute.Namespace\" data-throw-if-not-resolved=\"false\"></xref> property.</p>Classic XmlTypeAttribute.Namespace Example#1"
  syntax:
    content: public string Namespace { get; set; }
    content.vb: Public Property Namespace As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The namespace of the XML type.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlTypeAttribute.TypeName
  commentId: P:System.Xml.Serialization.XmlTypeAttribute.TypeName
  id: TypeName
  parent: System.Xml.Serialization.XmlTypeAttribute
  langs:
  - csharp
  - vb
  name: TypeName
  fullName: System.Xml.Serialization.XmlTypeAttribute.TypeName
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TypeName
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 224
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets the name of the XML type.</p>\n"
  remarks: "\n<p>Apply the <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document. To see the results of setting the properties of the <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> class, compile your application as an executable or DLL, and pass the resulting file to the XML Schema Definition Tool (Xsd.exe). The tool writes the schema, including the type definition.</p>\n"
  example:
  - "\n<p>The following example applies the <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the <strong>Person</strong> and <strong>Job</strong> classes. If you compile the class and pass the resulting executable file to the XML Schema Definition tool, the schema is displayed in the Output section.</p>Classic XmlTypeAttribute.TypeName Example#1"
  syntax:
    content: public string TypeName { get; set; }
    content.vb: Public Property TypeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the XML type.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Xml.Serialization
  isExternal: false
  name: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
