items:
- uid: System.Reflection.ManifestResourceInfo
  commentId: T:System.Reflection.ManifestResourceInfo
  id: ManifestResourceInfo
  parent: System.Reflection
  children:
  - System.Reflection.ManifestResourceInfo.#ctor(System.Reflection.Assembly,System.String,System.Reflection.ResourceLocation)
  - System.Reflection.ManifestResourceInfo.FileName
  - System.Reflection.ManifestResourceInfo.ReferencedAssembly
  - System.Reflection.ManifestResourceInfo.ResourceLocation
  langs:
  - csharp
  - vb
  name: ManifestResourceInfo
  fullName: System.Reflection.ManifestResourceInfo
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/ManifestResourceInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ManifestResourceInfo
    path: src/mscorlib/src/System/Reflection/ManifestResourceInfo.cs
    startLine: 18
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: "\n<p>Provides access to manifest resources, which are XML files that describe application dependencies.  </p>\n"
  syntax:
    content: >-
      [ComVisible(true)]

      public class ManifestResourceInfo
    content.vb: >-
      <ComVisible(True)>

      Public Class ManifestResourceInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: ManifestResourceInfo
- uid: System.Reflection.ManifestResourceInfo.#ctor(System.Reflection.Assembly,System.String,System.Reflection.ResourceLocation)
  commentId: M:System.Reflection.ManifestResourceInfo.#ctor(System.Reflection.Assembly,System.String,System.Reflection.ResourceLocation)
  id: '#ctor(System.Reflection.Assembly,System.String,System.Reflection.ResourceLocation)'
  parent: System.Reflection.ManifestResourceInfo
  langs:
  - csharp
  - vb
  name: ManifestResourceInfo(Assembly, String, ResourceLocation)
  fullName: System.Reflection.ManifestResourceInfo.ManifestResourceInfo(System.Reflection.Assembly, System.String, System.Reflection.ResourceLocation)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/ManifestResourceInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Reflection/ManifestResourceInfo.cs
    startLine: 24
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Reflection.ManifestResourceInfo\" data-throw-if-not-resolved=\"false\"></xref> class for a resource that is contained by the specified assembly and file, and that has the specified location.</p>\n"
  syntax:
    content: public ManifestResourceInfo(Assembly containingAssembly, string containingFileName, ResourceLocation resourceLocation)
    content.vb: Public Sub New(containingAssembly As Assembly, containingFileName As String, resourceLocation As ResourceLocation)
    parameters:
    - id: containingAssembly
      type: System.Reflection.Assembly
      description: "\n<p>The assembly that contains the manifest resource.</p>\n"
    - id: containingFileName
      type: System.String
      description: "\n<p>The name of the file that contains the manifest resource, if the file is not the same as the manifest file.</p>\n"
    - id: resourceLocation
      type: System.Reflection.ResourceLocation
      description: "\n<p>A bitwise combination of enumeration values that provides information about the location of the manifest resource.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: ManifestResourceInfo.ManifestResourceInfo(Assembly, String, ResourceLocation)
- uid: System.Reflection.ManifestResourceInfo.FileName
  commentId: P:System.Reflection.ManifestResourceInfo.FileName
  id: FileName
  parent: System.Reflection.ManifestResourceInfo
  langs:
  - csharp
  - vb
  name: FileName
  fullName: System.Reflection.ManifestResourceInfo.FileName
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/ManifestResourceInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FileName
    path: src/mscorlib/src/System/Reflection/ManifestResourceInfo.cs
    startLine: 40
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: "\n<p>Gets the name of the file that contains the manifest resource, if it is not the same as the manifest file. </p>\n"
  syntax:
    content: public virtual string FileName { get; }
    content.vb: Public Overridable ReadOnly Property FileName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The manifest resource's file name.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  nameWithType: ManifestResourceInfo.FileName
- uid: System.Reflection.ManifestResourceInfo.ReferencedAssembly
  commentId: P:System.Reflection.ManifestResourceInfo.ReferencedAssembly
  id: ReferencedAssembly
  parent: System.Reflection.ManifestResourceInfo
  langs:
  - csharp
  - vb
  name: ReferencedAssembly
  fullName: System.Reflection.ManifestResourceInfo.ReferencedAssembly
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/ManifestResourceInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ReferencedAssembly
    path: src/mscorlib/src/System/Reflection/ManifestResourceInfo.cs
    startLine: 33
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: "\n<p>Gets the containing assembly for the manifest resource. </p>\n"
  syntax:
    content: public virtual Assembly ReferencedAssembly { get; }
    content.vb: Public Overridable ReadOnly Property ReferencedAssembly As Assembly
    parameters: []
    return:
      type: System.Reflection.Assembly
      description: "\n<p>The manifest resource's containing assembly.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  nameWithType: ManifestResourceInfo.ReferencedAssembly
- uid: System.Reflection.ManifestResourceInfo.ResourceLocation
  commentId: P:System.Reflection.ManifestResourceInfo.ResourceLocation
  id: ResourceLocation
  parent: System.Reflection.ManifestResourceInfo
  langs:
  - csharp
  - vb
  name: ResourceLocation
  fullName: System.Reflection.ManifestResourceInfo.ResourceLocation
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/ManifestResourceInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ResourceLocation
    path: src/mscorlib/src/System/Reflection/ManifestResourceInfo.cs
    startLine: 47
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: "\n<p>Gets the manifest resource's location. </p>\n"
  syntax:
    content: public virtual ResourceLocation ResourceLocation { get; }
    content.vb: Public Overridable ReadOnly Property ResourceLocation As ResourceLocation
    parameters: []
    return:
      type: System.Reflection.ResourceLocation
      description: "\n<p>A bitwise combination of <xref href=\"System.Reflection.ResourceLocation\" data-throw-if-not-resolved=\"false\"></xref> flags that indicates the location of the manifest resource.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  nameWithType: ManifestResourceInfo.ResourceLocation
references:
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
  nameWithType: System.Reflection
  commentId: N:System.Reflection
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  fullName: System.Reflection.Assembly
  nameWithType: Assembly
  commentId: T:System.Reflection.Assembly
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.Reflection.ResourceLocation
  parent: System.Reflection
  isExternal: false
  name: ResourceLocation
  fullName: System.Reflection.ResourceLocation
  nameWithType: ResourceLocation
  commentId: T:System.Reflection.ResourceLocation
