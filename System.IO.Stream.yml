items:
- uid: System.IO.Stream
  id: Stream
  parent: System.IO
  children:
  - System.IO.Stream.#ctor
  - System.IO.Stream.CanRead
  - System.IO.Stream.CanSeek
  - System.IO.Stream.CanTimeout
  - System.IO.Stream.CanWrite
  - System.IO.Stream.CopyTo(System.IO.Stream)
  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  - System.IO.Stream.Dispose
  - System.IO.Stream.Dispose(System.Boolean)
  - System.IO.Stream.Flush
  - System.IO.Stream.FlushAsync
  - System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  - System.IO.Stream.Length
  - System.IO.Stream.Null
  - System.IO.Stream.Position
  - System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.Stream.ReadByte
  - System.IO.Stream.ReadTimeout
  - System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Stream.SetLength(System.Int64)
  - System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.Stream.WriteByte(System.Byte)
  - System.IO.Stream.WriteTimeout
  href: System.IO.Stream.yml
  name: Stream
  fullName: System.IO.Stream
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/IO/Stream.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 31
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Provides a generic view of a sequence of bytes. This is an abstract class.To browse the .NET Framework source code for this type, see the Reference Source.
  syntax:
    content: 'public abstract class Stream : IDisposable'
    content.vb: Public MustInherit Class Stream Inherits IDisposable
  inheritance:
  - System.Object
- uid: System.IO.Stream.Null
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  fullName: System.IO.Stream.Null
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 42
  assemblies:
  - System.IO
  namespace: System.IO
  summary: A Stream with no backing store.
  syntax:
    content: public static readonly Stream Null
    content.vb: Public Shared ReadOnly Null As Stream
- uid: System.IO.Stream.#ctor
  id: '#ctor'
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: Stream()
  fullName: System.IO.Stream.Stream()
  type: Constructor
  source:
    remote:
      path: src/System.IO/ref/System.IO.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.IO/ref/System.IO.cs
    startLine: 154
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Initializes a new instance of the @'System.IO.Stream' class.
  syntax:
    content: protected Stream()
    content.vb: Protected Sub New
- uid: System.IO.Stream.CanRead
  id: CanRead
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: CanRead
  fullName: System.IO.Stream.CanRead
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 65
  assemblies:
  - System.IO
  namespace: System.IO
  summary: When overridden in a derived class, gets a value indicating whether the current stream supports reading.
  syntax:
    content: public abstract bool CanRead { get; }
    content.vb: Public MustOverride ReadOnly Property CanRead As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the stream supports reading; otherwise, false.
- uid: System.IO.Stream.CanSeek
  id: CanSeek
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: CanSeek
  fullName: System.IO.Stream.CanSeek
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 71
  assemblies:
  - System.IO
  namespace: System.IO
  summary: When overridden in a derived class, gets a value indicating whether the current stream supports seeking.
  syntax:
    content: public abstract bool CanSeek { get; }
    content.vb: Public MustOverride ReadOnly Property CanSeek As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the stream supports seeking; otherwise, false.
- uid: System.IO.Stream.CanTimeout
  id: CanTimeout
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: CanTimeout
  fullName: System.IO.Stream.CanTimeout
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 76
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Gets a value that determines whether the current stream can time out.
  syntax:
    content: public virtual bool CanTimeout { get; }
    content.vb: Public Overridable ReadOnly Property CanTimeout As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: A value that determines whether the current stream can time out.
- uid: System.IO.Stream.CanWrite
  id: CanWrite
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: CanWrite
  fullName: System.IO.Stream.CanWrite
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 84
  assemblies:
  - System.IO
  namespace: System.IO
  summary: When overridden in a derived class, gets a value indicating whether the current stream supports writing.
  syntax:
    content: public abstract bool CanWrite { get; }
    content.vb: Public MustOverride ReadOnly Property CanWrite As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the stream supports writing; otherwise, false.
- uid: System.IO.Stream.Length
  id: Length
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: Length
  fullName: System.IO.Stream.Length
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 89
  assemblies:
  - System.IO
  namespace: System.IO
  summary: When overridden in a derived class, gets the length in bytes of the stream.
  syntax:
    content: public abstract long Length { get; }
    content.vb: Public MustOverride ReadOnly Property Length As Long
    parameters: []
    return:
      type: System.Int64
      description: A long value representing the length of the stream in bytes.
  exceptions:
  - type: System.NotSupportedException
    description: A class derived from Stream does not support seeking.
  - type: System.ObjectDisposedException
    description: Methods were called after the stream was closed.
- uid: System.IO.Stream.Position
  id: Position
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: Position
  fullName: System.IO.Stream.Position
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 93
  assemblies:
  - System.IO
  namespace: System.IO
  summary: When overridden in a derived class, gets or sets the position within the current stream.
  syntax:
    content: public abstract long Position { get; set; }
    content.vb: Public MustOverride Property Position As Long
    parameters: []
    return:
      type: System.Int64
      description: The current position within the stream.
  exceptions:
  - type: System.IO.IOException
    description: An I/O error occurs.
  - type: System.NotSupportedException
    description: The stream does not support seeking.
  - type: System.ObjectDisposedException
    description: Methods were called after the stream was closed.
- uid: System.IO.Stream.ReadTimeout
  id: ReadTimeout
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: ReadTimeout
  fullName: System.IO.Stream.ReadTimeout
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 98
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Gets or sets a value, in miliseconds, that determines how long the stream will attempt to read before timing out.
  syntax:
    content: public virtual int ReadTimeout { get; set; }
    content.vb: Public Overridable Property ReadTimeout As Integer
    parameters: []
    return:
      type: System.Int32
      description: A value, in miliseconds, that determines how long the stream will attempt to read before timing out.
  exceptions:
  - type: System.InvalidOperationException
    description: The @'System.IO.Stream.ReadTimeout' method always throws an @'System.InvalidOperationException'.
- uid: System.IO.Stream.WriteTimeout
  id: WriteTimeout
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: WriteTimeout
  fullName: System.IO.Stream.WriteTimeout
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 109
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Gets or sets a value, in miliseconds, that determines how long the stream will attempt to write before timing out.
  syntax:
    content: public virtual int WriteTimeout { get; set; }
    content.vb: Public Overridable Property WriteTimeout As Integer
    parameters: []
    return:
      type: System.Int32
      description: A value, in miliseconds, that determines how long the stream will attempt to write before timing out.
  exceptions:
  - type: System.InvalidOperationException
    description: The @'System.IO.Stream.WriteTimeout' method always throws an @'System.InvalidOperationException'.
- uid: System.IO.Stream.CopyTo(System.IO.Stream)
  id: CopyTo(System.IO.Stream)
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: CopyTo(Stream)
  fullName: System.IO.Stream.CopyTo(System.IO.Stream)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 173
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Reads the bytes from the current stream and writes them to another stream.
  syntax:
    content: public void CopyTo(Stream destination)
    content.vb: Public Sub CopyTo(destination As Stream)
    parameters:
    - id: destination
      type: System.IO.Stream
      description: The stream to which the contents of the current stream will be copied.
  exceptions:
  - type: System.ArgumentNullException
    description: '*destination* is null.'
  - type: System.NotSupportedException
    description: The current stream does not support reading.-or-*destination* does not support writing.
  - type: System.ObjectDisposedException
    description: Either the current stream or *destination* were closed before the @'System.IO.Stream.CopyTo(System.IO.Stream)' method was called.
  - type: System.IO.IOException
    description: An I/O error occurred.
- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  id: CopyTo(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: CopyTo(Stream, Int32)
  fullName: System.IO.Stream.CopyTo(System.IO.Stream, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 190
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Reads the bytes from the current stream and writes them to another stream, using a specified buffer size.
  syntax:
    content: public void CopyTo(Stream destination, int bufferSize)
    content.vb: Public Sub CopyTo(destination As Stream, bufferSize As Integer)
    parameters:
    - id: destination
      type: System.IO.Stream
      description: The stream to which the contents of the current stream will be copied.
    - id: bufferSize
      type: System.Int32
      description: The size of the buffer. This value must be greater than zero. The default size is 81920.
  exceptions:
  - type: System.ArgumentNullException
    description: '*destination* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*bufferSize* is negative or zero.'
  - type: System.NotSupportedException
    description: The current stream does not support reading.-or-*destination* does not support writing.
  - type: System.ObjectDisposedException
    description: Either the current stream or *destination* were closed before the @'System.IO.Stream.CopyTo(System.IO.Stream)' method was called.
  - type: System.IO.IOException
    description: An I/O error occurred.
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
  id: CopyToAsync(System.IO.Stream)
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: CopyToAsync(Stream)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 120
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Asynchronously reads the bytes from the current stream and writes them to another stream.
  syntax:
    content: public Threading.Tasks.Task CopyToAsync(Stream destination)
    content.vb: Public Function CopyToAsync(destination As Stream) As Threading.Tasks.Task
    parameters:
    - id: destination
      type: System.IO.Stream
      description: The stream to which the contents of the current stream will be copied.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous copy operation.
  exceptions:
  - type: System.ArgumentNullException
    description: '*destination* is null.'
  - type: System.ObjectDisposedException
    description: Either the current stream or the destination stream is disposed.
  - type: System.NotSupportedException
    description: The current stream does not support reading, or the destination stream does not support writing.
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  id: CopyToAsync(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: CopyToAsync(Stream, Int32)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 127
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified buffer size.
  syntax:
    content: public Threading.Tasks.Task CopyToAsync(Stream destination, int bufferSize)
    content.vb: Public Function CopyToAsync(destination As Stream, bufferSize As Integer) As Threading.Tasks.Task
    parameters:
    - id: destination
      type: System.IO.Stream
      description: The stream to which the contents of the current stream will be copied.
    - id: bufferSize
      type: System.Int32
      description: The size, in bytes, of the buffer. This value must be greater than zero. The default size is 81920.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous copy operation.
  exceptions:
  - type: System.ArgumentNullException
    description: '*destination* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*buffersize* is negative or zero.'
  - type: System.ObjectDisposedException
    description: Either the current stream or the destination stream is disposed.
  - type: System.NotSupportedException
    description: The current stream does not support reading, or the destination stream does not support writing.
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  id: CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: CopyToAsync(Stream, Int32, Threading.CancellationToken)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 134
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified buffer size and cancellation token.
  syntax:
    content: public virtual Threading.Tasks.Task CopyToAsync(Stream destination, int bufferSize, Threading.CancellationToken cancellationToken)
    content.vb: Public Overridable Function CopyToAsync(destination As Stream, bufferSize As Integer, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task
    parameters:
    - id: destination
      type: System.IO.Stream
      description: The stream to which the contents of the current stream will be copied.
    - id: bufferSize
      type: System.Int32
      description: The size, in bytes, of the buffer. This value must be greater than zero. The default size is 81920.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests. The default value is @'System.Threading.CancellationToken.None'.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous copy operation.
  exceptions:
  - type: System.ArgumentNullException
    description: '*destination* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*buffersize* is negative or zero.'
  - type: System.ObjectDisposedException
    description: Either the current stream or the destination stream is disposed.
  - type: System.NotSupportedException
    description: The current stream does not support reading, or the destination stream does not support writing.
- uid: System.IO.Stream.Dispose
  id: Dispose
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: Dispose()
  fullName: System.IO.Stream.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 244
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Releases all resources used by the @'System.IO.Stream'.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
- uid: System.IO.Stream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: Dispose(Boolean)
  fullName: System.IO.Stream.Dispose(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 256
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Releases the unmanaged resources used by the @'System.IO.Stream' and optionally releases the managed resources.
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: true to release both managed and unmanaged resources; false to release only unmanaged resources.
- uid: System.IO.Stream.Flush
  id: Flush
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: Flush()
  fullName: System.IO.Stream.Flush()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 263
  assemblies:
  - System.IO
  namespace: System.IO
  summary: When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.
  syntax:
    content: public abstract void Flush()
    content.vb: Public MustOverride Sub Flush
  exceptions:
  - type: System.IO.IOException
    description: An I/O error occurs.
- uid: System.IO.Stream.FlushAsync
  id: FlushAsync
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: FlushAsync()
  fullName: System.IO.Stream.FlushAsync()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 265
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Asynchronously clears all buffers for this stream and causes any buffered data to be written to the underlying device.
  syntax:
    content: public Threading.Tasks.Task FlushAsync()
    content.vb: Public Function FlushAsync As Threading.Tasks.Task
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous flush operation.
  exceptions:
  - type: System.ObjectDisposedException
    description: The stream has been disposed.
- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  id: FlushAsync(System.Threading.CancellationToken)
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: FlushAsync(Threading.CancellationToken)
  fullName: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 272
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.
  syntax:
    content: public virtual Threading.Tasks.Task FlushAsync(Threading.CancellationToken cancellationToken)
    content.vb: Public Overridable Function FlushAsync(cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests. The default value is @'System.Threading.CancellationToken.None'.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous flush operation.
  exceptions:
  - type: System.ObjectDisposedException
    description: The stream has been disposed.
- uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: Read(Byte[], Int32, Int32)
  name.vb: Read(Byte(), Int32, Int32)
  fullName: System.IO.Stream.Read(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.IO.Stream.Read(System.Byte(), System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 727
  assemblies:
  - System.IO
  namespace: System.IO
  summary: When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
  syntax:
    content: public abstract int Read(byte[] buffer, int offset, int count)
    content.vb: Public MustOverride Function Read(buffer As Byte(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes. When this method returns, the buffer contains the specified byte array with the values between *offset* and (*offset* + *count* - 1) replaced by the bytes read from the current source.
    - id: offset
      type: System.Int32
      description: The zero-based byte offset in *buffer* at which to begin storing the data read from the current stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to be read from the current stream.
    return:
      type: System.Int32
      description: The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
  exceptions:
  - type: System.ArgumentException
    description: The sum of *offset* and *count* is larger than the buffer length.
  - type: System.ArgumentNullException
    description: '*buffer* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*offset* or *count* is negative.'
  - type: System.IO.IOException
    description: An I/O error occurs.
  - type: System.NotSupportedException
    description: The stream does not support reading.
  - type: System.ObjectDisposedException
    description: Methods were called after the stream was closed.
- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  id: ReadAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: ReadAsync(Byte[], Int32, Int32)
  name.vb: ReadAsync(Byte(), Int32, Int32)
  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 397
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Asynchronously reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
  syntax:
    content: public Threading.Tasks.Task<int> ReadAsync(byte[] buffer, int offset, int count)
    content.vb: Public Function ReadAsync(buffer As Byte(), offset As Integer, count As Integer) As Threading.Tasks.Task(Of Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer to write the data into.
    - id: offset
      type: System.Int32
      description: The byte offset in *buffer* at which to begin writing data from the stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to read.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A task that represents the asynchronous read operation. The value of the *TResult* parameter contains the total number of bytes read into the buffer. The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.
  exceptions:
  - type: System.ArgumentNullException
    description: '*buffer* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*offset* or *count* is negative.'
  - type: System.ArgumentException
    description: The sum of *offset* and *count* is larger than the buffer length.
  - type: System.NotSupportedException
    description: The stream does not support reading.
  - type: System.ObjectDisposedException
    description: The stream has been disposed.
  - type: System.InvalidOperationException
    description: The stream is currently in use by a previous read operation.
- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: ReadAsync(Byte[], Int32, Int32, Threading.CancellationToken)
  name.vb: ReadAsync(Byte(), Int32, Int32, Threading.CancellationToken)
  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullName.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 404
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.
  syntax:
    content: public virtual Threading.Tasks.Task<int> ReadAsync(byte[] buffer, int offset, int count, Threading.CancellationToken cancellationToken)
    content.vb: Public Overridable Function ReadAsync(buffer As Byte(), offset As Integer, count As Integer, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task(Of Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer to write the data into.
    - id: offset
      type: System.Int32
      description: The byte offset in *buffer* at which to begin writing data from the stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to read.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests. The default value is @'System.Threading.CancellationToken.None'.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A task that represents the asynchronous read operation. The value of the *TResult* parameter contains the total number of bytes read into the buffer. The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.
  exceptions:
  - type: System.ArgumentNullException
    description: '*buffer* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*offset* or *count* is negative.'
  - type: System.ArgumentException
    description: The sum of *offset* and *count* is larger than the buffer length.
  - type: System.NotSupportedException
    description: The stream does not support reading.
  - type: System.ObjectDisposedException
    description: The stream has been disposed.
  - type: System.InvalidOperationException
    description: The stream is currently in use by a previous read operation.
- uid: System.IO.Stream.ReadByte
  id: ReadByte
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: ReadByte()
  fullName: System.IO.Stream.ReadByte()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 735
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
  syntax:
    content: public virtual int ReadByte()
    content.vb: Public Overridable Function ReadByte As Integer
    return:
      type: System.Int32
      description: The unsigned byte cast to an Int32, or -1 if at the end of the stream.
  exceptions:
  - type: System.NotSupportedException
    description: The stream does not support reading.
  - type: System.ObjectDisposedException
    description: Methods were called after the stream was closed.
- uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: Seek(Int64, SeekOrigin)
  fullName: System.IO.Stream.Seek(System.Int64, System.IO.SeekOrigin)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 723
  assemblies:
  - System.IO
  namespace: System.IO
  summary: When overridden in a derived class, sets the position within the current stream.
  syntax:
    content: public abstract long Seek(long offset, SeekOrigin origin)
    content.vb: Public MustOverride Function Seek(offset As Long, origin As SeekOrigin) As Long
    parameters:
    - id: offset
      type: System.Int64
      description: A byte offset relative to the *origin* parameter.
    - id: origin
      type: System.IO.SeekOrigin
      description: A value of type @'System.IO.SeekOrigin' indicating the reference point used to obtain the new position.
    return:
      type: System.Int64
      description: The new position within the current stream.
  exceptions:
  - type: System.IO.IOException
    description: An I/O error occurs.
  - type: System.NotSupportedException
    description: The stream does not support seeking, such as if the stream is constructed from a pipe or console output.
  - type: System.ObjectDisposedException
    description: Methods were called after the stream was closed.
- uid: System.IO.Stream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: SetLength(Int64)
  fullName: System.IO.Stream.SetLength(System.Int64)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 725
  assemblies:
  - System.IO
  namespace: System.IO
  summary: When overridden in a derived class, sets the length of the current stream.
  syntax:
    content: public abstract void SetLength(long value)
    content.vb: Public MustOverride Sub SetLength(value As Long)
    parameters:
    - id: value
      type: System.Int64
      description: The desired length of the current stream in bytes.
  exceptions:
  - type: System.IO.IOException
    description: An I/O error occurs.
  - type: System.NotSupportedException
    description: The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output.
  - type: System.ObjectDisposedException
    description: Methods were called after the stream was closed.
- uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: Write(Byte[], Int32, Int32)
  name.vb: Write(Byte(), Int32, Int32)
  fullName: System.IO.Stream.Write(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.IO.Stream.Write(System.Byte(), System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 747
  assemblies:
  - System.IO
  namespace: System.IO
  summary: When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
  syntax:
    content: public abstract void Write(byte[] buffer, int offset, int count)
    content.vb: Public MustOverride Sub Write(buffer As Byte(), offset As Integer, count As Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes. This method copies *count* bytes from *buffer* to the current stream.
    - id: offset
      type: System.Int32
      description: The zero-based byte offset in *buffer* at which to begin copying bytes to the current stream.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the current stream.
  exceptions:
  - type: System.ArgumentException
    description: "The sum of *offset* and *count* is greater than the buffer length."
  - type: System.ArgumentNullException
    description: '*buffer*  is null.'
  - type: System.ArgumentOutOfRangeException
    description: "*offset* or *count* is negative."
  - type: System.IO.IOException
    description: An I/O error occured, such as the specified file cannot be found.
  - type: System.NotSupportedException
    description: The stream does not support writing.
  - type: System.ObjectDisposedException
    description: '@''System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)'' was called after the stream was closed.'
- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  id: WriteAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: WriteAsync(Byte[], Int32, Int32)
  name.vb: WriteAsync(Byte(), Int32, Int32)
  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 692
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Asynchronously writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
  syntax:
    content: public Threading.Tasks.Task WriteAsync(byte[] buffer, int offset, int count)
    content.vb: Public Function WriteAsync(buffer As Byte(), offset As Integer, count As Integer) As Threading.Tasks.Task
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer to write data from.
    - id: offset
      type: System.Int32
      description: The zero-based byte offset in *buffer* from which to begin copying bytes to the stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to write.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous write operation.
  exceptions:
  - type: System.ArgumentNullException
    description: '*buffer* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*offset* or *count* is negative.'
  - type: System.ArgumentException
    description: The sum of *offset* and *count* is larger than the buffer length.
  - type: System.NotSupportedException
    description: The stream does not support writing.
  - type: System.ObjectDisposedException
    description: The stream has been disposed.
  - type: System.InvalidOperationException
    description: The stream is currently in use by a previous write operation.
- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: WriteAsync(Byte[], Int32, Int32, Threading.CancellationToken)
  name.vb: WriteAsync(Byte(), Int32, Int32, Threading.CancellationToken)
  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullName.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 699
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.
  syntax:
    content: public virtual Threading.Tasks.Task WriteAsync(byte[] buffer, int offset, int count, Threading.CancellationToken cancellationToken)
    content.vb: Public Overridable Function WriteAsync(buffer As Byte(), offset As Integer, count As Integer, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer to write data from.
    - id: offset
      type: System.Int32
      description: The zero-based byte offset in *buffer* from which to begin copying bytes to the stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to write.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests. The default value is @'System.Threading.CancellationToken.None'.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous write operation.
  exceptions:
  - type: System.ArgumentNullException
    description: '*buffer* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*offset* or *count* is negative.'
  - type: System.ArgumentException
    description: The sum of *offset* and *count* is larger than the buffer length.
  - type: System.NotSupportedException
    description: The stream does not support writing.
  - type: System.ObjectDisposedException
    description: The stream has been disposed.
  - type: System.InvalidOperationException
    description: The stream is currently in use by a previous write operation.
- uid: System.IO.Stream.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.IO.Stream
  href: System.IO.Stream.yml
  name: WriteByte(Byte)
  fullName: System.IO.Stream.WriteByte(System.Byte)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/Stream.cs
    startLine: 754
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Writes a byte to the current position in the stream and advances the position within the stream by one byte.
  syntax:
    content: public virtual void WriteByte(byte value)
    content.vb: Public Overridable Sub WriteByte(value As Byte)
    parameters:
    - id: value
      type: System.Byte
      description: The byte to write to the stream.
  exceptions:
  - type: System.IO.IOException
    description: An I/O error occurs.
  - type: System.NotSupportedException
    description: The stream does not support writing, or the stream is already closed.
  - type: System.ObjectDisposedException
    description: Methods were called after the stream was closed.
references:
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.Int64
  parent: System
  isExternal: false
  href: System.Int64.yml
  name: Int64
  fullName: System.Int64
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  href: System.IO.Stream.yml
  name: IO.Stream
  fullName: System.IO.Stream
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: Threading.Tasks.Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  href: System.Threading.CancellationToken.yml
  name: Threading.CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Byte[]
  isExternal: false
  href: System.Byte.yml
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    href: System.Byte.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    href: System.Byte.yml
  - name: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{System.Int32}
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<Int32>
  name.vb: Threading.Tasks.Task(Of Int32)
  fullName: System.Threading.Tasks.Task<System.Int32>
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: false
  href: System.Threading.Tasks.Task`1.yml
  name: Threading.Tasks.Task<>
  name.vb: Threading.Tasks.Task(Of )
  fullName: System.Threading.Tasks.Task<>
  fullName.vb: System.Threading.Tasks.Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: false
  href: System.IO.SeekOrigin.yml
  name: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Byte
  parent: System
  isExternal: false
  href: System.Byte.yml
  name: Byte
  fullName: System.Byte
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  href: System.NotSupportedException.yml
  name: NotSupportedException
  fullName: System.NotSupportedException
  summary: The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.
- uid: System.ObjectDisposedException
  isExternal: false
  href: System.ObjectDisposedException.yml
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
  summary: The exception that is thrown when an operation is performed on a disposed object.
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  href: System.IO.IOException.yml
  name: IOException
  fullName: System.IO.IOException
  summary: The exception that is thrown when an I/O error occurs.
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  href: System.InvalidOperationException.yml
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  summary: The exception that is thrown when a method call is invalid for the object's current state.
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
