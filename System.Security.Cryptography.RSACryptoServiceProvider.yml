items:
- uid: System.Security.Cryptography.RSACryptoServiceProvider
  id: RSACryptoServiceProvider
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor
  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)
  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)
  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)
  - System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo
  - System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSACryptoServiceProvider.Dispose(System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])
  - System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)
  - System.Security.Cryptography.RSACryptoServiceProvider.KeySize
  - System.Security.Cryptography.RSACryptoServiceProvider.LegalKeySizes
  - System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp
  - System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly
  - System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)
  - System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)
  - System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)
  - System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)
  - System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore
  - System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])
  - System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: RSACryptoServiceProvider
  fullName: System.Security.Cryptography.RSACryptoServiceProvider
  type: Class
  source:
    remote: &o0
      path: src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/RSACryptoServiceProvider.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/RSACryptoServiceProvider.cs
    startLine: 14
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Performs asymmetric encryption and decryption using the implementation of the @'System.Security.Cryptography.RSA' algorithm provided by the cryptographic service provider (CSP). This class cannot be inherited.
  syntax:
    content: 'public sealed class RSACryptoServiceProvider : RSA, ICspAsymmetricAlgorithm'
    content.vb: Public NotInheritable Class RSACryptoServiceProvider Inherits RSA Implements ICspAsymmetricAlgorithm
  inheritance:
  - System.Object
  implements:
  - System.Security.Cryptography.ICspAsymmetricAlgorithm
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: RSACryptoServiceProvider()
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/RSACryptoServiceProvider.cs
    startLine: 23
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the @'System.Security.Cryptography.RSACryptoServiceProvider' class using the default key.
  syntax:
    content: public RSACryptoServiceProvider()
    content.vb: Public Sub New
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: The cryptographic service provider (CSP) cannot be acquired.
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: RSACryptoServiceProvider(Int32)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/RSACryptoServiceProvider.cs
    startLine: 32
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the @'System.Security.Cryptography.RSACryptoServiceProvider' class with the specified key size.
  syntax:
    content: public RSACryptoServiceProvider(int dwKeySize)
    content.vb: Public Sub New(dwKeySize As Integer)
    parameters:
    - id: dwKeySize
      type: System.Int32
      description: The size of the key to use in bits.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: The cryptographic service provider (CSP) cannot be acquired.
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)
  id: '#ctor(System.Int32,System.Security.Cryptography.CspParameters)'
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: RSACryptoServiceProvider(Int32, CspParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(System.Int32, System.Security.Cryptography.CspParameters)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/RSACryptoServiceProvider.cs
    startLine: 41
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the @'System.Security.Cryptography.RSACryptoServiceProvider' class with the specified key size and parameters.
  syntax:
    content: public RSACryptoServiceProvider(int dwKeySize, CspParameters parameters)
    content.vb: Public Sub New(dwKeySize As Integer, parameters As CspParameters)
    parameters:
    - id: dwKeySize
      type: System.Int32
      description: The size of the key to use in bits.
    - id: parameters
      type: System.Security.Cryptography.CspParameters
      description: The parameters to be passed to the cryptographic service provider (CSP).
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: The CSP cannot be acquired.-or- The key cannot be created.
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)
  id: '#ctor(System.Security.Cryptography.CspParameters)'
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: RSACryptoServiceProvider(CspParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(System.Security.Cryptography.CspParameters)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/RSACryptoServiceProvider.cs
    startLine: 46
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the @'System.Security.Cryptography.RSACryptoServiceProvider' class with the specified parameters.
  syntax:
    content: public RSACryptoServiceProvider(CspParameters parameters)
    content.vb: Public Sub New(parameters As CspParameters)
    parameters:
    - id: parameters
      type: System.Security.Cryptography.CspParameters
      description: The parameters to be passed to the cryptographic service provider (CSP).
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: The CSP cannot be acquired.
- uid: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo
  id: CspKeyContainerInfo
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: CspKeyContainerInfo
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/RSACryptoServiceProvider.cs
    startLine: 95
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Gets a @'System.Security.Cryptography.CspKeyContainerInfo' object that describes additional information about a cryptographic key pair.
  syntax:
    content: public CspKeyContainerInfo CspKeyContainerInfo { get; }
    content.vb: Public ReadOnly Property CspKeyContainerInfo As CspKeyContainerInfo
    parameters: []
    return:
      type: System.Security.Cryptography.CspKeyContainerInfo
      description: A @'System.Security.Cryptography.CspKeyContainerInfo' object that describes additional information about a cryptographic key pair.
- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeySize
  id: KeySize
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: KeySize
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.KeySize
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/RSACryptoServiceProvider.cs
    startLine: 107
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Gets the size of the current key.
  syntax:
    content: public override int KeySize { get; }
    content.vb: Public Overrides ReadOnly Property KeySize As Integer
    parameters: []
    return:
      type: System.Int32
      description: The size of the key in bits.
- uid: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp
  id: PersistKeyInCsp
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: PersistKeyInCsp
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/RSACryptoServiceProvider.cs
    startLine: 129
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Gets or sets a value indicating whether the key should be persisted in the cryptographic service provider (CSP).
  syntax:
    content: public bool PersistKeyInCsp { get; set; }
    content.vb: Public Property PersistKeyInCsp As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the key should be persisted in the CSP; otherwise, false.
- uid: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly
  id: PublicOnly
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: PublicOnly
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/RSACryptoServiceProvider.cs
    startLine: 159
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Gets a value that indicates whether the @'System.Security.Cryptography.RSACryptoServiceProvider' object contains only a public key.
  syntax:
    content: public bool PublicOnly { get; }
    content.vb: Public ReadOnly Property PublicOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the @'System.Security.Cryptography.RSACryptoServiceProvider' object contains only a public key; otherwise, false.
- uid: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore
  id: UseMachineKeyStore
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: UseMachineKeyStore
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/RSACryptoServiceProvider.cs
    startLine: 172
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Gets or sets a value indicating whether the key should be persisted in the computer's key store instead of the user profile store.
  syntax:
    content: public static bool UseMachineKeyStore { get; set; }
    content.vb: Public Shared Property UseMachineKeyStore As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the key should be persisted in the computer key store; otherwise, false.
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)
  id: Decrypt(System.Byte[],System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: Decrypt(Byte[], Boolean)
  name.vb: Decrypt(Byte(), Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[], System.Boolean)
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte(), System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/RSACryptoServiceProvider.cs
    startLine: 190
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Decrypts data with the @'System.Security.Cryptography.RSA' algorithm.
  syntax:
    content: public byte[] Decrypt(byte[] rgb, bool fOAEP)
    content.vb: Public Function Decrypt(rgb As Byte(), fOAEP As Boolean) As Byte()
    parameters:
    - id: rgb
      type: System.Byte[]
      description: The data to be decrypted.
    - id: fOAEP
      type: System.Boolean
      description: true to perform direct @'System.Security.Cryptography.RSA' decryption using OAEP padding (only available on a computer running Microsoft Windows XP or later); otherwise, false to use PKCS#1 v1.5 padding.
    return:
      type: System.Byte[]
      description: The decrypted data, which is the original plain text before encryption.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: The cryptographic service provider (CSP) cannot be acquired.-or- The *fOAEP* parameter is true and the length of the *rgb* parameter is greater than @'System.Security.Cryptography.RSACryptoServiceProvider.KeySize'.-or- The *fOAEP* parameter is true and OAEP is not supported. -or- The key does not match the encrypted data. However, the exception wording may not be accurate. For example, it may say Not enough storage is available to process this command.
  - type: System.ArgumentNullException
    description: '*rgb *is null.'
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: Decrypt(Byte[], RSAEncryptionPadding)
  name.vb: Decrypt(Byte(), RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[], System.Security.Cryptography.RSAEncryptionPadding)
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte(), System.Security.Cryptography.RSAEncryptionPadding)
  type: Method
  source:
    remote: &o1
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 74
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Decrypts data that was previously encrypted with the @'System.Security.Cryptography.RSA' algorithm by using the specified padding.
  syntax:
    content: public override byte[] Decrypt(byte[] data, RSAEncryptionPadding padding)
    content.vb: Public Overrides Function Decrypt(data As Byte(), padding As RSAEncryptionPadding) As Byte()
    parameters:
    - id: data
      type: System.Byte[]
      description: The data to decrypt.
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: The padding.
    return:
      type: System.Byte[]
      description: The decrypted data.
  exceptions:
  - type: System.ArgumentNullException
    description: '*data* is null. -or-*padding* is null.'
  - type: System.Security.Cryptography.CryptographicException
    description: The padding mode is not supported.
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: Dispose(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Dispose(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/RSACryptoServiceProvider.cs
    startLine: 212
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)
  id: Encrypt(System.Byte[],System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: Encrypt(Byte[], Boolean)
  name.vb: Encrypt(Byte(), Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[], System.Boolean)
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte(), System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/RSACryptoServiceProvider.cs
    startLine: 237
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Encrypts data with the @'System.Security.Cryptography.RSA' algorithm.
  syntax:
    content: public byte[] Encrypt(byte[] rgb, bool fOAEP)
    content.vb: Public Function Encrypt(rgb As Byte(), fOAEP As Boolean) As Byte()
    parameters:
    - id: rgb
      type: System.Byte[]
      description: The data to be encrypted.
    - id: fOAEP
      type: System.Boolean
      description: true to perform direct @'System.Security.Cryptography.RSA' encryption using OAEP padding (only available on a computer running Microsoft Windows XP or later); otherwise, false to use PKCS#1 v1.5 padding.
    return:
      type: System.Byte[]
      description: The encrypted data.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: The cryptographic service provider (CSP) cannot be acquired.-or- The length of the *rgb* parameter is greater than the maximum allowed length.-or- The *fOAEP* parameter is true and OAEP padding is not supported.
  - type: System.ArgumentNullException
    description: '*rgb *is null.'
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: Encrypt(Byte[], RSAEncryptionPadding)
  name.vb: Encrypt(Byte(), RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[], System.Security.Cryptography.RSAEncryptionPadding)
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte(), System.Security.Cryptography.RSAEncryptionPadding)
  type: Method
  source:
    remote: *o1
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 77
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Encrypts data with the @'System.Security.Cryptography.RSA' algorithm using the specified padding.
  syntax:
    content: public override byte[] Encrypt(byte[] data, RSAEncryptionPadding padding)
    content.vb: Public Overrides Function Encrypt(data As Byte(), padding As RSAEncryptionPadding) As Byte()
    parameters:
    - id: data
      type: System.Byte[]
      description: The data to encrypt.
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: The padding.
    return:
      type: System.Byte[]
      description: The encrypted data.
  exceptions:
  - type: System.ArgumentNullException
    description: '*data* is null. -or-*padding* is null.'
  - type: System.Security.Cryptography.CryptographicException
    description: The padding mode is not supported.
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)
  id: ExportCspBlob(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: ExportCspBlob(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/RSACryptoServiceProvider.cs
    startLine: 254
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Exports a blob containing the key information associated with an @'System.Security.Cryptography.RSACryptoServiceProvider' object.
  syntax:
    content: public byte[] ExportCspBlob(bool includePrivateParameters)
    content.vb: Public Function ExportCspBlob(includePrivateParameters As Boolean) As Byte()
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: true to include the private key; otherwise, false.
    return:
      type: System.Byte[]
      description: A byte array containing the key information associated with an @'System.Security.Cryptography.RSACryptoServiceProvider' object.
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)
  id: ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: ExportParameters(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/RSACryptoServiceProvider.cs
    startLine: 263
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Exports the @'System.Security.Cryptography.RSAParameters'.
  syntax:
    content: public override RSAParameters ExportParameters(bool includePrivateParameters)
    content.vb: Public Overrides Function ExportParameters(includePrivateParameters As Boolean) As RSAParameters
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: true to include private parameters; otherwise, false.
    return:
      type: System.Security.Cryptography.RSAParameters
      description: The parameters for @'System.Security.Cryptography.RSA'.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: The key cannot be exported.
- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: HashData(Byte[], Int32, Int32, HashAlgorithmName)
  name.vb: HashData(Byte(), Int32, Int32, HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte[], System.Int32, System.Int32, System.Security.Cryptography.HashAlgorithmName)
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte(), System.Int32, System.Int32, System.Security.Cryptography.HashAlgorithmName)
  type: Method
  source:
    remote: *o1
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 80
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData(byte[] data, int offset, int count, HashAlgorithmName hashAlgorithm)
    content.vb: Protected Overrides Function HashData(data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()
    parameters:
    - id: data
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
    return:
      type: System.Byte[]
- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: HashData(IO.Stream, HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.IO.Stream, System.Security.Cryptography.HashAlgorithmName)
  type: Method
  source:
    remote: *o1
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 81
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData(IO.Stream data, HashAlgorithmName hashAlgorithm)
    content.vb: Protected Overrides Function HashData(data As IO.Stream, hashAlgorithm As HashAlgorithmName) As Byte()
    parameters:
    - id: data
      type: System.IO.Stream
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
    return:
      type: System.Byte[]
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])
  id: ImportCspBlob(System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: ImportCspBlob(Byte[])
  name.vb: ImportCspBlob(Byte())
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte())
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/RSACryptoServiceProvider.cs
    startLine: 285
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Imports a blob that represents RSA key information.
  syntax:
    content: public void ImportCspBlob(byte[] keyBlob)
    content.vb: Public Sub ImportCspBlob(keyBlob As Byte())
    parameters:
    - id: keyBlob
      type: System.Byte[]
      description: A byte array that represents an RSA key blob.
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)
  id: ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: ImportParameters(RSAParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)
  type: Method
  source:
    remote: *o1
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 83
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Imports the specified @'System.Security.Cryptography.RSAParameters'.
  syntax:
    content: public override void ImportParameters(RSAParameters parameters)
    content.vb: Public Overrides Sub ImportParameters(parameters As RSAParameters)
    parameters:
    - id: parameters
      type: System.Security.Cryptography.RSAParameters
      description: The parameters for @'System.Security.Cryptography.RSA'.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: The cryptographic service provider (CSP) cannot be acquired.-or- The *parameters* parameter has missing fields.
- uid: System.Security.Cryptography.RSACryptoServiceProvider.LegalKeySizes
  id: LegalKeySizes
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: LegalKeySizes
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.LegalKeySizes
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/RSACryptoServiceProvider.cs
    startLine: 118
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  syntax:
    content: public override KeySizes[] LegalKeySizes { get; }
    content.vb: Public Overrides ReadOnly Property LegalKeySizes As KeySizes()
    parameters: []
    return:
      type: System.Security.Cryptography.KeySizes[]
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)
  id: SignData(System.Byte[],System.Int32,System.Int32,System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: SignData(Byte[], Int32, Int32, Object)
  name.vb: SignData(Byte(), Int32, Int32, Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[], System.Int32, System.Int32, System.Object)
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte(), System.Int32, System.Int32, System.Object)
  type: Method
  source:
    remote: *o1
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 85
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Computes the hash value of a subset of the specified byte array using the specified hash algorithm, and signs the resulting hash value.
  syntax:
    content: public byte[] SignData(byte[] buffer, int offset, int count, object halg)
    content.vb: Public Function SignData(buffer As Byte(), offset As Integer, count As Integer, halg As Object) As Byte()
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The input data for which to compute the hash.
    - id: offset
      type: System.Int32
      description: The offset into the array from which to begin using data.
    - id: count
      type: System.Int32
      description: The number of bytes in the array to use as data.
    - id: halg
      type: System.Object
      description: The hash algorithm to use to create the hash value.
    return:
      type: System.Byte[]
      description: The @'System.Security.Cryptography.RSA' signature for the specified data.
  exceptions:
  - type: System.ArgumentNullException
    description: The *halg* parameter is null.
  - type: System.ArgumentException
    description: The *halg* parameter is not a valid type.
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)
  id: SignData(System.Byte[],System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: SignData(Byte[], Object)
  name.vb: SignData(Byte(), Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[], System.Object)
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte(), System.Object)
  type: Method
  source:
    remote: *o1
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 86
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Computes the hash value of the specified byte array using the specified hash algorithm, and signs the resulting hash value.
  syntax:
    content: public byte[] SignData(byte[] buffer, object halg)
    content.vb: Public Function SignData(buffer As Byte(), halg As Object) As Byte()
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The input data for which to compute the hash.
    - id: halg
      type: System.Object
      description: The hash algorithm to use to create the hash value.
    return:
      type: System.Byte[]
      description: The @'System.Security.Cryptography.RSA' signature for the specified data.
  exceptions:
  - type: System.ArgumentNullException
    description: The *halg* parameter is null.
  - type: System.ArgumentException
    description: The *halg* parameter is not a valid type.
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)
  id: SignData(System.IO.Stream,System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: SignData(IO.Stream, Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream, System.Object)
  type: Method
  source:
    remote: *o1
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 87
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Computes the hash value of the specified input stream using the specified hash algorithm, and signs the resulting hash value.
  syntax:
    content: public byte[] SignData(IO.Stream inputStream, object halg)
    content.vb: Public Function SignData(inputStream As IO.Stream, halg As Object) As Byte()
    parameters:
    - id: inputStream
      type: System.IO.Stream
      description: The input data for which to compute the hash.
    - id: halg
      type: System.Object
      description: The hash algorithm to use to create the hash value.
    return:
      type: System.Byte[]
      description: The @'System.Security.Cryptography.RSA' signature for the specified data.
  exceptions:
  - type: System.ArgumentNullException
    description: The *halg* parameter is null.
  - type: System.ArgumentException
    description: The *halg* parameter is not a valid type.
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: SignHash(Byte[], HashAlgorithmName, RSASignaturePadding)
  name.vb: SignHash(Byte(), HashAlgorithmName, RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[], System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte(), System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  type: Method
  source:
    remote: *o1
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 88
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Computes the signature for the specified hash value by encrypting it with the private key using the specified padding.
  syntax:
    content: public override byte[] SignHash(byte[] hash, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
    content.vb: Public Overrides Function SignHash(hash As Byte(), hashAlgorithm As HashAlgorithmName, padding As RSASignaturePadding) As Byte()
    parameters:
    - id: hash
      type: System.Byte[]
      description: The hash value of the data to be signed.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The hash algorithm name used to create the hash value of the data.
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: The padding.
    return:
      type: System.Byte[]
      description: The @'System.Security.Cryptography.RSA' signature for the specified hash value.
  exceptions:
  - type: System.ArgumentException
    description: '*hashAlgorithm* is null or @''System.String.Empty''.'
  - type: System.ArgumentNullException
    description: '*hash* is null. -or-*padding* is null.'
  - type: System.Security.Cryptography.CryptographicException
    description: '*padding* does not equal @''System.Security.Cryptography.RSASignaturePadding.Pkcs1''.'
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)
  id: SignHash(System.Byte[],System.String)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: SignHash(Byte[], String)
  name.vb: SignHash(Byte(), String)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[], System.String)
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte(), System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/RSACryptoServiceProvider.cs
    startLine: 380
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Computes the signature for the specified hash value by encrypting it with the private key.
  syntax:
    content: public byte[] SignHash(byte[] rgbHash, string str)
    content.vb: Public Function SignHash(rgbHash As Byte(), str As String) As Byte()
    parameters:
    - id: rgbHash
      type: System.Byte[]
      description: The hash value of the data to be signed.
    - id: str
      type: System.String
      description: The hash algorithm identifier (OID) used to create the hash value of the data.
    return:
      type: System.Byte[]
      description: The @'System.Security.Cryptography.RSA' signature for the specified hash value.
  exceptions:
  - type: System.ArgumentNullException
    description: The *rgbHash* parameter is null.
  - type: System.Security.Cryptography.CryptographicException
    description: The cryptographic service provider (CSP) cannot be acquired.-or- There is no private key.
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])
  id: VerifyData(System.Byte[],System.Object,System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: VerifyData(Byte[], Object, Byte[])
  name.vb: VerifyData(Byte(), Object, Byte())
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[], System.Object, System.Byte[])
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte(), System.Object, System.Byte())
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/RSACryptoServiceProvider.cs
    startLine: 408
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Verifies that a digital signature is valid by determining the hash value in the signature using the provided public key and comparing it to the hash value of the provided data.
  syntax:
    content: public bool VerifyData(byte[] buffer, object halg, byte[] signature)
    content.vb: Public Function VerifyData(buffer As Byte(), halg As Object, signature As Byte()) As Boolean
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The data that was signed.
    - id: halg
      type: System.Object
      description: The name of the hash algorithm used to create the hash value of the data.
    - id: signature
      type: System.Byte[]
      description: The signature data to be verified.
    return:
      type: System.Boolean
      description: true if the signature is valid; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: The *halg* parameter is null.
  - type: System.ArgumentException
    description: The *halg* parameter is not a valid type.
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)
  name.vb: VerifyHash(Byte(), Byte(), HashAlgorithmName, RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[], System.Byte[], System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte(), System.Byte(), System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  type: Method
  source:
    remote: *o1
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 91
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Verifies that a digital signature is valid by determining the hash value in the signature using the specified hashing algorithm and padding, and comparing it to the provided hash value.
  syntax:
    content: public override bool VerifyHash(byte[] hash, byte[] signature, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
    content.vb: Public Overrides Function VerifyHash(hash As Byte(), signature As Byte(), hashAlgorithm As HashAlgorithmName, padding As RSASignaturePadding) As Boolean
    parameters:
    - id: hash
      type: System.Byte[]
      description: The hash value of the signed data.
    - id: signature
      type: System.Byte[]
      description: The signature data to be verified.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The hash algorithm name used to create the hash value.
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: The padding.
    return:
      type: System.Boolean
      description: true if the signature is valid; otherwise, false.
  exceptions:
  - type: System.ArgumentException
    description: '*hashAlgorithm* is null or @''System.String.Empty''.'
  - type: System.ArgumentNullException
    description: '*hash* is null. -or-*padding* is null.'
  - type: System.Security.Cryptography.CryptographicException
    description: '*padding* does not equal @''System.Security.Cryptography.RSASignaturePadding.Pkcs1''.'
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])
  id: VerifyHash(System.Byte[],System.String,System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  href: System.Security.Cryptography.RSACryptoServiceProvider.yml
  name: VerifyHash(Byte[], String, Byte[])
  name.vb: VerifyHash(Byte(), String, Byte())
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[], System.String, System.Byte[])
  fullName.vb: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte(), System.String, System.Byte())
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/RSACryptoServiceProvider.cs
    startLine: 419
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Verifies that a digital signature is valid by determining the hash value in the signature using the provided public key and comparing it to the provided hash value.
  syntax:
    content: public bool VerifyHash(byte[] rgbHash, string str, byte[] rgbSignature)
    content.vb: Public Function VerifyHash(rgbHash As Byte(), str As String, rgbSignature As Byte()) As Boolean
    parameters:
    - id: rgbHash
      type: System.Byte[]
      description: The hash value of the signed data.
    - id: str
      type: System.String
      description: The hash algorithm identifier (OID) used to create the hash value of the data.
    - id: rgbSignature
      type: System.Byte[]
      description: The signature data to be verified.
    return:
      type: System.Boolean
      description: true if the signature is valid; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: The *rgbHash* parameter is null.-or- The *rgbSignature* parameter is null.
  - type: System.Security.Cryptography.CryptographicException
    description: The cryptographic service provider (CSP) cannot be acquired.-or- The signature cannot be verified.
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CspParameters
  parent: System.Security.Cryptography
  isExternal: false
  href: System.Security.Cryptography.CspParameters.yml
  name: CspParameters
  fullName: System.Security.Cryptography.CspParameters
- uid: System.Security.Cryptography.CspKeyContainerInfo
  parent: System.Security.Cryptography
  isExternal: false
  href: System.Security.Cryptography.CspKeyContainerInfo.yml
  name: CspKeyContainerInfo
  fullName: System.Security.Cryptography.CspKeyContainerInfo
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  isExternal: false
  href: System.Byte.yml
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    href: System.Byte.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    href: System.Byte.yml
  - name: ()
    fullName: ()
- uid: System.Security.Cryptography.RSAEncryptionPadding
  parent: System.Security.Cryptography
  isExternal: false
  href: System.Security.Cryptography.RSAEncryptionPadding.yml
  name: RSAEncryptionPadding
  fullName: System.Security.Cryptography.RSAEncryptionPadding
- uid: System.Security.Cryptography.RSAParameters
  parent: System.Security.Cryptography
  isExternal: false
  href: System.Security.Cryptography.RSAParameters.yml
  name: RSAParameters
  fullName: System.Security.Cryptography.RSAParameters
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  href: System.Security.Cryptography.HashAlgorithmName.yml
  name: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  href: System.IO.Stream.yml
  name: IO.Stream
  fullName: System.IO.Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Security.Cryptography.KeySizes[]
  isExternal: false
  href: System.Security.Cryptography.KeySizes.yml
  name: KeySizes[]
  name.vb: KeySizes()
  fullName: System.Security.Cryptography.KeySizes[]
  fullName.vb: System.Security.Cryptography.KeySizes()
  spec.csharp:
  - uid: System.Security.Cryptography.KeySizes
    name: KeySizes
    fullName: System.Security.Cryptography.KeySizes
    href: System.Security.Cryptography.KeySizes.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Security.Cryptography.KeySizes
    name: KeySizes
    fullName: System.Security.Cryptography.KeySizes
    href: System.Security.Cryptography.KeySizes.yml
  - name: ()
    fullName: ()
- uid: System.Security.Cryptography.RSASignaturePadding
  parent: System.Security.Cryptography
  isExternal: false
  href: System.Security.Cryptography.RSASignaturePadding.yml
  name: RSASignaturePadding
  fullName: System.Security.Cryptography.RSASignaturePadding
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
- uid: System.Security.Cryptography.CryptographicException
  isExternal: false
  href: System.Security.Cryptography.CryptographicException.yml
  name: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
  summary: The exception that is thrown when an error occurs during a cryptographic operation.
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
