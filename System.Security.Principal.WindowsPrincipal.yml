items:
- uid: System.Security.Principal.WindowsPrincipal
  id: WindowsPrincipal
  parent: System.Security.Principal
  children:
  - System.Security.Principal.WindowsPrincipal.#ctor(System.Security.Principal.WindowsIdentity)
  - System.Security.Principal.WindowsPrincipal.IsInRole(System.Int32)
  - System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.WindowsBuiltInRole)
  href: System.Security.Principal.WindowsPrincipal.yml
  name: WindowsPrincipal
  fullName: System.Security.Principal.WindowsPrincipal
  type: Class
  source:
    remote: &o0
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 211
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Enables code to check the Windows group membership of a Windows user.
  syntax:
    content: 'public class WindowsPrincipal : Claims.ClaimsPrincipal'
    content.vb: Public Class WindowsPrincipal Inherits Claims.ClaimsPrincipal
  inheritance:
  - System.Object
- uid: System.Security.Principal.WindowsPrincipal.#ctor(System.Security.Principal.WindowsIdentity)
  id: '#ctor(System.Security.Principal.WindowsIdentity)'
  parent: System.Security.Principal.WindowsPrincipal
  href: System.Security.Principal.WindowsPrincipal.yml
  name: WindowsPrincipal(WindowsIdentity)
  fullName: System.Security.Principal.WindowsPrincipal.WindowsPrincipal(System.Security.Principal.WindowsIdentity)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 213
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Initializes a new instance of the @'System.Security.Principal.WindowsPrincipal' class by using the specified @'System.Security.Principal.WindowsIdentity' object.
  syntax:
    content: public WindowsPrincipal(WindowsIdentity ntIdentity)
    content.vb: Public Sub New(ntIdentity As WindowsIdentity)
    parameters:
    - id: ntIdentity
      type: System.Security.Principal.WindowsIdentity
      description: The object from which to construct the new instance of @'System.Security.Principal.WindowsPrincipal'.
  exceptions:
  - type: System.ArgumentNullException
    description: '*ntIdentity* is null.'
- uid: System.Security.Principal.WindowsPrincipal.IsInRole(System.Int32)
  id: IsInRole(System.Int32)
  parent: System.Security.Principal.WindowsPrincipal
  href: System.Security.Principal.WindowsPrincipal.yml
  name: IsInRole(Int32)
  fullName: System.Security.Principal.WindowsPrincipal.IsInRole(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 214
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Determines whether the current principal belongs to the Windows user group with the specified relative identifier (RID).
  syntax:
    content: public virtual bool IsInRole(int rid)
    content.vb: Public Overridable Function IsInRole(rid As Integer) As Boolean
    parameters:
    - id: rid
      type: System.Int32
      description: "The RID of the Windows user group in which to check for the principalâ€™s membership status."
    return:
      type: System.Boolean
      description: true if the current principal is a member of the specified Windows user group, that is, in a particular role; otherwise, false.
- uid: System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.SecurityIdentifier)
  id: IsInRole(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.WindowsPrincipal
  href: System.Security.Principal.WindowsPrincipal.yml
  name: IsInRole(SecurityIdentifier)
  fullName: System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.SecurityIdentifier)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 215
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Determines whether the current principal belongs to the Windows user group with the specified security identifier (SID).
  syntax:
    content: public virtual bool IsInRole(SecurityIdentifier sid)
    content.vb: Public Overridable Function IsInRole(sid As SecurityIdentifier) As Boolean
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: A @'System.Security.Principal.SecurityIdentifier'  that uniquely identifies a Windows user group.
    return:
      type: System.Boolean
      description: true if the current principal is a member of the specified Windows user group; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*sid* is null.'
  - type: System.Security.SecurityException
    description: Windows returned a Win32 error.
- uid: System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.WindowsBuiltInRole)
  id: IsInRole(System.Security.Principal.WindowsBuiltInRole)
  parent: System.Security.Principal.WindowsPrincipal
  href: System.Security.Principal.WindowsPrincipal.yml
  name: IsInRole(WindowsBuiltInRole)
  fullName: System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.WindowsBuiltInRole)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 216
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Determines whether the current principal belongs to the Windows user group with the specified @'System.Security.Principal.WindowsBuiltInRole'.
  syntax:
    content: public virtual bool IsInRole(WindowsBuiltInRole role)
    content.vb: Public Overridable Function IsInRole(role As WindowsBuiltInRole) As Boolean
    parameters:
    - id: role
      type: System.Security.Principal.WindowsBuiltInRole
      description: One of the @'System.Security.Principal.WindowsBuiltInRole' values.
    return:
      type: System.Boolean
      description: true if the current principal is a member of the specified Windows user group; otherwise, false.
  exceptions:
  - type: System.ArgumentException
    description: '*role* is not a valid @''System.Security.Principal.WindowsBuiltInRole'' value.'
references:
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Security.Principal.WindowsIdentity
  parent: System.Security.Principal
  isExternal: false
  href: System.Security.Principal.WindowsIdentity.yml
  name: WindowsIdentity
  fullName: System.Security.Principal.WindowsIdentity
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  href: System.Security.Principal.SecurityIdentifier.yml
  name: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.Principal.WindowsBuiltInRole
  parent: System.Security.Principal
  isExternal: false
  href: System.Security.Principal.WindowsBuiltInRole.yml
  name: WindowsBuiltInRole
  fullName: System.Security.Principal.WindowsBuiltInRole
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.Security.SecurityException
  isExternal: false
  href: System.Security.SecurityException.yml
  name: SecurityException
  fullName: System.Security.SecurityException
  summary: The exception that is thrown when a security error is detected.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
