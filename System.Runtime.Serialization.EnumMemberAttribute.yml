items:
- uid: System.Runtime.Serialization.EnumMemberAttribute
  commentId: T:System.Runtime.Serialization.EnumMemberAttribute
  id: EnumMemberAttribute
  parent: System.Runtime.Serialization
  children:
  - System.Runtime.Serialization.EnumMemberAttribute.#ctor
  - System.Runtime.Serialization.EnumMemberAttribute.IsValueSetExplicitly
  - System.Runtime.Serialization.EnumMemberAttribute.Value
  langs:
  - csharp
  - vb
  name: EnumMemberAttribute
  fullName: System.Runtime.Serialization.EnumMemberAttribute
  type: Class
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/EnumMemberAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EnumMemberAttribute
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/EnumMemberAttribute.cs
    startLine: 6
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Specifies that the field is an enumeration member and should be serialized.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Runtime.Serialization.EnumMemberAttribute\" data-throw-if-not-resolved=\"false\"></xref> enables fine control of the names of the enumerations as they are serialized. </p>\n<p>To use <xref href=\"System.Runtime.Serialization.EnumMemberAttribute\" data-throw-if-not-resolved=\"false\"></xref>, create an enumeration and apply the <xref href=\"System.Runtime.Serialization.DataContractAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute to the enumeration. Then apply the <xref href=\"System.Runtime.Serialization.EnumMemberAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute to each member that needs to be in the serialization stream.</p>\n"
  example:
  - "\n<p>The following example shows <xref href=\"System.Runtime.Serialization.EnumMemberAttribute\" data-throw-if-not-resolved=\"false\"></xref> applied to members of an enumeration.</p>EnumMemberAttribute#1"
  syntax:
    content: 'public sealed class EnumMemberAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class EnumMemberAttribute
          Inherits Attribute
  seealso:
  - type: System.Runtime.Serialization.DataContractAttribute
    commentId: T:System.Runtime.Serialization.DataContractAttribute
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.Serialization.EnumMemberAttribute.#ctor
  commentId: M:System.Runtime.Serialization.EnumMemberAttribute.#ctor
  id: '#ctor'
  parent: System.Runtime.Serialization.EnumMemberAttribute
  langs:
  - csharp
  - vb
  name: EnumMemberAttribute()
  fullName: System.Runtime.Serialization.EnumMemberAttribute.EnumMemberAttribute()
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/EnumMemberAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/EnumMemberAttribute.cs
    startLine: 12
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.Serialization.EnumMemberAttribute\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  example:
  - 
  syntax:
    content: public EnumMemberAttribute()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.EnumMemberAttribute.IsValueSetExplicitly
  commentId: P:System.Runtime.Serialization.EnumMemberAttribute.IsValueSetExplicitly
  id: IsValueSetExplicitly
  parent: System.Runtime.Serialization.EnumMemberAttribute
  langs:
  - csharp
  - vb
  name: IsValueSetExplicitly
  fullName: System.Runtime.Serialization.EnumMemberAttribute.IsValueSetExplicitly
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/EnumMemberAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsValueSetExplicitly
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/EnumMemberAttribute.cs
    startLine: 22
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets whether the <xref href=\"System.Runtime.Serialization.EnumMemberAttribute.Value\" data-throw-if-not-resolved=\"false\"></xref> has been explicitly set.</p>\n"
  syntax:
    content: public bool IsValueSetExplicitly { get; }
    content.vb: Public ReadOnly Property IsValueSetExplicitly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the value has been explicitly set; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.Serialization.EnumMemberAttribute.Value
  commentId: P:System.Runtime.Serialization.EnumMemberAttribute.Value
  id: Value
  parent: System.Runtime.Serialization.EnumMemberAttribute
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Runtime.Serialization.EnumMemberAttribute.Value
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/EnumMemberAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/EnumMemberAttribute.cs
    startLine: 16
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets or sets the value associated with the enumeration member the attribute is applied to. </p>\n"
  remarks: "\n<p>By default, the value of an enumeration is the name of the enumeration. When a value is specified, that value will appear in the XML document or stream.</p>\n"
  example:
  - "\n<p>The following code:</p>EnumMemberAttribute#0<p>results in the following XML when serialized with the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref>:</p><pre><code><Shapes>Circle</Shapes></code></pre><p>or</p><pre><code><Shapes>Square</Shapes></code></pre><p>The following code, with the Value property set:</p>EnumMemberAttribute#3<p>results in the following XML:</p><pre><code><Shapes>1</Shapes></code></pre><p>or</p><pre><code><Shapes>2</Shapes></code></pre>"
  syntax:
    content: public string Value { get; set; }
    content.vb: Public Property Value As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The value associated with the enumeration member.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
