items:
- uid: System.Diagnostics.ConditionalAttribute
  id: ConditionalAttribute
  parent: System.Diagnostics
  children:
  - System.Diagnostics.ConditionalAttribute.#ctor(System.String)
  - System.Diagnostics.ConditionalAttribute.ConditionString
  href: System.Diagnostics.ConditionalAttribute.yml
  name: ConditionalAttribute
  fullName: System.Diagnostics.ConditionalAttribute
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Diagnostics/ConditionalAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Diagnostics/ConditionalAttribute.cs
    startLine: 6
  assemblies:
  - System.Runtime
  namespace: System.Diagnostics
  summary: Indicates to compilers that a method call or attribute should be ignored unless a specified conditional compilation symbol is defined.
  syntax:
    content: 'public sealed class ConditionalAttribute : Attribute'
    content.vb: Public NotInheritable Class ConditionalAttribute Inherits Attribute
  inheritance:
  - System.Object
  - System.Attribute
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetHashCode
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.ConditionalAttribute
  href: System.Diagnostics.ConditionalAttribute.yml
  name: ConditionalAttribute(String)
  fullName: System.Diagnostics.ConditionalAttribute.ConditionalAttribute(System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Diagnostics/ConditionalAttribute.cs
    startLine: 11
  assemblies:
  - System.Runtime
  namespace: System.Diagnostics
  summary: Initializes a new instance of the @'System.Diagnostics.ConditionalAttribute' class.
  syntax:
    content: public ConditionalAttribute(string conditionString)
    content.vb: Public Sub New(conditionString As String)
    parameters:
    - id: conditionString
      type: System.String
      description: A string that specifies the case-sensitive conditional compilation symbol that is associated with the attribute.
- uid: System.Diagnostics.ConditionalAttribute.ConditionString
  id: ConditionString
  parent: System.Diagnostics.ConditionalAttribute
  href: System.Diagnostics.ConditionalAttribute.yml
  name: ConditionString
  fullName: System.Diagnostics.ConditionalAttribute.ConditionString
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Diagnostics/ConditionalAttribute.cs
    startLine: 16
  assemblies:
  - System.Runtime
  namespace: System.Diagnostics
  summary: Gets the conditional compilation symbol that is associated with the @'System.Diagnostics.ConditionalAttribute' attribute.
  syntax:
    content: public string ConditionString { get; }
    content.vb: Public ReadOnly Property ConditionString As String
    parameters: []
    return:
      type: System.String
      description: A string that specifies the case-sensitive conditional compilation symbol that is associated with the @'System.Diagnostics.ConditionalAttribute' attribute.
references:
- uid: System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  fullName: System.Diagnostics
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Attribute
  parent: System
  isExternal: false
  href: System.Attribute.yml
  name: Attribute
  fullName: System.Attribute
  type: Class
- uid: System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: true
  href: System.Attribute.yml
  name: Equals(Object)
  fullName: System.Attribute.Equals(System.Object)
  spec.csharp:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    fullName: System.Attribute.Equals
    href: System.Attribute.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    fullName: System.Attribute.Equals
    href: System.Attribute.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: false
  href: System.Attribute.yml
  name: GetHashCode()
  fullName: System.Attribute.GetHashCode()
  spec.csharp:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    fullName: System.Attribute.GetHashCode
    href: System.Attribute.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    fullName: System.Attribute.GetHashCode
    href: System.Attribute.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
  type: Class
