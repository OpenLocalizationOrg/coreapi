items:
- uid: System.Reflection.Emit.GenericTypeParameterBuilder
  commentId: T:System.Reflection.Emit.GenericTypeParameterBuilder
  id: GenericTypeParameterBuilder
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.GenericTypeParameterBuilder.Assembly
  - System.Reflection.Emit.GenericTypeParameterBuilder.AssemblyQualifiedName
  - System.Reflection.Emit.GenericTypeParameterBuilder.Attributes
  - System.Reflection.Emit.GenericTypeParameterBuilder.BaseType
  - System.Reflection.Emit.GenericTypeParameterBuilder.ContainsGenericParameters
  - System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringMethod
  - System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringType
  - System.Reflection.Emit.GenericTypeParameterBuilder.Equals(System.Object)
  - System.Reflection.Emit.GenericTypeParameterBuilder.FullName
  - System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterAttributes
  - System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterPosition
  - System.Reflection.Emit.GenericTypeParameterBuilder.GenericTypeArguments
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetArrayRank
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetElementType
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericParameterConstraints
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericTypeDefinition
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetHashCode
  - System.Reflection.Emit.GenericTypeParameterBuilder.GUID
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsEnum
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericParameter
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericType
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericTypeDefinition
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsSerializable
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsSubclassOf(System.Type)
  - System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType
  - System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType(System.Int32)
  - System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType
  - System.Reflection.Emit.GenericTypeParameterBuilder.MakeGenericType(System.Type[])
  - System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType
  - System.Reflection.Emit.GenericTypeParameterBuilder.Module
  - System.Reflection.Emit.GenericTypeParameterBuilder.Name
  - System.Reflection.Emit.GenericTypeParameterBuilder.Namespace
  - System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint(System.Type)
  - System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  - System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  - System.Reflection.Emit.GenericTypeParameterBuilder.SetGenericParameterAttributes(System.Reflection.GenericParameterAttributes)
  - System.Reflection.Emit.GenericTypeParameterBuilder.SetInterfaceConstraints(System.Type[])
  - System.Reflection.Emit.GenericTypeParameterBuilder.ToString
  langs:
  - csharp
  - vb
  name: GenericTypeParameterBuilder
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GenericTypeParameterBuilder
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 15
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Defines and creates generic type parameters for dynamically defined generic types and methods. This class cannot be inherited. </p>\n"
  example:
  - "\n<p>The following code example creates a generic type with two type parameters, and saves them in the assembly GenericEmitExample1.dll. You can use the Ildasm.exe (IL Disassembler) to view the generated types. For a more detailed explanation of the steps involved in defining a dynamic generic type, see How to: Define a Generic Type with Reflection Emit.</p>EmitGenericType#1"
  syntax:
    content: >-
      [ComVisible(true)]

      public sealed class GenericTypeParameterBuilder : TypeInfo, ICustomAttributeProvider, _MemberInfo, _Type, IReflect, IReflectableType
    content.vb: >-
      <ComVisible(True)>

      Public NotInheritable Class GenericTypeParameterBuilder
          Inherits TypeInfo
          Implements ICustomAttributeProvider, _MemberInfo, _Type, IReflect, IReflectableType
  seealso:
  - type: System.Reflection.Emit.TypeBuilder.DefineGenericParameters(System.String[])
    commentId: M:System.Reflection.Emit.TypeBuilder.DefineGenericParameters(System.String[])
  inheritance:
  - System.Object
  - System.Reflection.MemberInfo
  - System.Type
  - System.Reflection.TypeInfo
  implements:
  - System.Reflection.ICustomAttributeProvider
  - System.Runtime.InteropServices._MemberInfo
  - System.Runtime.InteropServices._Type
  - System.Reflection.IReflect
  - System.Reflection.IReflectableType
  inheritedMembers:
  - System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo
  - System.Reflection.TypeInfo.AsType
  - System.Reflection.TypeInfo.GetDeclaredEvent(System.String)
  - System.Reflection.TypeInfo.GetDeclaredField(System.String)
  - System.Reflection.TypeInfo.GetDeclaredMethod(System.String)
  - System.Reflection.TypeInfo.GetDeclaredMethods(System.String)
  - System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)
  - System.Reflection.TypeInfo.GetDeclaredProperty(System.String)
  - System.Reflection.TypeInfo.GenericTypeParameters
  - System.Reflection.TypeInfo.DeclaredConstructors
  - System.Reflection.TypeInfo.DeclaredEvents
  - System.Reflection.TypeInfo.DeclaredFields
  - System.Reflection.TypeInfo.DeclaredMembers
  - System.Reflection.TypeInfo.DeclaredMethods
  - System.Reflection.TypeInfo.DeclaredNestedTypes
  - System.Reflection.TypeInfo.DeclaredProperties
  - System.Reflection.TypeInfo.ImplementedInterfaces
  - System.Type.FilterAttribute
  - System.Type.FilterName
  - System.Type.FilterNameIgnoreCase
  - System.Type.Missing
  - System.Type.Delimiter
  - System.Type.EmptyTypes
  - System.Type.GetType(System.String,System.Boolean,System.Boolean)
  - System.Type.GetType(System.String,System.Boolean)
  - System.Type.GetType(System.String)
  - System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type})
  - System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean)
  - System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean,System.Boolean)
  - System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)
  - System.Type.GetTypeFromProgID(System.String)
  - System.Type.GetTypeFromProgID(System.String,System.Boolean)
  - System.Type.GetTypeFromProgID(System.String,System.String)
  - System.Type.GetTypeFromProgID(System.String,System.String,System.Boolean)
  - System.Type.GetTypeFromCLSID(System.Guid)
  - System.Type.GetTypeFromCLSID(System.Guid,System.Boolean)
  - System.Type.GetTypeFromCLSID(System.Guid,System.String)
  - System.Type.GetTypeFromCLSID(System.Guid,System.String,System.Boolean)
  - System.Type.GetTypeCode(System.Type)
  - System.Type.GetTypeCodeImpl
  - System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  - System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  - System.Type.GetTypeHandle(System.Object)
  - System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)
  - System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetConstructor(System.Type[])
  - System.Type.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetConstructors
  - System.Type.GetConstructors(System.Reflection.BindingFlags)
  - System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetMethod(System.String,System.Type[])
  - System.Type.GetMethod(System.String,System.Reflection.BindingFlags)
  - System.Type.GetMethod(System.String)
  - System.Type.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetMethods
  - System.Type.GetMethods(System.Reflection.BindingFlags)
  - System.Type.GetField(System.String,System.Reflection.BindingFlags)
  - System.Type.GetField(System.String)
  - System.Type.GetFields
  - System.Type.GetFields(System.Reflection.BindingFlags)
  - System.Type.GetInterface(System.String)
  - System.Type.GetInterface(System.String,System.Boolean)
  - System.Type.GetInterfaces
  - System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  - System.Type.GetEvent(System.String)
  - System.Type.GetEvent(System.String,System.Reflection.BindingFlags)
  - System.Type.GetEvents
  - System.Type.GetEvents(System.Reflection.BindingFlags)
  - System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetProperty(System.String,System.Reflection.BindingFlags)
  - System.Type.GetProperty(System.String,System.Type,System.Type[])
  - System.Type.GetProperty(System.String,System.Type[])
  - System.Type.GetProperty(System.String,System.Type)
  - System.Type.GetProperty(System.String)
  - System.Type.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetProperties(System.Reflection.BindingFlags)
  - System.Type.GetProperties
  - System.Type.GetNestedTypes
  - System.Type.GetNestedTypes(System.Reflection.BindingFlags)
  - System.Type.GetNestedType(System.String)
  - System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)
  - System.Type.GetMember(System.String)
  - System.Type.GetMember(System.String,System.Reflection.BindingFlags)
  - System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  - System.Type.GetMembers
  - System.Type.GetMembers(System.Reflection.BindingFlags)
  - System.Type.GetDefaultMembers
  - System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  - System.Type.IsValueTypeImpl
  - System.Type.GetAttributeFlagsImpl
  - System.Type.IsArrayImpl
  - System.Type.IsByRefImpl
  - System.Type.IsPointerImpl
  - System.Type.IsPrimitiveImpl
  - System.Type.IsCOMObjectImpl
  - System.Type.IsContextfulImpl
  - System.Type.IsMarshalByRefImpl
  - System.Type.GetGenericArguments
  - System.Type.HasElementTypeImpl
  - System.Type.GetEnumNames
  - System.Type.GetEnumValues
  - System.Type.GetEnumUnderlyingType
  - System.Type.IsEnumDefined(System.Object)
  - System.Type.GetEnumName(System.Object)
  - System.Type.IsInstanceOfType(System.Object)
  - System.Type.IsAssignableFrom(System.Type)
  - System.Type.IsEquivalentTo(System.Type)
  - System.Type.GetTypeArray(System.Object[])
  - System.Type.Equals(System.Type)
  - System.Type.GetInterfaceMap(System.Type)
  - System.Type.GetType
  - System.Type.System#Runtime#InteropServices#_Type#GetTypeInfoCount(System.UInt32@)
  - System.Type.System#Runtime#InteropServices#_Type#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Type.System#Runtime#InteropServices#_Type#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Type.System#Runtime#InteropServices#_Type#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Type.MemberType
  - System.Type.ReflectedType
  - System.Type.StructLayoutAttribute
  - System.Type.DefaultBinder
  - System.Type.TypeHandle
  - System.Type.TypeInitializer
  - System.Type.IsNested
  - System.Type.IsVisible
  - System.Type.IsNotPublic
  - System.Type.IsPublic
  - System.Type.IsNestedPublic
  - System.Type.IsNestedPrivate
  - System.Type.IsNestedFamily
  - System.Type.IsNestedAssembly
  - System.Type.IsNestedFamANDAssem
  - System.Type.IsNestedFamORAssem
  - System.Type.IsAutoLayout
  - System.Type.IsLayoutSequential
  - System.Type.IsExplicitLayout
  - System.Type.IsClass
  - System.Type.IsInterface
  - System.Type.IsValueType
  - System.Type.IsAbstract
  - System.Type.IsSealed
  - System.Type.IsSpecialName
  - System.Type.IsImport
  - System.Type.IsAnsiClass
  - System.Type.IsUnicodeClass
  - System.Type.IsAutoClass
  - System.Type.IsArray
  - System.Type.IsConstructedGenericType
  - System.Type.IsByRef
  - System.Type.IsPointer
  - System.Type.IsPrimitive
  - System.Type.IsCOMObject
  - System.Type.HasElementType
  - System.Type.IsContextful
  - System.Type.IsMarshalByRef
  - System.Type.IsSecurityCritical
  - System.Type.IsSecuritySafeCritical
  - System.Type.IsSecurityTransparent
  - System.Type.UnderlyingSystemType
  - System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
  - System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.GetCustomAttributesData
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Reflection.MemberInfo.CustomAttributes
  - System.Reflection.MemberInfo.MetadataToken
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: GenericTypeParameterBuilder
  extensionMethods:
  - System.Type.System.Reflection.IntrospectionExtensions.GetTypeInfo
  - System.Reflection.MemberInfo.System.Reflection.MemberInfoExtensions.HasMetadataToken
  - System.Reflection.MemberInfo.System.Reflection.MemberInfoExtensions.GetMetadataToken
  - System.Type.System.Reflection.TypeExtensions.GetConstructor(System.Type[])
  - System.Type.System.Reflection.TypeExtensions.GetConstructors
  - System.Type.System.Reflection.TypeExtensions.GetConstructors(System.Reflection.BindingFlags)
  - System.Type.System.Reflection.TypeExtensions.GetDefaultMembers
  - System.Type.System.Reflection.TypeExtensions.GetEvent(System.String)
  - System.Type.System.Reflection.TypeExtensions.GetEvent(System.String,System.Reflection.BindingFlags)
  - System.Type.System.Reflection.TypeExtensions.GetEvents
  - System.Type.System.Reflection.TypeExtensions.GetEvents(System.Reflection.BindingFlags)
  - System.Type.System.Reflection.TypeExtensions.GetField(System.String)
  - System.Type.System.Reflection.TypeExtensions.GetField(System.String,System.Reflection.BindingFlags)
  - System.Type.System.Reflection.TypeExtensions.GetFields
  - System.Type.System.Reflection.TypeExtensions.GetFields(System.Reflection.BindingFlags)
  - System.Type.System.Reflection.TypeExtensions.GetGenericArguments
  - System.Type.System.Reflection.TypeExtensions.GetInterfaces
  - System.Type.System.Reflection.TypeExtensions.GetMember(System.String)
  - System.Type.System.Reflection.TypeExtensions.GetMember(System.String,System.Reflection.BindingFlags)
  - System.Type.System.Reflection.TypeExtensions.GetMembers
  - System.Type.System.Reflection.TypeExtensions.GetMembers(System.Reflection.BindingFlags)
  - System.Type.System.Reflection.TypeExtensions.GetMethod(System.String)
  - System.Type.System.Reflection.TypeExtensions.GetMethod(System.String,System.Reflection.BindingFlags)
  - System.Type.System.Reflection.TypeExtensions.GetMethod(System.String,System.Type[])
  - System.Type.System.Reflection.TypeExtensions.GetMethods
  - System.Type.System.Reflection.TypeExtensions.GetMethods(System.Reflection.BindingFlags)
  - System.Type.System.Reflection.TypeExtensions.GetNestedType(System.String,System.Reflection.BindingFlags)
  - System.Type.System.Reflection.TypeExtensions.GetNestedTypes(System.Reflection.BindingFlags)
  - System.Type.System.Reflection.TypeExtensions.GetProperties
  - System.Type.System.Reflection.TypeExtensions.GetProperties(System.Reflection.BindingFlags)
  - System.Type.System.Reflection.TypeExtensions.GetProperty(System.String)
  - System.Type.System.Reflection.TypeExtensions.GetProperty(System.String,System.Reflection.BindingFlags)
  - System.Type.System.Reflection.TypeExtensions.GetProperty(System.String,System.Type)
  - System.Type.System.Reflection.TypeExtensions.GetProperty(System.String,System.Type,System.Type[])
  - System.Type.System.Reflection.TypeExtensions.IsAssignableFrom(System.Type)
  - System.Type.System.Reflection.TypeExtensions.IsInstanceOfType(System.Object)
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Boolean)
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Boolean)
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type,System.Boolean)
  - System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.String)
  - System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents
  - System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.String)
  - System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields
  - System.Reflection.TypeInfo.System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Type)
  - System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.String,System.Type[])
  - System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods
  - System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties
  - System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.String)
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.AssemblyQualifiedName
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.AssemblyQualifiedName
  id: AssemblyQualifiedName
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: AssemblyQualifiedName
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.AssemblyQualifiedName
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AssemblyQualifiedName
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 114
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Gets <strong>null</strong> in all cases.</p>\n"
  example:
  - 
  syntax:
    content: public override string AssemblyQualifiedName { get; }
    content.vb: Public Overrides ReadOnly Property AssemblyQualifiedName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A null reference (<strong>Nothing</strong> in Visual Basic) in all cases.</p>\n"
  overridden: System.Type.AssemblyQualifiedName
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: GenericTypeParameterBuilder.AssemblyQualifiedName
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.FullName
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.FullName
  id: FullName
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: FullName
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.FullName
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FullName
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 110
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Gets <strong>null</strong> in all cases.</p>\n"
  example:
  - 
  syntax:
    content: public override string FullName { get; }
    content.vb: Public Overrides ReadOnly Property FullName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A null reference (<strong>Nothing</strong> in Visual Basic) in all cases.</p>\n"
  overridden: System.Type.FullName
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: GenericTypeParameterBuilder.FullName
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericParameter
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericParameter
  id: IsGenericParameter
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: IsGenericParameter
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericParameter
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsGenericParameter
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 180
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Gets <strong>true</strong> in all cases.</p>\n"
  example:
  - 
  syntax:
    content: public override bool IsGenericParameter { get; }
    content.vb: Public Overrides ReadOnly Property IsGenericParameter As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> in all cases.</p>\n"
  overridden: System.Type.IsGenericParameter
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: GenericTypeParameterBuilder.IsGenericParameter
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Name
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.Name
  id: Name
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.Name
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Name
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 56
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Gets the name of the generic type parameter.</p>\n"
  example:
  - 
  syntax:
    content: public override string Name { get; }
    content.vb: Public Overrides ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the generic type parameter.</p>\n"
  overridden: System.Reflection.MemberInfo.Name
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: GenericTypeParameterBuilder.Name
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Equals(System.Object)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 39
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Tests whether the given object is an instance of <strong>EventToken</strong> and is equal to the current instance.</p>\n"
  syntax:
    content: public override bool Equals(object o)
    content.vb: Public Overrides Function Equals(o As Object) As Boolean
    parameters:
    - id: o
      type: System.Object
      description: "\n<p>The object to be compared with the current instance.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>Returns <strong>true</strong> if <em>o</em> is an instance of <strong>EventToken</strong> and equals the current instance; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.Type.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: GenericTypeParameterBuilder.Equals(Object)
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericTypeDefinition
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericTypeDefinition
  id: GetGenericTypeDefinition
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: GetGenericTypeDefinition()
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericTypeDefinition()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetGenericTypeDefinition
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 192
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Not valid for generic type parameters.</p>\n"
  example:
  - 
  syntax:
    content: public override Type GetGenericTypeDefinition()
    content.vb: Public Overrides Function GetGenericTypeDefinition As Type
    return:
      type: System.Type
      description: "\n<p>Not valid for generic type parameters.</p>\n"
  overridden: System.Type.GetGenericTypeDefinition
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>In all cases.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: GenericTypeParameterBuilder.GetGenericTypeDefinition()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetHashCode
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.GetHashCode()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetHashCode
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 48
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Returns a 32-bit integer hash code for the current instance.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>A 32-bit integer hash code.</p>\n"
  overridden: System.Type.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: GenericTypeParameterBuilder.GetHashCode()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  id: IsAssignableFrom(System.Reflection.TypeInfo)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: IsAssignableFrom(TypeInfo)
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsAssignableFrom
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 18
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Throws a <xref href=\"System.NotSupportedException\" data-throw-if-not-resolved=\"false\"></xref> exception in all cases.</p>\n"
  syntax:
    content: public override bool IsAssignableFrom(TypeInfo typeInfo)
    content.vb: Public Overrides Function IsAssignableFrom(typeInfo As TypeInfo) As Boolean
    parameters:
    - id: typeInfo
      type: System.Reflection.TypeInfo
      description: "\n<p>The object to test.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>Throws a <xref href=\"System.NotSupportedException\" data-throw-if-not-resolved=\"false\"></xref> exception in all cases.</p>\n"
  overridden: System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>In all cases.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: GenericTypeParameterBuilder.IsAssignableFrom(TypeInfo)
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType
  id: MakeArrayType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: MakeArrayType()
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MakeArrayType
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 75
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Returns the type of a one-dimensional array whose element type is the generic type parameter.</p>\n"
  example:
  - "\n<p>The following code example creates a dynamic module, an abstract generic type named <code>Sample</code> with one type parameter, <code>T</code>, and an abstract method named <code>TestMethod</code>. <code>TestMethod</code> takes a <strong>ref</strong> parameter (<strong>ByRef</strong> in Visual Basic) of type <code>T</code>, a pointer to type <code>T</code>, and an array of <code>T</code>. This method returns a two-dimensional array of <code>T</code>. The code example saves the dynamic module to disk, so you can examine it using the MSIL Disassembler (Ildasm.exe).</p>MakeXxxGenericTypeParameterBuilder#1"
  syntax:
    content: public override Type MakeArrayType()
    content.vb: Public Overrides Function MakeArrayType As Type
    return:
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object that represents the type of a one-dimensional array whose element type is the generic type parameter.</p>\n"
  overridden: System.Type.MakeArrayType
  seealso:
  - type: System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType
    commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType
  - type: System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType
    commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: GenericTypeParameterBuilder.MakeArrayType()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType(System.Int32)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType(System.Int32)
  id: MakeArrayType(System.Int32)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: MakeArrayType(Int32)
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MakeArrayType
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 80
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Returns the type of an array whose element type is the generic type parameter, with the specified number of dimensions.</p>\n"
  example:
  - "\n<p>The following code example creates a dynamic module, an abstract generic type named <code>Sample</code> with one type parameter, <code>T</code>, and an abstract method named <code>TestMethod</code>. <code>TestMethod</code> takes a <strong>ref</strong> parameter (<strong>ByRef</strong> in Visual Basic) of type <code>T</code>, a pointer to type <code>T</code>, and an array of <code>T</code>. This method returns a two-dimensional array of <code>T</code>. The code example saves the dynamic module to disk, so you can examine it using the MSIL Disassembler (Ildasm.exe).</p>MakeXxxGenericTypeParameterBuilder#1"
  syntax:
    content: public override Type MakeArrayType(int rank)
    content.vb: Public Overrides Function MakeArrayType(rank As Integer) As Type
    parameters:
    - id: rank
      type: System.Int32
      description: "\n<p>The number of dimensions for the array.</p>\n"
    return:
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object that represents the type of an array whose element type is the generic type parameter, with the specified number of dimensions.</p>\n"
  overridden: System.Type.MakeArrayType(System.Int32)
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "\n<p>\n<em>rank</em> is not a valid number of dimensions. For example, its value is less than 1.</p>\n"
  seealso:
  - type: System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType
    commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType
  - type: System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType
    commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: GenericTypeParameterBuilder.MakeArrayType(Int32)
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType
  id: MakeByRefType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: MakeByRefType()
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MakeByRefType
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 70
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Returns a <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object that represents the current generic type parameter when passed as a reference parameter.</p>\n"
  example:
  - "\n<p>The following code example creates a dynamic module, an abstract generic type named <code>Sample</code> with one type parameter, <code>T</code>, and an abstract method named <code>TestMethod</code>. <code>TestMethod</code> takes a <strong>ref</strong> parameter (<strong>ByRef</strong> in Visual Basic) of type <code>T</code>, a pointer to type <code>T</code>, and an array of <code>T</code>. This method returns a two-dimensional array of <code>T</code>. The code example saves the dynamic module to disk, so you can examine it using the MSIL Disassembler (Ildasm.exe).</p>MakeXxxGenericTypeParameterBuilder#1"
  syntax:
    content: public override Type MakeByRefType()
    content.vb: Public Overrides Function MakeByRefType As Type
    return:
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object that represents the current generic type parameter when passed as a reference parameter.</p>\n"
  overridden: System.Type.MakeByRefType
  seealso:
  - type: System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType
    commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType
  - type: System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType
    commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: GenericTypeParameterBuilder.MakeByRefType()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakeGenericType(System.Type[])
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeGenericType(System.Type[])
  id: MakeGenericType(System.Type[])
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: MakeGenericType(Type[])
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.MakeGenericType(System.Type[])
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MakeGenericType
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 194
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Not valid for incomplete generic type parameters.</p>\n"
  syntax:
    content: public override Type MakeGenericType(params Type[] typeArguments)
    content.vb: Public Overrides Function MakeGenericType(ParamArray typeArguments As Type()) As Type
    parameters:
    - id: typeArguments
      type: System.Type[]
      description: "\n<p>An array of type arguments.</p>\n"
    return:
      type: System.Type
      description: "\n<p>This method is invalid for incomplete generic type parameters.</p>\n"
  overridden: System.Type.MakeGenericType(System.Type[])
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>In all cases.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Reflection.Emit.GenericTypeParameterBuilder.MakeGenericType(System.Type())
  name.vb: MakeGenericType(Type())
  nameWithType: GenericTypeParameterBuilder.MakeGenericType(Type[])
  nameWithType.vb: GenericTypeParameterBuilder.MakeGenericType(Type())
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType
  id: MakePointerType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: MakePointerType()
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MakePointerType
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 65
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Returns a <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object that represents a pointer to the current generic type parameter.</p>\n"
  example:
  - "\n<p>The following code example creates a dynamic module, an abstract generic type named <code>Sample</code> with one type parameter, <code>T</code>, and an abstract method named <code>TestMethod</code>. <code>TestMethod</code> takes a <strong>ref</strong> parameter (<strong>ByRef</strong> in Visual Basic) of type <code>T</code>, a pointer to type <code>T</code>, and an array of <code>T</code>. This method returns a two-dimensional array of <code>T</code>. The code example saves the dynamic module to disk, so you can examine it using the MSIL Disassembler (Ildasm.exe).</p>MakeXxxGenericTypeParameterBuilder#1"
  syntax:
    content: public override Type MakePointerType()
    content.vb: Public Overrides Function MakePointerType As Type
    return:
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object that represents a pointer to the current generic type parameter.</p>\n"
  overridden: System.Type.MakePointerType
  seealso:
  - type: System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType
    commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType
  - type: System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType
    commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: GenericTypeParameterBuilder.MakePointerType()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint(System.Type)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint(System.Type)
  id: SetBaseTypeConstraint(System.Type)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: SetBaseTypeConstraint(Type)
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint(System.Type)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetBaseTypeConstraint
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 227
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Sets the base type that a type must inherit in order to be substituted for the type parameter.</p>\n"
  example:
  - "\n<p>The following code example creates a generic type with two type parameters, the second of which has a base type constraint, and saves them in the assembly GenericEmitExample1.dll. You can use the Ildasm.exe (IL Disassembler) to view the generated types. For a more detailed explanation of the steps involved in defining a dynamic generic type, see How to: Define a Generic Type with Reflection Emit.</p>EmitGenericType#1"
  syntax:
    content: public void SetBaseTypeConstraint(Type baseTypeConstraint)
    content.vb: Public Sub SetBaseTypeConstraint(baseTypeConstraint As Type)
    parameters:
    - id: baseTypeConstraint
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that must be inherited by any type that is to be substituted for the type parameter.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: GenericTypeParameterBuilder.SetBaseTypeConstraint(Type)
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: SetCustomAttribute(ConstructorInfo, Byte[])
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetCustomAttribute
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 215
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Sets a custom attribute using a specified custom attribute blob.</p>\n"
  syntax:
    content: >-
      [SecurityCritical]

      public void SetCustomAttribute(ConstructorInfo con, byte[] binaryAttribute)
    content.vb: >-
      <SecurityCritical>

      Public Sub SetCustomAttribute(con As ConstructorInfo, binaryAttribute As Byte())
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: "\n<p>The constructor for the custom attribute.</p>\n"
    - id: binaryAttribute
      type: System.Byte[]
      description: "\n<p>A byte blob representing the attribute.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>con</em> is <strong>null</strong>.</p>\n<p>-or-</p>\n<p>\n<em>binaryAttribute</em> is a null reference.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte())
  name.vb: SetCustomAttribute(ConstructorInfo, Byte())
  nameWithType: GenericTypeParameterBuilder.SetCustomAttribute(ConstructorInfo, Byte[])
  nameWithType.vb: GenericTypeParameterBuilder.SetCustomAttribute(ConstructorInfo, Byte())
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetCustomAttribute
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 222
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Set a custom attribute using a custom attribute builder.</p>\n"
  syntax:
    content: public void SetCustomAttribute(CustomAttributeBuilder customBuilder)
    content.vb: Public Sub SetCustomAttribute(customBuilder As CustomAttributeBuilder)
    parameters:
    - id: customBuilder
      type: System.Reflection.Emit.CustomAttributeBuilder
      description: "\n<p>An instance of a helper class that defines the custom attribute.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>customBuilder</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: GenericTypeParameterBuilder.SetCustomAttribute(CustomAttributeBuilder)
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetGenericParameterAttributes(System.Reflection.GenericParameterAttributes)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.SetGenericParameterAttributes(System.Reflection.GenericParameterAttributes)
  id: SetGenericParameterAttributes(System.Reflection.GenericParameterAttributes)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: SetGenericParameterAttributes(GenericParameterAttributes)
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.SetGenericParameterAttributes(System.Reflection.GenericParameterAttributes)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetGenericParameterAttributes
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 240
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Sets the variance characteristics and special constraints of the generic parameter, such as the parameterless constructor constraint.</p>\n"
  example:
  - "\n<p>The following code example creates a generic type with two type parameters, the first of which is constrained to have a default constructor and to be a reference type, and saves them in the assembly GenericEmitExample1.dll. You can use the Ildasm.exe (IL Disassembler) to view the generated types. For a more detailed explanation of the steps involved in defining a dynamic generic type, see How to: Define a Generic Type with Reflection Emit.</p>EmitGenericType#1"
  syntax:
    content: public void SetGenericParameterAttributes(GenericParameterAttributes genericParameterAttributes)
    content.vb: Public Sub SetGenericParameterAttributes(genericParameterAttributes As GenericParameterAttributes)
    parameters:
    - id: genericParameterAttributes
      type: System.Reflection.GenericParameterAttributes
      description: "\n<p>A bitwise combination of <xref href=\"System.Reflection.GenericParameterAttributes\" data-throw-if-not-resolved=\"false\"></xref> values that represent the variance characteristics and special constraints of the generic type parameter.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: GenericTypeParameterBuilder.SetGenericParameterAttributes(GenericParameterAttributes)
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetInterfaceConstraints(System.Type[])
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.SetInterfaceConstraints(System.Type[])
  id: SetInterfaceConstraints(System.Type[])
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: SetInterfaceConstraints(Type[])
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.SetInterfaceConstraints(System.Type[])
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetInterfaceConstraints
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 233
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Sets the interfaces a type must implement in order to be substituted for the type parameter. </p>\n"
  example:
  - "\n<p>The following code example creates a generic type with two type parameters, the second of which has two interface constraints, and saves them in the assembly GenericEmitExample1.dll. You can use the Ildasm.exe (IL Disassembler) to view the generated types. For a more detailed explanation of the steps involved in defining a dynamic generic type, see How to: Define a Generic Type with Reflection Emit.</p>EmitGenericType#1"
  syntax:
    content: >-
      [ComVisible(true)]

      public void SetInterfaceConstraints(params Type[] interfaceConstraints)
    content.vb: >-
      <ComVisible(True)>

      Public Sub SetInterfaceConstraints(ParamArray interfaceConstraints As Type())
    parameters:
    - id: interfaceConstraints
      type: System.Type[]
      description: "\n<p>An array of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> objects that represent the interfaces a type must implement in order to be substituted for the type parameter.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.GenericTypeParameterBuilder.SetInterfaceConstraints(System.Type())
  name.vb: SetInterfaceConstraints(Type())
  nameWithType: GenericTypeParameterBuilder.SetInterfaceConstraints(Type[])
  nameWithType.vb: GenericTypeParameterBuilder.SetInterfaceConstraints(Type())
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.ToString
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.ToString
  id: ToString
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.ToString()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 35
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Returns a string representation of the current generic type parameter.</p>\n"
  example:
  - 
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A string that contains the name of the generic type parameter.</p>\n"
  overridden: System.Type.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: GenericTypeParameterBuilder.ToString()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsSubclassOf(System.Type)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.IsSubclassOf(System.Type)
  id: IsSubclassOf(System.Type)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: IsSubclassOf(Type)
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.IsSubclassOf(System.Type)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsSubclassOf
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 200
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Not supported for incomplete generic type parameters.</p>\n"
  example:
  - 
  syntax:
    content: >-
      [ComVisible(true)]

      public override bool IsSubclassOf(Type c)
    content.vb: >-
      <ComVisible(True)>

      Public Overrides Function IsSubclassOf(c As Type) As Boolean
    parameters:
    - id: c
      type: System.Type
      description: "\n<p>Not supported.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>Not supported for incomplete generic type parameters.</p>\n"
  overridden: System.Type.IsSubclassOf(System.Type)
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>In all cases.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: GenericTypeParameterBuilder.IsSubclassOf(Type)
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Attributes
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.Attributes
  id: Attributes
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: Attributes
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.Attributes
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Attributes
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 80
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override TypeAttributes Attributes { get; }
    content.vb: Public Overrides ReadOnly Property Attributes As TypeAttributes
    parameters: []
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: GenericTypeParameterBuilder.Attributes
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Assembly
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.Assembly
  id: Assembly
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: Assembly
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.Assembly
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Assembly
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 106
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Gets an <xref href=\"System.Reflection.Assembly\" data-throw-if-not-resolved=\"false\"></xref> object representing the dynamic assembly that contains the generic type definition the current type parameter belongs to.</p>\n"
  example:
  - 
  syntax:
    content: public override Assembly Assembly { get; }
    content.vb: Public Overrides ReadOnly Property Assembly As Assembly
    parameters: []
    return:
      type: System.Reflection.Assembly
      description: "\n<p>An <xref href=\"System.Reflection.Assembly\" data-throw-if-not-resolved=\"false\"></xref> object representing the dynamic assembly that contains the generic type definition the current type parameter belongs to.</p>\n"
  overridden: System.Type.Assembly
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: GenericTypeParameterBuilder.Assembly
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.BaseType
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.BaseType
  id: BaseType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: BaseType
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.BaseType
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: BaseType
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 116
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Gets the base type constraint of the current generic type parameter.</p>\n"
  example:
  - 
  syntax:
    content: public override Type BaseType { get; }
    content.vb: Public Overrides ReadOnly Property BaseType As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object that represents the base type constraint of the generic type parameter, or <strong>null</strong> if the type parameter has no base type constraint.</p>\n"
  overridden: System.Type.BaseType
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: GenericTypeParameterBuilder.BaseType
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringMethod
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringMethod
  id: DeclaringMethod
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: DeclaringMethod
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringMethod
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DeclaringMethod
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 190
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Gets a <xref href=\"System.Reflection.MethodInfo\" data-throw-if-not-resolved=\"false\"></xref> that represents the declaring method, if the current <xref href=\"System.Reflection.Emit.GenericTypeParameterBuilder\" data-throw-if-not-resolved=\"false\"></xref> represents a type parameter of a generic method.</p>\n"
  example:
  - 
  syntax:
    content: public override MethodBase DeclaringMethod { get; }
    content.vb: Public Overrides ReadOnly Property DeclaringMethod As MethodBase
    parameters: []
    return:
      type: System.Reflection.MethodBase
      description: "\n<p>A <xref href=\"System.Reflection.MethodInfo\" data-throw-if-not-resolved=\"false\"></xref> that represents the declaring method, if the current <xref href=\"System.Reflection.Emit.GenericTypeParameterBuilder\" data-throw-if-not-resolved=\"false\"></xref> represents a type parameter of a generic method; otherwise, <strong>null</strong>.</p>\n"
  overridden: System.Type.DeclaringMethod
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: GenericTypeParameterBuilder.DeclaringMethod
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterAttributes
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterAttributes
  id: GenericParameterAttributes
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: GenericParameterAttributes
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterAttributes
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GenericParameterAttributes
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 188
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Gets a combination of <xref href=\"System.Reflection.GenericParameterAttributes\" data-throw-if-not-resolved=\"false\"></xref> flags that describe the covariance and special constraints of the current generic type parameter. </p>\n"
  syntax:
    content: public override GenericParameterAttributes GenericParameterAttributes { get; }
    content.vb: Public Overrides ReadOnly Property GenericParameterAttributes As GenericParameterAttributes
    parameters: []
    return:
      type: System.Reflection.GenericParameterAttributes
      description: "\n<p>A bitwise combination of values that describes the covariance and special constraints of the current generic type parameter. </p>\n"
  overridden: System.Type.GenericParameterAttributes
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: GenericTypeParameterBuilder.GenericParameterAttributes
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Module
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.Module
  id: Module
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: Module
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.Module
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Module
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 58
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Gets the dynamic module that contains the generic type parameter.</p>\n"
  example:
  - 
  syntax:
    content: public override Module Module { get; }
    content.vb: 'Public Overrides ReadOnly Property Module As '
    parameters: []
    return:
      type: System.Reflection.Module
      description: "\n<p>A <xref href=\"System.Reflection.Module\" data-throw-if-not-resolved=\"false\"></xref> object that represents the dynamic module that contains the generic type parameter.</p>\n"
  overridden: System.Type.Module
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: GenericTypeParameterBuilder.Module
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetArrayRank
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetArrayRank
  id: GetArrayRank
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: GetArrayRank()
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.GetArrayRank()
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetArrayRank
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 87
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override int GetArrayRank()
    content.vb: Public Overrides Function GetArrayRank As Integer
    return:
      type: System.Int32
  overridden: System.Type.GetArrayRank
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: GenericTypeParameterBuilder.GetArrayRank()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetElementType
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetElementType
  id: GetElementType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: GetElementType()
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.GetElementType()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetElementType
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 168
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Throws a <xref href=\"System.NotSupportedException\" data-throw-if-not-resolved=\"false\"></xref> in all cases. </p>\n"
  syntax:
    content: public override Type GetElementType()
    content.vb: Public Overrides Function GetElementType As Type
    return:
      type: System.Type
      description: "\n<p>The type referred to by the current array type, pointer type, or <strong>ByRef</strong> type; or <strong>null</strong> if the current type is not an array type, is not a pointer type, and is not passed by reference.</p>\n"
  overridden: System.Type.GetElementType
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>In all cases.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: GenericTypeParameterBuilder.GetElementType()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericParameterConstraints
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericParameterConstraints
  id: GetGenericParameterConstraints
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: GetGenericParameterConstraints()
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericParameterConstraints()
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetGenericParameterConstraints
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 89
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type[] GetGenericParameterConstraints()
    content.vb: Public Overrides Function GetGenericParameterConstraints As Type()
    return:
      type: System.Type[]
  overridden: System.Type.GetGenericParameterConstraints
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: GenericTypeParameterBuilder.GetGenericParameterConstraints()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GenericTypeArguments
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.GenericTypeArguments
  id: GenericTypeArguments
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: GenericTypeArguments
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.GenericTypeArguments
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GenericTypeArguments
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 90
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type[] GenericTypeArguments { get; }
    content.vb: Public Overrides ReadOnly Property GenericTypeArguments As Type()
    parameters: []
    return:
      type: System.Type[]
  overridden: System.Type.GenericTypeArguments
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: GenericTypeParameterBuilder.GenericTypeArguments
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.ContainsGenericParameters
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.ContainsGenericParameters
  id: ContainsGenericParameters
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: ContainsGenericParameters
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.ContainsGenericParameters
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ContainsGenericParameters
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 186
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Gets <strong>true</strong> in all cases.</p>\n"
  example:
  - 
  syntax:
    content: public override bool ContainsGenericParameters { get; }
    content.vb: Public Overrides ReadOnly Property ContainsGenericParameters As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> in all cases.</p>\n"
  overridden: System.Type.ContainsGenericParameters
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: GenericTypeParameterBuilder.ContainsGenericParameters
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterPosition
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterPosition
  id: GenericParameterPosition
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: GenericParameterPosition
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterPosition
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GenericParameterPosition
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 184
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Gets the position of the type parameter in the type parameter list of the generic type or method that declared the parameter.</p>\n"
  example:
  - 
  syntax:
    content: public override int GenericParameterPosition { get; }
    content.vb: Public Overrides ReadOnly Property GenericParameterPosition As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The position of the type parameter in the type parameter list of the generic type or method that declared the parameter.</p>\n"
  overridden: System.Type.GenericParameterPosition
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: GenericTypeParameterBuilder.GenericParameterPosition
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GUID
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.GUID
  id: GUID
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: GUID
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.GUID
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GUID
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 102
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Not supported for incomplete generic type parameters.</p>\n"
  example:
  - 
  syntax:
    content: public override Guid GUID { get; }
    content.vb: Public Overrides ReadOnly Property GUID As Guid
    parameters: []
    return:
      type: System.Guid
      description: "\n<p>Not supported for incomplete generic type parameters.</p>\n"
  overridden: System.Type.GUID
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>In all cases. </p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: GenericTypeParameterBuilder.GUID
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsEnum
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.IsEnum
  id: IsEnum
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: IsEnum
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.IsEnum
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsEnum
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 94
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsEnum { get; }
    content.vb: Public Overrides ReadOnly Property IsEnum As Boolean
    parameters: []
    return:
      type: System.Boolean
  overridden: System.Type.IsEnum
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: GenericTypeParameterBuilder.IsEnum
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericType
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericType
  id: IsGenericType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: IsGenericType
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericType
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsGenericType
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 178
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Returns <strong>false</strong> in all cases.</p>\n"
  example:
  - 
  syntax:
    content: public override bool IsGenericType { get; }
    content.vb: Public Overrides ReadOnly Property IsGenericType As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>false</strong> in all cases.</p>\n"
  overridden: System.Type.IsGenericType
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: GenericTypeParameterBuilder.IsGenericType
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericTypeDefinition
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericTypeDefinition
  id: IsGenericTypeDefinition
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: IsGenericTypeDefinition
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericTypeDefinition
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsGenericTypeDefinition
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 176
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Gets <strong>false</strong> in all cases.</p>\n"
  example:
  - 
  syntax:
    content: public override bool IsGenericTypeDefinition { get; }
    content.vb: Public Overrides ReadOnly Property IsGenericTypeDefinition As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>false</strong> in all cases.</p>\n"
  overridden: System.Type.IsGenericTypeDefinition
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: GenericTypeParameterBuilder.IsGenericTypeDefinition
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsSerializable
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.IsSerializable
  id: IsSerializable
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: IsSerializable
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.IsSerializable
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsSerializable
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 97
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsSerializable { get; }
    content.vb: Public Overrides ReadOnly Property IsSerializable As Boolean
    parameters: []
    return:
      type: System.Boolean
  overridden: System.Type.IsSerializable
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: GenericTypeParameterBuilder.IsSerializable
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Namespace
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.Namespace
  id: Namespace
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: Namespace
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.Namespace
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Namespace
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 112
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Gets <strong>null</strong> in all cases.</p>\n"
  example:
  - 
  syntax:
    content: public override string Namespace { get; }
    content.vb: Public Overrides ReadOnly Property Namespace As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A null reference (<strong>Nothing</strong> in Visual Basic) in all cases.</p>\n"
  overridden: System.Type.Namespace
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: GenericTypeParameterBuilder.Namespace
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringType
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringType
  id: DeclaringType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  - vb
  name: DeclaringType
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringType
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DeclaringType
    path: src/mscorlib/src/System/Reflection/Emit/GenericTypeParameterBuilder.cs
    startLine: 52
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Gets the generic type definition or generic method definition to which the generic type parameter belongs.</p>\n"
  example:
  - 
  syntax:
    content: public override Type DeclaringType { get; }
    content.vb: Public Overrides ReadOnly Property DeclaringType As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>If the type parameter belongs to a generic type, a <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object representing that generic type; if the type parameter belongs to a generic method, a <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object representing that type that declared that generic method.</p>\n"
  overridden: System.Type.DeclaringType
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: GenericTypeParameterBuilder.DeclaringType
references:
- uid: System.Reflection.Emit
  isExternal: false
  name: System.Reflection.Emit
  fullName: System.Reflection.Emit
  nameWithType: System.Reflection.Emit
  commentId: N:System.Reflection.Emit
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  fullName: System.Reflection.MemberInfo
  nameWithType: MemberInfo
  commentId: T:System.Reflection.MemberInfo
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
  nameWithType: Type
  commentId: T:System.Type
- uid: System.Reflection.TypeInfo
  parent: System.Reflection
  isExternal: false
  name: TypeInfo
  fullName: System.Reflection.TypeInfo
  nameWithType: TypeInfo
  commentId: T:System.Reflection.TypeInfo
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  commentId: T:System.Reflection.ICustomAttributeProvider
- uid: System.Runtime.InteropServices._MemberInfo
  parent: System.Runtime.InteropServices
  isExternal: true
  name: _MemberInfo
  fullName: System.Runtime.InteropServices._MemberInfo
  nameWithType: _MemberInfo
  commentId: T:System.Runtime.InteropServices._MemberInfo
- uid: System.Runtime.InteropServices._Type
  parent: System.Runtime.InteropServices
  isExternal: true
  name: _Type
  fullName: System.Runtime.InteropServices._Type
  nameWithType: _Type
  commentId: T:System.Runtime.InteropServices._Type
- uid: System.Reflection.IReflect
  parent: System.Reflection
  isExternal: true
  name: IReflect
  fullName: System.Reflection.IReflect
  nameWithType: IReflect
  commentId: T:System.Reflection.IReflect
- uid: System.Reflection.IReflectableType
  parent: System.Reflection
  isExternal: false
  name: IReflectableType
  fullName: System.Reflection.IReflectableType
  nameWithType: IReflectableType
  commentId: T:System.Reflection.IReflectableType
- uid: System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo
  parent: System.Reflection.TypeInfo
  isExternal: true
  name: IReflectableType.GetTypeInfo()
  fullName: System.Reflection.TypeInfo.System.Reflection.IReflectableType.GetTypeInfo()
  name.vb: System.Reflection.IReflectableType.GetTypeInfo()
  spec.csharp:
  - uid: System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo
    name: IReflectableType.GetTypeInfo
    fullName: System.Reflection.TypeInfo.System.Reflection.IReflectableType.GetTypeInfo
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo
    name: System.Reflection.IReflectableType.GetTypeInfo
    fullName: System.Reflection.TypeInfo.System.Reflection.IReflectableType.GetTypeInfo
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: TypeInfo.IReflectableType.GetTypeInfo()
  nameWithType.vb: TypeInfo.System.Reflection.IReflectableType.GetTypeInfo()
  commentId: M:System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo
- uid: System.Reflection.TypeInfo.AsType
  parent: System.Reflection.TypeInfo
  isExternal: true
  name: AsType()
  fullName: System.Reflection.TypeInfo.AsType()
  spec.csharp:
  - uid: System.Reflection.TypeInfo.AsType
    name: AsType
    fullName: System.Reflection.TypeInfo.AsType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeInfo.AsType
    name: AsType
    fullName: System.Reflection.TypeInfo.AsType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: TypeInfo.AsType()
  commentId: M:System.Reflection.TypeInfo.AsType
- uid: System.Reflection.TypeInfo.GetDeclaredEvent(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: true
  name: GetDeclaredEvent(String)
  fullName: System.Reflection.TypeInfo.GetDeclaredEvent(System.String)
  spec.csharp:
  - uid: System.Reflection.TypeInfo.GetDeclaredEvent(System.String)
    name: GetDeclaredEvent
    fullName: System.Reflection.TypeInfo.GetDeclaredEvent
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeInfo.GetDeclaredEvent(System.String)
    name: GetDeclaredEvent
    fullName: System.Reflection.TypeInfo.GetDeclaredEvent
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeInfo.GetDeclaredEvent(String)
  commentId: M:System.Reflection.TypeInfo.GetDeclaredEvent(System.String)
- uid: System.Reflection.TypeInfo.GetDeclaredField(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: true
  name: GetDeclaredField(String)
  fullName: System.Reflection.TypeInfo.GetDeclaredField(System.String)
  spec.csharp:
  - uid: System.Reflection.TypeInfo.GetDeclaredField(System.String)
    name: GetDeclaredField
    fullName: System.Reflection.TypeInfo.GetDeclaredField
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeInfo.GetDeclaredField(System.String)
    name: GetDeclaredField
    fullName: System.Reflection.TypeInfo.GetDeclaredField
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeInfo.GetDeclaredField(String)
  commentId: M:System.Reflection.TypeInfo.GetDeclaredField(System.String)
- uid: System.Reflection.TypeInfo.GetDeclaredMethod(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: true
  name: GetDeclaredMethod(String)
  fullName: System.Reflection.TypeInfo.GetDeclaredMethod(System.String)
  spec.csharp:
  - uid: System.Reflection.TypeInfo.GetDeclaredMethod(System.String)
    name: GetDeclaredMethod
    fullName: System.Reflection.TypeInfo.GetDeclaredMethod
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeInfo.GetDeclaredMethod(System.String)
    name: GetDeclaredMethod
    fullName: System.Reflection.TypeInfo.GetDeclaredMethod
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeInfo.GetDeclaredMethod(String)
  commentId: M:System.Reflection.TypeInfo.GetDeclaredMethod(System.String)
- uid: System.Reflection.TypeInfo.GetDeclaredMethods(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: true
  name: GetDeclaredMethods(String)
  fullName: System.Reflection.TypeInfo.GetDeclaredMethods(System.String)
  spec.csharp:
  - uid: System.Reflection.TypeInfo.GetDeclaredMethods(System.String)
    name: GetDeclaredMethods
    fullName: System.Reflection.TypeInfo.GetDeclaredMethods
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeInfo.GetDeclaredMethods(System.String)
    name: GetDeclaredMethods
    fullName: System.Reflection.TypeInfo.GetDeclaredMethods
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeInfo.GetDeclaredMethods(String)
  commentId: M:System.Reflection.TypeInfo.GetDeclaredMethods(System.String)
- uid: System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: true
  name: GetDeclaredNestedType(String)
  fullName: System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)
  spec.csharp:
  - uid: System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)
    name: GetDeclaredNestedType
    fullName: System.Reflection.TypeInfo.GetDeclaredNestedType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)
    name: GetDeclaredNestedType
    fullName: System.Reflection.TypeInfo.GetDeclaredNestedType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeInfo.GetDeclaredNestedType(String)
  commentId: M:System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)
- uid: System.Reflection.TypeInfo.GetDeclaredProperty(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: true
  name: GetDeclaredProperty(String)
  fullName: System.Reflection.TypeInfo.GetDeclaredProperty(System.String)
  spec.csharp:
  - uid: System.Reflection.TypeInfo.GetDeclaredProperty(System.String)
    name: GetDeclaredProperty
    fullName: System.Reflection.TypeInfo.GetDeclaredProperty
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeInfo.GetDeclaredProperty(System.String)
    name: GetDeclaredProperty
    fullName: System.Reflection.TypeInfo.GetDeclaredProperty
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeInfo.GetDeclaredProperty(String)
  commentId: M:System.Reflection.TypeInfo.GetDeclaredProperty(System.String)
- uid: System.Reflection.TypeInfo.GenericTypeParameters
  parent: System.Reflection.TypeInfo
  isExternal: true
  name: GenericTypeParameters
  fullName: System.Reflection.TypeInfo.GenericTypeParameters
  nameWithType: TypeInfo.GenericTypeParameters
  commentId: P:System.Reflection.TypeInfo.GenericTypeParameters
- uid: System.Reflection.TypeInfo.DeclaredConstructors
  parent: System.Reflection.TypeInfo
  isExternal: true
  name: DeclaredConstructors
  fullName: System.Reflection.TypeInfo.DeclaredConstructors
  nameWithType: TypeInfo.DeclaredConstructors
  commentId: P:System.Reflection.TypeInfo.DeclaredConstructors
- uid: System.Reflection.TypeInfo.DeclaredEvents
  parent: System.Reflection.TypeInfo
  isExternal: true
  name: DeclaredEvents
  fullName: System.Reflection.TypeInfo.DeclaredEvents
  nameWithType: TypeInfo.DeclaredEvents
  commentId: P:System.Reflection.TypeInfo.DeclaredEvents
- uid: System.Reflection.TypeInfo.DeclaredFields
  parent: System.Reflection.TypeInfo
  isExternal: true
  name: DeclaredFields
  fullName: System.Reflection.TypeInfo.DeclaredFields
  nameWithType: TypeInfo.DeclaredFields
  commentId: P:System.Reflection.TypeInfo.DeclaredFields
- uid: System.Reflection.TypeInfo.DeclaredMembers
  parent: System.Reflection.TypeInfo
  isExternal: true
  name: DeclaredMembers
  fullName: System.Reflection.TypeInfo.DeclaredMembers
  nameWithType: TypeInfo.DeclaredMembers
  commentId: P:System.Reflection.TypeInfo.DeclaredMembers
- uid: System.Reflection.TypeInfo.DeclaredMethods
  parent: System.Reflection.TypeInfo
  isExternal: true
  name: DeclaredMethods
  fullName: System.Reflection.TypeInfo.DeclaredMethods
  nameWithType: TypeInfo.DeclaredMethods
  commentId: P:System.Reflection.TypeInfo.DeclaredMethods
- uid: System.Reflection.TypeInfo.DeclaredNestedTypes
  parent: System.Reflection.TypeInfo
  isExternal: true
  name: DeclaredNestedTypes
  fullName: System.Reflection.TypeInfo.DeclaredNestedTypes
  nameWithType: TypeInfo.DeclaredNestedTypes
  commentId: P:System.Reflection.TypeInfo.DeclaredNestedTypes
- uid: System.Reflection.TypeInfo.DeclaredProperties
  parent: System.Reflection.TypeInfo
  isExternal: true
  name: DeclaredProperties
  fullName: System.Reflection.TypeInfo.DeclaredProperties
  nameWithType: TypeInfo.DeclaredProperties
  commentId: P:System.Reflection.TypeInfo.DeclaredProperties
- uid: System.Reflection.TypeInfo.ImplementedInterfaces
  parent: System.Reflection.TypeInfo
  isExternal: true
  name: ImplementedInterfaces
  fullName: System.Reflection.TypeInfo.ImplementedInterfaces
  nameWithType: TypeInfo.ImplementedInterfaces
  commentId: P:System.Reflection.TypeInfo.ImplementedInterfaces
- uid: System.Type.FilterAttribute
  parent: System.Type
  isExternal: true
  name: FilterAttribute
  fullName: System.Type.FilterAttribute
  nameWithType: Type.FilterAttribute
  commentId: F:System.Type.FilterAttribute
- uid: System.Type.FilterName
  parent: System.Type
  isExternal: true
  name: FilterName
  fullName: System.Type.FilterName
  nameWithType: Type.FilterName
  commentId: F:System.Type.FilterName
- uid: System.Type.FilterNameIgnoreCase
  parent: System.Type
  isExternal: true
  name: FilterNameIgnoreCase
  fullName: System.Type.FilterNameIgnoreCase
  nameWithType: Type.FilterNameIgnoreCase
  commentId: F:System.Type.FilterNameIgnoreCase
- uid: System.Type.Missing
  parent: System.Type
  isExternal: true
  name: Missing
  fullName: System.Type.Missing
  nameWithType: Type.Missing
  commentId: F:System.Type.Missing
- uid: System.Type.Delimiter
  parent: System.Type
  isExternal: true
  name: Delimiter
  fullName: System.Type.Delimiter
  nameWithType: Type.Delimiter
  commentId: F:System.Type.Delimiter
- uid: System.Type.EmptyTypes
  parent: System.Type
  isExternal: true
  name: EmptyTypes
  fullName: System.Type.EmptyTypes
  nameWithType: Type.EmptyTypes
  commentId: F:System.Type.EmptyTypes
- uid: System.Type.GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Type
  isExternal: true
  name: GetType(String, Boolean, Boolean)
  fullName: System.Type.GetType(System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: System.Type.GetType(System.String,System.Boolean,System.Boolean)
    name: GetType
    fullName: System.Type.GetType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetType(System.String,System.Boolean,System.Boolean)
    name: GetType
    fullName: System.Type.GetType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetType(String, Boolean, Boolean)
  commentId: M:System.Type.GetType(System.String,System.Boolean,System.Boolean)
- uid: System.Type.GetType(System.String,System.Boolean)
  parent: System.Type
  isExternal: true
  name: GetType(String, Boolean)
  fullName: System.Type.GetType(System.String, System.Boolean)
  spec.csharp:
  - uid: System.Type.GetType(System.String,System.Boolean)
    name: GetType
    fullName: System.Type.GetType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetType(System.String,System.Boolean)
    name: GetType
    fullName: System.Type.GetType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetType(String, Boolean)
  commentId: M:System.Type.GetType(System.String,System.Boolean)
- uid: System.Type.GetType(System.String)
  parent: System.Type
  isExternal: true
  name: GetType(String)
  fullName: System.Type.GetType(System.String)
  spec.csharp:
  - uid: System.Type.GetType(System.String)
    name: GetType
    fullName: System.Type.GetType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetType(System.String)
    name: GetType
    fullName: System.Type.GetType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetType(String)
  commentId: M:System.Type.GetType(System.String)
- uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type})
  parent: System.Type
  isExternal: true
  name: GetType(String, Func<AssemblyName, Assembly>, Func<Assembly, String, Boolean, Type>)
  fullName: System.Type.GetType(System.String, System.Func<System.Reflection.AssemblyName, System.Reflection.Assembly>, System.Func<System.Reflection.Assembly, System.String, System.Boolean, System.Type>)
  fullname.vb: System.Type.GetType(System.String, System.Func(Of System.Reflection.AssemblyName, System.Reflection.Assembly), System.Func(Of System.Reflection.Assembly, System.String, System.Boolean, System.Type))
  name.vb: GetType(String, Func(Of AssemblyName, Assembly), Func(Of Assembly, String, Boolean, Type))
  spec.csharp:
  - uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type})
    name: GetType
    fullName: System.Type.GetType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    fullName: System.Reflection.AssemblyName
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`4
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type})
    name: GetType
    fullName: System.Type.GetType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    fullName: System.Reflection.AssemblyName
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`4
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Type.GetType(String, Func<AssemblyName, Assembly>, Func<Assembly, String, Boolean, Type>)
  nameWithType.vb: Type.GetType(String, Func(Of AssemblyName, Assembly), Func(Of Assembly, String, Boolean, Type))
  commentId: M:System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type})
- uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean)
  parent: System.Type
  isExternal: true
  name: GetType(String, Func<AssemblyName, Assembly>, Func<Assembly, String, Boolean, Type>, Boolean)
  fullName: System.Type.GetType(System.String, System.Func<System.Reflection.AssemblyName, System.Reflection.Assembly>, System.Func<System.Reflection.Assembly, System.String, System.Boolean, System.Type>, System.Boolean)
  fullname.vb: System.Type.GetType(System.String, System.Func(Of System.Reflection.AssemblyName, System.Reflection.Assembly), System.Func(Of System.Reflection.Assembly, System.String, System.Boolean, System.Type), System.Boolean)
  name.vb: GetType(String, Func(Of AssemblyName, Assembly), Func(Of Assembly, String, Boolean, Type), Boolean)
  spec.csharp:
  - uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean)
    name: GetType
    fullName: System.Type.GetType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    fullName: System.Reflection.AssemblyName
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`4
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean)
    name: GetType
    fullName: System.Type.GetType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    fullName: System.Reflection.AssemblyName
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`4
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetType(String, Func<AssemblyName, Assembly>, Func<Assembly, String, Boolean, Type>, Boolean)
  nameWithType.vb: Type.GetType(String, Func(Of AssemblyName, Assembly), Func(Of Assembly, String, Boolean, Type), Boolean)
  commentId: M:System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean)
- uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean,System.Boolean)
  parent: System.Type
  isExternal: true
  name: GetType(String, Func<AssemblyName, Assembly>, Func<Assembly, String, Boolean, Type>, Boolean, Boolean)
  fullName: System.Type.GetType(System.String, System.Func<System.Reflection.AssemblyName, System.Reflection.Assembly>, System.Func<System.Reflection.Assembly, System.String, System.Boolean, System.Type>, System.Boolean, System.Boolean)
  fullname.vb: System.Type.GetType(System.String, System.Func(Of System.Reflection.AssemblyName, System.Reflection.Assembly), System.Func(Of System.Reflection.Assembly, System.String, System.Boolean, System.Type), System.Boolean, System.Boolean)
  name.vb: GetType(String, Func(Of AssemblyName, Assembly), Func(Of Assembly, String, Boolean, Type), Boolean, Boolean)
  spec.csharp:
  - uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean,System.Boolean)
    name: GetType
    fullName: System.Type.GetType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    fullName: System.Reflection.AssemblyName
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`4
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean,System.Boolean)
    name: GetType
    fullName: System.Type.GetType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    fullName: System.Reflection.AssemblyName
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`4
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetType(String, Func<AssemblyName, Assembly>, Func<Assembly, String, Boolean, Type>, Boolean, Boolean)
  nameWithType.vb: Type.GetType(String, Func(Of AssemblyName, Assembly), Func(Of Assembly, String, Boolean, Type), Boolean, Boolean)
  commentId: M:System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean,System.Boolean)
- uid: System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)
  parent: System.Type
  isExternal: true
  name: ReflectionOnlyGetType(String, Boolean, Boolean)
  fullName: System.Type.ReflectionOnlyGetType(System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)
    name: ReflectionOnlyGetType
    fullName: System.Type.ReflectionOnlyGetType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)
    name: ReflectionOnlyGetType
    fullName: System.Type.ReflectionOnlyGetType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.ReflectionOnlyGetType(String, Boolean, Boolean)
  commentId: M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)
- uid: System.Type.GetTypeFromProgID(System.String)
  parent: System.Type
  isExternal: true
  name: GetTypeFromProgID(String)
  fullName: System.Type.GetTypeFromProgID(System.String)
  spec.csharp:
  - uid: System.Type.GetTypeFromProgID(System.String)
    name: GetTypeFromProgID
    fullName: System.Type.GetTypeFromProgID
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeFromProgID(System.String)
    name: GetTypeFromProgID
    fullName: System.Type.GetTypeFromProgID
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetTypeFromProgID(String)
  commentId: M:System.Type.GetTypeFromProgID(System.String)
- uid: System.Type.GetTypeFromProgID(System.String,System.Boolean)
  parent: System.Type
  isExternal: true
  name: GetTypeFromProgID(String, Boolean)
  fullName: System.Type.GetTypeFromProgID(System.String, System.Boolean)
  spec.csharp:
  - uid: System.Type.GetTypeFromProgID(System.String,System.Boolean)
    name: GetTypeFromProgID
    fullName: System.Type.GetTypeFromProgID
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeFromProgID(System.String,System.Boolean)
    name: GetTypeFromProgID
    fullName: System.Type.GetTypeFromProgID
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetTypeFromProgID(String, Boolean)
  commentId: M:System.Type.GetTypeFromProgID(System.String,System.Boolean)
- uid: System.Type.GetTypeFromProgID(System.String,System.String)
  parent: System.Type
  isExternal: true
  name: GetTypeFromProgID(String, String)
  fullName: System.Type.GetTypeFromProgID(System.String, System.String)
  spec.csharp:
  - uid: System.Type.GetTypeFromProgID(System.String,System.String)
    name: GetTypeFromProgID
    fullName: System.Type.GetTypeFromProgID
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeFromProgID(System.String,System.String)
    name: GetTypeFromProgID
    fullName: System.Type.GetTypeFromProgID
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetTypeFromProgID(String, String)
  commentId: M:System.Type.GetTypeFromProgID(System.String,System.String)
- uid: System.Type.GetTypeFromProgID(System.String,System.String,System.Boolean)
  parent: System.Type
  isExternal: true
  name: GetTypeFromProgID(String, String, Boolean)
  fullName: System.Type.GetTypeFromProgID(System.String, System.String, System.Boolean)
  spec.csharp:
  - uid: System.Type.GetTypeFromProgID(System.String,System.String,System.Boolean)
    name: GetTypeFromProgID
    fullName: System.Type.GetTypeFromProgID
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeFromProgID(System.String,System.String,System.Boolean)
    name: GetTypeFromProgID
    fullName: System.Type.GetTypeFromProgID
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetTypeFromProgID(String, String, Boolean)
  commentId: M:System.Type.GetTypeFromProgID(System.String,System.String,System.Boolean)
- uid: System.Type.GetTypeFromCLSID(System.Guid)
  parent: System.Type
  isExternal: true
  name: GetTypeFromCLSID(Guid)
  fullName: System.Type.GetTypeFromCLSID(System.Guid)
  spec.csharp:
  - uid: System.Type.GetTypeFromCLSID(System.Guid)
    name: GetTypeFromCLSID
    fullName: System.Type.GetTypeFromCLSID
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeFromCLSID(System.Guid)
    name: GetTypeFromCLSID
    fullName: System.Type.GetTypeFromCLSID
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetTypeFromCLSID(Guid)
  commentId: M:System.Type.GetTypeFromCLSID(System.Guid)
- uid: System.Type.GetTypeFromCLSID(System.Guid,System.Boolean)
  parent: System.Type
  isExternal: true
  name: GetTypeFromCLSID(Guid, Boolean)
  fullName: System.Type.GetTypeFromCLSID(System.Guid, System.Boolean)
  spec.csharp:
  - uid: System.Type.GetTypeFromCLSID(System.Guid,System.Boolean)
    name: GetTypeFromCLSID
    fullName: System.Type.GetTypeFromCLSID
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeFromCLSID(System.Guid,System.Boolean)
    name: GetTypeFromCLSID
    fullName: System.Type.GetTypeFromCLSID
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetTypeFromCLSID(Guid, Boolean)
  commentId: M:System.Type.GetTypeFromCLSID(System.Guid,System.Boolean)
- uid: System.Type.GetTypeFromCLSID(System.Guid,System.String)
  parent: System.Type
  isExternal: true
  name: GetTypeFromCLSID(Guid, String)
  fullName: System.Type.GetTypeFromCLSID(System.Guid, System.String)
  spec.csharp:
  - uid: System.Type.GetTypeFromCLSID(System.Guid,System.String)
    name: GetTypeFromCLSID
    fullName: System.Type.GetTypeFromCLSID
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeFromCLSID(System.Guid,System.String)
    name: GetTypeFromCLSID
    fullName: System.Type.GetTypeFromCLSID
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetTypeFromCLSID(Guid, String)
  commentId: M:System.Type.GetTypeFromCLSID(System.Guid,System.String)
- uid: System.Type.GetTypeFromCLSID(System.Guid,System.String,System.Boolean)
  parent: System.Type
  isExternal: true
  name: GetTypeFromCLSID(Guid, String, Boolean)
  fullName: System.Type.GetTypeFromCLSID(System.Guid, System.String, System.Boolean)
  spec.csharp:
  - uid: System.Type.GetTypeFromCLSID(System.Guid,System.String,System.Boolean)
    name: GetTypeFromCLSID
    fullName: System.Type.GetTypeFromCLSID
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeFromCLSID(System.Guid,System.String,System.Boolean)
    name: GetTypeFromCLSID
    fullName: System.Type.GetTypeFromCLSID
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetTypeFromCLSID(Guid, String, Boolean)
  commentId: M:System.Type.GetTypeFromCLSID(System.Guid,System.String,System.Boolean)
- uid: System.Type.GetTypeCode(System.Type)
  parent: System.Type
  isExternal: true
  name: GetTypeCode(Type)
  fullName: System.Type.GetTypeCode(System.Type)
  spec.csharp:
  - uid: System.Type.GetTypeCode(System.Type)
    name: GetTypeCode
    fullName: System.Type.GetTypeCode
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeCode(System.Type)
    name: GetTypeCode
    fullName: System.Type.GetTypeCode
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetTypeCode(Type)
  commentId: M:System.Type.GetTypeCode(System.Type)
- uid: System.Type.GetTypeCodeImpl
  parent: System.Type
  isExternal: true
  name: GetTypeCodeImpl()
  fullName: System.Type.GetTypeCodeImpl()
  spec.csharp:
  - uid: System.Type.GetTypeCodeImpl
    name: GetTypeCodeImpl
    fullName: System.Type.GetTypeCodeImpl
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeCodeImpl
    name: GetTypeCodeImpl
    fullName: System.Type.GetTypeCodeImpl
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.GetTypeCodeImpl()
  commentId: M:System.Type.GetTypeCodeImpl
- uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Type
  isExternal: true
  name: InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])
  fullName: System.Type.InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[], System.Reflection.ParameterModifier[], System.Globalization.CultureInfo, System.String[])
  fullname.vb: System.Type.InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object(), System.Reflection.ParameterModifier(), System.Globalization.CultureInfo, System.String())
  name.vb: InvokeMember(String, BindingFlags, Binder, Object, Object(), ParameterModifier(), CultureInfo, String())
  spec.csharp:
  - uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
    name: InvokeMember
    fullName: System.Type.InvokeMember
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
    name: InvokeMember
    fullName: System.Type.InvokeMember
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: Type.InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])
  nameWithType.vb: Type.InvokeMember(String, BindingFlags, Binder, Object, Object(), ParameterModifier(), CultureInfo, String())
  commentId: M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
- uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  parent: System.Type
  isExternal: true
  name: InvokeMember(String, BindingFlags, Binder, Object, Object[], CultureInfo)
  fullName: System.Type.InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[], System.Globalization.CultureInfo)
  fullname.vb: System.Type.InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object(), System.Globalization.CultureInfo)
  name.vb: InvokeMember(String, BindingFlags, Binder, Object, Object(), CultureInfo)
  spec.csharp:
  - uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
    name: InvokeMember
    fullName: System.Type.InvokeMember
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
    name: InvokeMember
    fullName: System.Type.InvokeMember
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.InvokeMember(String, BindingFlags, Binder, Object, Object[], CultureInfo)
  nameWithType.vb: Type.InvokeMember(String, BindingFlags, Binder, Object, Object(), CultureInfo)
  commentId: M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
- uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  parent: System.Type
  isExternal: true
  name: InvokeMember(String, BindingFlags, Binder, Object, Object[])
  fullName: System.Type.InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[])
  fullname.vb: System.Type.InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object())
  name.vb: InvokeMember(String, BindingFlags, Binder, Object, Object())
  spec.csharp:
  - uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
    name: InvokeMember
    fullName: System.Type.InvokeMember
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
    name: InvokeMember
    fullName: System.Type.InvokeMember
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: Type.InvokeMember(String, BindingFlags, Binder, Object, Object[])
  nameWithType.vb: Type.InvokeMember(String, BindingFlags, Binder, Object, Object())
  commentId: M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
- uid: System.Type.GetTypeHandle(System.Object)
  parent: System.Type
  isExternal: true
  name: GetTypeHandle(Object)
  fullName: System.Type.GetTypeHandle(System.Object)
  spec.csharp:
  - uid: System.Type.GetTypeHandle(System.Object)
    name: GetTypeHandle
    fullName: System.Type.GetTypeHandle
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeHandle(System.Object)
    name: GetTypeHandle
    fullName: System.Type.GetTypeHandle
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetTypeHandle(Object)
  commentId: M:System.Type.GetTypeHandle(System.Object)
- uid: System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)
  parent: System.Type
  isExternal: true
  name: GetTypeFromHandle(RuntimeTypeHandle)
  fullName: System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)
  spec.csharp:
  - uid: System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)
    name: GetTypeFromHandle
    fullName: System.Type.GetTypeFromHandle
    isExternal: true
  - name: (
    fullName: (
  - uid: System.RuntimeTypeHandle
    name: RuntimeTypeHandle
    fullName: System.RuntimeTypeHandle
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)
    name: GetTypeFromHandle
    fullName: System.Type.GetTypeFromHandle
    isExternal: true
  - name: (
    fullName: (
  - uid: System.RuntimeTypeHandle
    name: RuntimeTypeHandle
    fullName: System.RuntimeTypeHandle
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetTypeFromHandle(RuntimeTypeHandle)
  commentId: M:System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)
- uid: System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: true
  name: GetConstructor(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  fullName: System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])
  fullname.vb: System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type(), System.Reflection.ParameterModifier())
  name.vb: GetConstructor(BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())
  spec.csharp:
  - uid: System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
    name: GetConstructor
    fullName: System.Type.GetConstructor
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.CallingConventions
    name: CallingConventions
    fullName: System.Reflection.CallingConventions
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
    name: GetConstructor
    fullName: System.Type.GetConstructor
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.CallingConventions
    name: CallingConventions
    fullName: System.Reflection.CallingConventions
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: Type.GetConstructor(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  nameWithType.vb: Type.GetConstructor(BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())
  commentId: M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
- uid: System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: true
  name: GetConstructor(BindingFlags, Binder, Type[], ParameterModifier[])
  fullName: System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])
  fullname.vb: System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type(), System.Reflection.ParameterModifier())
  name.vb: GetConstructor(BindingFlags, Binder, Type(), ParameterModifier())
  spec.csharp:
  - uid: System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
    name: GetConstructor
    fullName: System.Type.GetConstructor
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
    name: GetConstructor
    fullName: System.Type.GetConstructor
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: Type.GetConstructor(BindingFlags, Binder, Type[], ParameterModifier[])
  nameWithType.vb: Type.GetConstructor(BindingFlags, Binder, Type(), ParameterModifier())
  commentId: M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
- uid: System.Type.GetConstructor(System.Type[])
  parent: System.Type
  isExternal: true
  name: GetConstructor(Type[])
  fullName: System.Type.GetConstructor(System.Type[])
  fullname.vb: System.Type.GetConstructor(System.Type())
  name.vb: GetConstructor(Type())
  spec.csharp:
  - uid: System.Type.GetConstructor(System.Type[])
    name: GetConstructor
    fullName: System.Type.GetConstructor
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetConstructor(System.Type[])
    name: GetConstructor
    fullName: System.Type.GetConstructor
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: Type.GetConstructor(Type[])
  nameWithType.vb: Type.GetConstructor(Type())
  commentId: M:System.Type.GetConstructor(System.Type[])
- uid: System.Type.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: true
  name: GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  fullName: System.Type.GetConstructorImpl(System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])
  fullname.vb: System.Type.GetConstructorImpl(System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type(), System.Reflection.ParameterModifier())
  name.vb: GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())
  spec.csharp:
  - uid: System.Type.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
    name: GetConstructorImpl
    fullName: System.Type.GetConstructorImpl
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.CallingConventions
    name: CallingConventions
    fullName: System.Reflection.CallingConventions
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
    name: GetConstructorImpl
    fullName: System.Type.GetConstructorImpl
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.CallingConventions
    name: CallingConventions
    fullName: System.Reflection.CallingConventions
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: Type.GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  nameWithType.vb: Type.GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())
  commentId: M:System.Type.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
- uid: System.Type.GetConstructors
  parent: System.Type
  isExternal: true
  name: GetConstructors()
  fullName: System.Type.GetConstructors()
  spec.csharp:
  - uid: System.Type.GetConstructors
    name: GetConstructors
    fullName: System.Type.GetConstructors
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetConstructors
    name: GetConstructors
    fullName: System.Type.GetConstructors
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.GetConstructors()
  commentId: M:System.Type.GetConstructors
- uid: System.Type.GetConstructors(System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: true
  name: GetConstructors(BindingFlags)
  fullName: System.Type.GetConstructors(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetConstructors(System.Reflection.BindingFlags)
    name: GetConstructors
    fullName: System.Type.GetConstructors
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetConstructors(System.Reflection.BindingFlags)
    name: GetConstructors
    fullName: System.Type.GetConstructors
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetConstructors(BindingFlags)
  commentId: M:System.Type.GetConstructors(System.Reflection.BindingFlags)
- uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: true
  name: GetMethod(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  fullName: System.Type.GetMethod(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])
  fullname.vb: System.Type.GetMethod(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type(), System.Reflection.ParameterModifier())
  name.vb: GetMethod(String, BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())
  spec.csharp:
  - uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
    name: GetMethod
    fullName: System.Type.GetMethod
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.CallingConventions
    name: CallingConventions
    fullName: System.Reflection.CallingConventions
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
    name: GetMethod
    fullName: System.Type.GetMethod
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.CallingConventions
    name: CallingConventions
    fullName: System.Reflection.CallingConventions
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: Type.GetMethod(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  nameWithType.vb: Type.GetMethod(String, BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())
  commentId: M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
- uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: true
  name: GetMethod(String, BindingFlags, Binder, Type[], ParameterModifier[])
  fullName: System.Type.GetMethod(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])
  fullname.vb: System.Type.GetMethod(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type(), System.Reflection.ParameterModifier())
  name.vb: GetMethod(String, BindingFlags, Binder, Type(), ParameterModifier())
  spec.csharp:
  - uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
    name: GetMethod
    fullName: System.Type.GetMethod
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
    name: GetMethod
    fullName: System.Type.GetMethod
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: Type.GetMethod(String, BindingFlags, Binder, Type[], ParameterModifier[])
  nameWithType.vb: Type.GetMethod(String, BindingFlags, Binder, Type(), ParameterModifier())
  commentId: M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
- uid: System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: true
  name: GetMethod(String, Type[], ParameterModifier[])
  fullName: System.Type.GetMethod(System.String, System.Type[], System.Reflection.ParameterModifier[])
  fullname.vb: System.Type.GetMethod(System.String, System.Type(), System.Reflection.ParameterModifier())
  name.vb: GetMethod(String, Type(), ParameterModifier())
  spec.csharp:
  - uid: System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
    name: GetMethod
    fullName: System.Type.GetMethod
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
    name: GetMethod
    fullName: System.Type.GetMethod
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: Type.GetMethod(String, Type[], ParameterModifier[])
  nameWithType.vb: Type.GetMethod(String, Type(), ParameterModifier())
  commentId: M:System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
- uid: System.Type.GetMethod(System.String,System.Type[])
  parent: System.Type
  isExternal: true
  name: GetMethod(String, Type[])
  fullName: System.Type.GetMethod(System.String, System.Type[])
  fullname.vb: System.Type.GetMethod(System.String, System.Type())
  name.vb: GetMethod(String, Type())
  spec.csharp:
  - uid: System.Type.GetMethod(System.String,System.Type[])
    name: GetMethod
    fullName: System.Type.GetMethod
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMethod(System.String,System.Type[])
    name: GetMethod
    fullName: System.Type.GetMethod
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: Type.GetMethod(String, Type[])
  nameWithType.vb: Type.GetMethod(String, Type())
  commentId: M:System.Type.GetMethod(System.String,System.Type[])
- uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: true
  name: GetMethod(String, BindingFlags)
  fullName: System.Type.GetMethod(System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags)
    name: GetMethod
    fullName: System.Type.GetMethod
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags)
    name: GetMethod
    fullName: System.Type.GetMethod
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetMethod(String, BindingFlags)
  commentId: M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags)
- uid: System.Type.GetMethod(System.String)
  parent: System.Type
  isExternal: true
  name: GetMethod(String)
  fullName: System.Type.GetMethod(System.String)
  spec.csharp:
  - uid: System.Type.GetMethod(System.String)
    name: GetMethod
    fullName: System.Type.GetMethod
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMethod(System.String)
    name: GetMethod
    fullName: System.Type.GetMethod
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetMethod(String)
  commentId: M:System.Type.GetMethod(System.String)
- uid: System.Type.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: true
  name: GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  fullName: System.Type.GetMethodImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])
  fullname.vb: System.Type.GetMethodImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type(), System.Reflection.ParameterModifier())
  name.vb: GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())
  spec.csharp:
  - uid: System.Type.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
    name: GetMethodImpl
    fullName: System.Type.GetMethodImpl
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.CallingConventions
    name: CallingConventions
    fullName: System.Reflection.CallingConventions
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
    name: GetMethodImpl
    fullName: System.Type.GetMethodImpl
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.CallingConventions
    name: CallingConventions
    fullName: System.Reflection.CallingConventions
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: Type.GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  nameWithType.vb: Type.GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())
  commentId: M:System.Type.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
- uid: System.Type.GetMethods
  parent: System.Type
  isExternal: true
  name: GetMethods()
  fullName: System.Type.GetMethods()
  spec.csharp:
  - uid: System.Type.GetMethods
    name: GetMethods
    fullName: System.Type.GetMethods
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMethods
    name: GetMethods
    fullName: System.Type.GetMethods
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.GetMethods()
  commentId: M:System.Type.GetMethods
- uid: System.Type.GetMethods(System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: true
  name: GetMethods(BindingFlags)
  fullName: System.Type.GetMethods(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetMethods(System.Reflection.BindingFlags)
    name: GetMethods
    fullName: System.Type.GetMethods
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMethods(System.Reflection.BindingFlags)
    name: GetMethods
    fullName: System.Type.GetMethods
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetMethods(BindingFlags)
  commentId: M:System.Type.GetMethods(System.Reflection.BindingFlags)
- uid: System.Type.GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: true
  name: GetField(String, BindingFlags)
  fullName: System.Type.GetField(System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetField(System.String,System.Reflection.BindingFlags)
    name: GetField
    fullName: System.Type.GetField
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetField(System.String,System.Reflection.BindingFlags)
    name: GetField
    fullName: System.Type.GetField
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetField(String, BindingFlags)
  commentId: M:System.Type.GetField(System.String,System.Reflection.BindingFlags)
- uid: System.Type.GetField(System.String)
  parent: System.Type
  isExternal: true
  name: GetField(String)
  fullName: System.Type.GetField(System.String)
  spec.csharp:
  - uid: System.Type.GetField(System.String)
    name: GetField
    fullName: System.Type.GetField
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetField(System.String)
    name: GetField
    fullName: System.Type.GetField
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetField(String)
  commentId: M:System.Type.GetField(System.String)
- uid: System.Type.GetFields
  parent: System.Type
  isExternal: true
  name: GetFields()
  fullName: System.Type.GetFields()
  spec.csharp:
  - uid: System.Type.GetFields
    name: GetFields
    fullName: System.Type.GetFields
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetFields
    name: GetFields
    fullName: System.Type.GetFields
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.GetFields()
  commentId: M:System.Type.GetFields
- uid: System.Type.GetFields(System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: true
  name: GetFields(BindingFlags)
  fullName: System.Type.GetFields(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetFields(System.Reflection.BindingFlags)
    name: GetFields
    fullName: System.Type.GetFields
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetFields(System.Reflection.BindingFlags)
    name: GetFields
    fullName: System.Type.GetFields
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetFields(BindingFlags)
  commentId: M:System.Type.GetFields(System.Reflection.BindingFlags)
- uid: System.Type.GetInterface(System.String)
  parent: System.Type
  isExternal: true
  name: GetInterface(String)
  fullName: System.Type.GetInterface(System.String)
  spec.csharp:
  - uid: System.Type.GetInterface(System.String)
    name: GetInterface
    fullName: System.Type.GetInterface
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetInterface(System.String)
    name: GetInterface
    fullName: System.Type.GetInterface
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetInterface(String)
  commentId: M:System.Type.GetInterface(System.String)
- uid: System.Type.GetInterface(System.String,System.Boolean)
  parent: System.Type
  isExternal: true
  name: GetInterface(String, Boolean)
  fullName: System.Type.GetInterface(System.String, System.Boolean)
  spec.csharp:
  - uid: System.Type.GetInterface(System.String,System.Boolean)
    name: GetInterface
    fullName: System.Type.GetInterface
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetInterface(System.String,System.Boolean)
    name: GetInterface
    fullName: System.Type.GetInterface
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetInterface(String, Boolean)
  commentId: M:System.Type.GetInterface(System.String,System.Boolean)
- uid: System.Type.GetInterfaces
  parent: System.Type
  isExternal: true
  name: GetInterfaces()
  fullName: System.Type.GetInterfaces()
  spec.csharp:
  - uid: System.Type.GetInterfaces
    name: GetInterfaces
    fullName: System.Type.GetInterfaces
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetInterfaces
    name: GetInterfaces
    fullName: System.Type.GetInterfaces
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.GetInterfaces()
  commentId: M:System.Type.GetInterfaces
- uid: System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  parent: System.Type
  isExternal: true
  name: FindInterfaces(TypeFilter, Object)
  fullName: System.Type.FindInterfaces(System.Reflection.TypeFilter, System.Object)
  spec.csharp:
  - uid: System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
    name: FindInterfaces
    fullName: System.Type.FindInterfaces
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.TypeFilter
    name: TypeFilter
    fullName: System.Reflection.TypeFilter
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
    name: FindInterfaces
    fullName: System.Type.FindInterfaces
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.TypeFilter
    name: TypeFilter
    fullName: System.Reflection.TypeFilter
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.FindInterfaces(TypeFilter, Object)
  commentId: M:System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
- uid: System.Type.GetEvent(System.String)
  parent: System.Type
  isExternal: true
  name: GetEvent(String)
  fullName: System.Type.GetEvent(System.String)
  spec.csharp:
  - uid: System.Type.GetEvent(System.String)
    name: GetEvent
    fullName: System.Type.GetEvent
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetEvent(System.String)
    name: GetEvent
    fullName: System.Type.GetEvent
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetEvent(String)
  commentId: M:System.Type.GetEvent(System.String)
- uid: System.Type.GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: true
  name: GetEvent(String, BindingFlags)
  fullName: System.Type.GetEvent(System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetEvent(System.String,System.Reflection.BindingFlags)
    name: GetEvent
    fullName: System.Type.GetEvent
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetEvent(System.String,System.Reflection.BindingFlags)
    name: GetEvent
    fullName: System.Type.GetEvent
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetEvent(String, BindingFlags)
  commentId: M:System.Type.GetEvent(System.String,System.Reflection.BindingFlags)
- uid: System.Type.GetEvents
  parent: System.Type
  isExternal: true
  name: GetEvents()
  fullName: System.Type.GetEvents()
  spec.csharp:
  - uid: System.Type.GetEvents
    name: GetEvents
    fullName: System.Type.GetEvents
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetEvents
    name: GetEvents
    fullName: System.Type.GetEvents
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.GetEvents()
  commentId: M:System.Type.GetEvents
- uid: System.Type.GetEvents(System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: true
  name: GetEvents(BindingFlags)
  fullName: System.Type.GetEvents(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetEvents(System.Reflection.BindingFlags)
    name: GetEvents
    fullName: System.Type.GetEvents
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetEvents(System.Reflection.BindingFlags)
    name: GetEvents
    fullName: System.Type.GetEvents
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetEvents(BindingFlags)
  commentId: M:System.Type.GetEvents(System.Reflection.BindingFlags)
- uid: System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: true
  name: GetProperty(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])
  fullName: System.Type.GetProperty(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])
  fullname.vb: System.Type.GetProperty(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type(), System.Reflection.ParameterModifier())
  name.vb: GetProperty(String, BindingFlags, Binder, Type, Type(), ParameterModifier())
  spec.csharp:
  - uid: System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
    name: GetProperty
    fullName: System.Type.GetProperty
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
    name: GetProperty
    fullName: System.Type.GetProperty
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: Type.GetProperty(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])
  nameWithType.vb: Type.GetProperty(String, BindingFlags, Binder, Type, Type(), ParameterModifier())
  commentId: M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
- uid: System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: true
  name: GetProperty(String, Type, Type[], ParameterModifier[])
  fullName: System.Type.GetProperty(System.String, System.Type, System.Type[], System.Reflection.ParameterModifier[])
  fullname.vb: System.Type.GetProperty(System.String, System.Type, System.Type(), System.Reflection.ParameterModifier())
  name.vb: GetProperty(String, Type, Type(), ParameterModifier())
  spec.csharp:
  - uid: System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
    name: GetProperty
    fullName: System.Type.GetProperty
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
    name: GetProperty
    fullName: System.Type.GetProperty
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: Type.GetProperty(String, Type, Type[], ParameterModifier[])
  nameWithType.vb: Type.GetProperty(String, Type, Type(), ParameterModifier())
  commentId: M:System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
- uid: System.Type.GetProperty(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: true
  name: GetProperty(String, BindingFlags)
  fullName: System.Type.GetProperty(System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetProperty(System.String,System.Reflection.BindingFlags)
    name: GetProperty
    fullName: System.Type.GetProperty
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetProperty(System.String,System.Reflection.BindingFlags)
    name: GetProperty
    fullName: System.Type.GetProperty
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetProperty(String, BindingFlags)
  commentId: M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags)
- uid: System.Type.GetProperty(System.String,System.Type,System.Type[])
  parent: System.Type
  isExternal: true
  name: GetProperty(String, Type, Type[])
  fullName: System.Type.GetProperty(System.String, System.Type, System.Type[])
  fullname.vb: System.Type.GetProperty(System.String, System.Type, System.Type())
  name.vb: GetProperty(String, Type, Type())
  spec.csharp:
  - uid: System.Type.GetProperty(System.String,System.Type,System.Type[])
    name: GetProperty
    fullName: System.Type.GetProperty
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetProperty(System.String,System.Type,System.Type[])
    name: GetProperty
    fullName: System.Type.GetProperty
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: Type.GetProperty(String, Type, Type[])
  nameWithType.vb: Type.GetProperty(String, Type, Type())
  commentId: M:System.Type.GetProperty(System.String,System.Type,System.Type[])
- uid: System.Type.GetProperty(System.String,System.Type[])
  parent: System.Type
  isExternal: true
  name: GetProperty(String, Type[])
  fullName: System.Type.GetProperty(System.String, System.Type[])
  fullname.vb: System.Type.GetProperty(System.String, System.Type())
  name.vb: GetProperty(String, Type())
  spec.csharp:
  - uid: System.Type.GetProperty(System.String,System.Type[])
    name: GetProperty
    fullName: System.Type.GetProperty
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetProperty(System.String,System.Type[])
    name: GetProperty
    fullName: System.Type.GetProperty
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: Type.GetProperty(String, Type[])
  nameWithType.vb: Type.GetProperty(String, Type())
  commentId: M:System.Type.GetProperty(System.String,System.Type[])
- uid: System.Type.GetProperty(System.String,System.Type)
  parent: System.Type
  isExternal: true
  name: GetProperty(String, Type)
  fullName: System.Type.GetProperty(System.String, System.Type)
  spec.csharp:
  - uid: System.Type.GetProperty(System.String,System.Type)
    name: GetProperty
    fullName: System.Type.GetProperty
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetProperty(System.String,System.Type)
    name: GetProperty
    fullName: System.Type.GetProperty
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetProperty(String, Type)
  commentId: M:System.Type.GetProperty(System.String,System.Type)
- uid: System.Type.GetProperty(System.String)
  parent: System.Type
  isExternal: true
  name: GetProperty(String)
  fullName: System.Type.GetProperty(System.String)
  spec.csharp:
  - uid: System.Type.GetProperty(System.String)
    name: GetProperty
    fullName: System.Type.GetProperty
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetProperty(System.String)
    name: GetProperty
    fullName: System.Type.GetProperty
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetProperty(String)
  commentId: M:System.Type.GetProperty(System.String)
- uid: System.Type.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: true
  name: GetPropertyImpl(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])
  fullName: System.Type.GetPropertyImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])
  fullname.vb: System.Type.GetPropertyImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type(), System.Reflection.ParameterModifier())
  name.vb: GetPropertyImpl(String, BindingFlags, Binder, Type, Type(), ParameterModifier())
  spec.csharp:
  - uid: System.Type.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
    name: GetPropertyImpl
    fullName: System.Type.GetPropertyImpl
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
    name: GetPropertyImpl
    fullName: System.Type.GetPropertyImpl
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: Type.GetPropertyImpl(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])
  nameWithType.vb: Type.GetPropertyImpl(String, BindingFlags, Binder, Type, Type(), ParameterModifier())
  commentId: M:System.Type.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
- uid: System.Type.GetProperties(System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: true
  name: GetProperties(BindingFlags)
  fullName: System.Type.GetProperties(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetProperties(System.Reflection.BindingFlags)
    name: GetProperties
    fullName: System.Type.GetProperties
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetProperties(System.Reflection.BindingFlags)
    name: GetProperties
    fullName: System.Type.GetProperties
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetProperties(BindingFlags)
  commentId: M:System.Type.GetProperties(System.Reflection.BindingFlags)
- uid: System.Type.GetProperties
  parent: System.Type
  isExternal: true
  name: GetProperties()
  fullName: System.Type.GetProperties()
  spec.csharp:
  - uid: System.Type.GetProperties
    name: GetProperties
    fullName: System.Type.GetProperties
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetProperties
    name: GetProperties
    fullName: System.Type.GetProperties
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.GetProperties()
  commentId: M:System.Type.GetProperties
- uid: System.Type.GetNestedTypes
  parent: System.Type
  isExternal: true
  name: GetNestedTypes()
  fullName: System.Type.GetNestedTypes()
  spec.csharp:
  - uid: System.Type.GetNestedTypes
    name: GetNestedTypes
    fullName: System.Type.GetNestedTypes
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetNestedTypes
    name: GetNestedTypes
    fullName: System.Type.GetNestedTypes
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.GetNestedTypes()
  commentId: M:System.Type.GetNestedTypes
- uid: System.Type.GetNestedTypes(System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: true
  name: GetNestedTypes(BindingFlags)
  fullName: System.Type.GetNestedTypes(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetNestedTypes(System.Reflection.BindingFlags)
    name: GetNestedTypes
    fullName: System.Type.GetNestedTypes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetNestedTypes(System.Reflection.BindingFlags)
    name: GetNestedTypes
    fullName: System.Type.GetNestedTypes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetNestedTypes(BindingFlags)
  commentId: M:System.Type.GetNestedTypes(System.Reflection.BindingFlags)
- uid: System.Type.GetNestedType(System.String)
  parent: System.Type
  isExternal: true
  name: GetNestedType(String)
  fullName: System.Type.GetNestedType(System.String)
  spec.csharp:
  - uid: System.Type.GetNestedType(System.String)
    name: GetNestedType
    fullName: System.Type.GetNestedType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetNestedType(System.String)
    name: GetNestedType
    fullName: System.Type.GetNestedType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetNestedType(String)
  commentId: M:System.Type.GetNestedType(System.String)
- uid: System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: true
  name: GetNestedType(String, BindingFlags)
  fullName: System.Type.GetNestedType(System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)
    name: GetNestedType
    fullName: System.Type.GetNestedType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)
    name: GetNestedType
    fullName: System.Type.GetNestedType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetNestedType(String, BindingFlags)
  commentId: M:System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)
- uid: System.Type.GetMember(System.String)
  parent: System.Type
  isExternal: true
  name: GetMember(String)
  fullName: System.Type.GetMember(System.String)
  spec.csharp:
  - uid: System.Type.GetMember(System.String)
    name: GetMember
    fullName: System.Type.GetMember
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMember(System.String)
    name: GetMember
    fullName: System.Type.GetMember
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetMember(String)
  commentId: M:System.Type.GetMember(System.String)
- uid: System.Type.GetMember(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: true
  name: GetMember(String, BindingFlags)
  fullName: System.Type.GetMember(System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetMember(System.String,System.Reflection.BindingFlags)
    name: GetMember
    fullName: System.Type.GetMember
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMember(System.String,System.Reflection.BindingFlags)
    name: GetMember
    fullName: System.Type.GetMember
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetMember(String, BindingFlags)
  commentId: M:System.Type.GetMember(System.String,System.Reflection.BindingFlags)
- uid: System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: true
  name: GetMember(String, MemberTypes, BindingFlags)
  fullName: System.Type.GetMember(System.String, System.Reflection.MemberTypes, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
    name: GetMember
    fullName: System.Type.GetMember
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MemberTypes
    name: MemberTypes
    fullName: System.Reflection.MemberTypes
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
    name: GetMember
    fullName: System.Type.GetMember
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MemberTypes
    name: MemberTypes
    fullName: System.Reflection.MemberTypes
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetMember(String, MemberTypes, BindingFlags)
  commentId: M:System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
- uid: System.Type.GetMembers
  parent: System.Type
  isExternal: true
  name: GetMembers()
  fullName: System.Type.GetMembers()
  spec.csharp:
  - uid: System.Type.GetMembers
    name: GetMembers
    fullName: System.Type.GetMembers
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMembers
    name: GetMembers
    fullName: System.Type.GetMembers
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.GetMembers()
  commentId: M:System.Type.GetMembers
- uid: System.Type.GetMembers(System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: true
  name: GetMembers(BindingFlags)
  fullName: System.Type.GetMembers(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetMembers(System.Reflection.BindingFlags)
    name: GetMembers
    fullName: System.Type.GetMembers
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMembers(System.Reflection.BindingFlags)
    name: GetMembers
    fullName: System.Type.GetMembers
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetMembers(BindingFlags)
  commentId: M:System.Type.GetMembers(System.Reflection.BindingFlags)
- uid: System.Type.GetDefaultMembers
  parent: System.Type
  isExternal: true
  name: GetDefaultMembers()
  fullName: System.Type.GetDefaultMembers()
  spec.csharp:
  - uid: System.Type.GetDefaultMembers
    name: GetDefaultMembers
    fullName: System.Type.GetDefaultMembers
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetDefaultMembers
    name: GetDefaultMembers
    fullName: System.Type.GetDefaultMembers
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.GetDefaultMembers()
  commentId: M:System.Type.GetDefaultMembers
- uid: System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  parent: System.Type
  isExternal: true
  name: FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)
  fullName: System.Type.FindMembers(System.Reflection.MemberTypes, System.Reflection.BindingFlags, System.Reflection.MemberFilter, System.Object)
  spec.csharp:
  - uid: System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
    name: FindMembers
    fullName: System.Type.FindMembers
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.MemberTypes
    name: MemberTypes
    fullName: System.Reflection.MemberTypes
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MemberFilter
    name: MemberFilter
    fullName: System.Reflection.MemberFilter
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
    name: FindMembers
    fullName: System.Type.FindMembers
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.MemberTypes
    name: MemberTypes
    fullName: System.Reflection.MemberTypes
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MemberFilter
    name: MemberFilter
    fullName: System.Reflection.MemberFilter
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)
  commentId: M:System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
- uid: System.Type.IsValueTypeImpl
  parent: System.Type
  isExternal: true
  name: IsValueTypeImpl()
  fullName: System.Type.IsValueTypeImpl()
  spec.csharp:
  - uid: System.Type.IsValueTypeImpl
    name: IsValueTypeImpl
    fullName: System.Type.IsValueTypeImpl
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsValueTypeImpl
    name: IsValueTypeImpl
    fullName: System.Type.IsValueTypeImpl
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.IsValueTypeImpl()
  commentId: M:System.Type.IsValueTypeImpl
- uid: System.Type.GetAttributeFlagsImpl
  parent: System.Type
  isExternal: true
  name: GetAttributeFlagsImpl()
  fullName: System.Type.GetAttributeFlagsImpl()
  spec.csharp:
  - uid: System.Type.GetAttributeFlagsImpl
    name: GetAttributeFlagsImpl
    fullName: System.Type.GetAttributeFlagsImpl
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetAttributeFlagsImpl
    name: GetAttributeFlagsImpl
    fullName: System.Type.GetAttributeFlagsImpl
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.GetAttributeFlagsImpl()
  commentId: M:System.Type.GetAttributeFlagsImpl
- uid: System.Type.IsArrayImpl
  parent: System.Type
  isExternal: true
  name: IsArrayImpl()
  fullName: System.Type.IsArrayImpl()
  spec.csharp:
  - uid: System.Type.IsArrayImpl
    name: IsArrayImpl
    fullName: System.Type.IsArrayImpl
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsArrayImpl
    name: IsArrayImpl
    fullName: System.Type.IsArrayImpl
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.IsArrayImpl()
  commentId: M:System.Type.IsArrayImpl
- uid: System.Type.IsByRefImpl
  parent: System.Type
  isExternal: true
  name: IsByRefImpl()
  fullName: System.Type.IsByRefImpl()
  spec.csharp:
  - uid: System.Type.IsByRefImpl
    name: IsByRefImpl
    fullName: System.Type.IsByRefImpl
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsByRefImpl
    name: IsByRefImpl
    fullName: System.Type.IsByRefImpl
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.IsByRefImpl()
  commentId: M:System.Type.IsByRefImpl
- uid: System.Type.IsPointerImpl
  parent: System.Type
  isExternal: true
  name: IsPointerImpl()
  fullName: System.Type.IsPointerImpl()
  spec.csharp:
  - uid: System.Type.IsPointerImpl
    name: IsPointerImpl
    fullName: System.Type.IsPointerImpl
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsPointerImpl
    name: IsPointerImpl
    fullName: System.Type.IsPointerImpl
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.IsPointerImpl()
  commentId: M:System.Type.IsPointerImpl
- uid: System.Type.IsPrimitiveImpl
  parent: System.Type
  isExternal: true
  name: IsPrimitiveImpl()
  fullName: System.Type.IsPrimitiveImpl()
  spec.csharp:
  - uid: System.Type.IsPrimitiveImpl
    name: IsPrimitiveImpl
    fullName: System.Type.IsPrimitiveImpl
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsPrimitiveImpl
    name: IsPrimitiveImpl
    fullName: System.Type.IsPrimitiveImpl
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.IsPrimitiveImpl()
  commentId: M:System.Type.IsPrimitiveImpl
- uid: System.Type.IsCOMObjectImpl
  parent: System.Type
  isExternal: true
  name: IsCOMObjectImpl()
  fullName: System.Type.IsCOMObjectImpl()
  spec.csharp:
  - uid: System.Type.IsCOMObjectImpl
    name: IsCOMObjectImpl
    fullName: System.Type.IsCOMObjectImpl
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsCOMObjectImpl
    name: IsCOMObjectImpl
    fullName: System.Type.IsCOMObjectImpl
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.IsCOMObjectImpl()
  commentId: M:System.Type.IsCOMObjectImpl
- uid: System.Type.IsContextfulImpl
  parent: System.Type
  isExternal: true
  name: IsContextfulImpl()
  fullName: System.Type.IsContextfulImpl()
  spec.csharp:
  - uid: System.Type.IsContextfulImpl
    name: IsContextfulImpl
    fullName: System.Type.IsContextfulImpl
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsContextfulImpl
    name: IsContextfulImpl
    fullName: System.Type.IsContextfulImpl
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.IsContextfulImpl()
  commentId: M:System.Type.IsContextfulImpl
- uid: System.Type.IsMarshalByRefImpl
  parent: System.Type
  isExternal: true
  name: IsMarshalByRefImpl()
  fullName: System.Type.IsMarshalByRefImpl()
  spec.csharp:
  - uid: System.Type.IsMarshalByRefImpl
    name: IsMarshalByRefImpl
    fullName: System.Type.IsMarshalByRefImpl
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsMarshalByRefImpl
    name: IsMarshalByRefImpl
    fullName: System.Type.IsMarshalByRefImpl
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.IsMarshalByRefImpl()
  commentId: M:System.Type.IsMarshalByRefImpl
- uid: System.Type.GetGenericArguments
  parent: System.Type
  isExternal: true
  name: GetGenericArguments()
  fullName: System.Type.GetGenericArguments()
  spec.csharp:
  - uid: System.Type.GetGenericArguments
    name: GetGenericArguments
    fullName: System.Type.GetGenericArguments
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetGenericArguments
    name: GetGenericArguments
    fullName: System.Type.GetGenericArguments
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.GetGenericArguments()
  commentId: M:System.Type.GetGenericArguments
- uid: System.Type.HasElementTypeImpl
  parent: System.Type
  isExternal: true
  name: HasElementTypeImpl()
  fullName: System.Type.HasElementTypeImpl()
  spec.csharp:
  - uid: System.Type.HasElementTypeImpl
    name: HasElementTypeImpl
    fullName: System.Type.HasElementTypeImpl
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.HasElementTypeImpl
    name: HasElementTypeImpl
    fullName: System.Type.HasElementTypeImpl
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.HasElementTypeImpl()
  commentId: M:System.Type.HasElementTypeImpl
- uid: System.Type.GetEnumNames
  parent: System.Type
  isExternal: true
  name: GetEnumNames()
  fullName: System.Type.GetEnumNames()
  spec.csharp:
  - uid: System.Type.GetEnumNames
    name: GetEnumNames
    fullName: System.Type.GetEnumNames
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetEnumNames
    name: GetEnumNames
    fullName: System.Type.GetEnumNames
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.GetEnumNames()
  commentId: M:System.Type.GetEnumNames
- uid: System.Type.GetEnumValues
  parent: System.Type
  isExternal: true
  name: GetEnumValues()
  fullName: System.Type.GetEnumValues()
  spec.csharp:
  - uid: System.Type.GetEnumValues
    name: GetEnumValues
    fullName: System.Type.GetEnumValues
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetEnumValues
    name: GetEnumValues
    fullName: System.Type.GetEnumValues
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.GetEnumValues()
  commentId: M:System.Type.GetEnumValues
- uid: System.Type.GetEnumUnderlyingType
  parent: System.Type
  isExternal: true
  name: GetEnumUnderlyingType()
  fullName: System.Type.GetEnumUnderlyingType()
  spec.csharp:
  - uid: System.Type.GetEnumUnderlyingType
    name: GetEnumUnderlyingType
    fullName: System.Type.GetEnumUnderlyingType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetEnumUnderlyingType
    name: GetEnumUnderlyingType
    fullName: System.Type.GetEnumUnderlyingType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.GetEnumUnderlyingType()
  commentId: M:System.Type.GetEnumUnderlyingType
- uid: System.Type.IsEnumDefined(System.Object)
  parent: System.Type
  isExternal: true
  name: IsEnumDefined(Object)
  fullName: System.Type.IsEnumDefined(System.Object)
  spec.csharp:
  - uid: System.Type.IsEnumDefined(System.Object)
    name: IsEnumDefined
    fullName: System.Type.IsEnumDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsEnumDefined(System.Object)
    name: IsEnumDefined
    fullName: System.Type.IsEnumDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.IsEnumDefined(Object)
  commentId: M:System.Type.IsEnumDefined(System.Object)
- uid: System.Type.GetEnumName(System.Object)
  parent: System.Type
  isExternal: true
  name: GetEnumName(Object)
  fullName: System.Type.GetEnumName(System.Object)
  spec.csharp:
  - uid: System.Type.GetEnumName(System.Object)
    name: GetEnumName
    fullName: System.Type.GetEnumName
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetEnumName(System.Object)
    name: GetEnumName
    fullName: System.Type.GetEnumName
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetEnumName(Object)
  commentId: M:System.Type.GetEnumName(System.Object)
- uid: System.Type.IsInstanceOfType(System.Object)
  parent: System.Type
  isExternal: true
  name: IsInstanceOfType(Object)
  fullName: System.Type.IsInstanceOfType(System.Object)
  spec.csharp:
  - uid: System.Type.IsInstanceOfType(System.Object)
    name: IsInstanceOfType
    fullName: System.Type.IsInstanceOfType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsInstanceOfType(System.Object)
    name: IsInstanceOfType
    fullName: System.Type.IsInstanceOfType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.IsInstanceOfType(Object)
  commentId: M:System.Type.IsInstanceOfType(System.Object)
- uid: System.Type.IsAssignableFrom(System.Type)
  parent: System.Type
  isExternal: true
  name: IsAssignableFrom(Type)
  fullName: System.Type.IsAssignableFrom(System.Type)
  spec.csharp:
  - uid: System.Type.IsAssignableFrom(System.Type)
    name: IsAssignableFrom
    fullName: System.Type.IsAssignableFrom
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsAssignableFrom(System.Type)
    name: IsAssignableFrom
    fullName: System.Type.IsAssignableFrom
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.IsAssignableFrom(Type)
  commentId: M:System.Type.IsAssignableFrom(System.Type)
- uid: System.Type.IsEquivalentTo(System.Type)
  parent: System.Type
  isExternal: true
  name: IsEquivalentTo(Type)
  fullName: System.Type.IsEquivalentTo(System.Type)
  spec.csharp:
  - uid: System.Type.IsEquivalentTo(System.Type)
    name: IsEquivalentTo
    fullName: System.Type.IsEquivalentTo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsEquivalentTo(System.Type)
    name: IsEquivalentTo
    fullName: System.Type.IsEquivalentTo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.IsEquivalentTo(Type)
  commentId: M:System.Type.IsEquivalentTo(System.Type)
- uid: System.Type.GetTypeArray(System.Object[])
  parent: System.Type
  isExternal: true
  name: GetTypeArray(Object[])
  fullName: System.Type.GetTypeArray(System.Object[])
  fullname.vb: System.Type.GetTypeArray(System.Object())
  name.vb: GetTypeArray(Object())
  spec.csharp:
  - uid: System.Type.GetTypeArray(System.Object[])
    name: GetTypeArray
    fullName: System.Type.GetTypeArray
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeArray(System.Object[])
    name: GetTypeArray
    fullName: System.Type.GetTypeArray
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: Type.GetTypeArray(Object[])
  nameWithType.vb: Type.GetTypeArray(Object())
  commentId: M:System.Type.GetTypeArray(System.Object[])
- uid: System.Type.Equals(System.Type)
  parent: System.Type
  isExternal: true
  name: Equals(Type)
  fullName: System.Type.Equals(System.Type)
  spec.csharp:
  - uid: System.Type.Equals(System.Type)
    name: Equals
    fullName: System.Type.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.Equals(System.Type)
    name: Equals
    fullName: System.Type.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.Equals(Type)
  commentId: M:System.Type.Equals(System.Type)
- uid: System.Type.GetInterfaceMap(System.Type)
  parent: System.Type
  isExternal: true
  name: GetInterfaceMap(Type)
  fullName: System.Type.GetInterfaceMap(System.Type)
  spec.csharp:
  - uid: System.Type.GetInterfaceMap(System.Type)
    name: GetInterfaceMap
    fullName: System.Type.GetInterfaceMap
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetInterfaceMap(System.Type)
    name: GetInterfaceMap
    fullName: System.Type.GetInterfaceMap
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.GetInterfaceMap(Type)
  commentId: M:System.Type.GetInterfaceMap(System.Type)
- uid: System.Type.GetType
  parent: System.Type
  isExternal: true
  name: GetType()
  fullName: System.Type.GetType()
  spec.csharp:
  - uid: System.Type.GetType
    name: GetType
    fullName: System.Type.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetType
    name: GetType
    fullName: System.Type.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.GetType()
  commentId: M:System.Type.GetType
- uid: System.Type.System#Runtime#InteropServices#_Type#GetTypeInfoCount(System.UInt32@)
  parent: System.Type
  isExternal: true
  name: _Type.GetTypeInfoCount(UInt32)
  fullName: System.Type.System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32)
  name.vb: System.Runtime.InteropServices._Type.GetTypeInfoCount(UInt32)
  spec.csharp:
  - uid: System.Type.System#Runtime#InteropServices#_Type#GetTypeInfoCount(System.UInt32@)
    name: _Type.GetTypeInfoCount
    fullName: System.Type.System.Runtime.InteropServices._Type.GetTypeInfoCount
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.System#Runtime#InteropServices#_Type#GetTypeInfoCount(System.UInt32@)
    name: System.Runtime.InteropServices._Type.GetTypeInfoCount
    fullName: System.Type.System.Runtime.InteropServices._Type.GetTypeInfoCount
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type._Type.GetTypeInfoCount(UInt32)
  nameWithType.vb: Type.System.Runtime.InteropServices._Type.GetTypeInfoCount(UInt32)
  commentId: M:System.Type.System#Runtime#InteropServices#_Type#GetTypeInfoCount(System.UInt32@)
- uid: System.Type.System#Runtime#InteropServices#_Type#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Type
  isExternal: true
  name: _Type.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: System.Type.System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr)
  name.vb: System.Runtime.InteropServices._Type.GetTypeInfo(UInt32, UInt32, IntPtr)
  spec.csharp:
  - uid: System.Type.System#Runtime#InteropServices#_Type#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    name: _Type.GetTypeInfo
    fullName: System.Type.System.Runtime.InteropServices._Type.GetTypeInfo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.System#Runtime#InteropServices#_Type#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    name: System.Runtime.InteropServices._Type.GetTypeInfo
    fullName: System.Type.System.Runtime.InteropServices._Type.GetTypeInfo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type._Type.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType.vb: Type.System.Runtime.InteropServices._Type.GetTypeInfo(UInt32, UInt32, IntPtr)
  commentId: M:System.Type.System#Runtime#InteropServices#_Type#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
- uid: System.Type.System#Runtime#InteropServices#_Type#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Type
  isExternal: true
  name: _Type.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: System.Type.System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr)
  name.vb: System.Runtime.InteropServices._Type.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  spec.csharp:
  - uid: System.Type.System#Runtime#InteropServices#_Type#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    name: _Type.GetIDsOfNames
    fullName: System.Type.System.Runtime.InteropServices._Type.GetIDsOfNames
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.System#Runtime#InteropServices#_Type#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    name: System.Runtime.InteropServices._Type.GetIDsOfNames
    fullName: System.Type.System.Runtime.InteropServices._Type.GetIDsOfNames
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type._Type.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType.vb: Type.System.Runtime.InteropServices._Type.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  commentId: M:System.Type.System#Runtime#InteropServices#_Type#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
- uid: System.Type.System#Runtime#InteropServices#_Type#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Type
  isExternal: true
  name: _Type.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: System.Type.System.Runtime.InteropServices._Type.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)
  name.vb: System.Runtime.InteropServices._Type.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  spec.csharp:
  - uid: System.Type.System#Runtime#InteropServices#_Type#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    name: _Type.Invoke
    fullName: System.Type.System.Runtime.InteropServices._Type.Invoke
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.System#Runtime#InteropServices#_Type#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    name: System.Runtime.InteropServices._Type.Invoke
    fullName: System.Type.System.Runtime.InteropServices._Type.Invoke
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type._Type.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType.vb: Type.System.Runtime.InteropServices._Type.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  commentId: M:System.Type.System#Runtime#InteropServices#_Type#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
- uid: System.Type.MemberType
  parent: System.Type
  isExternal: true
  name: MemberType
  fullName: System.Type.MemberType
  nameWithType: Type.MemberType
  commentId: P:System.Type.MemberType
- uid: System.Type.ReflectedType
  parent: System.Type
  isExternal: true
  name: ReflectedType
  fullName: System.Type.ReflectedType
  nameWithType: Type.ReflectedType
  commentId: P:System.Type.ReflectedType
- uid: System.Type.StructLayoutAttribute
  parent: System.Type
  isExternal: true
  name: StructLayoutAttribute
  fullName: System.Type.StructLayoutAttribute
  nameWithType: Type.StructLayoutAttribute
  commentId: P:System.Type.StructLayoutAttribute
- uid: System.Type.DefaultBinder
  parent: System.Type
  isExternal: true
  name: DefaultBinder
  fullName: System.Type.DefaultBinder
  nameWithType: Type.DefaultBinder
  commentId: P:System.Type.DefaultBinder
- uid: System.Type.TypeHandle
  parent: System.Type
  isExternal: true
  name: TypeHandle
  fullName: System.Type.TypeHandle
  nameWithType: Type.TypeHandle
  commentId: P:System.Type.TypeHandle
- uid: System.Type.TypeInitializer
  parent: System.Type
  isExternal: true
  name: TypeInitializer
  fullName: System.Type.TypeInitializer
  nameWithType: Type.TypeInitializer
  commentId: P:System.Type.TypeInitializer
- uid: System.Type.IsNested
  parent: System.Type
  isExternal: true
  name: IsNested
  fullName: System.Type.IsNested
  nameWithType: Type.IsNested
  commentId: P:System.Type.IsNested
- uid: System.Type.IsVisible
  parent: System.Type
  isExternal: true
  name: IsVisible
  fullName: System.Type.IsVisible
  nameWithType: Type.IsVisible
  commentId: P:System.Type.IsVisible
- uid: System.Type.IsNotPublic
  parent: System.Type
  isExternal: true
  name: IsNotPublic
  fullName: System.Type.IsNotPublic
  nameWithType: Type.IsNotPublic
  commentId: P:System.Type.IsNotPublic
- uid: System.Type.IsPublic
  parent: System.Type
  isExternal: true
  name: IsPublic
  fullName: System.Type.IsPublic
  nameWithType: Type.IsPublic
  commentId: P:System.Type.IsPublic
- uid: System.Type.IsNestedPublic
  parent: System.Type
  isExternal: true
  name: IsNestedPublic
  fullName: System.Type.IsNestedPublic
  nameWithType: Type.IsNestedPublic
  commentId: P:System.Type.IsNestedPublic
- uid: System.Type.IsNestedPrivate
  parent: System.Type
  isExternal: true
  name: IsNestedPrivate
  fullName: System.Type.IsNestedPrivate
  nameWithType: Type.IsNestedPrivate
  commentId: P:System.Type.IsNestedPrivate
- uid: System.Type.IsNestedFamily
  parent: System.Type
  isExternal: true
  name: IsNestedFamily
  fullName: System.Type.IsNestedFamily
  nameWithType: Type.IsNestedFamily
  commentId: P:System.Type.IsNestedFamily
- uid: System.Type.IsNestedAssembly
  parent: System.Type
  isExternal: true
  name: IsNestedAssembly
  fullName: System.Type.IsNestedAssembly
  nameWithType: Type.IsNestedAssembly
  commentId: P:System.Type.IsNestedAssembly
- uid: System.Type.IsNestedFamANDAssem
  parent: System.Type
  isExternal: true
  name: IsNestedFamANDAssem
  fullName: System.Type.IsNestedFamANDAssem
  nameWithType: Type.IsNestedFamANDAssem
  commentId: P:System.Type.IsNestedFamANDAssem
- uid: System.Type.IsNestedFamORAssem
  parent: System.Type
  isExternal: true
  name: IsNestedFamORAssem
  fullName: System.Type.IsNestedFamORAssem
  nameWithType: Type.IsNestedFamORAssem
  commentId: P:System.Type.IsNestedFamORAssem
- uid: System.Type.IsAutoLayout
  parent: System.Type
  isExternal: true
  name: IsAutoLayout
  fullName: System.Type.IsAutoLayout
  nameWithType: Type.IsAutoLayout
  commentId: P:System.Type.IsAutoLayout
- uid: System.Type.IsLayoutSequential
  parent: System.Type
  isExternal: true
  name: IsLayoutSequential
  fullName: System.Type.IsLayoutSequential
  nameWithType: Type.IsLayoutSequential
  commentId: P:System.Type.IsLayoutSequential
- uid: System.Type.IsExplicitLayout
  parent: System.Type
  isExternal: true
  name: IsExplicitLayout
  fullName: System.Type.IsExplicitLayout
  nameWithType: Type.IsExplicitLayout
  commentId: P:System.Type.IsExplicitLayout
- uid: System.Type.IsClass
  parent: System.Type
  isExternal: true
  name: IsClass
  fullName: System.Type.IsClass
  nameWithType: Type.IsClass
  commentId: P:System.Type.IsClass
- uid: System.Type.IsInterface
  parent: System.Type
  isExternal: true
  name: IsInterface
  fullName: System.Type.IsInterface
  nameWithType: Type.IsInterface
  commentId: P:System.Type.IsInterface
- uid: System.Type.IsValueType
  parent: System.Type
  isExternal: true
  name: IsValueType
  fullName: System.Type.IsValueType
  nameWithType: Type.IsValueType
  commentId: P:System.Type.IsValueType
- uid: System.Type.IsAbstract
  parent: System.Type
  isExternal: true
  name: IsAbstract
  fullName: System.Type.IsAbstract
  nameWithType: Type.IsAbstract
  commentId: P:System.Type.IsAbstract
- uid: System.Type.IsSealed
  parent: System.Type
  isExternal: true
  name: IsSealed
  fullName: System.Type.IsSealed
  nameWithType: Type.IsSealed
  commentId: P:System.Type.IsSealed
- uid: System.Type.IsSpecialName
  parent: System.Type
  isExternal: true
  name: IsSpecialName
  fullName: System.Type.IsSpecialName
  nameWithType: Type.IsSpecialName
  commentId: P:System.Type.IsSpecialName
- uid: System.Type.IsImport
  parent: System.Type
  isExternal: true
  name: IsImport
  fullName: System.Type.IsImport
  nameWithType: Type.IsImport
  commentId: P:System.Type.IsImport
- uid: System.Type.IsAnsiClass
  parent: System.Type
  isExternal: true
  name: IsAnsiClass
  fullName: System.Type.IsAnsiClass
  nameWithType: Type.IsAnsiClass
  commentId: P:System.Type.IsAnsiClass
- uid: System.Type.IsUnicodeClass
  parent: System.Type
  isExternal: true
  name: IsUnicodeClass
  fullName: System.Type.IsUnicodeClass
  nameWithType: Type.IsUnicodeClass
  commentId: P:System.Type.IsUnicodeClass
- uid: System.Type.IsAutoClass
  parent: System.Type
  isExternal: true
  name: IsAutoClass
  fullName: System.Type.IsAutoClass
  nameWithType: Type.IsAutoClass
  commentId: P:System.Type.IsAutoClass
- uid: System.Type.IsArray
  parent: System.Type
  isExternal: true
  name: IsArray
  fullName: System.Type.IsArray
  nameWithType: Type.IsArray
  commentId: P:System.Type.IsArray
- uid: System.Type.IsConstructedGenericType
  parent: System.Type
  isExternal: true
  name: IsConstructedGenericType
  fullName: System.Type.IsConstructedGenericType
  nameWithType: Type.IsConstructedGenericType
  commentId: P:System.Type.IsConstructedGenericType
- uid: System.Type.IsByRef
  parent: System.Type
  isExternal: true
  name: IsByRef
  fullName: System.Type.IsByRef
  nameWithType: Type.IsByRef
  commentId: P:System.Type.IsByRef
- uid: System.Type.IsPointer
  parent: System.Type
  isExternal: true
  name: IsPointer
  fullName: System.Type.IsPointer
  nameWithType: Type.IsPointer
  commentId: P:System.Type.IsPointer
- uid: System.Type.IsPrimitive
  parent: System.Type
  isExternal: true
  name: IsPrimitive
  fullName: System.Type.IsPrimitive
  nameWithType: Type.IsPrimitive
  commentId: P:System.Type.IsPrimitive
- uid: System.Type.IsCOMObject
  parent: System.Type
  isExternal: true
  name: IsCOMObject
  fullName: System.Type.IsCOMObject
  nameWithType: Type.IsCOMObject
  commentId: P:System.Type.IsCOMObject
- uid: System.Type.HasElementType
  parent: System.Type
  isExternal: true
  name: HasElementType
  fullName: System.Type.HasElementType
  nameWithType: Type.HasElementType
  commentId: P:System.Type.HasElementType
- uid: System.Type.IsContextful
  parent: System.Type
  isExternal: true
  name: IsContextful
  fullName: System.Type.IsContextful
  nameWithType: Type.IsContextful
  commentId: P:System.Type.IsContextful
- uid: System.Type.IsMarshalByRef
  parent: System.Type
  isExternal: true
  name: IsMarshalByRef
  fullName: System.Type.IsMarshalByRef
  nameWithType: Type.IsMarshalByRef
  commentId: P:System.Type.IsMarshalByRef
- uid: System.Type.IsSecurityCritical
  parent: System.Type
  isExternal: true
  name: IsSecurityCritical
  fullName: System.Type.IsSecurityCritical
  nameWithType: Type.IsSecurityCritical
  commentId: P:System.Type.IsSecurityCritical
- uid: System.Type.IsSecuritySafeCritical
  parent: System.Type
  isExternal: true
  name: IsSecuritySafeCritical
  fullName: System.Type.IsSecuritySafeCritical
  nameWithType: Type.IsSecuritySafeCritical
  commentId: P:System.Type.IsSecuritySafeCritical
- uid: System.Type.IsSecurityTransparent
  parent: System.Type
  isExternal: true
  name: IsSecurityTransparent
  fullName: System.Type.IsSecurityTransparent
  nameWithType: Type.IsSecurityTransparent
  commentId: P:System.Type.IsSecurityTransparent
- uid: System.Type.UnderlyingSystemType
  parent: System.Type
  isExternal: true
  name: UnderlyingSystemType
  fullName: System.Type.UnderlyingSystemType
  nameWithType: Type.UnderlyingSystemType
  commentId: P:System.Type.UnderlyingSystemType
- uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: GetCustomAttributes(Boolean)
  fullName: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.MemberInfo.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.MemberInfo.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: MemberInfo.GetCustomAttributes(Boolean)
  commentId: M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
- uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: GetCustomAttributes(Type, Boolean)
  fullName: System.Reflection.MemberInfo.GetCustomAttributes(System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.MemberInfo.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.MemberInfo.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: MemberInfo.GetCustomAttributes(Type, Boolean)
  commentId: M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
- uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: IsDefined(Type, Boolean)
  fullName: System.Reflection.MemberInfo.IsDefined(System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
    name: IsDefined
    fullName: System.Reflection.MemberInfo.IsDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
    name: IsDefined
    fullName: System.Reflection.MemberInfo.IsDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: MemberInfo.IsDefined(Type, Boolean)
  commentId: M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
- uid: System.Reflection.MemberInfo.GetCustomAttributesData
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: GetCustomAttributesData()
  fullName: System.Reflection.MemberInfo.GetCustomAttributesData()
  spec.csharp:
  - uid: System.Reflection.MemberInfo.GetCustomAttributesData
    name: GetCustomAttributesData
    fullName: System.Reflection.MemberInfo.GetCustomAttributesData
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.GetCustomAttributesData
    name: GetCustomAttributesData
    fullName: System.Reflection.MemberInfo.GetCustomAttributesData
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: MemberInfo.GetCustomAttributesData()
  commentId: M:System.Reflection.MemberInfo.GetCustomAttributesData
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: _MemberInfo.GetType()
  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType()
  name.vb: System.Runtime.InteropServices._MemberInfo.GetType()
  spec.csharp:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
    name: _MemberInfo.GetType
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
    name: System.Runtime.InteropServices._MemberInfo.GetType
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: MemberInfo._MemberInfo.GetType()
  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType()
  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: _MemberInfo.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(System.UInt32)
  name.vb: System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(UInt32)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
    name: _MemberInfo.GetTypeInfoCount
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
    name: System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: MemberInfo._MemberInfo.GetTypeInfoCount(UInt32)
  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(UInt32)
  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: _MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr)
  name.vb: System.Runtime.InteropServices._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    name: _MemberInfo.GetTypeInfo
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    name: System.Runtime.InteropServices._MemberInfo.GetTypeInfo
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
  nameWithType: MemberInfo._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: _MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr)
  name.vb: System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    name: _MemberInfo.GetIDsOfNames
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    name: System.Runtime.InteropServices._MemberInfo.GetIDsOfNames
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
  nameWithType: MemberInfo._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: _MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)
  name.vb: System.Runtime.InteropServices._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    name: _MemberInfo.Invoke
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    name: System.Runtime.InteropServices._MemberInfo.Invoke
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
  nameWithType: MemberInfo._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
- uid: System.Reflection.MemberInfo.CustomAttributes
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: CustomAttributes
  fullName: System.Reflection.MemberInfo.CustomAttributes
  nameWithType: MemberInfo.CustomAttributes
  commentId: P:System.Reflection.MemberInfo.CustomAttributes
- uid: System.Reflection.MemberInfo.MetadataToken
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: MetadataToken
  fullName: System.Reflection.MemberInfo.MetadataToken
  nameWithType: MemberInfo.MetadataToken
  commentId: P:System.Reflection.MemberInfo.MetadataToken
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System.Type.System.Reflection.IntrospectionExtensions.GetTypeInfo
  parent: System.Reflection.IntrospectionExtensions
  definition: System.Reflection.IntrospectionExtensions.GetTypeInfo(System.Type)
  name: GetTypeInfo()
  fullName: System.Reflection.IntrospectionExtensions.GetTypeInfo()
  spec.csharp:
  - uid: System.Reflection.IntrospectionExtensions.GetTypeInfo
    name: GetTypeInfo
    fullName: System.Reflection.IntrospectionExtensions.GetTypeInfo
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.IntrospectionExtensions.GetTypeInfo
    name: GetTypeInfo
    fullName: System.Reflection.IntrospectionExtensions.GetTypeInfo
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: IntrospectionExtensions.GetTypeInfo()
  commentId: M:System.Reflection.IntrospectionExtensions.GetTypeInfo(System.Type)
- uid: System.Reflection.MemberInfo.System.Reflection.MemberInfoExtensions.HasMetadataToken
  parent: System.Reflection.MemberInfoExtensions
  definition: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
  name: HasMetadataToken()
  fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken()
  spec.csharp:
  - uid: System.Reflection.MemberInfoExtensions.HasMetadataToken
    name: HasMetadataToken
    fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfoExtensions.HasMetadataToken
    name: HasMetadataToken
    fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: MemberInfoExtensions.HasMetadataToken()
  commentId: M:System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
- uid: System.Reflection.MemberInfo.System.Reflection.MemberInfoExtensions.GetMetadataToken
  parent: System.Reflection.MemberInfoExtensions
  definition: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
  name: GetMetadataToken()
  fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken()
  spec.csharp:
  - uid: System.Reflection.MemberInfoExtensions.GetMetadataToken
    name: GetMetadataToken
    fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfoExtensions.GetMetadataToken
    name: GetMetadataToken
    fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: MemberInfoExtensions.GetMetadataToken()
  commentId: M:System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
- uid: System.Type.System.Reflection.TypeExtensions.GetConstructor(System.Type[])
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetConstructor(System.Type,System.Type[])
  name: GetConstructor(Type[])
  fullName: System.Reflection.TypeExtensions.GetConstructor(System.Type[])
  fullname.vb: System.Reflection.TypeExtensions.GetConstructor(System.Type())
  name.vb: GetConstructor(Type())
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetConstructor(System.Type[])
    name: GetConstructor
    fullName: System.Reflection.TypeExtensions.GetConstructor
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetConstructor(System.Type[])
    name: GetConstructor
    fullName: System.Reflection.TypeExtensions.GetConstructor
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetConstructor(Type[])
  nameWithType.vb: TypeExtensions.GetConstructor(Type())
  commentId: M:System.Reflection.TypeExtensions.GetConstructor(System.Type,System.Type[])
- uid: System.Type.System.Reflection.TypeExtensions.GetConstructors
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetConstructors(System.Type)
  name: GetConstructors()
  fullName: System.Reflection.TypeExtensions.GetConstructors()
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetConstructors
    name: GetConstructors
    fullName: System.Reflection.TypeExtensions.GetConstructors
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetConstructors
    name: GetConstructors
    fullName: System.Reflection.TypeExtensions.GetConstructors
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetConstructors()
  commentId: M:System.Reflection.TypeExtensions.GetConstructors(System.Type)
- uid: System.Type.System.Reflection.TypeExtensions.GetConstructors(System.Reflection.BindingFlags)
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetConstructors(System.Type,System.Reflection.BindingFlags)
  name: GetConstructors(BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetConstructors(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetConstructors(System.Reflection.BindingFlags)
    name: GetConstructors
    fullName: System.Reflection.TypeExtensions.GetConstructors
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetConstructors(System.Reflection.BindingFlags)
    name: GetConstructors
    fullName: System.Reflection.TypeExtensions.GetConstructors
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetConstructors(BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetConstructors(System.Type,System.Reflection.BindingFlags)
- uid: System.Type.System.Reflection.TypeExtensions.GetDefaultMembers
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetDefaultMembers(System.Type)
  name: GetDefaultMembers()
  fullName: System.Reflection.TypeExtensions.GetDefaultMembers()
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetDefaultMembers
    name: GetDefaultMembers
    fullName: System.Reflection.TypeExtensions.GetDefaultMembers
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetDefaultMembers
    name: GetDefaultMembers
    fullName: System.Reflection.TypeExtensions.GetDefaultMembers
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetDefaultMembers()
  commentId: M:System.Reflection.TypeExtensions.GetDefaultMembers(System.Type)
- uid: System.Type.System.Reflection.TypeExtensions.GetEvent(System.String)
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetEvent(System.Type,System.String)
  name: GetEvent(String)
  fullName: System.Reflection.TypeExtensions.GetEvent(System.String)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetEvent(System.String)
    name: GetEvent
    fullName: System.Reflection.TypeExtensions.GetEvent
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetEvent(System.String)
    name: GetEvent
    fullName: System.Reflection.TypeExtensions.GetEvent
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetEvent(String)
  commentId: M:System.Reflection.TypeExtensions.GetEvent(System.Type,System.String)
- uid: System.Type.System.Reflection.TypeExtensions.GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetEvent(System.Type,System.String,System.Reflection.BindingFlags)
  name: GetEvent(String, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetEvent(System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetEvent(System.String,System.Reflection.BindingFlags)
    name: GetEvent
    fullName: System.Reflection.TypeExtensions.GetEvent
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetEvent(System.String,System.Reflection.BindingFlags)
    name: GetEvent
    fullName: System.Reflection.TypeExtensions.GetEvent
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetEvent(String, BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetEvent(System.Type,System.String,System.Reflection.BindingFlags)
- uid: System.Type.System.Reflection.TypeExtensions.GetEvents
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetEvents(System.Type)
  name: GetEvents()
  fullName: System.Reflection.TypeExtensions.GetEvents()
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetEvents
    name: GetEvents
    fullName: System.Reflection.TypeExtensions.GetEvents
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetEvents
    name: GetEvents
    fullName: System.Reflection.TypeExtensions.GetEvents
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetEvents()
  commentId: M:System.Reflection.TypeExtensions.GetEvents(System.Type)
- uid: System.Type.System.Reflection.TypeExtensions.GetEvents(System.Reflection.BindingFlags)
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetEvents(System.Type,System.Reflection.BindingFlags)
  name: GetEvents(BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetEvents(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetEvents(System.Reflection.BindingFlags)
    name: GetEvents
    fullName: System.Reflection.TypeExtensions.GetEvents
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetEvents(System.Reflection.BindingFlags)
    name: GetEvents
    fullName: System.Reflection.TypeExtensions.GetEvents
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetEvents(BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetEvents(System.Type,System.Reflection.BindingFlags)
- uid: System.Type.System.Reflection.TypeExtensions.GetField(System.String)
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetField(System.Type,System.String)
  name: GetField(String)
  fullName: System.Reflection.TypeExtensions.GetField(System.String)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetField(System.String)
    name: GetField
    fullName: System.Reflection.TypeExtensions.GetField
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetField(System.String)
    name: GetField
    fullName: System.Reflection.TypeExtensions.GetField
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetField(String)
  commentId: M:System.Reflection.TypeExtensions.GetField(System.Type,System.String)
- uid: System.Type.System.Reflection.TypeExtensions.GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetField(System.Type,System.String,System.Reflection.BindingFlags)
  name: GetField(String, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetField(System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetField(System.String,System.Reflection.BindingFlags)
    name: GetField
    fullName: System.Reflection.TypeExtensions.GetField
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetField(System.String,System.Reflection.BindingFlags)
    name: GetField
    fullName: System.Reflection.TypeExtensions.GetField
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetField(String, BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetField(System.Type,System.String,System.Reflection.BindingFlags)
- uid: System.Type.System.Reflection.TypeExtensions.GetFields
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetFields(System.Type)
  name: GetFields()
  fullName: System.Reflection.TypeExtensions.GetFields()
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetFields
    name: GetFields
    fullName: System.Reflection.TypeExtensions.GetFields
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetFields
    name: GetFields
    fullName: System.Reflection.TypeExtensions.GetFields
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetFields()
  commentId: M:System.Reflection.TypeExtensions.GetFields(System.Type)
- uid: System.Type.System.Reflection.TypeExtensions.GetFields(System.Reflection.BindingFlags)
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetFields(System.Type,System.Reflection.BindingFlags)
  name: GetFields(BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetFields(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetFields(System.Reflection.BindingFlags)
    name: GetFields
    fullName: System.Reflection.TypeExtensions.GetFields
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetFields(System.Reflection.BindingFlags)
    name: GetFields
    fullName: System.Reflection.TypeExtensions.GetFields
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetFields(BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetFields(System.Type,System.Reflection.BindingFlags)
- uid: System.Type.System.Reflection.TypeExtensions.GetGenericArguments
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetGenericArguments(System.Type)
  name: GetGenericArguments()
  fullName: System.Reflection.TypeExtensions.GetGenericArguments()
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetGenericArguments
    name: GetGenericArguments
    fullName: System.Reflection.TypeExtensions.GetGenericArguments
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetGenericArguments
    name: GetGenericArguments
    fullName: System.Reflection.TypeExtensions.GetGenericArguments
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetGenericArguments()
  commentId: M:System.Reflection.TypeExtensions.GetGenericArguments(System.Type)
- uid: System.Type.System.Reflection.TypeExtensions.GetInterfaces
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetInterfaces(System.Type)
  name: GetInterfaces()
  fullName: System.Reflection.TypeExtensions.GetInterfaces()
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetInterfaces
    name: GetInterfaces
    fullName: System.Reflection.TypeExtensions.GetInterfaces
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetInterfaces
    name: GetInterfaces
    fullName: System.Reflection.TypeExtensions.GetInterfaces
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetInterfaces()
  commentId: M:System.Reflection.TypeExtensions.GetInterfaces(System.Type)
- uid: System.Type.System.Reflection.TypeExtensions.GetMember(System.String)
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetMember(System.Type,System.String)
  name: GetMember(String)
  fullName: System.Reflection.TypeExtensions.GetMember(System.String)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetMember(System.String)
    name: GetMember
    fullName: System.Reflection.TypeExtensions.GetMember
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetMember(System.String)
    name: GetMember
    fullName: System.Reflection.TypeExtensions.GetMember
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetMember(String)
  commentId: M:System.Reflection.TypeExtensions.GetMember(System.Type,System.String)
- uid: System.Type.System.Reflection.TypeExtensions.GetMember(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetMember(System.Type,System.String,System.Reflection.BindingFlags)
  name: GetMember(String, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetMember(System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetMember(System.String,System.Reflection.BindingFlags)
    name: GetMember
    fullName: System.Reflection.TypeExtensions.GetMember
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetMember(System.String,System.Reflection.BindingFlags)
    name: GetMember
    fullName: System.Reflection.TypeExtensions.GetMember
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetMember(String, BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetMember(System.Type,System.String,System.Reflection.BindingFlags)
- uid: System.Type.System.Reflection.TypeExtensions.GetMembers
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetMembers(System.Type)
  name: GetMembers()
  fullName: System.Reflection.TypeExtensions.GetMembers()
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetMembers
    name: GetMembers
    fullName: System.Reflection.TypeExtensions.GetMembers
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetMembers
    name: GetMembers
    fullName: System.Reflection.TypeExtensions.GetMembers
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetMembers()
  commentId: M:System.Reflection.TypeExtensions.GetMembers(System.Type)
- uid: System.Type.System.Reflection.TypeExtensions.GetMembers(System.Reflection.BindingFlags)
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetMembers(System.Type,System.Reflection.BindingFlags)
  name: GetMembers(BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetMembers(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetMembers(System.Reflection.BindingFlags)
    name: GetMembers
    fullName: System.Reflection.TypeExtensions.GetMembers
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetMembers(System.Reflection.BindingFlags)
    name: GetMembers
    fullName: System.Reflection.TypeExtensions.GetMembers
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetMembers(BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetMembers(System.Type,System.Reflection.BindingFlags)
- uid: System.Type.System.Reflection.TypeExtensions.GetMethod(System.String)
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String)
  name: GetMethod(String)
  fullName: System.Reflection.TypeExtensions.GetMethod(System.String)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetMethod(System.String)
    name: GetMethod
    fullName: System.Reflection.TypeExtensions.GetMethod
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetMethod(System.String)
    name: GetMethod
    fullName: System.Reflection.TypeExtensions.GetMethod
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetMethod(String)
  commentId: M:System.Reflection.TypeExtensions.GetMethod(System.Type,System.String)
- uid: System.Type.System.Reflection.TypeExtensions.GetMethod(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Reflection.BindingFlags)
  name: GetMethod(String, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetMethod(System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetMethod(System.String,System.Reflection.BindingFlags)
    name: GetMethod
    fullName: System.Reflection.TypeExtensions.GetMethod
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetMethod(System.String,System.Reflection.BindingFlags)
    name: GetMethod
    fullName: System.Reflection.TypeExtensions.GetMethod
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetMethod(String, BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Reflection.BindingFlags)
- uid: System.Type.System.Reflection.TypeExtensions.GetMethod(System.String,System.Type[])
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Type[])
  name: GetMethod(String, Type[])
  fullName: System.Reflection.TypeExtensions.GetMethod(System.String, System.Type[])
  fullname.vb: System.Reflection.TypeExtensions.GetMethod(System.String, System.Type())
  name.vb: GetMethod(String, Type())
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetMethod(System.String,System.Type[])
    name: GetMethod
    fullName: System.Reflection.TypeExtensions.GetMethod
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetMethod(System.String,System.Type[])
    name: GetMethod
    fullName: System.Reflection.TypeExtensions.GetMethod
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetMethod(String, Type[])
  nameWithType.vb: TypeExtensions.GetMethod(String, Type())
  commentId: M:System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Type[])
- uid: System.Type.System.Reflection.TypeExtensions.GetMethods
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetMethods(System.Type)
  name: GetMethods()
  fullName: System.Reflection.TypeExtensions.GetMethods()
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetMethods
    name: GetMethods
    fullName: System.Reflection.TypeExtensions.GetMethods
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetMethods
    name: GetMethods
    fullName: System.Reflection.TypeExtensions.GetMethods
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetMethods()
  commentId: M:System.Reflection.TypeExtensions.GetMethods(System.Type)
- uid: System.Type.System.Reflection.TypeExtensions.GetMethods(System.Reflection.BindingFlags)
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetMethods(System.Type,System.Reflection.BindingFlags)
  name: GetMethods(BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetMethods(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetMethods(System.Reflection.BindingFlags)
    name: GetMethods
    fullName: System.Reflection.TypeExtensions.GetMethods
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetMethods(System.Reflection.BindingFlags)
    name: GetMethods
    fullName: System.Reflection.TypeExtensions.GetMethods
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetMethods(BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetMethods(System.Type,System.Reflection.BindingFlags)
- uid: System.Type.System.Reflection.TypeExtensions.GetNestedType(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetNestedType(System.Type,System.String,System.Reflection.BindingFlags)
  name: GetNestedType(String, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetNestedType(System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetNestedType(System.String,System.Reflection.BindingFlags)
    name: GetNestedType
    fullName: System.Reflection.TypeExtensions.GetNestedType
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetNestedType(System.String,System.Reflection.BindingFlags)
    name: GetNestedType
    fullName: System.Reflection.TypeExtensions.GetNestedType
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetNestedType(String, BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetNestedType(System.Type,System.String,System.Reflection.BindingFlags)
- uid: System.Type.System.Reflection.TypeExtensions.GetNestedTypes(System.Reflection.BindingFlags)
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetNestedTypes(System.Type,System.Reflection.BindingFlags)
  name: GetNestedTypes(BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetNestedTypes(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetNestedTypes(System.Reflection.BindingFlags)
    name: GetNestedTypes
    fullName: System.Reflection.TypeExtensions.GetNestedTypes
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetNestedTypes(System.Reflection.BindingFlags)
    name: GetNestedTypes
    fullName: System.Reflection.TypeExtensions.GetNestedTypes
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetNestedTypes(BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetNestedTypes(System.Type,System.Reflection.BindingFlags)
- uid: System.Type.System.Reflection.TypeExtensions.GetProperties
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetProperties(System.Type)
  name: GetProperties()
  fullName: System.Reflection.TypeExtensions.GetProperties()
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetProperties
    name: GetProperties
    fullName: System.Reflection.TypeExtensions.GetProperties
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetProperties
    name: GetProperties
    fullName: System.Reflection.TypeExtensions.GetProperties
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetProperties()
  commentId: M:System.Reflection.TypeExtensions.GetProperties(System.Type)
- uid: System.Type.System.Reflection.TypeExtensions.GetProperties(System.Reflection.BindingFlags)
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetProperties(System.Type,System.Reflection.BindingFlags)
  name: GetProperties(BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetProperties(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetProperties(System.Reflection.BindingFlags)
    name: GetProperties
    fullName: System.Reflection.TypeExtensions.GetProperties
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetProperties(System.Reflection.BindingFlags)
    name: GetProperties
    fullName: System.Reflection.TypeExtensions.GetProperties
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetProperties(BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetProperties(System.Type,System.Reflection.BindingFlags)
- uid: System.Type.System.Reflection.TypeExtensions.GetProperty(System.String)
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String)
  name: GetProperty(String)
  fullName: System.Reflection.TypeExtensions.GetProperty(System.String)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetProperty(System.String)
    name: GetProperty
    fullName: System.Reflection.TypeExtensions.GetProperty
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetProperty(System.String)
    name: GetProperty
    fullName: System.Reflection.TypeExtensions.GetProperty
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetProperty(String)
  commentId: M:System.Reflection.TypeExtensions.GetProperty(System.Type,System.String)
- uid: System.Type.System.Reflection.TypeExtensions.GetProperty(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Reflection.BindingFlags)
  name: GetProperty(String, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetProperty(System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetProperty(System.String,System.Reflection.BindingFlags)
    name: GetProperty
    fullName: System.Reflection.TypeExtensions.GetProperty
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetProperty(System.String,System.Reflection.BindingFlags)
    name: GetProperty
    fullName: System.Reflection.TypeExtensions.GetProperty
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetProperty(String, BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Reflection.BindingFlags)
- uid: System.Type.System.Reflection.TypeExtensions.GetProperty(System.String,System.Type)
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type)
  name: GetProperty(String, Type)
  fullName: System.Reflection.TypeExtensions.GetProperty(System.String, System.Type)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetProperty(System.String,System.Type)
    name: GetProperty
    fullName: System.Reflection.TypeExtensions.GetProperty
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetProperty(System.String,System.Type)
    name: GetProperty
    fullName: System.Reflection.TypeExtensions.GetProperty
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetProperty(String, Type)
  commentId: M:System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type)
- uid: System.Type.System.Reflection.TypeExtensions.GetProperty(System.String,System.Type,System.Type[])
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type,System.Type[])
  name: GetProperty(String, Type, Type[])
  fullName: System.Reflection.TypeExtensions.GetProperty(System.String, System.Type, System.Type[])
  fullname.vb: System.Reflection.TypeExtensions.GetProperty(System.String, System.Type, System.Type())
  name.vb: GetProperty(String, Type, Type())
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetProperty(System.String,System.Type,System.Type[])
    name: GetProperty
    fullName: System.Reflection.TypeExtensions.GetProperty
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetProperty(System.String,System.Type,System.Type[])
    name: GetProperty
    fullName: System.Reflection.TypeExtensions.GetProperty
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetProperty(String, Type, Type[])
  nameWithType.vb: TypeExtensions.GetProperty(String, Type, Type())
  commentId: M:System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type,System.Type[])
- uid: System.Type.System.Reflection.TypeExtensions.IsAssignableFrom(System.Type)
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.IsAssignableFrom(System.Type,System.Type)
  name: IsAssignableFrom(Type)
  fullName: System.Reflection.TypeExtensions.IsAssignableFrom(System.Type)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.IsAssignableFrom(System.Type)
    name: IsAssignableFrom
    fullName: System.Reflection.TypeExtensions.IsAssignableFrom
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.IsAssignableFrom(System.Type)
    name: IsAssignableFrom
    fullName: System.Reflection.TypeExtensions.IsAssignableFrom
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.IsAssignableFrom(Type)
  commentId: M:System.Reflection.TypeExtensions.IsAssignableFrom(System.Type,System.Type)
- uid: System.Type.System.Reflection.TypeExtensions.IsInstanceOfType(System.Object)
  parent: System.Reflection.TypeExtensions
  definition: System.Reflection.TypeExtensions.IsInstanceOfType(System.Type,System.Object)
  name: IsInstanceOfType(Object)
  fullName: System.Reflection.TypeExtensions.IsInstanceOfType(System.Object)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.IsInstanceOfType(System.Object)
    name: IsInstanceOfType
    fullName: System.Reflection.TypeExtensions.IsInstanceOfType
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.IsInstanceOfType(System.Object)
    name: IsInstanceOfType
    fullName: System.Reflection.TypeExtensions.IsInstanceOfType
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.IsInstanceOfType(Object)
  commentId: M:System.Reflection.TypeExtensions.IsInstanceOfType(System.Type,System.Object)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  name: GetCustomAttribute(Type)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)
    name: GetCustomAttribute
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)
    name: GetCustomAttribute
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  name: GetCustomAttribute(Type, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type,System.Boolean)
    name: GetCustomAttribute
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type,System.Boolean)
    name: GetCustomAttribute
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(Type, Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
  name: GetCustomAttribute<T>()
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>()
  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)()
  name.vb: GetCustomAttribute(Of T)()
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1
    name: GetCustomAttribute<T>
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1
    name: GetCustomAttribute(Of T)
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>()
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)()
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  name: GetCustomAttribute<T>(Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Boolean)
  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Boolean)
  name.vb: GetCustomAttribute(Of T)(Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Boolean)
    name: GetCustomAttribute<T>
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Boolean)
    name: GetCustomAttribute(Of T)
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(Boolean)
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)(Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  name: GetCustomAttributes()
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes()
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
    name: GetCustomAttributes
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
    name: GetCustomAttributes
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes()
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  name: GetCustomAttributes(Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  name: GetCustomAttributes(Type)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)
    name: GetCustomAttributes
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)
    name: GetCustomAttributes
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  name: GetCustomAttributes(Type, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Type, Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
  name: GetCustomAttributes<T>()
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>()
  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)()
  name.vb: GetCustomAttributes(Of T)()
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1
    name: GetCustomAttributes<T>
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1
    name: GetCustomAttributes(Of T)
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>()
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)()
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  name: GetCustomAttributes<T>(Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Boolean)
  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Boolean)
  name.vb: GetCustomAttributes(Of T)(Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Boolean)
    name: GetCustomAttributes<T>
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Boolean)
    name: GetCustomAttributes(Of T)
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(Boolean)
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)(Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
  name: IsDefined(Type)
  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)
    name: IsDefined
    fullName: System.Reflection.CustomAttributeExtensions.IsDefined
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)
    name: IsDefined
    fullName: System.Reflection.CustomAttributeExtensions.IsDefined
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.IsDefined(Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  name: IsDefined(Type, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type,System.Boolean)
    name: IsDefined
    fullName: System.Reflection.CustomAttributeExtensions.IsDefined
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type,System.Boolean)
    name: IsDefined
    fullName: System.Reflection.CustomAttributeExtensions.IsDefined
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.IsDefined(Type, Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
- uid: System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.String)
  parent: System.Reflection.RuntimeReflectionExtensions
  definition: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type,System.String)
  name: GetRuntimeEvent(String)
  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.String)
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.String)
    name: GetRuntimeEvent
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.String)
    name: GetRuntimeEvent
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetRuntimeEvent(String)
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type,System.String)
- uid: System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents
  parent: System.Reflection.RuntimeReflectionExtensions
  definition: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents(System.Type)
  name: GetRuntimeEvents()
  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents()
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents
    name: GetRuntimeEvents
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents
    name: GetRuntimeEvents
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetRuntimeEvents()
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents(System.Type)
- uid: System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.String)
  parent: System.Reflection.RuntimeReflectionExtensions
  definition: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type,System.String)
  name: GetRuntimeField(String)
  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.String)
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.String)
    name: GetRuntimeField
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.String)
    name: GetRuntimeField
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetRuntimeField(String)
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type,System.String)
- uid: System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields
  parent: System.Reflection.RuntimeReflectionExtensions
  definition: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields(System.Type)
  name: GetRuntimeFields()
  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields()
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields
    name: GetRuntimeFields
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields
    name: GetRuntimeFields
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetRuntimeFields()
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields(System.Type)
- uid: System.Reflection.TypeInfo.System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Type)
  parent: System.Reflection.RuntimeReflectionExtensions
  definition: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)
  name: GetRuntimeInterfaceMap(Type)
  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Type)
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Type)
    name: GetRuntimeInterfaceMap
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Type)
    name: GetRuntimeInterfaceMap
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetRuntimeInterfaceMap(Type)
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)
- uid: System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.String,System.Type[])
  parent: System.Reflection.RuntimeReflectionExtensions
  definition: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])
  name: GetRuntimeMethod(String, Type[])
  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.String, System.Type[])
  fullname.vb: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.String, System.Type())
  name.vb: GetRuntimeMethod(String, Type())
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.String,System.Type[])
    name: GetRuntimeMethod
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.String,System.Type[])
    name: GetRuntimeMethod
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetRuntimeMethod(String, Type[])
  nameWithType.vb: RuntimeReflectionExtensions.GetRuntimeMethod(String, Type())
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])
- uid: System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods
  parent: System.Reflection.RuntimeReflectionExtensions
  definition: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods(System.Type)
  name: GetRuntimeMethods()
  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods()
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods
    name: GetRuntimeMethods
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods
    name: GetRuntimeMethods
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetRuntimeMethods()
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods(System.Type)
- uid: System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties
  parent: System.Reflection.RuntimeReflectionExtensions
  definition: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties(System.Type)
  name: GetRuntimeProperties()
  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties()
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties
    name: GetRuntimeProperties
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties
    name: GetRuntimeProperties
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetRuntimeProperties()
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties(System.Type)
- uid: System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.String)
  parent: System.Reflection.RuntimeReflectionExtensions
  definition: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type,System.String)
  name: GetRuntimeProperty(String)
  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.String)
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.String)
    name: GetRuntimeProperty
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.String)
    name: GetRuntimeProperty
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetRuntimeProperty(String)
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type,System.String)
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
  nameWithType: System.Reflection
  commentId: N:System.Reflection
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
  nameWithType: System.Runtime.InteropServices
  commentId: N:System.Runtime.InteropServices
- uid: System.Reflection.IntrospectionExtensions.GetTypeInfo(System.Type)
  isExternal: true
  name: GetTypeInfo(Type)
  fullName: System.Reflection.IntrospectionExtensions.GetTypeInfo(System.Type)
  spec.csharp:
  - uid: System.Reflection.IntrospectionExtensions.GetTypeInfo(System.Type)
    name: GetTypeInfo
    fullName: System.Reflection.IntrospectionExtensions.GetTypeInfo
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.IntrospectionExtensions.GetTypeInfo(System.Type)
    name: GetTypeInfo
    fullName: System.Reflection.IntrospectionExtensions.GetTypeInfo
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: IntrospectionExtensions.GetTypeInfo(Type)
  commentId: M:System.Reflection.IntrospectionExtensions.GetTypeInfo(System.Type)
- uid: System.Reflection.IntrospectionExtensions
  parent: System.Reflection
  isExternal: false
  name: IntrospectionExtensions
  fullName: System.Reflection.IntrospectionExtensions
  nameWithType: IntrospectionExtensions
  commentId: T:System.Reflection.IntrospectionExtensions
- uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
  isExternal: true
  name: HasMetadataToken(MemberInfo)
  fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
  spec.csharp:
  - uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
    name: HasMetadataToken
    fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
    name: HasMetadataToken
    fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: )
    fullName: )
  nameWithType: MemberInfoExtensions.HasMetadataToken(MemberInfo)
  commentId: M:System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
- uid: System.Reflection.MemberInfoExtensions
  parent: System.Reflection
  isExternal: false
  name: MemberInfoExtensions
  fullName: System.Reflection.MemberInfoExtensions
  nameWithType: MemberInfoExtensions
  commentId: T:System.Reflection.MemberInfoExtensions
- uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
  isExternal: true
  name: GetMetadataToken(MemberInfo)
  fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
  spec.csharp:
  - uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
    name: GetMetadataToken
    fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
    name: GetMetadataToken
    fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: )
    fullName: )
  nameWithType: MemberInfoExtensions.GetMetadataToken(MemberInfo)
  commentId: M:System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
- uid: System.Reflection.TypeExtensions.GetConstructor(System.Type,System.Type[])
  isExternal: true
  name: GetConstructor(Type, Type[])
  fullName: System.Reflection.TypeExtensions.GetConstructor(System.Type, System.Type[])
  fullname.vb: System.Reflection.TypeExtensions.GetConstructor(System.Type, System.Type())
  name.vb: GetConstructor(Type, Type())
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetConstructor(System.Type,System.Type[])
    name: GetConstructor
    fullName: System.Reflection.TypeExtensions.GetConstructor
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetConstructor(System.Type,System.Type[])
    name: GetConstructor
    fullName: System.Reflection.TypeExtensions.GetConstructor
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetConstructor(Type, Type[])
  nameWithType.vb: TypeExtensions.GetConstructor(Type, Type())
  commentId: M:System.Reflection.TypeExtensions.GetConstructor(System.Type,System.Type[])
- uid: System.Reflection.TypeExtensions
  parent: System.Reflection
  isExternal: false
  name: TypeExtensions
  fullName: System.Reflection.TypeExtensions
  nameWithType: TypeExtensions
  commentId: T:System.Reflection.TypeExtensions
- uid: System.Reflection.TypeExtensions.GetConstructors(System.Type)
  isExternal: true
  name: GetConstructors(Type)
  fullName: System.Reflection.TypeExtensions.GetConstructors(System.Type)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetConstructors(System.Type)
    name: GetConstructors
    fullName: System.Reflection.TypeExtensions.GetConstructors
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetConstructors(System.Type)
    name: GetConstructors
    fullName: System.Reflection.TypeExtensions.GetConstructors
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetConstructors(Type)
  commentId: M:System.Reflection.TypeExtensions.GetConstructors(System.Type)
- uid: System.Reflection.TypeExtensions.GetConstructors(System.Type,System.Reflection.BindingFlags)
  isExternal: true
  name: GetConstructors(Type, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetConstructors(System.Type, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetConstructors(System.Type,System.Reflection.BindingFlags)
    name: GetConstructors
    fullName: System.Reflection.TypeExtensions.GetConstructors
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetConstructors(System.Type,System.Reflection.BindingFlags)
    name: GetConstructors
    fullName: System.Reflection.TypeExtensions.GetConstructors
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetConstructors(Type, BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetConstructors(System.Type,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetDefaultMembers(System.Type)
  isExternal: true
  name: GetDefaultMembers(Type)
  fullName: System.Reflection.TypeExtensions.GetDefaultMembers(System.Type)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetDefaultMembers(System.Type)
    name: GetDefaultMembers
    fullName: System.Reflection.TypeExtensions.GetDefaultMembers
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetDefaultMembers(System.Type)
    name: GetDefaultMembers
    fullName: System.Reflection.TypeExtensions.GetDefaultMembers
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetDefaultMembers(Type)
  commentId: M:System.Reflection.TypeExtensions.GetDefaultMembers(System.Type)
- uid: System.Reflection.TypeExtensions.GetEvent(System.Type,System.String)
  isExternal: true
  name: GetEvent(Type, String)
  fullName: System.Reflection.TypeExtensions.GetEvent(System.Type, System.String)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetEvent(System.Type,System.String)
    name: GetEvent
    fullName: System.Reflection.TypeExtensions.GetEvent
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetEvent(System.Type,System.String)
    name: GetEvent
    fullName: System.Reflection.TypeExtensions.GetEvent
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetEvent(Type, String)
  commentId: M:System.Reflection.TypeExtensions.GetEvent(System.Type,System.String)
- uid: System.Reflection.TypeExtensions.GetEvent(System.Type,System.String,System.Reflection.BindingFlags)
  isExternal: true
  name: GetEvent(Type, String, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetEvent(System.Type, System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetEvent(System.Type,System.String,System.Reflection.BindingFlags)
    name: GetEvent
    fullName: System.Reflection.TypeExtensions.GetEvent
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetEvent(System.Type,System.String,System.Reflection.BindingFlags)
    name: GetEvent
    fullName: System.Reflection.TypeExtensions.GetEvent
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetEvent(Type, String, BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetEvent(System.Type,System.String,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetEvents(System.Type)
  isExternal: true
  name: GetEvents(Type)
  fullName: System.Reflection.TypeExtensions.GetEvents(System.Type)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetEvents(System.Type)
    name: GetEvents
    fullName: System.Reflection.TypeExtensions.GetEvents
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetEvents(System.Type)
    name: GetEvents
    fullName: System.Reflection.TypeExtensions.GetEvents
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetEvents(Type)
  commentId: M:System.Reflection.TypeExtensions.GetEvents(System.Type)
- uid: System.Reflection.TypeExtensions.GetEvents(System.Type,System.Reflection.BindingFlags)
  isExternal: true
  name: GetEvents(Type, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetEvents(System.Type, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetEvents(System.Type,System.Reflection.BindingFlags)
    name: GetEvents
    fullName: System.Reflection.TypeExtensions.GetEvents
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetEvents(System.Type,System.Reflection.BindingFlags)
    name: GetEvents
    fullName: System.Reflection.TypeExtensions.GetEvents
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetEvents(Type, BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetEvents(System.Type,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetField(System.Type,System.String)
  isExternal: true
  name: GetField(Type, String)
  fullName: System.Reflection.TypeExtensions.GetField(System.Type, System.String)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetField(System.Type,System.String)
    name: GetField
    fullName: System.Reflection.TypeExtensions.GetField
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetField(System.Type,System.String)
    name: GetField
    fullName: System.Reflection.TypeExtensions.GetField
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetField(Type, String)
  commentId: M:System.Reflection.TypeExtensions.GetField(System.Type,System.String)
- uid: System.Reflection.TypeExtensions.GetField(System.Type,System.String,System.Reflection.BindingFlags)
  isExternal: true
  name: GetField(Type, String, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetField(System.Type, System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetField(System.Type,System.String,System.Reflection.BindingFlags)
    name: GetField
    fullName: System.Reflection.TypeExtensions.GetField
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetField(System.Type,System.String,System.Reflection.BindingFlags)
    name: GetField
    fullName: System.Reflection.TypeExtensions.GetField
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetField(Type, String, BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetField(System.Type,System.String,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetFields(System.Type)
  isExternal: true
  name: GetFields(Type)
  fullName: System.Reflection.TypeExtensions.GetFields(System.Type)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetFields(System.Type)
    name: GetFields
    fullName: System.Reflection.TypeExtensions.GetFields
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetFields(System.Type)
    name: GetFields
    fullName: System.Reflection.TypeExtensions.GetFields
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetFields(Type)
  commentId: M:System.Reflection.TypeExtensions.GetFields(System.Type)
- uid: System.Reflection.TypeExtensions.GetFields(System.Type,System.Reflection.BindingFlags)
  isExternal: true
  name: GetFields(Type, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetFields(System.Type, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetFields(System.Type,System.Reflection.BindingFlags)
    name: GetFields
    fullName: System.Reflection.TypeExtensions.GetFields
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetFields(System.Type,System.Reflection.BindingFlags)
    name: GetFields
    fullName: System.Reflection.TypeExtensions.GetFields
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetFields(Type, BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetFields(System.Type,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetGenericArguments(System.Type)
  isExternal: true
  name: GetGenericArguments(Type)
  fullName: System.Reflection.TypeExtensions.GetGenericArguments(System.Type)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetGenericArguments(System.Type)
    name: GetGenericArguments
    fullName: System.Reflection.TypeExtensions.GetGenericArguments
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetGenericArguments(System.Type)
    name: GetGenericArguments
    fullName: System.Reflection.TypeExtensions.GetGenericArguments
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetGenericArguments(Type)
  commentId: M:System.Reflection.TypeExtensions.GetGenericArguments(System.Type)
- uid: System.Reflection.TypeExtensions.GetInterfaces(System.Type)
  isExternal: true
  name: GetInterfaces(Type)
  fullName: System.Reflection.TypeExtensions.GetInterfaces(System.Type)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetInterfaces(System.Type)
    name: GetInterfaces
    fullName: System.Reflection.TypeExtensions.GetInterfaces
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetInterfaces(System.Type)
    name: GetInterfaces
    fullName: System.Reflection.TypeExtensions.GetInterfaces
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetInterfaces(Type)
  commentId: M:System.Reflection.TypeExtensions.GetInterfaces(System.Type)
- uid: System.Reflection.TypeExtensions.GetMember(System.Type,System.String)
  isExternal: true
  name: GetMember(Type, String)
  fullName: System.Reflection.TypeExtensions.GetMember(System.Type, System.String)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetMember(System.Type,System.String)
    name: GetMember
    fullName: System.Reflection.TypeExtensions.GetMember
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetMember(System.Type,System.String)
    name: GetMember
    fullName: System.Reflection.TypeExtensions.GetMember
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetMember(Type, String)
  commentId: M:System.Reflection.TypeExtensions.GetMember(System.Type,System.String)
- uid: System.Reflection.TypeExtensions.GetMember(System.Type,System.String,System.Reflection.BindingFlags)
  isExternal: true
  name: GetMember(Type, String, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetMember(System.Type, System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetMember(System.Type,System.String,System.Reflection.BindingFlags)
    name: GetMember
    fullName: System.Reflection.TypeExtensions.GetMember
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetMember(System.Type,System.String,System.Reflection.BindingFlags)
    name: GetMember
    fullName: System.Reflection.TypeExtensions.GetMember
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetMember(Type, String, BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetMember(System.Type,System.String,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetMembers(System.Type)
  isExternal: true
  name: GetMembers(Type)
  fullName: System.Reflection.TypeExtensions.GetMembers(System.Type)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetMembers(System.Type)
    name: GetMembers
    fullName: System.Reflection.TypeExtensions.GetMembers
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetMembers(System.Type)
    name: GetMembers
    fullName: System.Reflection.TypeExtensions.GetMembers
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetMembers(Type)
  commentId: M:System.Reflection.TypeExtensions.GetMembers(System.Type)
- uid: System.Reflection.TypeExtensions.GetMembers(System.Type,System.Reflection.BindingFlags)
  isExternal: true
  name: GetMembers(Type, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetMembers(System.Type, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetMembers(System.Type,System.Reflection.BindingFlags)
    name: GetMembers
    fullName: System.Reflection.TypeExtensions.GetMembers
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetMembers(System.Type,System.Reflection.BindingFlags)
    name: GetMembers
    fullName: System.Reflection.TypeExtensions.GetMembers
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetMembers(Type, BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetMembers(System.Type,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String)
  isExternal: true
  name: GetMethod(Type, String)
  fullName: System.Reflection.TypeExtensions.GetMethod(System.Type, System.String)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String)
    name: GetMethod
    fullName: System.Reflection.TypeExtensions.GetMethod
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String)
    name: GetMethod
    fullName: System.Reflection.TypeExtensions.GetMethod
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetMethod(Type, String)
  commentId: M:System.Reflection.TypeExtensions.GetMethod(System.Type,System.String)
- uid: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Reflection.BindingFlags)
  isExternal: true
  name: GetMethod(Type, String, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetMethod(System.Type, System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Reflection.BindingFlags)
    name: GetMethod
    fullName: System.Reflection.TypeExtensions.GetMethod
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Reflection.BindingFlags)
    name: GetMethod
    fullName: System.Reflection.TypeExtensions.GetMethod
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetMethod(Type, String, BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Type[])
  isExternal: true
  name: GetMethod(Type, String, Type[])
  fullName: System.Reflection.TypeExtensions.GetMethod(System.Type, System.String, System.Type[])
  fullname.vb: System.Reflection.TypeExtensions.GetMethod(System.Type, System.String, System.Type())
  name.vb: GetMethod(Type, String, Type())
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Type[])
    name: GetMethod
    fullName: System.Reflection.TypeExtensions.GetMethod
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Type[])
    name: GetMethod
    fullName: System.Reflection.TypeExtensions.GetMethod
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetMethod(Type, String, Type[])
  nameWithType.vb: TypeExtensions.GetMethod(Type, String, Type())
  commentId: M:System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Type[])
- uid: System.Reflection.TypeExtensions.GetMethods(System.Type)
  isExternal: true
  name: GetMethods(Type)
  fullName: System.Reflection.TypeExtensions.GetMethods(System.Type)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetMethods(System.Type)
    name: GetMethods
    fullName: System.Reflection.TypeExtensions.GetMethods
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetMethods(System.Type)
    name: GetMethods
    fullName: System.Reflection.TypeExtensions.GetMethods
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetMethods(Type)
  commentId: M:System.Reflection.TypeExtensions.GetMethods(System.Type)
- uid: System.Reflection.TypeExtensions.GetMethods(System.Type,System.Reflection.BindingFlags)
  isExternal: true
  name: GetMethods(Type, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetMethods(System.Type, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetMethods(System.Type,System.Reflection.BindingFlags)
    name: GetMethods
    fullName: System.Reflection.TypeExtensions.GetMethods
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetMethods(System.Type,System.Reflection.BindingFlags)
    name: GetMethods
    fullName: System.Reflection.TypeExtensions.GetMethods
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetMethods(Type, BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetMethods(System.Type,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetNestedType(System.Type,System.String,System.Reflection.BindingFlags)
  isExternal: true
  name: GetNestedType(Type, String, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetNestedType(System.Type, System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetNestedType(System.Type,System.String,System.Reflection.BindingFlags)
    name: GetNestedType
    fullName: System.Reflection.TypeExtensions.GetNestedType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetNestedType(System.Type,System.String,System.Reflection.BindingFlags)
    name: GetNestedType
    fullName: System.Reflection.TypeExtensions.GetNestedType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetNestedType(Type, String, BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetNestedType(System.Type,System.String,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetNestedTypes(System.Type,System.Reflection.BindingFlags)
  isExternal: true
  name: GetNestedTypes(Type, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetNestedTypes(System.Type, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetNestedTypes(System.Type,System.Reflection.BindingFlags)
    name: GetNestedTypes
    fullName: System.Reflection.TypeExtensions.GetNestedTypes
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetNestedTypes(System.Type,System.Reflection.BindingFlags)
    name: GetNestedTypes
    fullName: System.Reflection.TypeExtensions.GetNestedTypes
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetNestedTypes(Type, BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetNestedTypes(System.Type,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetProperties(System.Type)
  isExternal: true
  name: GetProperties(Type)
  fullName: System.Reflection.TypeExtensions.GetProperties(System.Type)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetProperties(System.Type)
    name: GetProperties
    fullName: System.Reflection.TypeExtensions.GetProperties
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetProperties(System.Type)
    name: GetProperties
    fullName: System.Reflection.TypeExtensions.GetProperties
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetProperties(Type)
  commentId: M:System.Reflection.TypeExtensions.GetProperties(System.Type)
- uid: System.Reflection.TypeExtensions.GetProperties(System.Type,System.Reflection.BindingFlags)
  isExternal: true
  name: GetProperties(Type, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetProperties(System.Type, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetProperties(System.Type,System.Reflection.BindingFlags)
    name: GetProperties
    fullName: System.Reflection.TypeExtensions.GetProperties
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetProperties(System.Type,System.Reflection.BindingFlags)
    name: GetProperties
    fullName: System.Reflection.TypeExtensions.GetProperties
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetProperties(Type, BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetProperties(System.Type,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String)
  isExternal: true
  name: GetProperty(Type, String)
  fullName: System.Reflection.TypeExtensions.GetProperty(System.Type, System.String)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String)
    name: GetProperty
    fullName: System.Reflection.TypeExtensions.GetProperty
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String)
    name: GetProperty
    fullName: System.Reflection.TypeExtensions.GetProperty
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetProperty(Type, String)
  commentId: M:System.Reflection.TypeExtensions.GetProperty(System.Type,System.String)
- uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Reflection.BindingFlags)
  isExternal: true
  name: GetProperty(Type, String, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetProperty(System.Type, System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Reflection.BindingFlags)
    name: GetProperty
    fullName: System.Reflection.TypeExtensions.GetProperty
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Reflection.BindingFlags)
    name: GetProperty
    fullName: System.Reflection.TypeExtensions.GetProperty
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetProperty(Type, String, BindingFlags)
  commentId: M:System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type)
  isExternal: true
  name: GetProperty(Type, String, Type)
  fullName: System.Reflection.TypeExtensions.GetProperty(System.Type, System.String, System.Type)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type)
    name: GetProperty
    fullName: System.Reflection.TypeExtensions.GetProperty
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type)
    name: GetProperty
    fullName: System.Reflection.TypeExtensions.GetProperty
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetProperty(Type, String, Type)
  commentId: M:System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type)
- uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type,System.Type[])
  isExternal: true
  name: GetProperty(Type, String, Type, Type[])
  fullName: System.Reflection.TypeExtensions.GetProperty(System.Type, System.String, System.Type, System.Type[])
  fullname.vb: System.Reflection.TypeExtensions.GetProperty(System.Type, System.String, System.Type, System.Type())
  name.vb: GetProperty(Type, String, Type, Type())
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type,System.Type[])
    name: GetProperty
    fullName: System.Reflection.TypeExtensions.GetProperty
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type,System.Type[])
    name: GetProperty
    fullName: System.Reflection.TypeExtensions.GetProperty
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: TypeExtensions.GetProperty(Type, String, Type, Type[])
  nameWithType.vb: TypeExtensions.GetProperty(Type, String, Type, Type())
  commentId: M:System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type,System.Type[])
- uid: System.Reflection.TypeExtensions.IsAssignableFrom(System.Type,System.Type)
  isExternal: true
  name: IsAssignableFrom(Type, Type)
  fullName: System.Reflection.TypeExtensions.IsAssignableFrom(System.Type, System.Type)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.IsAssignableFrom(System.Type,System.Type)
    name: IsAssignableFrom
    fullName: System.Reflection.TypeExtensions.IsAssignableFrom
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.IsAssignableFrom(System.Type,System.Type)
    name: IsAssignableFrom
    fullName: System.Reflection.TypeExtensions.IsAssignableFrom
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.IsAssignableFrom(Type, Type)
  commentId: M:System.Reflection.TypeExtensions.IsAssignableFrom(System.Type,System.Type)
- uid: System.Reflection.TypeExtensions.IsInstanceOfType(System.Type,System.Object)
  isExternal: true
  name: IsInstanceOfType(Type, Object)
  fullName: System.Reflection.TypeExtensions.IsInstanceOfType(System.Type, System.Object)
  spec.csharp:
  - uid: System.Reflection.TypeExtensions.IsInstanceOfType(System.Type,System.Object)
    name: IsInstanceOfType
    fullName: System.Reflection.TypeExtensions.IsInstanceOfType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeExtensions.IsInstanceOfType(System.Type,System.Object)
    name: IsInstanceOfType
    fullName: System.Reflection.TypeExtensions.IsInstanceOfType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeExtensions.IsInstanceOfType(Type, Object)
  commentId: M:System.Reflection.TypeExtensions.IsInstanceOfType(System.Type,System.Object)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  isExternal: true
  name: GetCustomAttribute(MemberInfo, Type)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo, System.Type)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    name: GetCustomAttribute
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    name: GetCustomAttribute
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
- uid: System.Reflection.CustomAttributeExtensions
  parent: System.Reflection
  isExternal: false
  name: CustomAttributeExtensions
  fullName: System.Reflection.CustomAttributeExtensions
  nameWithType: CustomAttributeExtensions
  commentId: T:System.Reflection.CustomAttributeExtensions
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  isExternal: true
  name: GetCustomAttribute(MemberInfo, Type, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: GetCustomAttribute
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: GetCustomAttribute
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
  isExternal: true
  name: GetCustomAttribute<T>(MemberInfo)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.MemberInfo)
  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.MemberInfo)
  name.vb: GetCustomAttribute(Of T)(MemberInfo)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
    name: GetCustomAttribute<T>
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
    name: GetCustomAttribute(Of T)
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)(MemberInfo)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  isExternal: true
  name: GetCustomAttribute<T>(MemberInfo, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.MemberInfo, System.Boolean)
  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.MemberInfo, System.Boolean)
  name.vb: GetCustomAttribute(Of T)(MemberInfo, Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
    name: GetCustomAttribute<T>
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
    name: GetCustomAttribute(Of T)
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)(MemberInfo, Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  isExternal: true
  name: GetCustomAttributes(MemberInfo)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
    name: GetCustomAttributes
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
    name: GetCustomAttributes
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  isExternal: true
  name: GetCustomAttributes(MemberInfo, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  isExternal: true
  name: GetCustomAttributes(MemberInfo, Type)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo, System.Type)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    name: GetCustomAttributes
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    name: GetCustomAttributes
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  isExternal: true
  name: GetCustomAttributes(MemberInfo, Type, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
  isExternal: true
  name: GetCustomAttributes<T>(MemberInfo)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.MemberInfo)
  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.MemberInfo)
  name.vb: GetCustomAttributes(Of T)(MemberInfo)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
    name: GetCustomAttributes<T>
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
    name: GetCustomAttributes(Of T)
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)(MemberInfo)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  isExternal: true
  name: GetCustomAttributes<T>(MemberInfo, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.MemberInfo, System.Boolean)
  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.MemberInfo, System.Boolean)
  name.vb: GetCustomAttributes(Of T)(MemberInfo, Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
    name: GetCustomAttributes<T>
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
    name: GetCustomAttributes(Of T)
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)(MemberInfo, Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
  isExternal: true
  name: IsDefined(MemberInfo, Type)
  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo, System.Type)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
    name: IsDefined
    fullName: System.Reflection.CustomAttributeExtensions.IsDefined
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
    name: IsDefined
    fullName: System.Reflection.CustomAttributeExtensions.IsDefined
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  isExternal: true
  name: IsDefined(MemberInfo, Type, Boolean)
  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: IsDefined
    fullName: System.Reflection.CustomAttributeExtensions.IsDefined
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: IsDefined
    fullName: System.Reflection.CustomAttributeExtensions.IsDefined
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type,System.String)
  isExternal: true
  name: GetRuntimeEvent(Type, String)
  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type, System.String)
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type,System.String)
    name: GetRuntimeEvent
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type,System.String)
    name: GetRuntimeEvent
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetRuntimeEvent(Type, String)
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type,System.String)
- uid: System.Reflection.RuntimeReflectionExtensions
  parent: System.Reflection
  isExternal: false
  name: RuntimeReflectionExtensions
  fullName: System.Reflection.RuntimeReflectionExtensions
  nameWithType: RuntimeReflectionExtensions
  commentId: T:System.Reflection.RuntimeReflectionExtensions
- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents(System.Type)
  isExternal: true
  name: GetRuntimeEvents(Type)
  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents(System.Type)
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents(System.Type)
    name: GetRuntimeEvents
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents(System.Type)
    name: GetRuntimeEvents
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetRuntimeEvents(Type)
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents(System.Type)
- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type,System.String)
  isExternal: true
  name: GetRuntimeField(Type, String)
  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type, System.String)
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type,System.String)
    name: GetRuntimeField
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type,System.String)
    name: GetRuntimeField
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetRuntimeField(Type, String)
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type,System.String)
- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields(System.Type)
  isExternal: true
  name: GetRuntimeFields(Type)
  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields(System.Type)
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields(System.Type)
    name: GetRuntimeFields
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields(System.Type)
    name: GetRuntimeFields
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetRuntimeFields(Type)
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields(System.Type)
- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)
  isExternal: true
  name: GetRuntimeInterfaceMap(TypeInfo, Type)
  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo, System.Type)
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)
    name: GetRuntimeInterfaceMap
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap
  - name: (
    fullName: (
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    fullName: System.Reflection.TypeInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)
    name: GetRuntimeInterfaceMap
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap
  - name: (
    fullName: (
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    fullName: System.Reflection.TypeInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetRuntimeInterfaceMap(TypeInfo, Type)
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)
- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])
  isExternal: true
  name: GetRuntimeMethod(Type, String, Type[])
  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type, System.String, System.Type[])
  fullname.vb: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type, System.String, System.Type())
  name.vb: GetRuntimeMethod(Type, String, Type())
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])
    name: GetRuntimeMethod
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])
    name: GetRuntimeMethod
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetRuntimeMethod(Type, String, Type[])
  nameWithType.vb: RuntimeReflectionExtensions.GetRuntimeMethod(Type, String, Type())
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])
- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods(System.Type)
  isExternal: true
  name: GetRuntimeMethods(Type)
  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods(System.Type)
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods(System.Type)
    name: GetRuntimeMethods
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods(System.Type)
    name: GetRuntimeMethods
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetRuntimeMethods(Type)
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods(System.Type)
- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties(System.Type)
  isExternal: true
  name: GetRuntimeProperties(Type)
  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties(System.Type)
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties(System.Type)
    name: GetRuntimeProperties
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties(System.Type)
    name: GetRuntimeProperties
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetRuntimeProperties(Type)
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties(System.Type)
- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type,System.String)
  isExternal: true
  name: GetRuntimeProperty(Type, String)
  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type, System.String)
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type,System.String)
    name: GetRuntimeProperty
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type,System.String)
    name: GetRuntimeProperty
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetRuntimeProperty(Type, String)
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type,System.String)
- uid: System.Type.AssemblyQualifiedName
  parent: System.Type
  isExternal: true
  name: AssemblyQualifiedName
  fullName: System.Type.AssemblyQualifiedName
  nameWithType: Type.AssemblyQualifiedName
  commentId: P:System.Type.AssemblyQualifiedName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.Type.FullName
  parent: System.Type
  isExternal: true
  name: FullName
  fullName: System.Type.FullName
  nameWithType: Type.FullName
  commentId: P:System.Type.FullName
- uid: System.Type.IsGenericParameter
  parent: System.Type
  isExternal: true
  name: IsGenericParameter
  fullName: System.Type.IsGenericParameter
  nameWithType: Type.IsGenericParameter
  commentId: P:System.Type.IsGenericParameter
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Reflection.MemberInfo.Name
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: Name
  fullName: System.Reflection.MemberInfo.Name
  nameWithType: MemberInfo.Name
  commentId: P:System.Reflection.MemberInfo.Name
- uid: System.Type.Equals(System.Object)
  parent: System.Type
  isExternal: true
  name: Equals(Object)
  fullName: System.Type.Equals(System.Object)
  spec.csharp:
  - uid: System.Type.Equals(System.Object)
    name: Equals
    fullName: System.Type.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.Equals(System.Object)
    name: Equals
    fullName: System.Type.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.Equals(Object)
  commentId: M:System.Type.Equals(System.Object)
- uid: System.Type.GetGenericTypeDefinition
  parent: System.Type
  isExternal: true
  name: GetGenericTypeDefinition()
  fullName: System.Type.GetGenericTypeDefinition()
  spec.csharp:
  - uid: System.Type.GetGenericTypeDefinition
    name: GetGenericTypeDefinition
    fullName: System.Type.GetGenericTypeDefinition
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetGenericTypeDefinition
    name: GetGenericTypeDefinition
    fullName: System.Type.GetGenericTypeDefinition
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.GetGenericTypeDefinition()
  commentId: M:System.Type.GetGenericTypeDefinition
- uid: System.Type.GetHashCode
  parent: System.Type
  isExternal: true
  name: GetHashCode()
  fullName: System.Type.GetHashCode()
  spec.csharp:
  - uid: System.Type.GetHashCode
    name: GetHashCode
    fullName: System.Type.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetHashCode
    name: GetHashCode
    fullName: System.Type.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.GetHashCode()
  commentId: M:System.Type.GetHashCode
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)
  parent: System.Reflection.TypeInfo
  isExternal: true
  name: IsAssignableFrom(TypeInfo)
  fullName: System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)
  spec.csharp:
  - uid: System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)
    name: IsAssignableFrom
    fullName: System.Reflection.TypeInfo.IsAssignableFrom
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    fullName: System.Reflection.TypeInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)
    name: IsAssignableFrom
    fullName: System.Reflection.TypeInfo.IsAssignableFrom
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    fullName: System.Reflection.TypeInfo
    isExternal: true
  - name: )
    fullName: )
  nameWithType: TypeInfo.IsAssignableFrom(TypeInfo)
  commentId: M:System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)
- uid: System.Type.MakeArrayType
  parent: System.Type
  isExternal: true
  name: MakeArrayType()
  fullName: System.Type.MakeArrayType()
  spec.csharp:
  - uid: System.Type.MakeArrayType
    name: MakeArrayType
    fullName: System.Type.MakeArrayType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.MakeArrayType
    name: MakeArrayType
    fullName: System.Type.MakeArrayType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.MakeArrayType()
  commentId: M:System.Type.MakeArrayType
- uid: System.Type.MakeArrayType(System.Int32)
  parent: System.Type
  isExternal: true
  name: MakeArrayType(Int32)
  fullName: System.Type.MakeArrayType(System.Int32)
  spec.csharp:
  - uid: System.Type.MakeArrayType(System.Int32)
    name: MakeArrayType
    fullName: System.Type.MakeArrayType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.MakeArrayType(System.Int32)
    name: MakeArrayType
    fullName: System.Type.MakeArrayType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.MakeArrayType(Int32)
  commentId: M:System.Type.MakeArrayType(System.Int32)
- uid: System.Type.MakeByRefType
  parent: System.Type
  isExternal: true
  name: MakeByRefType()
  fullName: System.Type.MakeByRefType()
  spec.csharp:
  - uid: System.Type.MakeByRefType
    name: MakeByRefType
    fullName: System.Type.MakeByRefType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.MakeByRefType
    name: MakeByRefType
    fullName: System.Type.MakeByRefType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.MakeByRefType()
  commentId: M:System.Type.MakeByRefType
- uid: System.Type.MakeGenericType(System.Type[])
  parent: System.Type
  isExternal: true
  name: MakeGenericType(Type[])
  fullName: System.Type.MakeGenericType(System.Type[])
  fullname.vb: System.Type.MakeGenericType(System.Type())
  name.vb: MakeGenericType(Type())
  spec.csharp:
  - uid: System.Type.MakeGenericType(System.Type[])
    name: MakeGenericType
    fullName: System.Type.MakeGenericType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.MakeGenericType(System.Type[])
    name: MakeGenericType
    fullName: System.Type.MakeGenericType
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  nameWithType: Type.MakeGenericType(Type[])
  nameWithType.vb: Type.MakeGenericType(Type())
  commentId: M:System.Type.MakeGenericType(System.Type[])
- uid: System.Type[]
  name: Type[]
  fullName: System.Type[]
  fullname.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    fullName: System.Type
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    fullName: System.Type
  - name: ()
    fullName: ()
  nameWithType: Type[]
  nameWithType.vb: Type()
- uid: System.Type.MakePointerType
  parent: System.Type
  isExternal: true
  name: MakePointerType()
  fullName: System.Type.MakePointerType()
  spec.csharp:
  - uid: System.Type.MakePointerType
    name: MakePointerType
    fullName: System.Type.MakePointerType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.MakePointerType
    name: MakePointerType
    fullName: System.Type.MakePointerType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.MakePointerType()
  commentId: M:System.Type.MakePointerType
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
  nameWithType: ConstructorInfo
  commentId: T:System.Reflection.ConstructorInfo
- uid: System.Byte[]
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  nameWithType: Byte[]
  nameWithType.vb: Byte()
- uid: System.Reflection.Emit.CustomAttributeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
  nameWithType: CustomAttributeBuilder
  commentId: T:System.Reflection.Emit.CustomAttributeBuilder
- uid: System.Reflection.GenericParameterAttributes
  parent: System.Reflection
  isExternal: false
  name: GenericParameterAttributes
  fullName: System.Reflection.GenericParameterAttributes
  nameWithType: GenericParameterAttributes
  commentId: T:System.Reflection.GenericParameterAttributes
- uid: System.Type.ToString
  parent: System.Type
  isExternal: true
  name: ToString()
  fullName: System.Type.ToString()
  spec.csharp:
  - uid: System.Type.ToString
    name: ToString
    fullName: System.Type.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.ToString
    name: ToString
    fullName: System.Type.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.ToString()
  commentId: M:System.Type.ToString
- uid: System.Type.IsSubclassOf(System.Type)
  parent: System.Type
  isExternal: true
  name: IsSubclassOf(Type)
  fullName: System.Type.IsSubclassOf(System.Type)
  spec.csharp:
  - uid: System.Type.IsSubclassOf(System.Type)
    name: IsSubclassOf
    fullName: System.Type.IsSubclassOf
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsSubclassOf(System.Type)
    name: IsSubclassOf
    fullName: System.Type.IsSubclassOf
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Type.IsSubclassOf(Type)
  commentId: M:System.Type.IsSubclassOf(System.Type)
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: false
  name: TypeAttributes
  fullName: System.Reflection.TypeAttributes
  nameWithType: TypeAttributes
  commentId: T:System.Reflection.TypeAttributes
- uid: System.Type.Assembly
  parent: System.Type
  isExternal: true
  name: Assembly
  fullName: System.Type.Assembly
  nameWithType: Type.Assembly
  commentId: P:System.Type.Assembly
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  fullName: System.Reflection.Assembly
  nameWithType: Assembly
  commentId: T:System.Reflection.Assembly
- uid: System.Type.BaseType
  parent: System.Type
  isExternal: true
  name: BaseType
  fullName: System.Type.BaseType
  nameWithType: Type.BaseType
  commentId: P:System.Type.BaseType
- uid: System.Type.DeclaringMethod
  parent: System.Type
  isExternal: true
  name: DeclaringMethod
  fullName: System.Type.DeclaringMethod
  nameWithType: Type.DeclaringMethod
  commentId: P:System.Type.DeclaringMethod
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  name: MethodBase
  fullName: System.Reflection.MethodBase
  nameWithType: MethodBase
  commentId: T:System.Reflection.MethodBase
- uid: System.Type.GenericParameterAttributes
  parent: System.Type
  isExternal: true
  name: GenericParameterAttributes
  fullName: System.Type.GenericParameterAttributes
  nameWithType: Type.GenericParameterAttributes
  commentId: P:System.Type.GenericParameterAttributes
- uid: System.Type.Module
  parent: System.Type
  isExternal: true
  name: Module
  fullName: System.Type.Module
  nameWithType: Type.Module
  commentId: P:System.Type.Module
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  fullName: System.Reflection.Module
  nameWithType: Module
  commentId: T:System.Reflection.Module
- uid: System.Type.GetArrayRank
  parent: System.Type
  isExternal: true
  name: GetArrayRank()
  fullName: System.Type.GetArrayRank()
  spec.csharp:
  - uid: System.Type.GetArrayRank
    name: GetArrayRank
    fullName: System.Type.GetArrayRank
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetArrayRank
    name: GetArrayRank
    fullName: System.Type.GetArrayRank
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.GetArrayRank()
  commentId: M:System.Type.GetArrayRank
- uid: System.Type.GetElementType
  parent: System.Type
  isExternal: true
  name: GetElementType()
  fullName: System.Type.GetElementType()
  spec.csharp:
  - uid: System.Type.GetElementType
    name: GetElementType
    fullName: System.Type.GetElementType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetElementType
    name: GetElementType
    fullName: System.Type.GetElementType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.GetElementType()
  commentId: M:System.Type.GetElementType
- uid: System.Type.GetGenericParameterConstraints
  parent: System.Type
  isExternal: true
  name: GetGenericParameterConstraints()
  fullName: System.Type.GetGenericParameterConstraints()
  spec.csharp:
  - uid: System.Type.GetGenericParameterConstraints
    name: GetGenericParameterConstraints
    fullName: System.Type.GetGenericParameterConstraints
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetGenericParameterConstraints
    name: GetGenericParameterConstraints
    fullName: System.Type.GetGenericParameterConstraints
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Type.GetGenericParameterConstraints()
  commentId: M:System.Type.GetGenericParameterConstraints
- uid: System.Type.GenericTypeArguments
  parent: System.Type
  isExternal: true
  name: GenericTypeArguments
  fullName: System.Type.GenericTypeArguments
  nameWithType: Type.GenericTypeArguments
  commentId: P:System.Type.GenericTypeArguments
- uid: System.Type.ContainsGenericParameters
  parent: System.Type
  isExternal: true
  name: ContainsGenericParameters
  fullName: System.Type.ContainsGenericParameters
  nameWithType: Type.ContainsGenericParameters
  commentId: P:System.Type.ContainsGenericParameters
- uid: System.Type.GenericParameterPosition
  parent: System.Type
  isExternal: true
  name: GenericParameterPosition
  fullName: System.Type.GenericParameterPosition
  nameWithType: Type.GenericParameterPosition
  commentId: P:System.Type.GenericParameterPosition
- uid: System.Type.GUID
  parent: System.Type
  isExternal: true
  name: GUID
  fullName: System.Type.GUID
  nameWithType: Type.GUID
  commentId: P:System.Type.GUID
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  fullName: System.Guid
  nameWithType: Guid
  commentId: T:System.Guid
- uid: System.Type.IsEnum
  parent: System.Type
  isExternal: true
  name: IsEnum
  fullName: System.Type.IsEnum
  nameWithType: Type.IsEnum
  commentId: P:System.Type.IsEnum
- uid: System.Type.IsGenericType
  parent: System.Type
  isExternal: true
  name: IsGenericType
  fullName: System.Type.IsGenericType
  nameWithType: Type.IsGenericType
  commentId: P:System.Type.IsGenericType
- uid: System.Type.IsGenericTypeDefinition
  parent: System.Type
  isExternal: true
  name: IsGenericTypeDefinition
  fullName: System.Type.IsGenericTypeDefinition
  nameWithType: Type.IsGenericTypeDefinition
  commentId: P:System.Type.IsGenericTypeDefinition
- uid: System.Type.IsSerializable
  parent: System.Type
  isExternal: true
  name: IsSerializable
  fullName: System.Type.IsSerializable
  nameWithType: Type.IsSerializable
  commentId: P:System.Type.IsSerializable
- uid: System.Type.Namespace
  parent: System.Type
  isExternal: true
  name: Namespace
  fullName: System.Type.Namespace
  nameWithType: Type.Namespace
  commentId: P:System.Type.Namespace
- uid: System.Type.DeclaringType
  parent: System.Type
  isExternal: true
  name: DeclaringType
  fullName: System.Type.DeclaringType
  nameWithType: Type.DeclaringType
  commentId: P:System.Type.DeclaringType
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  nameWithType: InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
  nameWithType: NotSupportedException
  commentId: T:System.NotSupportedException
- uid: System.IndexOutOfRangeException
  isExternal: false
  name: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
  nameWithType: IndexOutOfRangeException
  commentId: T:System.IndexOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
