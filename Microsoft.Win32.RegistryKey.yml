items:
- uid: Microsoft.Win32.RegistryKey
  id: RegistryKey
  parent: Microsoft.Win32
  children:
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  - Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)
  - Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)
  - Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.DeleteValue(System.String)
  - Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.Dispose
  - Microsoft.Win32.RegistryKey.Flush
  - Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  - Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  - Microsoft.Win32.RegistryKey.GetSubKeyNames
  - Microsoft.Win32.RegistryKey.GetValue(System.String)
  - Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)
  - Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  - Microsoft.Win32.RegistryKey.GetValueKind(System.String)
  - Microsoft.Win32.RegistryKey.GetValueNames
  - Microsoft.Win32.RegistryKey.Handle
  - Microsoft.Win32.RegistryKey.Name
  - Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  - Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)
  - Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  - Microsoft.Win32.RegistryKey.SubKeyCount
  - Microsoft.Win32.RegistryKey.ToString
  - Microsoft.Win32.RegistryKey.ValueCount
  - Microsoft.Win32.RegistryKey.View
  href: Microsoft.Win32.RegistryKey.yml
  name: RegistryKey
  fullName: Microsoft.Win32.RegistryKey
  type: Class
  source:
    remote: &o0
      path: src/Microsoft.Win32.Registry/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/Microsoft.Win32.Registry/src/Microsoft/Win32/RegistryKey.cs
    startLine: 83
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Represents a key-level node in the Windows registry. This class is a registry encapsulation.
  syntax:
    content: 'public sealed class RegistryKey : IDisposable'
    content.vb: Public NotInheritable Class RegistryKey Inherits IDisposable
  inheritance:
  - System.Object
- uid: Microsoft.Win32.RegistryKey.Handle
  id: Handle
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: Handle
  fullName: Microsoft.Win32.RegistryKey.Handle
  type: Property
  source:
    remote: *o0
    path: src/Microsoft.Win32.Registry/src/Microsoft/Win32/RegistryKey.cs
    startLine: 717
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Gets a @'Microsoft.Win32.SafeHandles.SafeRegistryHandle' object that represents the registry key that the current @'Microsoft.Win32.RegistryKey' object encapsulates.
  syntax:
    content: public SafeRegistryHandle Handle { get; }
    content.vb: Public ReadOnly Property Handle As SafeRegistryHandle
    parameters: []
    return:
      type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
      description: The handle to the registry key.
  exceptions:
  - type: System.ObjectDisposedException
    description: The registry key is closed. Closed keys cannot be accessed.
  - type: System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.IO.IOException
    description: A system error occurred, such as deletion of the current key.
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to read the key.
- uid: Microsoft.Win32.RegistryKey.Name
  id: Name
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: Name
  fullName: Microsoft.Win32.RegistryKey.Name
  type: Property
  source:
    remote: *o0
    path: src/Microsoft.Win32.Registry/src/Microsoft/Win32/RegistryKey.cs
    startLine: 1286
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves the name of the key.
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: The absolute (qualified) name of the key.
  exceptions:
  - type: System.ObjectDisposedException
    description: The @'Microsoft.Win32.RegistryKey' is closed (closed keys cannot be accessed).
- uid: Microsoft.Win32.RegistryKey.SubKeyCount
  id: SubKeyCount
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: SubKeyCount
  fullName: Microsoft.Win32.RegistryKey.SubKeyCount
  type: Property
  source:
    remote: *o0
    path: src/Microsoft.Win32.Registry/src/Microsoft/Win32/RegistryKey.cs
    startLine: 698
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves the count of subkeys of the current key.
  syntax:
    content: public int SubKeyCount { get; }
    content.vb: Public ReadOnly Property SubKeyCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of subkeys of the current key.
  exceptions:
  - type: System.Security.SecurityException
    description: The user does not have read permission for the key.
  - type: System.ObjectDisposedException
    description: The @'Microsoft.Win32.RegistryKey' being manipulated is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.IO.IOException
    description: A system error occurred, for example the current key has been deleted.
- uid: Microsoft.Win32.RegistryKey.ValueCount
  id: ValueCount
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: ValueCount
  fullName: Microsoft.Win32.RegistryKey.ValueCount
  type: Property
  source:
    remote: *o0
    path: src/Microsoft.Win32.Registry/src/Microsoft/Win32/RegistryKey.cs
    startLine: 870
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves the count of values in the key.
  syntax:
    content: public int ValueCount { get; }
    content.vb: Public ReadOnly Property ValueCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of name/value pairs in the key.
  exceptions:
  - type: System.Security.SecurityException
    description: The user does not have read permission for the key.
  - type: System.ObjectDisposedException
    description: The @'Microsoft.Win32.RegistryKey' being manipulated is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.IO.IOException
    description: A system error occurred, for example the current key has been deleted.
- uid: Microsoft.Win32.RegistryKey.View
  id: View
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: View
  fullName: Microsoft.Win32.RegistryKey.View
  type: Property
  source:
    remote: *o0
    path: src/Microsoft.Win32.Registry/src/Microsoft/Win32/RegistryKey.cs
    startLine: 707
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Gets the view that was used to create the registry key.
  syntax:
    content: public RegistryView View { get; }
    content.vb: Public ReadOnly Property View As RegistryView
    parameters: []
    return:
      type: Microsoft.Win32.RegistryView
      description: The view that was used to create the registry key.-or-@'Microsoft.Win32.RegistryView.Default', if no view was used.
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String)
  id: CreateSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: CreateSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(System.String)
  type: Method
  source:
    remote: &o1
      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 38
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Creates a new subkey or opens an existing subkey for write access.
  syntax:
    content: public RegistryKey CreateSubKey(string subkey)
    content.vb: Public Function CreateSubKey(subkey As String) As RegistryKey
    parameters:
    - id: subkey
      type: System.String
      description: The name or path of the subkey to create or open. This string is not case-sensitive.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The newly created subkey, or null if the operation failed. If a zero-length string is specified for *subkey*, the current @'Microsoft.Win32.RegistryKey' object is returned.
  exceptions:
  - type: System.ArgumentNullException
    description: '*subkey* is null.'
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to create or open the registry key.
  - type: System.ObjectDisposedException
    description: The @'Microsoft.Win32.RegistryKey' on which this method is being invoked is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    description: The @'Microsoft.Win32.RegistryKey' cannot be written to; for example, it was not opened as a writable key , or the user does not have the necessary access rights.
  - type: System.IO.IOException
    description: The nesting level exceeds 510.-or-A system error occurred, such as deletion of the key, or an attempt to create a key in the @'Microsoft.Win32.Registry.LocalMachine' root.
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)
  id: CreateSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: CreateSubKey(String, Boolean)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(System.String, System.Boolean)
  type: Method
  source:
    remote: *o1
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 39
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Creates a new subkey or opens an existing subkey with the specified access. Available starting in .NET Framework 2015
  syntax:
    content: public RegistryKey CreateSubKey(string subkey, bool writable)
    content.vb: Public Function CreateSubKey(subkey As String, writable As Boolean) As RegistryKey
    parameters:
    - id: subkey
      type: System.String
      description: The name or path of the subkey to create or open. This string is not case-sensitive.
    - id: writable
      type: System.Boolean
      description: true to indicate the new subkey is writable; otherwise, false.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The newly created subkey, or null if the operation failed. If a zero-length string is specified for *subkey*, the current @'Microsoft.Win32.RegistryKey' object is returned.
  exceptions:
  - type: System.ArgumentNullException
    description: '*subkey* is null.'
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to create or open the registry key.
  - type: System.UnauthorizedAccessException
    description: The current @'Microsoft.Win32.RegistryKey' cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.
  - type: System.IO.IOException
    description: The nesting level exceeds 510.-or-A system error occurred, such as deletion of the key, or an attempt to create a key in the @'Microsoft.Win32.Registry.LocalMachine' root.
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  id: CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: CreateSubKey(String, Boolean, RegistryOptions)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(System.String, System.Boolean, Microsoft.Win32.RegistryOptions)
  type: Method
  source:
    remote: *o1
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 40
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Creates a new subkey or opens an existing subkey with the specified access. Available starting in .NET Framework 2015
  syntax:
    content: public RegistryKey CreateSubKey(string subkey, bool writable, RegistryOptions options)
    content.vb: Public Function CreateSubKey(subkey As String, writable As Boolean, options As RegistryOptions) As RegistryKey
    parameters:
    - id: subkey
      type: System.String
      description: The name or path of the subkey to create or open. This string is not case-sensitive.
    - id: writable
      type: System.Boolean
      description: true to indicate the new subkey is writable; otherwise, false.
    - id: options
      type: Microsoft.Win32.RegistryOptions
      description: The registry option to use.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The newly created subkey, or null if the operation failed. If a zero-length string is specified for *subkey*, the current @'Microsoft.Win32.RegistryKey' object is returned.
  exceptions:
  - type: System.ArgumentNullException
    description: '*subkey* is null.'
  - type: System.ArgumentException
    description: '*options* does not specify a valid Option'
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to create or open the registry key.
  - type: System.UnauthorizedAccessException
    description: The current @'Microsoft.Win32.RegistryKey' cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.
  - type: System.IO.IOException
    description: The nesting level exceeds 510.-or-A system error occurred, such as deletion of the key, or an attempt to create a key in the @'Microsoft.Win32.Registry.LocalMachine' root.
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)
  id: DeleteSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: DeleteSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)
  type: Method
  source:
    remote: *o1
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 41
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Deletes the specified subkey.
  syntax:
    content: public void DeleteSubKey(string subkey)
    content.vb: Public Sub DeleteSubKey(subkey As String)
    parameters:
    - id: subkey
      type: System.String
      description: The name of the subkey to delete. This string is not case-sensitive.
  exceptions:
  - type: System.InvalidOperationException
    description: The *subkey* has child subkeys
  - type: System.ArgumentException
    description: The *subkey* parameter does not specify a valid registry key
  - type: System.ArgumentNullException
    description: '*subkey* is null'
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to delete the key.
  - type: System.ObjectDisposedException
    description: The @'Microsoft.Win32.RegistryKey' being manipulated is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)
  id: DeleteSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: DeleteSubKey(String, Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String, System.Boolean)
  type: Method
  source:
    remote: *o1
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 42
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Deletes the specified subkey, and specifies whether an exception is raised if the subkey is not found.
  syntax:
    content: public void DeleteSubKey(string subkey, bool throwOnMissingSubKey)
    content.vb: Public Sub DeleteSubKey(subkey As String, throwOnMissingSubKey As Boolean)
    parameters:
    - id: subkey
      type: System.String
      description: The name of the subkey to delete. This string is not case-sensitive.
    - id: throwOnMissingSubKey
      type: System.Boolean
      description: Indicates whether an exception should be raised if the specified subkey cannot be found. If this argument is true and the specified subkey does not exist, an exception is raised. If this argument is false and the specified subkey does not exist, no action is taken.
  exceptions:
  - type: System.InvalidOperationException
    description: '*subkey* has child subkeys.'
  - type: System.ArgumentException
    description: '*subkey* does not specify a valid registry key, and *throwOnMissingSubKey* is true.'
  - type: System.ArgumentNullException
    description: '*subkey* is null.'
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to delete the key.
  - type: System.ObjectDisposedException
    description: The @'Microsoft.Win32.RegistryKey' being manipulated is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)
  id: DeleteSubKeyTree(System.String)
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: DeleteSubKeyTree(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)
  type: Method
  source:
    remote: *o1
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 43
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Deletes a subkey and any child subkeys recursively.
  syntax:
    content: public void DeleteSubKeyTree(string subkey)
    content.vb: Public Sub DeleteSubKeyTree(subkey As String)
    parameters:
    - id: subkey
      type: System.String
      description: The subkey to delete. This string is not case-sensitive.
  exceptions:
  - type: System.ArgumentNullException
    description: '*subkey* is null.'
  - type: System.ArgumentException
    description: Deletion of a root hive is attempted.-or-*subkey* does not specify a valid registry subkey.
  - type: System.IO.IOException
    description: An I/O error has occurred.
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to delete the key.
  - type: System.ObjectDisposedException
    description: The @'Microsoft.Win32.RegistryKey' being manipulated is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)
  id: DeleteSubKeyTree(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: DeleteSubKeyTree(String, Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String, System.Boolean)
  type: Method
  source:
    remote: *o1
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 44
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Deletes the specified subkey and any child subkeys recursively, and specifies whether an exception is raised if the subkey is not found.
  syntax:
    content: public void DeleteSubKeyTree(string subkey, bool throwOnMissingSubKey)
    content.vb: Public Sub DeleteSubKeyTree(subkey As String, throwOnMissingSubKey As Boolean)
    parameters:
    - id: subkey
      type: System.String
      description: The name of the subkey to delete. This string is not case-sensitive.
    - id: throwOnMissingSubKey
      type: System.Boolean
      description: Indicates whether an exception should be raised if the specified subkey cannot be found. If this argument is true and the specified subkey does not exist, an exception is raised. If this argument is false and the specified subkey does not exist, no action is taken.
  exceptions:
  - type: System.ArgumentException
    description: An attempt was made to delete the root hive of the tree.-or-*subkey* does not specify a valid registry subkey, and *throwOnMissingSubKey* is true.
  - type: System.ArgumentNullException
    description: '*subkey* is null.'
  - type: System.ObjectDisposedException
    description: The @'Microsoft.Win32.RegistryKey' is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to delete the key.
- uid: Microsoft.Win32.RegistryKey.DeleteValue(System.String)
  id: DeleteValue(System.String)
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: DeleteValue(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteValue(System.String)
  type: Method
  source:
    remote: *o1
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 45
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Deletes the specified value from this key.
  syntax:
    content: public void DeleteValue(string name)
    content.vb: Public Sub DeleteValue(name As String)
    parameters:
    - id: name
      type: System.String
      description: The name of the value to delete.
  exceptions:
  - type: System.ArgumentException
    description: '*name* is not a valid reference to a value.'
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to delete the value.
  - type: System.ObjectDisposedException
    description: The @'Microsoft.Win32.RegistryKey' being manipulated is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    description: The @'Microsoft.Win32.RegistryKey' being manipulated is read-only.
- uid: Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)
  id: DeleteValue(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: DeleteValue(String, Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteValue(System.String, System.Boolean)
  type: Method
  source:
    remote: *o1
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 46
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Deletes the specified value from this key, and specifies whether an exception is raised if the value is not found.
  syntax:
    content: public void DeleteValue(string name, bool throwOnMissingValue)
    content.vb: Public Sub DeleteValue(name As String, throwOnMissingValue As Boolean)
    parameters:
    - id: name
      type: System.String
      description: The name of the value to delete.
    - id: throwOnMissingValue
      type: System.Boolean
      description: Indicates whether an exception should be raised if the specified value cannot be found. If this argument is true and the specified value does not exist, an exception is raised. If this argument is false and the specified value does not exist, no action is taken.
  exceptions:
  - type: System.ArgumentException
    description: '*name* is not a valid reference to a value and *throwOnMissingValue* is true. -or- *name* is null.'
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to delete the value.
  - type: System.ObjectDisposedException
    description: The @'Microsoft.Win32.RegistryKey' being manipulated is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    description: The @'Microsoft.Win32.RegistryKey' being manipulated is read-only.
- uid: Microsoft.Win32.RegistryKey.Dispose
  id: Dispose
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: Dispose()
  fullName: Microsoft.Win32.RegistryKey.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.Win32.Registry/src/Microsoft/Win32/RegistryKey.cs
    startLine: 256
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Releases all resources used by the current instance of the @'Microsoft.Win32.RegistryKey' class.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
- uid: Microsoft.Win32.RegistryKey.Flush
  id: Flush
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: Flush()
  fullName: Microsoft.Win32.RegistryKey.Flush()
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.Win32.Registry/src/Microsoft/Win32/RegistryKey.cs
    startLine: 244
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Writes all the attributes of the specified open registry key into the registry.
  syntax:
    content: public void Flush()
    content.vb: Public Sub Flush
- uid: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  id: FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: FromHandle(SafeRegistryHandle)
  fullName: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.Win32.Registry/src/Microsoft/Win32/RegistryKey.cs
    startLine: 776
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Creates a registry key from a specified handle.
  syntax:
    content: public static RegistryKey FromHandle(SafeRegistryHandle handle)
    content.vb: Public Shared Function FromHandle(handle As SafeRegistryHandle) As RegistryKey
    parameters:
    - id: handle
      type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
      description: The handle to the registry key.
    return:
      type: Microsoft.Win32.RegistryKey
      description: A registry key.
  exceptions:
  - type: System.ArgumentNullException
    description: '*handle* is null.'
  - type: System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to perform this action.
- uid: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  id: FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: FromHandle(SafeRegistryHandle, RegistryView)
  fullName: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle, Microsoft.Win32.RegistryView)
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.Win32.Registry/src/Microsoft/Win32/RegistryKey.cs
    startLine: 782
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Creates a registry key from a specified handle and registry view setting.
  syntax:
    content: public static RegistryKey FromHandle(SafeRegistryHandle handle, RegistryView view)
    content.vb: Public Shared Function FromHandle(handle As SafeRegistryHandle, view As RegistryView) As RegistryKey
    parameters:
    - id: handle
      type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
      description: The handle to the registry key.
    - id: view
      type: Microsoft.Win32.RegistryView
      description: The registry view to use.
    return:
      type: Microsoft.Win32.RegistryKey
      description: A registry key.
  exceptions:
  - type: System.ArgumentException
    description: '*view* is invalid.'
  - type: System.ArgumentNullException
    description: '*handle* is null.'
  - type: System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to perform this action.
- uid: Microsoft.Win32.RegistryKey.GetSubKeyNames
  id: GetSubKeyNames
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: GetSubKeyNames()
  fullName: Microsoft.Win32.RegistryKey.GetSubKeyNames()
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.Win32.Registry/src/Microsoft/Win32/RegistryKey.cs
    startLine: 821
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves an array of strings that contains all the subkey names.
  syntax:
    content: public string[] GetSubKeyNames()
    content.vb: Public Function GetSubKeyNames As String()
    return:
      type: System.String[]
      description: An array of strings that contains the names of the subkeys for the current key.
  exceptions:
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to read from the key.
  - type: System.ObjectDisposedException
    description: The @'Microsoft.Win32.RegistryKey' being manipulated is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.IO.IOException
    description: A system error occurred, for example the current key has been deleted.
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String)
  id: GetValue(System.String)
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: GetValue(String)
  fullName: Microsoft.Win32.RegistryKey.GetValue(System.String)
  type: Method
  source:
    remote: *o1
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 54
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves the value associated with the specified name. Returns null if the name/value pair does not exist in the registry.
  syntax:
    content: public object GetValue(string name)
    content.vb: Public Function GetValue(name As String) As Object
    parameters:
    - id: name
      type: System.String
      description: The name of the value to retrieve. This string is not case-sensitive.
    return:
      type: System.Object
      description: The value associated with *name*, or null if *name* is not found.
  exceptions:
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to read from the registry key.
  - type: System.ObjectDisposedException
    description: The @'Microsoft.Win32.RegistryKey' that contains the specified value is closed (closed keys cannot be accessed).
  - type: System.IO.IOException
    description: The @'Microsoft.Win32.RegistryKey' that contains the specified value has been marked for deletion.
  - type: System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)
  id: GetValue(System.String,System.Object)
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: GetValue(String, Object)
  fullName: Microsoft.Win32.RegistryKey.GetValue(System.String, System.Object)
  type: Method
  source:
    remote: *o1
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 55
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves the value associated with the specified name. If the name is not found, returns the default value that you provide.
  syntax:
    content: public object GetValue(string name, object defaultValue)
    content.vb: Public Function GetValue(name As String, defaultValue As Object) As Object
    parameters:
    - id: name
      type: System.String
      description: The name of the value to retrieve. This string is not case-sensitive.
    - id: defaultValue
      type: System.Object
      description: The value to return if *name* does not exist.
    return:
      type: System.Object
      description: The value associated with *name*, with any embedded environment variables left unexpanded, or *defaultValue* if *name* is not found.
  exceptions:
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to read from the registry key.
  - type: System.ObjectDisposedException
    description: The @'Microsoft.Win32.RegistryKey' that contains the specified value is closed (closed keys cannot be accessed).
  - type: System.IO.IOException
    description: The @'Microsoft.Win32.RegistryKey' that contains the specified value has been marked for deletion.
  - type: System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  id: GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: GetValue(String, Object, RegistryValueOptions)
  fullName: Microsoft.Win32.RegistryKey.GetValue(System.String, System.Object, Microsoft.Win32.RegistryValueOptions)
  type: Method
  source:
    remote: *o1
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 56
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves the value associated with the specified name and retrieval options. If the name is not found, returns the default value that you provide.
  syntax:
    content: public object GetValue(string name, object defaultValue, RegistryValueOptions options)
    content.vb: Public Function GetValue(name As String, defaultValue As Object, options As RegistryValueOptions) As Object
    parameters:
    - id: name
      type: System.String
      description: The name of the value to retrieve. This string is not case-sensitive.
    - id: defaultValue
      type: System.Object
      description: The value to return if *name* does not exist.
    - id: options
      type: Microsoft.Win32.RegistryValueOptions
      description: One of the enumeration values that specifies optional processing of the retrieved value.
    return:
      type: System.Object
      description: The value associated with *name*, processed according to the specified *options*, or *defaultValue* if *name* is not found.
  exceptions:
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to read from the registry key.
  - type: System.ObjectDisposedException
    description: The @'Microsoft.Win32.RegistryKey' that contains the specified value is closed (closed keys cannot be accessed).
  - type: System.IO.IOException
    description: The @'Microsoft.Win32.RegistryKey' that contains the specified value has been marked for deletion.
  - type: System.ArgumentException
    description: '*options* is not a valid @''Microsoft.Win32.RegistryValueOptions'' value; for example, an invalid value is cast to @''Microsoft.Win32.RegistryValueOptions''.'
  - type: System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
- uid: Microsoft.Win32.RegistryKey.GetValueKind(System.String)
  id: GetValueKind(System.String)
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: GetValueKind(String)
  fullName: Microsoft.Win32.RegistryKey.GetValueKind(System.String)
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.Win32.Registry/src/Microsoft/Win32/RegistryKey.cs
    startLine: 1240
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves the registry data type of the value associated with the specified name.
  syntax:
    content: public RegistryValueKind GetValueKind(string name)
    content.vb: Public Function GetValueKind(name As String) As RegistryValueKind
    parameters:
    - id: name
      type: System.String
      description: The name of the value whose registry data type is to be retrieved. This string is not case-sensitive.
    return:
      type: Microsoft.Win32.RegistryValueKind
      description: The registry data type of the value associated with *name*.
  exceptions:
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to read from the registry key.
  - type: System.ObjectDisposedException
    description: The @'Microsoft.Win32.RegistryKey' that contains the specified value is closed (closed keys cannot be accessed).
  - type: System.IO.IOException
    description: The subkey that contains the specified value does not exist.-or-The name/value pair specified by *name* does not exist.This exception is not thrown on Windows 95, Windows 98, or Windows Millennium Edition.
  - type: System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
- uid: Microsoft.Win32.RegistryKey.GetValueNames
  id: GetValueNames
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: GetValueNames()
  fullName: Microsoft.Win32.RegistryKey.GetValueNames()
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.Win32.Registry/src/Microsoft/Win32/RegistryKey.cs
    startLine: 907
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves an array of strings that contains all the value names associated with this key.
  syntax:
    content: public string[] GetValueNames()
    content.vb: Public Function GetValueNames As String()
    return:
      type: System.String[]
      description: An array of strings that contains the value names for the current key.
  exceptions:
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to read from the registry key.
  - type: System.ObjectDisposedException
    description: The @'Microsoft.Win32.RegistryKey'  being manipulated is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.IO.IOException
    description: A system error occurred; for example, the current key has been deleted.
- uid: Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  id: OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: OpenBaseKey(RegistryHive, RegistryView)
  fullName: Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive, Microsoft.Win32.RegistryView)
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.Win32.Registry/src/Microsoft/Win32/RegistryKey.cs
    startLine: 547
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Opens a new @'Microsoft.Win32.RegistryKey' that represents the requested key on the local machine with the specified view.
  syntax:
    content: public static RegistryKey OpenBaseKey(RegistryHive hKey, RegistryView view)
    content.vb: Public Shared Function OpenBaseKey(hKey As RegistryHive, view As RegistryView) As RegistryKey
    parameters:
    - id: hKey
      type: Microsoft.Win32.RegistryHive
      description: The HKEY to open.
    - id: view
      type: Microsoft.Win32.RegistryView
      description: The registry view to use.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The requested registry key.
  exceptions:
  - type: System.ArgumentException
    description: '*hKey* or *view* is invalid.'
  - type: System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to perform this action.
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String)
  id: OpenSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: OpenSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(System.String)
  type: Method
  source:
    remote: *o1
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 60
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves a subkey as read-only.
  syntax:
    content: public RegistryKey OpenSubKey(string name)
    content.vb: Public Function OpenSubKey(name As String) As RegistryKey
    parameters:
    - id: name
      type: System.String
      description: The name or path of the subkey to open as read-only.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The subkey requested, or null if the operation failed.
  exceptions:
  - type: System.ArgumentNullException
    description: '*name* is null'
  - type: System.ObjectDisposedException
    description: The @'Microsoft.Win32.RegistryKey' is closed (closed keys cannot be accessed).
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to read the registry key.
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)
  id: OpenSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: OpenSubKey(String, Boolean)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(System.String, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.Win32.Registry/src/Microsoft/Win32/RegistryKey.cs
    startLine: 617
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves a specified subkey, and specifies whether write access is to be applied to the key.
  syntax:
    content: public RegistryKey OpenSubKey(string name, bool writable)
    content.vb: Public Function OpenSubKey(name As String, writable As Boolean) As RegistryKey
    parameters:
    - id: name
      type: System.String
      description: Name or path of the subkey to open.
    - id: writable
      type: System.Boolean
      description: Set to true if you need write access to the key.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The subkey requested, or null if the operation failed.
  exceptions:
  - type: System.ArgumentNullException
    description: '*name* is null.'
  - type: System.ObjectDisposedException
    description: The @'Microsoft.Win32.RegistryKey' is closed (closed keys cannot be accessed).
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to access the registry key in the specified mode.
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  id: OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: OpenSubKey(String, RegistryRights)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(System.String, System.Security.AccessControl.RegistryRights)
  type: Method
  source:
    remote: *o1
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 62
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves a subkey with the specified name and .Available starting in .NET Framework 2015
  syntax:
    content: public RegistryKey OpenSubKey(string name, RegistryRights rights)
    content.vb: Public Function OpenSubKey(name As String, rights As RegistryRights) As RegistryKey
    parameters:
    - id: name
      type: System.String
      description: The name or path of the subkey to create or open.
    - id: rights
      type: System.Security.AccessControl.RegistryRights
      description: The rights for the registry key.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The subkey requested, or null if the operation failed.
  exceptions:
  - type: System.ArgumentNullException
    description: '*name* is null.'
  - type: System.ObjectDisposedException
    description: The @'Microsoft.Win32.RegistryKey' is closed (closed keys cannot be accessed).
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to access the registry key in the specified mode.
- uid: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)
  id: SetValue(System.String,System.Object)
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: SetValue(String, Object)
  fullName: Microsoft.Win32.RegistryKey.SetValue(System.String, System.Object)
  type: Method
  source:
    remote: *o1
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 63
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Sets the specified name/value pair.
  syntax:
    content: public void SetValue(string name, object value)
    content.vb: Public Sub SetValue(name As String, value As Object)
    parameters:
    - id: name
      type: System.String
      description: The name of the value to store.
    - id: value
      type: System.Object
      description: The data to be stored.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
  - type: System.ArgumentException
    description: '*value* is an unsupported data type.'
  - type: System.ObjectDisposedException
    description: The @'Microsoft.Win32.RegistryKey' that contains the specified value is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    description: The @'Microsoft.Win32.RegistryKey' is read-only, and cannot be written to; for example, the key has not been opened with write access. -or-The @'Microsoft.Win32.RegistryKey' object represents a root-level node, and the operating system is Windows Millennium Edition or Windows 98.
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to create or modify registry keys.
  - type: System.IO.IOException
    description: The @'Microsoft.Win32.RegistryKey' object represents a root-level node, and the operating system is Windows 2000, Windows XP, or Windows Server 2003.
- uid: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  id: SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: SetValue(String, Object, RegistryValueKind)
  fullName: Microsoft.Win32.RegistryKey.SetValue(System.String, System.Object, Microsoft.Win32.RegistryValueKind)
  type: Method
  source:
    remote: *o1
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 64
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Sets the value of a name/value pair in the registry key, using the specified registry data type.
  syntax:
    content: public void SetValue(string name, object value, RegistryValueKind valueKind)
    content.vb: Public Sub SetValue(name As String, value As Object, valueKind As RegistryValueKind)
    parameters:
    - id: name
      type: System.String
      description: The name of the value to be stored.
    - id: value
      type: System.Object
      description: The data to be stored.
    - id: valueKind
      type: Microsoft.Win32.RegistryValueKind
      description: The registry data type to use when storing the data.
  exceptions:
  - type: System.ArgumentNullException
    description: '*value* is null.'
  - type: System.ArgumentException
    description: The type of *value* did not match the registry data type specified by *valueKind*, therefore the data could not be converted properly.
  - type: System.ObjectDisposedException
    description: The @'Microsoft.Win32.RegistryKey' that contains the specified value is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    description: The @'Microsoft.Win32.RegistryKey' is read-only, and cannot be written to; for example, the key has not been opened with write access.-or-The @'Microsoft.Win32.RegistryKey' object represents a root-level node, and the operating system is Windows Millennium Edition or Windows 98.
  - type: System.Security.SecurityException
    description: The user does not have the permissions required to create or modify registry keys.
  - type: System.IO.IOException
    description: The @'Microsoft.Win32.RegistryKey' object represents a root-level node, and the operating system is Windows 2000, Windows XP, or Windows Server 2003.
- uid: Microsoft.Win32.RegistryKey.ToString
  id: ToString
  parent: Microsoft.Win32.RegistryKey
  href: Microsoft.Win32.RegistryKey.yml
  name: ToString()
  fullName: Microsoft.Win32.RegistryKey.ToString()
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.Win32.Registry/src/Microsoft/Win32/RegistryKey.cs
    startLine: 1486
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves a string representation of this key.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string representing the key. If the specified key is invalid (cannot be found) then null is returned.
  exceptions:
  - type: System.ObjectDisposedException
    description: The @'Microsoft.Win32.RegistryKey' being accessed is closed (closed keys cannot be accessed).
references:
- uid: Microsoft.Win32
  isExternal: false
  name: Microsoft.Win32
  fullName: Microsoft.Win32
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Win32.SafeHandles.SafeRegistryHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  href: Microsoft.Win32.SafeHandles.SafeRegistryHandle.yml
  name: SafeRegistryHandle
  fullName: Microsoft.Win32.SafeHandles.SafeRegistryHandle
- uid: Microsoft.Win32.SafeHandles
  isExternal: false
  name: Microsoft.Win32.SafeHandles
  fullName: Microsoft.Win32.SafeHandles
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: Microsoft.Win32.RegistryView
  parent: Microsoft.Win32
  isExternal: false
  href: Microsoft.Win32.RegistryView.yml
  name: RegistryView
  fullName: Microsoft.Win32.RegistryView
- uid: Microsoft.Win32.RegistryKey
  parent: Microsoft.Win32
  isExternal: false
  href: Microsoft.Win32.RegistryKey.yml
  name: RegistryKey
  fullName: Microsoft.Win32.RegistryKey
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.RegistryOptions
  parent: Microsoft.Win32
  isExternal: false
  href: Microsoft.Win32.RegistryOptions.yml
  name: RegistryOptions
  fullName: Microsoft.Win32.RegistryOptions
- uid: System.String[]
  isExternal: false
  href: System.String.yml
  name: String[]
  name.vb: String()
  fullName: System.String[]
  fullName.vb: System.String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ()
    fullName: ()
- uid: Microsoft.Win32.RegistryValueOptions
  parent: Microsoft.Win32
  isExternal: false
  href: Microsoft.Win32.RegistryValueOptions.yml
  name: RegistryValueOptions
  fullName: Microsoft.Win32.RegistryValueOptions
- uid: Microsoft.Win32.RegistryValueKind
  parent: Microsoft.Win32
  isExternal: false
  href: Microsoft.Win32.RegistryValueKind.yml
  name: RegistryValueKind
  fullName: Microsoft.Win32.RegistryValueKind
- uid: Microsoft.Win32.RegistryHive
  parent: Microsoft.Win32
  isExternal: false
  href: Microsoft.Win32.RegistryHive.yml
  name: RegistryHive
  fullName: Microsoft.Win32.RegistryHive
- uid: System.Security.AccessControl.RegistryRights
  parent: System.Security.AccessControl
  isExternal: false
  href: System.Security.AccessControl.RegistryRights.yml
  name: RegistryRights
  fullName: System.Security.AccessControl.RegistryRights
- uid: System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.ObjectDisposedException
  isExternal: false
  href: System.ObjectDisposedException.yml
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
  summary: The exception that is thrown when an operation is performed on a disposed object.
- uid: System.UnauthorizedAccessException
  isExternal: false
  href: System.UnauthorizedAccessException.yml
  name: UnauthorizedAccessException
  fullName: System.UnauthorizedAccessException
  summary: The exception that is thrown when the operating system denies access because of an I/O error or a specific type of security error.
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  href: System.IO.IOException.yml
  name: IOException
  fullName: System.IO.IOException
  summary: The exception that is thrown when an I/O error occurs.
- uid: System.Security.SecurityException
  isExternal: false
  href: System.Security.SecurityException.yml
  name: SecurityException
  fullName: System.Security.SecurityException
  summary: The exception that is thrown when a security error is detected.
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  href: System.InvalidOperationException.yml
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  summary: The exception that is thrown when a method call is invalid for the object's current state.
