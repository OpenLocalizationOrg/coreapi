items:
- uid: System.Xml.Serialization.XmlAttributes
  commentId: T:System.Xml.Serialization.XmlAttributes
  id: XmlAttributes
  parent: System.Xml.Serialization
  children:
  - System.Xml.Serialization.XmlAttributes.#ctor
  - System.Xml.Serialization.XmlAttributes.XmlAnyAttribute
  - System.Xml.Serialization.XmlAttributes.XmlAnyElements
  - System.Xml.Serialization.XmlAttributes.XmlArray
  - System.Xml.Serialization.XmlAttributes.XmlArrayItems
  - System.Xml.Serialization.XmlAttributes.XmlAttribute
  - System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier
  - System.Xml.Serialization.XmlAttributes.XmlDefaultValue
  - System.Xml.Serialization.XmlAttributes.XmlElements
  - System.Xml.Serialization.XmlAttributes.XmlEnum
  - System.Xml.Serialization.XmlAttributes.XmlIgnore
  - System.Xml.Serialization.XmlAttributes.Xmlns
  - System.Xml.Serialization.XmlAttributes.XmlRoot
  - System.Xml.Serialization.XmlAttributes.XmlText
  - System.Xml.Serialization.XmlAttributes.XmlType
  langs:
  - csharp
  - vb
  name: XmlAttributes
  nameWithType: XmlAttributes
  fullName: System.Xml.Serialization.XmlAttributes
  type: Class
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlAttributes
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 94
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Represents a collection of attribute objects that control how the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes and deserializes an object.</p>\n"
  remarks: "\n<p>Creating the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> is part of a process that overrides the default way the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes class instances. For example, suppose you want to serialize an object that is created from a DLL which has an inaccessible source. By using the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref>, you can augment or otherwise control how the object is serialized.</p>\n<p>The members of the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> class correspond directly to a family of attribute classes that control serialization. For example, the <xref href=\"System.Xml.Serialization.XmlAttributes.XmlText\" data-throw-if-not-resolved=\"false\"></xref> property must be set to an <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref>, which allows you to override serialization of a field or property by instructing the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> to serialize the property value as XML text. For a complete list of attributes that control serialization, see the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>For more details on using the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> with the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> class, see How to: Specify an Alternate Element Name for an XML Stream.</p>\n"
  syntax:
    content: public class XmlAttributes
    content.vb: Public Class XmlAttributes
  seealso:
  - type: System.Xml.Serialization.XmlAttributeOverrides
    commentId: T:System.Xml.Serialization.XmlAttributeOverrides
  - type: System.Xml.Serialization.XmlSerializer
    commentId: T:System.Xml.Serialization.XmlSerializer
  - type: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.Serialization.XmlAttributes.#ctor
  commentId: M:System.Xml.Serialization.XmlAttributes.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlAttributes
  langs:
  - csharp
  - vb
  name: XmlAttributes()
  nameWithType: XmlAttributes.XmlAttributes()
  fullName: System.Xml.Serialization.XmlAttributes.XmlAttributes()
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 96
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public XmlAttributes()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlAttributes.XmlAnyAttribute
  commentId: P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute
  id: XmlAnyAttribute
  parent: System.Xml.Serialization.XmlAttributes
  langs:
  - csharp
  - vb
  name: XmlAnyAttribute
  nameWithType: XmlAttributes.XmlAnyAttribute
  fullName: System.Xml.Serialization.XmlAttributes.XmlAnyAttribute
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlAnyAttribute
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 97
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets the <xref href=\"System.Xml.Serialization.XmlAnyAttributeAttribute\" data-throw-if-not-resolved=\"false\"></xref> to override.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Xml.Serialization.XmlAnyAttributeAttribute\" data-throw-if-not-resolved=\"false\"></xref> can be applied to a member that returns an array of <xref href=\"System.Xml.XmlAttribute\" data-throw-if-not-resolved=\"false\"></xref> objects on deserialization. This allows the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> to deserialize any attributes that do not have a corresponding member in the object being deserialized--thus those elements are \"unknown\" to the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref>. This is useful when the XML stream has been altered by an XML Web service, or when it is known that random data is always included with the XML stream.</p>\n<p>The <xref href=\"System.Xml.Serialization.XmlAttributes.XmlAnyAttribute\" data-throw-if-not-resolved=\"false\"></xref> property allows you to override the serialization of a member to which the <xref href=\"System.Xml.Serialization.XmlAnyAttributeAttribute\" data-throw-if-not-resolved=\"false\"></xref> has been applied.</p>\n"
  syntax:
    content: public XmlAnyAttributeAttribute XmlAnyAttribute { get; set; }
    content.vb: Public Property XmlAnyAttribute As XmlAnyAttributeAttribute
    parameters: []
    return:
      type: System.Xml.Serialization.XmlAnyAttributeAttribute
      description: "\n<p>The <xref href=\"System.Xml.Serialization.XmlAnyAttributeAttribute\" data-throw-if-not-resolved=\"false\"></xref> to override.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlAttributes.XmlAnyElements
  commentId: P:System.Xml.Serialization.XmlAttributes.XmlAnyElements
  id: XmlAnyElements
  parent: System.Xml.Serialization.XmlAttributes
  langs:
  - csharp
  - vb
  name: XmlAnyElements
  nameWithType: XmlAttributes.XmlAnyElements
  fullName: System.Xml.Serialization.XmlAttributes.XmlAnyElements
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlAnyElements
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 98
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets the collection of <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> objects to override.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> can be applied to a member that returns an array of <xref href=\"System.Xml.XmlElement\" data-throw-if-not-resolved=\"false\"></xref> objects on deserialization. This allows the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> to deserialize any elements that do not have a corresponding member in the object being deserialized--thus those elements are \"unknown\" to the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref>. This is useful when the XML stream has been altered by an XML Web service, or when it is known that random data is always included with the XML stream.</p>\n<p>The <xref href=\"System.Xml.Serialization.XmlAttributes.XmlAnyElements\" data-throw-if-not-resolved=\"false\"></xref> property allows you to override the serialization of a member to function as a member to which the <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> has been applied.</p>\n"
  syntax:
    content: public XmlAnyElementAttributes XmlAnyElements { get; }
    content.vb: Public ReadOnly Property XmlAnyElements As XmlAnyElementAttributes
    parameters: []
    return:
      type: System.Xml.Serialization.XmlAnyElementAttributes
      description: "\n<p>An <xref href=\"System.Xml.Serialization.XmlAnyElementAttributes\" data-throw-if-not-resolved=\"false\"></xref> object that represents the collection of <xref href=\"System.Xml.Serialization.XmlAnyElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n"
  seealso:
  - type: System.Xml.Serialization.XmlAttributes.XmlAnyAttribute
    commentId: P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.Serialization.XmlAttributes.XmlArray
  commentId: P:System.Xml.Serialization.XmlAttributes.XmlArray
  id: XmlArray
  parent: System.Xml.Serialization.XmlAttributes
  langs:
  - csharp
  - vb
  name: XmlArray
  nameWithType: XmlAttributes.XmlArray
  fullName: System.Xml.Serialization.XmlAttributes.XmlArray
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlArray
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 99
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets an object that specifies how the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes a public field or read/write property that returns an array.</p>\n"
  remarks: "\n<p>There are two ways in which a public field or public read/write property that returns an array is serialized by the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref>: the default serialization, and the controlled serialization.</p>\n<p>In the default serialization, no attribute is applied to the member. When serialized, the array is serialized as a nested sequence of XML elements with the XML element name of the nested sequence taken from the member name.</p>\n<p>To control the serialization more precisely, apply an <xref href=\"System.Xml.Serialization.XmlArrayAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the field or property. For example, you can change the generated XML element name from the default to a different name by setting the <xref href=\"System.Xml.Serialization.XmlArrayAttribute.ElementName\" data-throw-if-not-resolved=\"false\"></xref> property to a new value.</p>\n<p>The <xref href=\"System.Xml.Serialization.XmlAttributes.XmlArray\" data-throw-if-not-resolved=\"false\"></xref> property allows you to override the default serialization, as well as the serialization controlled by applying an <xref href=\"System.Xml.Serialization.XmlArrayAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the member. For example, you can change the XML element name generated from the default (the member identifier) to a new value. In addition, if you apply an <xref href=\"System.Xml.Serialization.XmlArrayAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a member, it is overridden by any <xref href=\"System.Xml.Serialization.XmlArrayAttribute\" data-throw-if-not-resolved=\"false\"></xref> that is assigned to the <xref href=\"System.Xml.Serialization.XmlAttributes.XmlArray\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  syntax:
    content: public XmlArrayAttribute XmlArray { get; set; }
    content.vb: Public Property XmlArray As XmlArrayAttribute
    parameters: []
    return:
      type: System.Xml.Serialization.XmlArrayAttribute
      description: "\n<p>An <xref href=\"System.Xml.Serialization.XmlArrayAttribute\" data-throw-if-not-resolved=\"false\"></xref> that specifies how the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes a public field or read/write property that returns an array.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlAttributes.XmlArrayItems
  commentId: P:System.Xml.Serialization.XmlAttributes.XmlArrayItems
  id: XmlArrayItems
  parent: System.Xml.Serialization.XmlAttributes
  langs:
  - csharp
  - vb
  name: XmlArrayItems
  nameWithType: XmlAttributes.XmlArrayItems
  fullName: System.Xml.Serialization.XmlAttributes.XmlArrayItems
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlArrayItems
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 100
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets a collection of objects that specify how the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes items inserted into an array returned by a public field or read/write property.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Xml.Serialization.XmlAttributes.XmlArrayItems\" data-throw-if-not-resolved=\"false\"></xref> property allows you to specify the derived types that can be inserted into an array returned by a public field or public read/write property. For each new type you want the field or property to accept, create an <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> object and <xref href=\"System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)\" data-throw-if-not-resolved=\"false\"></xref> it to the <xref href=\"System.Xml.Serialization.XmlArrayItemAttributes\" data-throw-if-not-resolved=\"false\"></xref>) returned by the <xref href=\"System.Xml.Serialization.XmlAttributes.XmlArrayItems\" data-throw-if-not-resolved=\"false\"></xref> property. (The new type must be derived from the type already accepted by the field or property.) <xref href=\"System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)\" data-throw-if-not-resolved=\"false\"></xref> the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object to an <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object and specify the type of the object that contains the field or property, and the name of the field or property. Construct an <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> with the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object before calling <xref href=\"System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: public XmlArrayItemAttributes XmlArrayItems { get; }
    content.vb: Public ReadOnly Property XmlArrayItems As XmlArrayItemAttributes
    parameters: []
    return:
      type: System.Xml.Serialization.XmlArrayItemAttributes
      description: "\n<p>An <xref href=\"System.Xml.Serialization.XmlArrayItemAttributes\" data-throw-if-not-resolved=\"false\"></xref> object that contains a collection of <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.Serialization.XmlAttributes.XmlAttribute
  commentId: P:System.Xml.Serialization.XmlAttributes.XmlAttribute
  id: XmlAttribute
  parent: System.Xml.Serialization.XmlAttributes
  langs:
  - csharp
  - vb
  name: XmlAttribute
  nameWithType: XmlAttributes.XmlAttribute
  fullName: System.Xml.Serialization.XmlAttributes.XmlAttribute
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlAttribute
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 101
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets an object that specifies how the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes a public field or public read/write property as an XML attribute.</p>\n"
  remarks: "\n<p>By default, if no attribute is applied to a public field or public read/write property, it is serialized as an XML element. You can also instruct the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> to generate an XML attribute by applying an <xref href=\"System.Xml.Serialization.XmlAttributeAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the field or property.</p>\n<p>The <xref href=\"System.Xml.Serialization.XmlAttributes.XmlAttribute\" data-throw-if-not-resolved=\"false\"></xref> property allows you to override the default serialization, as well as the serialization controlled by applying an <xref href=\"System.Xml.Serialization.XmlAttributeAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the member. To do this, create an <xref href=\"System.Xml.Serialization.XmlAttributeAttribute\" data-throw-if-not-resolved=\"false\"></xref> and set its properties (such as <xref href=\"System.Xml.Serialization.XmlAttributeAttribute.AttributeName\" data-throw-if-not-resolved=\"false\"></xref>). Assign the new object to the <xref href=\"System.Xml.Serialization.XmlAttributes.XmlAttribute\" data-throw-if-not-resolved=\"false\"></xref> property of an <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object. Add the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object to an <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object and specify the type of the object that contains the field or property, and the name of the field or property. Lastly, create an <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> using the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object and call the <xref href=\"System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: public XmlAttributeAttribute XmlAttribute { get; set; }
    content.vb: Public Property XmlAttribute As XmlAttributeAttribute
    parameters: []
    return:
      type: System.Xml.Serialization.XmlAttributeAttribute
      description: "\n<p>An <xref href=\"System.Xml.Serialization.XmlAttributeAttribute\" data-throw-if-not-resolved=\"false\"></xref> that controls the serialization of a public field or read/write property as an XML attribute.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier
  commentId: P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier
  id: XmlChoiceIdentifier
  parent: System.Xml.Serialization.XmlAttributes
  langs:
  - csharp
  - vb
  name: XmlChoiceIdentifier
  nameWithType: XmlAttributes.XmlChoiceIdentifier
  fullName: System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlChoiceIdentifier
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 102
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets an object that allows you to distinguish between a set of choices.</p>\n"
  syntax:
    content: public XmlChoiceIdentifierAttribute XmlChoiceIdentifier { get; }
    content.vb: Public ReadOnly Property XmlChoiceIdentifier As XmlChoiceIdentifierAttribute
    parameters: []
    return:
      type: System.Xml.Serialization.XmlChoiceIdentifierAttribute
      description: "\n<p>An <xref href=\"System.Xml.Serialization.XmlChoiceIdentifierAttribute\" data-throw-if-not-resolved=\"false\"></xref> that can be applied to a class member that is serialized as an <strong>xsi:choice</strong> element.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.Serialization.XmlAttributes.XmlDefaultValue
  commentId: P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue
  id: XmlDefaultValue
  parent: System.Xml.Serialization.XmlAttributes
  langs:
  - csharp
  - vb
  name: XmlDefaultValue
  nameWithType: XmlAttributes.XmlDefaultValue
  fullName: System.Xml.Serialization.XmlAttributes.XmlDefaultValue
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlDefaultValue
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 103
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets the default value of an XML element or attribute.</p>\n"
  remarks: "\n<p>You can specify the default value of an XML element or XML attribute by applying a <xref href=\"System.ComponentModel.DefaultValueAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a member. To examine the result of applying the value, compile the application into a DLL or executable, and pass the resulting file as an argument to the XML Schema Definition tool (XSD.exe). In the XML schema document, a default value is assigned to the <strong>default</strong> attribute. In the following example, the default for the <Animal> element is \"Dogs.\" </p>\n<pre><code><?xml version=\"1.0\"?>\n<schema attributeFormDefault=\"qualified\" \nelementFormDefault=\"qualified\" targetNamespace=\"\" \nxmlns=\"http://www.w3.org/2000/10/XMLSchema\">\n<element name=\"Pets\" nullable=\"true\" type=\"Pets\"/>\n<complexType name=\"Pets\">\n<sequence>\n<element default=\"Dogs\" name=\"Animal\" nullable=\"true\" \ntype=\"string\" minOccurs=\"0\"/>\n</sequence>\n</complexType>\n</schema></code></pre>\n<p>To override the default value, create an <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> and assign it to the <xref href=\"System.Xml.Serialization.XmlAttributes.XmlDefaultValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>If the value assigned to a field or property is equal to the default value for that field or property, the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> does not serialize the value to the XML-instance. This is because the assigned value can be recovered from the XML schema. In other words, setting a field or property to its own default value is equivalent of not setting it at all. Likewise, if no value is set for the field or property, the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> uses the default value found in the schema. In both cases, (setting the property to its default, or not setting it at all), the XML-document instance does not contain any value for the property.</p>\n<p>You can use the class constructors instead of the schema to assign the default values. If you are using Xsd.exe to generate a classes from schemas, you can comment out or remove all of the [System.ComponentModel.DefaultValueAttribute(\"myFieldName\")] attributes from the class files.</p>\n"
  syntax:
    content: public object XmlDefaultValue { get; set; }
    content.vb: Public Property XmlDefaultValue As Object
    parameters: []
    return:
      type: System.Object
      description: "\n<p>An <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that represents the default value of an XML element or attribute.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlAttributes.XmlElements
  commentId: P:System.Xml.Serialization.XmlAttributes.XmlElements
  id: XmlElements
  parent: System.Xml.Serialization.XmlAttributes
  langs:
  - csharp
  - vb
  name: XmlElements
  nameWithType: XmlAttributes.XmlElements
  fullName: System.Xml.Serialization.XmlAttributes.XmlElements
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlElements
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 104
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets a collection of objects that specify how the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes a public field or read/write property as an XML element.</p>\n"
  remarks: "\n<p>For each overridden member that is serialized as an XML element, you must add a new <xref href=\"System.Xml.Serialization.XmlElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> to an <xref href=\"System.Xml.Serialization.XmlElementAttributes\" data-throw-if-not-resolved=\"false\"></xref> by calling the <xref href=\"System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)\" data-throw-if-not-resolved=\"false\"></xref> method. By default, an <xref href=\"System.Xml.Serialization.XmlElementAttributes\" data-throw-if-not-resolved=\"false\"></xref> object is created and assigned to the <xref href=\"System.Xml.Serialization.XmlAttributes.XmlElements\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  syntax:
    content: public XmlElementAttributes XmlElements { get; }
    content.vb: Public ReadOnly Property XmlElements As XmlElementAttributes
    parameters: []
    return:
      type: System.Xml.Serialization.XmlElementAttributes
      description: "\n<p>An <xref href=\"System.Xml.Serialization.XmlElementAttributes\" data-throw-if-not-resolved=\"false\"></xref> that contains a collection of <xref href=\"System.Xml.Serialization.XmlElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.Serialization.XmlAttributes.XmlEnum
  commentId: P:System.Xml.Serialization.XmlAttributes.XmlEnum
  id: XmlEnum
  parent: System.Xml.Serialization.XmlAttributes
  langs:
  - csharp
  - vb
  name: XmlEnum
  nameWithType: XmlAttributes.XmlEnum
  fullName: System.Xml.Serialization.XmlAttributes.XmlEnum
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlEnum
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 105
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets an object that specifies how the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes an enumeration member.</p>\n"
  remarks: "\n<p>For each identifier you want to override, you must create an <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object, and set the <xref href=\"System.Xml.Serialization.XmlAttributes.XmlEnum\" data-throw-if-not-resolved=\"false\"></xref> property to an <xref href=\"System.Xml.Serialization.XmlEnumAttribute\" data-throw-if-not-resolved=\"false\"></xref> that overrides the identifier. Add the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object to the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object and specify both the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the class that contains the enumeration, and the overridden member name.</p>\n"
  syntax:
    content: public XmlEnumAttribute XmlEnum { get; set; }
    content.vb: Public Property XmlEnum As XmlEnumAttribute
    parameters: []
    return:
      type: System.Xml.Serialization.XmlEnumAttribute
      description: "\n<p>An <xref href=\"System.Xml.Serialization.XmlEnumAttribute\" data-throw-if-not-resolved=\"false\"></xref> that specifies how the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes an enumeration member.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlAttributes.XmlIgnore
  commentId: P:System.Xml.Serialization.XmlAttributes.XmlIgnore
  id: XmlIgnore
  parent: System.Xml.Serialization.XmlAttributes
  langs:
  - csharp
  - vb
  name: XmlIgnore
  nameWithType: XmlAttributes.XmlIgnore
  fullName: System.Xml.Serialization.XmlAttributes.XmlIgnore
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlIgnore
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 106
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets a value that specifies whether or not the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes a public field or public read/write property.</p>\n"
  remarks: "\n<p>By default, all public fields and public read/write properties are serialized by the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref>. That is, the value of each public field or property is persisted as an XML element or XML attribute in an XML-document instance.</p>\n<p>To override the default serialization of a field or property, create an <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object, and set its <xref href=\"System.Xml.Serialization.XmlAttributes.XmlIgnore\" data-throw-if-not-resolved=\"false\"></xref> property to <strong>true</strong>. <xref href=\"System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)\" data-throw-if-not-resolved=\"false\"></xref> the object to an <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object and specify the type of the object that contains the field or property to ignore, and the name of the field or property to ignore.</p>\n<p>If an <xref href=\"System.Xml.Serialization.XmlIgnoreAttribute\" data-throw-if-not-resolved=\"false\"></xref> is applied to a field or property, the field or property is ignored. However you can override that behavior by creating an <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object, setting its <xref href=\"System.Xml.Serialization.XmlAttributes.XmlIgnore\" data-throw-if-not-resolved=\"false\"></xref> property to <strong>false</strong>, adding it to an <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object specifying the type of the object that contains the field or property, and the name of the field or property.</p>\n"
  syntax:
    content: public bool XmlIgnore { get; set; }
    content.vb: Public Property XmlIgnore As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> must not serialize the field or property; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.Xml.Serialization.XmlIgnoreAttribute
    commentId: T:System.Xml.Serialization.XmlIgnoreAttribute
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlAttributes.Xmlns
  commentId: P:System.Xml.Serialization.XmlAttributes.Xmlns
  id: Xmlns
  parent: System.Xml.Serialization.XmlAttributes
  langs:
  - csharp
  - vb
  name: Xmlns
  nameWithType: XmlAttributes.Xmlns
  fullName: System.Xml.Serialization.XmlAttributes.Xmlns
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Xmlns
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 107
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets a value that specifies whether to keep all namespace declarations when an object containing a member that returns an <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> object is overridden.</p>\n"
  syntax:
    content: public bool Xmlns { get; set; }
    content.vb: Public Property Xmlns As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the namespace declarations should be kept; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlAttributes.XmlRoot
  commentId: P:System.Xml.Serialization.XmlAttributes.XmlRoot
  id: XmlRoot
  parent: System.Xml.Serialization.XmlAttributes
  langs:
  - csharp
  - vb
  name: XmlRoot
  nameWithType: XmlAttributes.XmlRoot
  fullName: System.Xml.Serialization.XmlAttributes.XmlRoot
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlRoot
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 108
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets an object that specifies how the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes a class as an XML root element.</p>\n"
  syntax:
    content: public XmlRootAttribute XmlRoot { get; set; }
    content.vb: Public Property XmlRoot As XmlRootAttribute
    parameters: []
    return:
      type: System.Xml.Serialization.XmlRootAttribute
      description: "\n<p>An <xref href=\"System.Xml.Serialization.XmlRootAttribute\" data-throw-if-not-resolved=\"false\"></xref> that overrides a class attributed as an XML root element.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlAttributes.XmlText
  commentId: P:System.Xml.Serialization.XmlAttributes.XmlText
  id: XmlText
  parent: System.Xml.Serialization.XmlAttributes
  langs:
  - csharp
  - vb
  name: XmlText
  nameWithType: XmlAttributes.XmlText
  fullName: System.Xml.Serialization.XmlAttributes.XmlText
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlText
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 109
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets an object that instructs the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> to serialize a public field or public read/write property as XML text.</p>\n"
  remarks: "\n<p>By default, a public field or public read/write property is serialized as an XML element by the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref>. However, it can force the field or property to be serialized as XML text by applying an <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the field or property.</p>\n<p>The <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref> cannot be applied to a field or property that returns an array.</p>\n<p>To override the default serialization of a field or property (that does not return an array), create an <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref> and assign it to the <xref href=\"System.Xml.Serialization.XmlAttributes.XmlText\" data-throw-if-not-resolved=\"false\"></xref> property of an <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object. Add the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object to an <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object and specify the type of the object that contains the overridden field or property, and the name of the overridden field or property.</p>\n"
  syntax:
    content: public XmlTextAttribute XmlText { get; set; }
    content.vb: Public Property XmlText As XmlTextAttribute
    parameters: []
    return:
      type: System.Xml.Serialization.XmlTextAttribute
      description: "\n<p>An <xref href=\"System.Xml.Serialization.XmlTextAttribute\" data-throw-if-not-resolved=\"false\"></xref> that overrides the default serialization of a public property or field.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlAttributes.XmlType
  commentId: P:System.Xml.Serialization.XmlAttributes.XmlType
  id: XmlType
  parent: System.Xml.Serialization.XmlAttributes
  langs:
  - csharp
  - vb
  name: XmlType
  nameWithType: XmlAttributes.XmlType
  fullName: System.Xml.Serialization.XmlAttributes.XmlType
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlType
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 110
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets an object that specifies how the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes a class to which the <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> has been applied.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> can be used to control how a type is serialized by the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref>. For example, by default, when a type is serialized, the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> uses the class name as the XML element name. By creating an <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref>, setting the <xref href=\"System.Xml.Serialization.XmlAttributes.XmlType\" data-throw-if-not-resolved=\"false\"></xref> property to it, and creating an <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object, you can change the XML element name.</p>\n"
  syntax:
    content: public XmlTypeAttribute XmlType { get; set; }
    content.vb: Public Property XmlType As XmlTypeAttribute
    parameters: []
    return:
      type: System.Xml.Serialization.XmlTypeAttribute
      description: "\n<p>An <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> that overrides an <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> applied to a class declaration.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Xml.Serialization
  isExternal: false
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
  commentId: N:System
- uid: System.Xml.Serialization.XmlAnyAttributeAttribute
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlAnyAttributeAttribute
  nameWithType: XmlAnyAttributeAttribute
  fullName: System.Xml.Serialization.XmlAnyAttributeAttribute
  commentId: T:System.Xml.Serialization.XmlAnyAttributeAttribute
- uid: System.Xml.Serialization.XmlAnyElementAttributes
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlAnyElementAttributes
  nameWithType: XmlAnyElementAttributes
  fullName: System.Xml.Serialization.XmlAnyElementAttributes
  commentId: T:System.Xml.Serialization.XmlAnyElementAttributes
- uid: System.Xml.Serialization.XmlArrayAttribute
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlArrayAttribute
  nameWithType: XmlArrayAttribute
  fullName: System.Xml.Serialization.XmlArrayAttribute
  commentId: T:System.Xml.Serialization.XmlArrayAttribute
- uid: System.Xml.Serialization.XmlArrayItemAttributes
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlArrayItemAttributes
  nameWithType: XmlArrayItemAttributes
  fullName: System.Xml.Serialization.XmlArrayItemAttributes
  commentId: T:System.Xml.Serialization.XmlArrayItemAttributes
- uid: System.Xml.Serialization.XmlAttributeAttribute
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlAttributeAttribute
  nameWithType: XmlAttributeAttribute
  fullName: System.Xml.Serialization.XmlAttributeAttribute
  commentId: T:System.Xml.Serialization.XmlAttributeAttribute
- uid: System.Xml.Serialization.XmlChoiceIdentifierAttribute
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlChoiceIdentifierAttribute
  nameWithType: XmlChoiceIdentifierAttribute
  fullName: System.Xml.Serialization.XmlChoiceIdentifierAttribute
  commentId: T:System.Xml.Serialization.XmlChoiceIdentifierAttribute
- uid: System.Xml.Serialization.XmlElementAttributes
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlElementAttributes
  nameWithType: XmlElementAttributes
  fullName: System.Xml.Serialization.XmlElementAttributes
  commentId: T:System.Xml.Serialization.XmlElementAttributes
- uid: System.Xml.Serialization.XmlEnumAttribute
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlEnumAttribute
  nameWithType: XmlEnumAttribute
  fullName: System.Xml.Serialization.XmlEnumAttribute
  commentId: T:System.Xml.Serialization.XmlEnumAttribute
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
  commentId: T:System.Boolean
- uid: System.Xml.Serialization.XmlRootAttribute
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlRootAttribute
  nameWithType: XmlRootAttribute
  fullName: System.Xml.Serialization.XmlRootAttribute
  commentId: T:System.Xml.Serialization.XmlRootAttribute
- uid: System.Xml.Serialization.XmlTextAttribute
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlTextAttribute
  nameWithType: XmlTextAttribute
  fullName: System.Xml.Serialization.XmlTextAttribute
  commentId: T:System.Xml.Serialization.XmlTextAttribute
- uid: System.Xml.Serialization.XmlTypeAttribute
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlTypeAttribute
  nameWithType: XmlTypeAttribute
  fullName: System.Xml.Serialization.XmlTypeAttribute
  commentId: T:System.Xml.Serialization.XmlTypeAttribute
