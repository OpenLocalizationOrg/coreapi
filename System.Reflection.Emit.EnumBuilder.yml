items:
- uid: System.Reflection.Emit.EnumBuilder
  id: EnumBuilder
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.EnumBuilder.Assembly
  - System.Reflection.Emit.EnumBuilder.AssemblyQualifiedName
  - System.Reflection.Emit.EnumBuilder.Attributes
  - System.Reflection.Emit.EnumBuilder.BaseType
  - System.Reflection.Emit.EnumBuilder.ContainsGenericParameters
  - System.Reflection.Emit.EnumBuilder.CreateTypeInfo
  - System.Reflection.Emit.EnumBuilder.DeclaringMethod
  - System.Reflection.Emit.EnumBuilder.DeclaringType
  - System.Reflection.Emit.EnumBuilder.DefineLiteral(System.String,System.Object)
  - System.Reflection.Emit.EnumBuilder.FullName
  - System.Reflection.Emit.EnumBuilder.GenericParameterAttributes
  - System.Reflection.Emit.EnumBuilder.GenericParameterPosition
  - System.Reflection.Emit.EnumBuilder.GenericTypeArguments
  - System.Reflection.Emit.EnumBuilder.GetArrayRank
  - System.Reflection.Emit.EnumBuilder.GetElementType
  - System.Reflection.Emit.EnumBuilder.GetGenericParameterConstraints
  - System.Reflection.Emit.EnumBuilder.GetGenericTypeDefinition
  - System.Reflection.Emit.EnumBuilder.GUID
  - System.Reflection.Emit.EnumBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  - System.Reflection.Emit.EnumBuilder.IsEnum
  - System.Reflection.Emit.EnumBuilder.IsGenericParameter
  - System.Reflection.Emit.EnumBuilder.IsGenericType
  - System.Reflection.Emit.EnumBuilder.IsGenericTypeDefinition
  - System.Reflection.Emit.EnumBuilder.IsSerializable
  - System.Reflection.Emit.EnumBuilder.MakeArrayType
  - System.Reflection.Emit.EnumBuilder.MakeArrayType(System.Int32)
  - System.Reflection.Emit.EnumBuilder.MakeByRefType
  - System.Reflection.Emit.EnumBuilder.MakeGenericType(System.Type[])
  - System.Reflection.Emit.EnumBuilder.MakePointerType
  - System.Reflection.Emit.EnumBuilder.Module
  - System.Reflection.Emit.EnumBuilder.Name
  - System.Reflection.Emit.EnumBuilder.Namespace
  - System.Reflection.Emit.EnumBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  - System.Reflection.Emit.EnumBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  - System.Reflection.Emit.EnumBuilder.UnderlyingField
  href: System.Reflection.Emit.EnumBuilder.yml
  name: EnumBuilder
  fullName: System.Reflection.Emit.EnumBuilder
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Reflection/Emit/EnumBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Reflection/Emit/EnumBuilder.cs
    startLine: 24
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Describes and represents an enumeration type.
  syntax:
    content: 'public sealed class EnumBuilder : TypeInfo, TypeInfo'
    content.vb: Public NotInheritable Class EnumBuilder Inherits TypeInfo Implements TypeInfo
  inheritance:
  - System.Object
  implements:
  - System.Reflection.TypeInfo
- uid: System.Reflection.Emit.EnumBuilder.AssemblyQualifiedName
  id: AssemblyQualifiedName
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: AssemblyQualifiedName
  fullName: System.Reflection.Emit.EnumBuilder.AssemblyQualifiedName
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/EnumBuilder.cs
    startLine: 118
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the full path of this enum qualified by the display name of the parent assembly.
  syntax:
    content: public override string AssemblyQualifiedName { get; }
    content.vb: Public Overrides ReadOnly Property AssemblyQualifiedName As String
    parameters: []
    return:
      type: System.String
      description: Read-only. The full path of this enum qualified by the display name of the parent assembly.
- uid: System.Reflection.Emit.EnumBuilder.FullName
  id: FullName
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: FullName
  fullName: System.Reflection.Emit.EnumBuilder.FullName
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/EnumBuilder.cs
    startLine: 114
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the full path of this enum.
  syntax:
    content: public override string FullName { get; }
    content.vb: Public Overrides ReadOnly Property FullName As String
    parameters: []
    return:
      type: System.String
      description: Read-only. The full path of this enum.
- uid: System.Reflection.Emit.EnumBuilder.Name
  id: Name
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: Name
  fullName: System.Reflection.Emit.EnumBuilder.Name
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/EnumBuilder.cs
    startLine: 74
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the name of this enum.
  syntax:
    content: public override string Name { get; }
    content.vb: Public Overrides ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: Read-only. The name of this enum.
- uid: System.Reflection.Emit.EnumBuilder.UnderlyingField
  id: UnderlyingField
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: UnderlyingField
  fullName: System.Reflection.Emit.EnumBuilder.UnderlyingField
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/EnumBuilder.cs
    startLine: 70
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the underlying field for this enum.
  syntax:
    content: public FieldBuilder UnderlyingField { get; }
    content.vb: Public ReadOnly Property UnderlyingField As FieldBuilder
    parameters: []
    return:
      type: System.Reflection.Emit.FieldBuilder
      description: Read-only. The underlying field for this enum.
- uid: System.Reflection.Emit.EnumBuilder.CreateTypeInfo
  id: CreateTypeInfo
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: CreateTypeInfo()
  fullName: System.Reflection.Emit.EnumBuilder.CreateTypeInfo()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/EnumBuilder.cs
    startLine: 50
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Gets a @'System.Reflection.TypeInfo' object that represents this enumeration.
  syntax:
    content: public TypeInfo CreateTypeInfo()
    content.vb: Public Function CreateTypeInfo As TypeInfo
    return:
      type: System.Reflection.TypeInfo
      description: An object that represents this enumeration.
- uid: System.Reflection.Emit.EnumBuilder.DefineLiteral(System.String,System.Object)
  id: DefineLiteral(System.String,System.Object)
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: DefineLiteral(String, Object)
  fullName: System.Reflection.Emit.EnumBuilder.DefineLiteral(System.String, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/EnumBuilder.cs
    startLine: 37
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Defines the named static field in an enumeration type with the specified constant value.
  syntax:
    content: public FieldBuilder DefineLiteral(string literalName, object literalValue)
    content.vb: Public Function DefineLiteral(literalName As String, literalValue As Object) As FieldBuilder
    parameters:
    - id: literalName
      type: System.String
      description: The name of the static field.
    - id: literalValue
      type: System.Object
      description: The constant value of the literal.
    return:
      type: System.Reflection.Emit.FieldBuilder
      description: The defined field.
- uid: System.Reflection.Emit.EnumBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  id: IsAssignableFrom(System.Reflection.TypeInfo)
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: IsAssignableFrom(TypeInfo)
  fullName: System.Reflection.Emit.EnumBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/EnumBuilder.cs
    startLine: 30
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Gets a value that indicates whether a specified @'System.Reflection.TypeInfo' object can be assigned to this object.
  syntax:
    content: public override bool IsAssignableFrom(TypeInfo typeInfo)
    content.vb: Public Overrides Function IsAssignableFrom(typeInfo As TypeInfo) As Boolean
    parameters:
    - id: typeInfo
      type: System.Reflection.TypeInfo
      description: The object to test.
    return:
      type: System.Boolean
      description: true if *typeInfo* can be assigned to this object; otherwise, false.
- uid: System.Reflection.Emit.EnumBuilder.MakeArrayType
  id: MakeArrayType
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: MakeArrayType()
  fullName: System.Reflection.Emit.EnumBuilder.MakeArrayType()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/EnumBuilder.cs
    startLine: 371
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type MakeArrayType()
    content.vb: Public Overrides Function MakeArrayType As Type
    return:
      type: System.Type
- uid: System.Reflection.Emit.EnumBuilder.MakeArrayType(System.Int32)
  id: MakeArrayType(System.Int32)
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: MakeArrayType(Int32)
  fullName: System.Reflection.Emit.EnumBuilder.MakeArrayType(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/EnumBuilder.cs
    startLine: 376
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type MakeArrayType(int rank)
    content.vb: Public Overrides Function MakeArrayType(rank As Integer) As Type
    parameters:
    - id: rank
      type: System.Int32
    return:
      type: System.Type
  exceptions:
  - type: System.IndexOutOfRangeException
    description: '*rank* is less than 1.'
- uid: System.Reflection.Emit.EnumBuilder.MakeByRefType
  id: MakeByRefType
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: MakeByRefType()
  fullName: System.Reflection.Emit.EnumBuilder.MakeByRefType()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/EnumBuilder.cs
    startLine: 366
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type MakeByRefType()
    content.vb: Public Overrides Function MakeByRefType As Type
    return:
      type: System.Type
- uid: System.Reflection.Emit.EnumBuilder.MakePointerType
  id: MakePointerType
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: MakePointerType()
  fullName: System.Reflection.Emit.EnumBuilder.MakePointerType()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/EnumBuilder.cs
    startLine: 361
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type MakePointerType()
    content.vb: Public Overrides Function MakePointerType As Type
    return:
      type: System.Type
- uid: System.Reflection.Emit.EnumBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: SetCustomAttribute(ConstructorInfo, Byte[])
  name.vb: SetCustomAttribute(ConstructorInfo, Byte())
  fullName: System.Reflection.Emit.EnumBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])
  fullName.vb: System.Reflection.Emit.EnumBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/EnumBuilder.cs
    startLine: 315
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Sets a custom attribute using a specified custom attribute blob.
  syntax:
    content: public void SetCustomAttribute(ConstructorInfo con, byte[] binaryAttribute)
    content.vb: Public Sub SetCustomAttribute(con As ConstructorInfo, binaryAttribute As Byte())
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: The constructor for the custom attribute.
    - id: binaryAttribute
      type: System.Byte[]
      description: A byte blob representing the attributes.
  exceptions:
  - type: System.ArgumentNullException
    description: '*con* or *binaryAttribute* is null.'
- uid: System.Reflection.Emit.EnumBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.EnumBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/EnumBuilder.cs
    startLine: 324
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Sets a custom attribute using a custom attribute builder.
  syntax:
    content: public void SetCustomAttribute(CustomAttributeBuilder customBuilder)
    content.vb: Public Sub SetCustomAttribute(customBuilder As CustomAttributeBuilder)
    parameters:
    - id: customBuilder
      type: System.Reflection.Emit.CustomAttributeBuilder
      description: An instance of a helper class to define the custom attribute.
  exceptions:
  - type: System.ArgumentNullException
    description: '*con* is null.'
- uid: System.Reflection.Emit.EnumBuilder.Attributes
  id: Attributes
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: Attributes
  fullName: System.Reflection.Emit.EnumBuilder.Attributes
  type: Property
  source:
    remote: &o1
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 48
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override TypeAttributes Attributes { get; }
    content.vb: Public Overrides ReadOnly Property Attributes As TypeAttributes
    parameters: []
    return:
      type: System.Reflection.TypeAttributes
- uid: System.Reflection.Emit.EnumBuilder.Assembly
  id: Assembly
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: Assembly
  fullName: System.Reflection.Emit.EnumBuilder.Assembly
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/EnumBuilder.cs
    startLine: 106
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Retrieves the dynamic assembly that contains this enum definition.
  syntax:
    content: public override Assembly Assembly { get; }
    content.vb: Public Overrides ReadOnly Property Assembly As Assembly
    parameters: []
    return:
      type: Assembly
      description: Read-only. The dynamic assembly that contains this enum definition.
- uid: System.Reflection.Emit.EnumBuilder.BaseType
  id: BaseType
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: BaseType
  fullName: System.Reflection.Emit.EnumBuilder.BaseType
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/EnumBuilder.cs
    startLine: 128
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the parent @'System.Type' of this type which is always @'System.Enum'.
  syntax:
    content: public override Type BaseType { get; }
    content.vb: Public Overrides ReadOnly Property BaseType As Type
    parameters: []
    return:
      type: Type
      description: Read-only. The parent @'System.Type' of this type.
- uid: System.Reflection.Emit.EnumBuilder.Module
  id: Module
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: Module
  fullName: System.Reflection.Emit.EnumBuilder.Module
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/EnumBuilder.cs
    startLine: 102
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Retrieves the dynamic module that contains this @'System.Reflection.Emit.EnumBuilder' definition.
  syntax:
    content: public override Module Module { get; }
    content.vb: Public Overrides ReadOnly Property Module As
    parameters: []
    return:
      type: Module
      description: Read-only. The dynamic module that contains this @'System.Reflection.Emit.EnumBuilder' definition.
- uid: System.Reflection.Emit.EnumBuilder.GetArrayRank
  id: GetArrayRank
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: GetArrayRank()
  fullName: System.Reflection.Emit.EnumBuilder.GetArrayRank()
  type: Method
  source:
    remote: *o1
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 53
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override int GetArrayRank()
    content.vb: Public Overrides Function GetArrayRank As Integer
    return:
      type: System.Int32
- uid: System.Reflection.Emit.EnumBuilder.GetElementType
  id: GetElementType
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: GetElementType()
  fullName: System.Reflection.Emit.EnumBuilder.GetElementType()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/EnumBuilder.cs
    startLine: 273
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Calling this method always throws @'System.NotSupportedException'.
  syntax:
    content: public override Type GetElementType()
    content.vb: Public Overrides Function GetElementType As Type
    return:
      type: Type
      description: This method is not supported. No value is returned.
  exceptions:
  - type: System.NotSupportedException
    description: This method is not currently supported.
- uid: System.Reflection.Emit.EnumBuilder.GetGenericParameterConstraints
  id: GetGenericParameterConstraints
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: GetGenericParameterConstraints()
  fullName: System.Reflection.Emit.EnumBuilder.GetGenericParameterConstraints()
  type: Method
  source:
    remote: *o1
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 55
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type[] GetGenericParameterConstraints()
    content.vb: Public Overrides Function GetGenericParameterConstraints As Type()
    return:
      type: System.Type[]
- uid: System.Reflection.Emit.EnumBuilder.GenericTypeArguments
  id: GenericTypeArguments
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: GenericTypeArguments
  fullName: System.Reflection.Emit.EnumBuilder.GenericTypeArguments
  type: Property
  source:
    remote: *o1
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 56
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type[] GenericTypeArguments { get; }
    content.vb: Public Overrides ReadOnly Property GenericTypeArguments As Type()
    parameters: []
    return:
      type: System.Type[]
- uid: System.Reflection.Emit.EnumBuilder.GetGenericTypeDefinition
  id: GetGenericTypeDefinition
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: GetGenericTypeDefinition()
  fullName: System.Reflection.Emit.EnumBuilder.GetGenericTypeDefinition()
  type: Method
  source:
    remote: *o1
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 57
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type GetGenericTypeDefinition()
    content.vb: Public Overrides Function GetGenericTypeDefinition As Type
    return:
      type: Type
- uid: System.Reflection.Emit.EnumBuilder.ContainsGenericParameters
  id: ContainsGenericParameters
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: ContainsGenericParameters
  fullName: System.Reflection.Emit.EnumBuilder.ContainsGenericParameters
  type: Property
  source:
    remote: *o1
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 58
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool ContainsGenericParameters { get; }
    content.vb: Public Overrides ReadOnly Property ContainsGenericParameters As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Reflection.Emit.EnumBuilder.DeclaringMethod
  id: DeclaringMethod
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: DeclaringMethod
  fullName: System.Reflection.Emit.EnumBuilder.DeclaringMethod
  type: Property
  source:
    remote: *o1
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 59
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override MethodBase DeclaringMethod { get; }
    content.vb: Public Overrides ReadOnly Property DeclaringMethod As MethodBase
    parameters: []
    return:
      type: MethodBase
- uid: System.Reflection.Emit.EnumBuilder.GenericParameterAttributes
  id: GenericParameterAttributes
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: GenericParameterAttributes
  fullName: System.Reflection.Emit.EnumBuilder.GenericParameterAttributes
  type: Property
  source:
    remote: *o1
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 60
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override GenericParameterAttributes GenericParameterAttributes { get; }
    content.vb: Public Overrides ReadOnly Property GenericParameterAttributes As GenericParameterAttributes
    parameters: []
    return:
      type: GenericParameterAttributes
- uid: System.Reflection.Emit.EnumBuilder.GenericParameterPosition
  id: GenericParameterPosition
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: GenericParameterPosition
  fullName: System.Reflection.Emit.EnumBuilder.GenericParameterPosition
  type: Property
  source:
    remote: *o1
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 61
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override int GenericParameterPosition { get; }
    content.vb: Public Overrides ReadOnly Property GenericParameterPosition As Integer
    parameters: []
    return:
      type: System.Int32
- uid: System.Reflection.Emit.EnumBuilder.GUID
  id: GUID
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: GUID
  fullName: System.Reflection.Emit.EnumBuilder.GUID
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/EnumBuilder.cs
    startLine: 83
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the GUID of this enum.
  syntax:
    content: public override Guid GUID { get; }
    content.vb: Public Overrides ReadOnly Property GUID As Guid
    parameters: []
    return:
      type: Guid
      description: Read-only. The GUID of this enum.
  exceptions:
  - type: System.NotSupportedException
    description: This method is not currently supported in types that are not complete.
- uid: System.Reflection.Emit.EnumBuilder.IsEnum
  id: IsEnum
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: IsEnum
  fullName: System.Reflection.Emit.EnumBuilder.IsEnum
  type: Property
  source:
    remote: *o1
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 63
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsEnum { get; }
    content.vb: Public Overrides ReadOnly Property IsEnum As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Reflection.Emit.EnumBuilder.IsGenericParameter
  id: IsGenericParameter
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: IsGenericParameter
  fullName: System.Reflection.Emit.EnumBuilder.IsGenericParameter
  type: Property
  source:
    remote: *o1
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 64
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsGenericParameter { get; }
    content.vb: Public Overrides ReadOnly Property IsGenericParameter As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Reflection.Emit.EnumBuilder.IsGenericType
  id: IsGenericType
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: IsGenericType
  fullName: System.Reflection.Emit.EnumBuilder.IsGenericType
  type: Property
  source:
    remote: *o1
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 65
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsGenericType { get; }
    content.vb: Public Overrides ReadOnly Property IsGenericType As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Reflection.Emit.EnumBuilder.IsGenericTypeDefinition
  id: IsGenericTypeDefinition
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: IsGenericTypeDefinition
  fullName: System.Reflection.Emit.EnumBuilder.IsGenericTypeDefinition
  type: Property
  source:
    remote: *o1
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 66
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsGenericTypeDefinition { get; }
    content.vb: Public Overrides ReadOnly Property IsGenericTypeDefinition As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Reflection.Emit.EnumBuilder.IsSerializable
  id: IsSerializable
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: IsSerializable
  fullName: System.Reflection.Emit.EnumBuilder.IsSerializable
  type: Property
  source:
    remote: *o1
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 67
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsSerializable { get; }
    content.vb: Public Overrides ReadOnly Property IsSerializable As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Reflection.Emit.EnumBuilder.Namespace
  id: Namespace
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: Namespace
  fullName: System.Reflection.Emit.EnumBuilder.Namespace
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/EnumBuilder.cs
    startLine: 124
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the namespace of this enum.
  syntax:
    content: public override string Namespace { get; }
    content.vb: Public Overrides ReadOnly Property Namespace As String
    parameters: []
    return:
      type: System.String
      description: Read-only. The namespace of this enum.
- uid: System.Reflection.Emit.EnumBuilder.MakeGenericType(System.Type[])
  id: MakeGenericType(System.Type[])
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: MakeGenericType(Type[])
  name.vb: MakeGenericType(Type())
  fullName: System.Reflection.Emit.EnumBuilder.MakeGenericType(System.Type[])
  fullName.vb: System.Reflection.Emit.EnumBuilder.MakeGenericType(System.Type())
  type: Method
  source:
    remote: *o1
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs
    startLine: 69
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type MakeGenericType(params Type[] typeArguments)
    content.vb: Public Overrides Function MakeGenericType(ParamArray typeArguments As Type()) As Type
    parameters:
    - id: typeArguments
      type: System.Type[]
    return:
      type: Type
- uid: System.Reflection.Emit.EnumBuilder.DeclaringType
  id: DeclaringType
  parent: System.Reflection.Emit.EnumBuilder
  href: System.Reflection.Emit.EnumBuilder.yml
  name: DeclaringType
  fullName: System.Reflection.Emit.EnumBuilder.DeclaringType
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/EnumBuilder.cs
    startLine: 330
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the type that declared this @'System.Reflection.Emit.EnumBuilder'.
  syntax:
    content: public override Type DeclaringType { get; }
    content.vb: Public Overrides ReadOnly Property DeclaringType As Type
    parameters: []
    return:
      type: Type
      description: Read-only. The type that declared this @'System.Reflection.Emit.EnumBuilder'.
references:
- uid: System.Reflection.Emit
  isExternal: false
  name: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
- uid: System.Reflection.Emit.FieldBuilder
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.FieldBuilder.yml
  name: FieldBuilder
  fullName: System.Reflection.Emit.FieldBuilder
- uid: System.Reflection.TypeInfo
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.TypeInfo.yml
  name: TypeInfo
  fullName: System.Reflection.TypeInfo
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: false
  href: System.Type.yml
  name: Type
  fullName: System.Type
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.Reflection.ConstructorInfo
  isExternal: false
  href: System.Reflection.ConstructorInfo.yml
  name: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Byte[]
  isExternal: false
  href: System.Byte.yml
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    href: System.Byte.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    href: System.Byte.yml
  - name: ()
    fullName: ()
- uid: System.Reflection.Emit.CustomAttributeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.CustomAttributeBuilder.yml
  name: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.TypeAttributes.yml
  name: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: Assembly
  isExternal: true
  name: Assembly
  fullName: Assembly
- uid: Type
  isExternal: true
  name: Type
  fullName: Type
- uid: Module
  isExternal: true
  name: Module
  fullName: Module
- uid: System.Type[]
  isExternal: false
  href: System.Type.yml
  name: Type[]
  name.vb: Type()
  fullName: System.Type[]
  fullName.vb: System.Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ()
    fullName: ()
- uid: MethodBase
  isExternal: true
  name: MethodBase
  fullName: MethodBase
- uid: GenericParameterAttributes
  isExternal: true
  name: GenericParameterAttributes
  fullName: GenericParameterAttributes
- uid: Guid
  isExternal: true
  name: Guid
  fullName: Guid
- uid: System.IndexOutOfRangeException
  isExternal: false
  href: System.IndexOutOfRangeException.yml
  name: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
  summary: The exception that is thrown when an attempt is made to access an element of an array or collection with an index that is outside its bounds.
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  href: System.NotSupportedException.yml
  name: NotSupportedException
  fullName: System.NotSupportedException
  summary: The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.
