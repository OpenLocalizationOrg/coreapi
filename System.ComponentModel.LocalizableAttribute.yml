items:
- uid: System.ComponentModel.LocalizableAttribute
  commentId: T:System.ComponentModel.LocalizableAttribute
  id: LocalizableAttribute
  parent: System.ComponentModel
  children:
  - System.ComponentModel.LocalizableAttribute.#ctor(System.Boolean)
  - System.ComponentModel.LocalizableAttribute.Default
  - System.ComponentModel.LocalizableAttribute.Equals(System.Object)
  - System.ComponentModel.LocalizableAttribute.GetHashCode
  - System.ComponentModel.LocalizableAttribute.IsLocalizable
  - System.ComponentModel.LocalizableAttribute.No
  - System.ComponentModel.LocalizableAttribute.Yes
  langs:
  - csharp
  - vb
  name: LocalizableAttribute
  fullName: System.ComponentModel.LocalizableAttribute
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/LocalizableAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LocalizableAttribute
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/LocalizableAttribute.cs
    startLine: 9
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Specifies whether a property should be localized. This class cannot be inherited.</p>\n"
  remarks: "\n<p>When code is generated for a component, members that are marked with the <xref href=\"System.ComponentModel.LocalizableAttribute\" data-throw-if-not-resolved=\"false\"></xref> set to <strong>true</strong> have their property values saved in resource files. You can localize these resource files without modifying the code.</p>\n<p>By default, members that have no localizable attribute or are marked with the <xref href=\"System.ComponentModel.LocalizableAttribute\" data-throw-if-not-resolved=\"false\"></xref> set to <strong>false</strong> will have their property values persisted to code, if the data type allows. Otherwise, if the main component is set to <strong>Localizable</strong>, all properties will be persisted to the resource file. The default is <strong>false</strong>.</p>\n<p>When you mark a property with the <xref href=\"System.ComponentModel.LocalizableAttribute\" data-throw-if-not-resolved=\"false\"></xref> set to <strong>true</strong>, the value of this attribute is set to the constant member <xref href=\"System.ComponentModel.LocalizableAttribute.Yes\" data-throw-if-not-resolved=\"false\"></xref>. For a property marked with the <xref href=\"System.ComponentModel.LocalizableAttribute\" data-throw-if-not-resolved=\"false\"></xref> set to <strong>false</strong>, the value is <xref href=\"System.ComponentModel.LocalizableAttribute.No\" data-throw-if-not-resolved=\"false\"></xref>. Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref href=\"System.ComponentModel.LocalizableAttribute.Yes\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.ComponentModel.LocalizableAttribute.No\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>For more information, see Extending Metadata Using Attributes.</p>\n"
  example:
  - "\n<p>The following example marks a property as needing to be localized.</p>classic localizableattribute example#1<p>The next example shows how to check the value of the <xref href=\"System.ComponentModel.LocalizableAttribute\" data-throw-if-not-resolved=\"false\"></xref> for <code>MyProperty</code>. First, the code gets a <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> with all the properties for the object. Then, the code gets <code>MyProperty</code> from the <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref>. Next, it returns the attributes for this property and saves them in the attributes variable.</p><p>Finally, the code sets <code>myAttribute</code> to the value of the <xref href=\"System.ComponentModel.LocalizableAttribute\" data-throw-if-not-resolved=\"false\"></xref> in the <xref href=\"System.ComponentModel.AttributeCollection\" data-throw-if-not-resolved=\"false\"></xref> and checks whether the property needs to be localized.</p>classic localizableattribute example#2"
  syntax:
    content: 'public sealed class LocalizableAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class LocalizableAttribute
          Inherits Attribute
  seealso:
  - type: System.Attribute
    commentId: T:System.Attribute
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.AttributeCollection
    commentId: T:System.ComponentModel.AttributeCollection
  - type: System.ComponentModel.PropertyDescriptorCollection
    commentId: T:System.ComponentModel.PropertyDescriptorCollection
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.ComponentModel.LocalizableAttribute.Default
  commentId: F:System.ComponentModel.LocalizableAttribute.Default
  id: Default
  parent: System.ComponentModel.LocalizableAttribute
  langs:
  - csharp
  - vb
  name: Default
  fullName: System.ComponentModel.LocalizableAttribute.Default
  type: Field
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/LocalizableAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Default
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/LocalizableAttribute.cs
    startLine: 53
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Specifies the default value, which is <xref href=\"System.ComponentModel.LocalizableAttribute.No\" data-throw-if-not-resolved=\"false\"></xref>. This <strong>static</strong> field is read-only.</p>\n"
  remarks: "\n<p>When you mark a property with this value, this attribute is set to the constant member <xref href=\"System.ComponentModel.LocalizableAttribute.No\" data-throw-if-not-resolved=\"false\"></xref>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref href=\"System.ComponentModel.LocalizableAttribute.No\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static readonly LocalizableAttribute Default
    content.vb: Public Shared ReadOnly Default As LocalizableAttribute
    return:
      type: System.ComponentModel.LocalizableAttribute
  seealso:
  - type: System.ComponentModel.LocalizableAttribute
    commentId: T:System.ComponentModel.LocalizableAttribute
  - type: System.ComponentModel.LocalizableAttribute.Yes
    commentId: F:System.ComponentModel.LocalizableAttribute.Yes
  - type: System.ComponentModel.LocalizableAttribute.No
    commentId: F:System.ComponentModel.LocalizableAttribute.No
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ComponentModel.LocalizableAttribute.No
  commentId: F:System.ComponentModel.LocalizableAttribute.No
  id: No
  parent: System.ComponentModel.LocalizableAttribute
  langs:
  - csharp
  - vb
  name: No
  fullName: System.ComponentModel.LocalizableAttribute.No
  type: Field
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/LocalizableAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: No
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/LocalizableAttribute.cs
    startLine: 44
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Specifies that a property should not be localized. This <strong>static</strong> field is read-only.</p>\n"
  remarks: "\n<p>This field is the default setting for this attribute.</p>\n<p>When you mark a property with the <xref href=\"System.ComponentModel.LocalizableAttribute\" data-throw-if-not-resolved=\"false\"></xref> set to <strong>false</strong>, the value of this attribute is set to the constant member <xref href=\"System.ComponentModel.LocalizableAttribute.No\" data-throw-if-not-resolved=\"false\"></xref>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref href=\"System.ComponentModel.LocalizableAttribute.No\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static readonly LocalizableAttribute No
    content.vb: Public Shared ReadOnly No As LocalizableAttribute
    return:
      type: System.ComponentModel.LocalizableAttribute
  seealso:
  - type: System.ComponentModel.LocalizableAttribute
    commentId: T:System.ComponentModel.LocalizableAttribute
  - type: System.ComponentModel.LocalizableAttribute.Yes
    commentId: F:System.ComponentModel.LocalizableAttribute.Yes
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ComponentModel.LocalizableAttribute.Yes
  commentId: F:System.ComponentModel.LocalizableAttribute.Yes
  id: Yes
  parent: System.ComponentModel.LocalizableAttribute
  langs:
  - csharp
  - vb
  name: Yes
  fullName: System.ComponentModel.LocalizableAttribute.Yes
  type: Field
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/LocalizableAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Yes
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/LocalizableAttribute.cs
    startLine: 36
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Specifies that a property should be localized. This <strong>static</strong> field is read-only.</p>\n"
  remarks: "\n<p>When you mark a property with the <xref href=\"System.ComponentModel.LocalizableAttribute\" data-throw-if-not-resolved=\"false\"></xref> set to <strong>true</strong>, the value of this attribute is set to the constant member <xref href=\"System.ComponentModel.LocalizableAttribute.Yes\" data-throw-if-not-resolved=\"false\"></xref>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref href=\"System.ComponentModel.LocalizableAttribute.Yes\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static readonly LocalizableAttribute Yes
    content.vb: Public Shared ReadOnly Yes As LocalizableAttribute
    return:
      type: System.ComponentModel.LocalizableAttribute
  seealso:
  - type: System.ComponentModel.LocalizableAttribute
    commentId: T:System.ComponentModel.LocalizableAttribute
  - type: System.ComponentModel.LocalizableAttribute.No
    commentId: F:System.ComponentModel.LocalizableAttribute.No
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ComponentModel.LocalizableAttribute.#ctor(System.Boolean)
  commentId: M:System.ComponentModel.LocalizableAttribute.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ComponentModel.LocalizableAttribute
  langs:
  - csharp
  - vb
  name: LocalizableAttribute(Boolean)
  fullName: System.ComponentModel.LocalizableAttribute.LocalizableAttribute(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/LocalizableAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/LocalizableAttribute.cs
    startLine: 17
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.LocalizableAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example:
  - "\n<p>The following example marks a property as needing to be localized. This code creates a new <xref href=\"System.ComponentModel.LocalizableAttribute\" data-throw-if-not-resolved=\"false\"></xref>, sets its value to <xref href=\"System.ComponentModel.LocalizableAttribute.Yes\" data-throw-if-not-resolved=\"false\"></xref>, and binds it to the property.</p>Classic LocalizableAttribute.LocalizableAttribute Example#1"
  syntax:
    content: public LocalizableAttribute(bool isLocalizable)
    content.vb: Public Sub New(isLocalizable As Boolean)
    parameters:
    - id: isLocalizable
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if a property should be localized; otherwise, <strong>false</strong>. </p>\n"
  seealso:
  - type: System.ComponentModel.LocalizableAttribute
    commentId: T:System.ComponentModel.LocalizableAttribute
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.LocalizableAttribute.IsLocalizable
  commentId: P:System.ComponentModel.LocalizableAttribute.IsLocalizable
  id: IsLocalizable
  parent: System.ComponentModel.LocalizableAttribute
  langs:
  - csharp
  - vb
  name: IsLocalizable
  fullName: System.ComponentModel.LocalizableAttribute.IsLocalizable
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/LocalizableAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsLocalizable
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/LocalizableAttribute.cs
    startLine: 28
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Gets a value indicating whether a property should be localized.</p>\n"
  example:
  - "\n<p>The following example shows how to check the value of the <xref href=\"System.ComponentModel.LocalizableAttribute\" data-throw-if-not-resolved=\"false\"></xref> for <code>MyProperty</code>. First, the code gets a <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> with all the properties for the object. Then, the code gets <code>MyProperty</code> from the <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref>. Next, it returns the attributes for this property and saves them in the attributes variable.</p>\n<p>Finally, the code sets <code>myAttribute</code> to the value of the <xref href=\"System.ComponentModel.LocalizableAttribute\" data-throw-if-not-resolved=\"false\"></xref> in the <xref href=\"System.ComponentModel.AttributeCollection\" data-throw-if-not-resolved=\"false\"></xref> and checks whether the property needs to be localized.</p>Classic LocalizableAttribute.IsLocalizable Example#1"
  syntax:
    content: public bool IsLocalizable { get; }
    content.vb: Public ReadOnly Property IsLocalizable As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if a property should be localized; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.ComponentModel.LocalizableAttribute
    commentId: T:System.ComponentModel.LocalizableAttribute
  - type: System.Attribute
    commentId: T:System.Attribute
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.AttributeCollection
    commentId: T:System.ComponentModel.AttributeCollection
  - type: System.ComponentModel.PropertyDescriptorCollection
    commentId: T:System.ComponentModel.PropertyDescriptorCollection
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.LocalizableAttribute.Equals(System.Object)
  commentId: M:System.ComponentModel.LocalizableAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.LocalizableAttribute
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.ComponentModel.LocalizableAttribute.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/LocalizableAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/LocalizableAttribute.cs
    startLine: 55
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Returns whether the value of the given object is equal to the current <xref href=\"System.ComponentModel.LocalizableAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>The object to test the value equality of. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the value of the given object is equal to that of the current; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.LocalizableAttribute.GetHashCode
  commentId: M:System.ComponentModel.LocalizableAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.LocalizableAttribute
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.ComponentModel.LocalizableAttribute.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/LocalizableAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/LocalizableAttribute.cs
    startLine: 66
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Returns the hash code for this instance.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>A hash code for the current <xref href=\"System.ComponentModel.LocalizableAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.ComponentModel.LocalizableAttribute
  parent: System.ComponentModel
  isExternal: false
  name: LocalizableAttribute
  fullName: System.ComponentModel.LocalizableAttribute
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
