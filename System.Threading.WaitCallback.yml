items:
- uid: System.Threading.WaitCallback
  commentId: T:System.Threading.WaitCallback
  id: WaitCallback
  parent: System.Threading
  children: []
  langs:
  - csharp
  - vb
  name: WaitCallback
  fullName: System.Threading.WaitCallback
  type: Delegate
  source:
    remote:
      path: src/mscorlib/src/System/Threading/ThreadPool.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WaitCallback
    path: src/mscorlib/src/System/Threading/ThreadPool.cs
    startLine: 1130
  assemblies:
  - System.Threading.ThreadPool
  namespace: System.Threading
  summary: "\n<p>Represents a callback method to be executed by a thread pool thread.</p>\n"
  example:
  - "\n<p>This section contains two examples. The first example demonstrates how you can queue a simple task for execution by the thread pool. </p>\n<p>The second example demonstrates how you can queue a task and pass information to it. </p>\n<p>Example 1</p>\n<p>This example shows how to use the <xref href=\"System.Threading.WaitCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate to queue a task for execution by the thread pool. The code example uses the <xref href=\"System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)\" data-throw-if-not-resolved=\"false\"></xref> method overload to queue a task, which is represented by a <xref href=\"System.Threading.WaitCallback\" data-throw-if-not-resolved=\"false\"></xref> that wraps the <code>ThreadProc</code> method, to execute when a thread becomes available. No task information is supplied with this overload. Therefore, the information that is available to the <code>ThreadProc</code> method is limited to the object the method belongs to.</p>System.Threading.ThreadPool QueueUserWorkItem0#1<p>Example 2</p><p>This example shows how to create an object that contains task information. It also demonstrates how to pass that object to a task that is queued for execution by the thread pool.</p>System.Threading.ThreadPool QueueUserWorkItem1#1"
  syntax:
    content: >-
      [ComVisible(true)]

      public delegate void WaitCallback(object state);
    content.vb: >-
      <ComVisible(True)>

      Public Delegate Sub WaitCallback(state As Object)
    parameters:
    - id: state
      type: System.Object
      description: "\n<p>An object containing information to be used by the callback method. </p>\n"
  seealso:
  - type: System.Threading.ThreadPool
    commentId: T:System.Threading.ThreadPool
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
  nameWithType: WaitCallback
  extensionMethods:
  - System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
references:
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
  nameWithType: System.Threading
  commentId: N:System.Threading
- uid: System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  parent: System.Reflection.RuntimeReflectionExtensions
  definition: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  name: GetMethodInfo()
  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo()
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
    name: GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
    name: GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetMethodInfo()
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  isExternal: true
  name: GetMethodInfo(Delegate)
  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
    name: GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    fullName: (
  - uid: System.Delegate
    name: Delegate
    fullName: System.Delegate
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
    name: GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    fullName: (
  - uid: System.Delegate
    name: Delegate
    fullName: System.Delegate
    isExternal: true
  - name: )
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
- uid: System.Reflection.RuntimeReflectionExtensions
  parent: System.Reflection
  isExternal: false
  name: RuntimeReflectionExtensions
  fullName: System.Reflection.RuntimeReflectionExtensions
  nameWithType: RuntimeReflectionExtensions
  commentId: T:System.Reflection.RuntimeReflectionExtensions
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
  nameWithType: System.Reflection
  commentId: N:System.Reflection
