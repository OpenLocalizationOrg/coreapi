items:
- uid: System.Xml.XPath.XPathNodeIterator
  commentId: T:System.Xml.XPath.XPathNodeIterator
  id: XPathNodeIterator
  parent: System.Xml.XPath
  children:
  - System.Xml.XPath.XPathNodeIterator.#ctor
  - System.Xml.XPath.XPathNodeIterator.Clone
  - System.Xml.XPath.XPathNodeIterator.Count
  - System.Xml.XPath.XPathNodeIterator.Current
  - System.Xml.XPath.XPathNodeIterator.CurrentPosition
  - System.Xml.XPath.XPathNodeIterator.GetEnumerator
  - System.Xml.XPath.XPathNodeIterator.MoveNext
  langs:
  - csharp
  - vb
  name: XPathNodeIterator
  nameWithType: XPathNodeIterator
  fullName: System.Xml.XPath.XPathNodeIterator
  type: Class
  source:
    remote:
      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XPathNodeIterator
    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs
    startLine: 205
  assemblies:
  - System.Xml.XPath
  namespace: System.Xml.XPath
  summary: "\n<p>Provides an iterator over a selected set of nodes.</p>\n"
  remarks: "\n<p>An <xref href=\"System.Xml.XPath.XPathNodeIterator\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> class is not positioned on the first node in a selected set of nodes. A call to the <xref href=\"System.Xml.XPath.XPathNodeIterator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> method of the <xref href=\"System.Xml.XPath.XPathNodeIterator\" data-throw-if-not-resolved=\"false\"></xref> class must be made to position the <xref href=\"System.Xml.XPath.XPathNodeIterator\" data-throw-if-not-resolved=\"false\"></xref> object on the first node in the selected set of nodes.</p>\n<p>When using the <xref href=\"System.Xml.XPath.XPathNodeIterator\" data-throw-if-not-resolved=\"false\"></xref>, if you edit the current node or any of its ancestors, your current position is lost. If you want to edit a number of nodes that you have selected, create a <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> array, copy all of the nodes from the <xref href=\"System.Xml.XPath.XPathNodeIterator\" data-throw-if-not-resolved=\"false\"></xref> into the array, then iterate through the array and modify the nodes.</p>\n<p>There are two ways to iterate over an <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> collection by using the <xref href=\"System.Xml.XPath.XPathNodeIterator\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>One way is to use the <xref href=\"System.Xml.XPath.XPathNodeIterator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> method and then call <xref href=\"System.Xml.XPath.XPathNodeIterator.Current\" data-throw-if-not-resolved=\"false\"></xref> to get the current <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> instance, as in the following example:</p>XPathNavigatorMethods#55<p>Another way is to use a <strong>foreach</strong> loop to call the <xref href=\"System.Xml.XPath.XPathNodeIterator.GetEnumerator\" data-throw-if-not-resolved=\"false\"></xref> method and use the returned <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> interface to enumerate the nodes, as in the following example:</p>XPathNavigatorMethods#56<p>You should either use <xref href=\"System.Xml.XPath.XPathNodeIterator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Xml.XPath.XPathNodeIterator.Current\" data-throw-if-not-resolved=\"false\"></xref> or use <xref href=\"System.Xml.XPath.XPathNodeIterator.GetEnumerator\" data-throw-if-not-resolved=\"false\"></xref>. Combining these two approaches can cause unexpected results. For example, if the <xref href=\"System.Xml.XPath.XPathNodeIterator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> method is called first, and then the <xref href=\"System.Xml.XPath.XPathNodeIterator.GetEnumerator\" data-throw-if-not-resolved=\"false\"></xref> method is called in the <strong>foreach</strong> loop, the <strong>foreach</strong> loop will not start enumerating the results from the beginning of the collection, but from the position after the <xref href=\"System.Xml.XPath.XPathNodeIterator.Current\" data-throw-if-not-resolved=\"false\"></xref> method.</p>"
  syntax:
    content: 'public abstract class XPathNodeIterator : IEnumerable'
    content.vb: >-
      Public MustInherit Class XPathNodeIterator
          Implements IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable
  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel
  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1
  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Xml.XPath.XPathNodeIterator.#ctor
  commentId: M:System.Xml.XPath.XPathNodeIterator.#ctor
  id: '#ctor'
  parent: System.Xml.XPath.XPathNodeIterator
  langs:
  - csharp
  - vb
  name: XPathNodeIterator()
  nameWithType: XPathNodeIterator.XPathNodeIterator()
  fullName: System.Xml.XPath.XPathNodeIterator.XPathNodeIterator()
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs
    startLine: 207
  assemblies:
  - System.Xml.XPath
  namespace: System.Xml.XPath
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.XPath.XPathNodeIterator\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>This constructor is called by derived class constructors to initialize state in this type.</p>\n"
  syntax:
    content: protected XPathNodeIterator()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.XPath.XPathNodeIterator.Count
  commentId: P:System.Xml.XPath.XPathNodeIterator.Count
  id: Count
  parent: System.Xml.XPath.XPathNodeIterator
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: XPathNodeIterator.Count
  fullName: System.Xml.XPath.XPathNodeIterator.Count
  type: Property
  source:
    remote:
      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs
    startLine: 208
  assemblies:
  - System.Xml.XPath
  namespace: System.Xml.XPath
  summary: "\n<p>Gets the index of the last node in the selected set of nodes.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Xml.XPath.XPathNodeIterator.Count\" data-throw-if-not-resolved=\"false\"></xref> property does not affect the position of the <xref href=\"System.Xml.XPath.XPathNodeIterator\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual int Count { get; }
    content.vb: Public Overridable ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The index of the last node in the selected set of nodes, or 0 if there are no selected nodes.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XPath.XPathNodeIterator.Current
  commentId: P:System.Xml.XPath.XPathNodeIterator.Current
  id: Current
  parent: System.Xml.XPath.XPathNodeIterator
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: XPathNodeIterator.Current
  fullName: System.Xml.XPath.XPathNodeIterator.Current
  type: Property
  source:
    remote:
      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Current
    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs
    startLine: 209
  assemblies:
  - System.Xml.XPath
  namespace: System.Xml.XPath
  summary: "\n<p>When overridden in a derived class, gets the <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> object for this <xref href=\"System.Xml.XPath.XPathNodeIterator\" data-throw-if-not-resolved=\"false\"></xref>, positioned on the current context node.</p>\n"
  remarks: "\n<p>You can use the properties of the returned <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> object to obtain information on the current node. However, the returned <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> object should not be modified. The returned <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> object cannot be moved away from the selected node set.</p>\n<p>Alternatively, you can clone the <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> object using the <xref href=\"System.Xml.XPath.XPathNavigator.Clone\" data-throw-if-not-resolved=\"false\"></xref> method of the <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> class. The cloned <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> object can then be moved away from the selected node set. This method of cloning the <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> object might affect the performance of the XPath query.</p>\n<p>If the <see cref=\"Overload:System.Xml.XPath.XPathNavigator.SelectAncestors\"></see>, <see cref=\"Overload:System.Xml.XPath.XPathNavigator.SelectDescendants\"></see>, and <see cref=\"Overload:System.Xml.XPath.XPathNavigator.SelectChildren\"></see> methods result in no nodes being selected, the <xref href=\"System.Xml.XPath.XPathNodeIterator.Current\" data-throw-if-not-resolved=\"false\"></xref> property might not be pointing to the context node.</p>\n<p>To test whether nodes have been selected, use the <xref href=\"System.Xml.XPath.XPathNodeIterator.Count\" data-throw-if-not-resolved=\"false\"></xref> property as shown in the following example.</p>\n"
  syntax:
    content: public abstract XPathNavigator Current { get; }
    content.vb: Public MustOverride ReadOnly Property Current As XPathNavigator
    parameters: []
    return:
      type: System.Xml.XPath.XPathNavigator
      description: "\n<p>An <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> object positioned on the context node from which the node set was selected. The <xref href=\"System.Xml.XPath.XPathNodeIterator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> method must be called to move the <xref href=\"System.Xml.XPath.XPathNodeIterator\" data-throw-if-not-resolved=\"false\"></xref> to the first node in the selected set.</p>\n"
  seealso:
  - type: System.Xml.XPath.XPathNodeIterator.MoveNext
    commentId: M:System.Xml.XPath.XPathNodeIterator.MoveNext
  - type: System.Xml.XPath.XPathNavigator.Clone
    commentId: M:System.Xml.XPath.XPathNavigator.Clone
  - type: System.Xml.XPath.XPathNodeIterator.Count
    commentId: P:System.Xml.XPath.XPathNodeIterator.Count
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Xml.XPath.XPathNodeIterator.CurrentPosition
  commentId: P:System.Xml.XPath.XPathNodeIterator.CurrentPosition
  id: CurrentPosition
  parent: System.Xml.XPath.XPathNodeIterator
  langs:
  - csharp
  - vb
  name: CurrentPosition
  nameWithType: XPathNodeIterator.CurrentPosition
  fullName: System.Xml.XPath.XPathNodeIterator.CurrentPosition
  type: Property
  source:
    remote:
      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CurrentPosition
    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs
    startLine: 210
  assemblies:
  - System.Xml.XPath
  namespace: System.Xml.XPath
  summary: "\n<p>When overridden in a derived class, gets the index of the current position in the selected set of nodes.</p>\n"
  remarks: "\n<p>The index is 1-based. Therefore, the first node has an index of 1. An index of 0 indicates there are no selected nodes. This property always returns a positive integer.</p>\n"
  syntax:
    content: public abstract int CurrentPosition { get; }
    content.vb: Public MustOverride ReadOnly Property CurrentPosition As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The index of the current position.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Xml.XPath.XPathNodeIterator.Clone
  commentId: M:System.Xml.XPath.XPathNodeIterator.Clone
  id: Clone
  parent: System.Xml.XPath.XPathNodeIterator
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: XPathNodeIterator.Clone()
  fullName: System.Xml.XPath.XPathNodeIterator.Clone()
  type: Method
  source:
    remote:
      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clone
    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs
    startLine: 211
  assemblies:
  - System.Xml.XPath
  namespace: System.Xml.XPath
  summary: "\n<p>When overridden in a derived class, returns a clone of this <xref href=\"System.Xml.XPath.XPathNodeIterator\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The cloned <xref href=\"System.Xml.XPath.XPathNodeIterator\" data-throw-if-not-resolved=\"false\"></xref> object is positioned at the same node in the node set if calls have been made to the <xref href=\"System.Xml.XPath.XPathNodeIterator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> method. The cloned <xref href=\"System.Xml.XPath.XPathNodeIterator\" data-throw-if-not-resolved=\"false\"></xref> object is not affected by subsequent changes to this <xref href=\"System.Xml.XPath.XPathNodeIterator\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public abstract XPathNodeIterator Clone()
    content.vb: Public MustOverride Function Clone As XPathNodeIterator
    return:
      type: System.Xml.XPath.XPathNodeIterator
      description: "\n<p>A new <xref href=\"System.Xml.XPath.XPathNodeIterator\" data-throw-if-not-resolved=\"false\"></xref> object clone of this <xref href=\"System.Xml.XPath.XPathNodeIterator\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  seealso:
  - type: System.Xml.XPath.XPathNodeIterator.MoveNext
    commentId: M:System.Xml.XPath.XPathNodeIterator.MoveNext
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Xml.XPath.XPathNodeIterator.GetEnumerator
  commentId: M:System.Xml.XPath.XPathNodeIterator.GetEnumerator
  id: GetEnumerator
  parent: System.Xml.XPath.XPathNodeIterator
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: XPathNodeIterator.GetEnumerator()
  fullName: System.Xml.XPath.XPathNodeIterator.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs
    startLine: 212
  assemblies:
  - System.Xml.XPath
  namespace: System.Xml.XPath
  summary: "\n<p>Returns an <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> object to iterate through the selected node set.</p>\n"
  remarks: "\n<p>The enumerator is positioned on the current position of the <xref href=\"System.Xml.XPath.XPathNodeIterator\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n<p>There are two ways to iterate over an <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> collection by using the <xref href=\"System.Xml.XPath.XPathNodeIterator\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>One way is to use the <xref href=\"System.Xml.XPath.XPathNodeIterator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> method and then call <xref href=\"System.Xml.XPath.XPathNodeIterator.Current\" data-throw-if-not-resolved=\"false\"></xref> to get the current <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> instance, as in the following example:</p>XPathNavigatorMethods#55<p>Another way is to use a <strong>foreach</strong> loop to call the <xref href=\"System.Xml.XPath.XPathNodeIterator.GetEnumerator\" data-throw-if-not-resolved=\"false\"></xref> method and use the returned <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> interface to enumerate the nodes, as in the following example:</p>XPathNavigatorMethods#56<p>You should either use the <xref href=\"System.Xml.XPath.XPathNodeIterator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> method and <xref href=\"System.Xml.XPath.XPathNodeIterator.Current\" data-throw-if-not-resolved=\"false\"></xref> or use the <xref href=\"System.Xml.XPath.XPathNodeIterator.GetEnumerator\" data-throw-if-not-resolved=\"false\"></xref> method. Combining these two approaches can cause unexpected results. For example, if the <xref href=\"System.Xml.XPath.XPathNodeIterator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> method is called first, and then the <xref href=\"System.Xml.XPath.XPathNodeIterator.GetEnumerator\" data-throw-if-not-resolved=\"false\"></xref> method is called in the <strong>foreach</strong> loop, the <strong>foreach</strong> loop will not start enumerating the results from the beginning of the collection, but from the position after the <xref href=\"System.Xml.XPath.XPathNodeIterator.Current\" data-throw-if-not-resolved=\"false\"></xref> method.</p>"
  syntax:
    content: public virtual IEnumerator GetEnumerator()
    content.vb: Public Overridable Function GetEnumerator As IEnumerator
    return:
      type: System.Collections.IEnumerator
      description: "\n<p>An <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> object to iterate through the selected node set.</p>\n"
  seealso:
  - type: System.Collections.IEnumerator
    commentId: T:System.Collections.IEnumerator
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XPath.XPathNodeIterator.MoveNext
  commentId: M:System.Xml.XPath.XPathNodeIterator.MoveNext
  id: MoveNext
  parent: System.Xml.XPath.XPathNodeIterator
  langs:
  - csharp
  - vb
  name: MoveNext()
  nameWithType: XPathNodeIterator.MoveNext()
  fullName: System.Xml.XPath.XPathNodeIterator.MoveNext()
  type: Method
  source:
    remote:
      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MoveNext
    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs
    startLine: 213
  assemblies:
  - System.Xml.XPath
  namespace: System.Xml.XPath
  summary: "\n<p>When overridden in a derived class, moves the <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Xml.XPath.XPathNodeIterator.Current\" data-throw-if-not-resolved=\"false\"></xref> property to the next node in the selected node set.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Xml.XPath.XPathNodeIterator\" data-throw-if-not-resolved=\"false\"></xref> object is positioned on the first node in the selected node set only after the initial call to the <xref href=\"System.Xml.XPath.XPathNodeIterator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> method. The node set is created in document order. Therefore, calling the <xref href=\"System.Xml.XPath.XPathNodeIterator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> method moves to the next node in document order.</p>\n<p>There are two ways to iterate over an <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> collection by using the <xref href=\"System.Xml.XPath.XPathNodeIterator\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>One way is to use the <xref href=\"System.Xml.XPath.XPathNodeIterator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> method and then call <xref href=\"System.Xml.XPath.XPathNodeIterator.Current\" data-throw-if-not-resolved=\"false\"></xref> to get the current <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> instance, as in the following example:</p>XPathNavigatorMethods#55<p>Another way is to use a <strong>foreach</strong> loop to call the <xref href=\"System.Xml.XPath.XPathNodeIterator.GetEnumerator\" data-throw-if-not-resolved=\"false\"></xref> method and use the returned <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> interface to enumerate the nodes, as in the following example:</p>XPathNavigatorMethods#56<p>You should either use the <xref href=\"System.Xml.XPath.XPathNodeIterator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> method and <xref href=\"System.Xml.XPath.XPathNodeIterator.Current\" data-throw-if-not-resolved=\"false\"></xref> or use the <xref href=\"System.Xml.XPath.XPathNodeIterator.GetEnumerator\" data-throw-if-not-resolved=\"false\"></xref> method. Combining these two approaches can cause unexpected results. For example, if the <xref href=\"System.Xml.XPath.XPathNodeIterator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> method is called first, and then the <xref href=\"System.Xml.XPath.XPathNodeIterator.GetEnumerator\" data-throw-if-not-resolved=\"false\"></xref> method is called in the <strong>foreach</strong> loop, the <strong>foreach</strong> loop will not start enumerating the results from the beginning of the collection, but from the position after the <xref href=\"System.Xml.XPath.XPathNodeIterator.Current\" data-throw-if-not-resolved=\"false\"></xref> method.</p>"
  syntax:
    content: public abstract bool MoveNext()
    content.vb: Public MustOverride Function MoveNext As Boolean
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> object moved to the next node; <strong>false</strong> if there are no more selected nodes.</p>\n"
  seealso:
  - type: System.Xml.XPath.XPathNodeIterator.Current
    commentId: P:System.Xml.XPath.XPathNodeIterator.Current
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
  commentId: N:System.Xml.XPath
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
  commentId: T:System.Object
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable
  parent: System.Linq.Queryable
  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  name: AsQueryable()
  nameWithType: Queryable.AsQueryable()
  fullName: System.Linq.Queryable.AsQueryable()
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable
    name: AsQueryable
    nameWithType: Queryable.AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable
    name: AsQueryable
    nameWithType: Queryable.AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel
  parent: System.Linq.ParallelEnumerable
  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  name: AsParallel()
  nameWithType: ParallelEnumerable.AsParallel()
  fullName: System.Linq.ParallelEnumerable.AsParallel()
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel
    name: AsParallel
    nameWithType: ParallelEnumerable.AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel
    name: AsParallel
    nameWithType: ParallelEnumerable.AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  name: Cast<TResult>()
  nameWithType: Enumerable.Cast<TResult>()
  fullName: System.Linq.Enumerable.Cast<TResult>()
  nameWithType.vb: Enumerable.Cast(Of TResult)()
  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()
  name.vb: Cast(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Cast``1
    name: Cast<TResult>
    nameWithType: Enumerable.Cast<TResult>
    fullName: System.Linq.Enumerable.Cast<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Cast``1
    name: Cast(Of TResult)
    nameWithType: Enumerable.Cast(Of TResult)
    fullName: System.Linq.Enumerable.Cast(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  name: OfType<TResult>()
  nameWithType: Enumerable.OfType<TResult>()
  fullName: System.Linq.Enumerable.OfType<TResult>()
  nameWithType.vb: Enumerable.OfType(Of TResult)()
  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()
  name.vb: OfType(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.OfType``1
    name: OfType<TResult>
    nameWithType: Enumerable.OfType<TResult>
    fullName: System.Linq.Enumerable.OfType<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OfType``1
    name: OfType(Of TResult)
    nameWithType: Enumerable.OfType(Of TResult)
    fullName: System.Linq.Enumerable.OfType(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
- uid: System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
  commentId: N:System
- uid: System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  commentId: N:System.Collections
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  isExternal: true
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
    name: AsQueryable
    nameWithType: Queryable.AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
    name: AsQueryable
    nameWithType: Queryable.AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
- uid: System.Linq.Queryable
  parent: System.Linq
  isExternal: false
  name: Queryable
  nameWithType: Queryable
  fullName: System.Linq.Queryable
  commentId: T:System.Linq.Queryable
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  isExternal: true
  name: AsParallel(IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
    name: AsParallel
    nameWithType: ParallelEnumerable.AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
    name: AsParallel
    nameWithType: ParallelEnumerable.AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
- uid: System.Linq.ParallelEnumerable
  parent: System.Linq
  isExternal: false
  name: ParallelEnumerable
  nameWithType: ParallelEnumerable
  fullName: System.Linq.ParallelEnumerable
  commentId: T:System.Linq.ParallelEnumerable
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  isExternal: true
  name: Cast<TResult>(IEnumerable)
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)
  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)
  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)
  name.vb: Cast(Of TResult)(IEnumerable)
  spec.csharp:
  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
    name: Cast<TResult>
    nameWithType: Enumerable.Cast<TResult>
    fullName: System.Linq.Enumerable.Cast<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
    name: Cast(Of TResult)
    nameWithType: Enumerable.Cast(Of TResult)
    fullName: System.Linq.Enumerable.Cast(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
- uid: System.Linq.Enumerable
  parent: System.Linq
  isExternal: false
  name: Enumerable
  nameWithType: Enumerable
  fullName: System.Linq.Enumerable
  commentId: T:System.Linq.Enumerable
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  isExternal: true
  name: OfType<TResult>(IEnumerable)
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)
  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)
  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)
  name.vb: OfType(Of TResult)(IEnumerable)
  spec.csharp:
  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
    name: OfType<TResult>
    nameWithType: Enumerable.OfType<TResult>
    fullName: System.Linq.Enumerable.OfType<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
    name: OfType(Of TResult)
    nameWithType: Enumerable.OfType(Of TResult)
    fullName: System.Linq.Enumerable.OfType(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
- uid: System.Linq
  isExternal: false
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
  commentId: N:System.Linq
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
  commentId: T:System.Int32
- uid: System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath.XPathNodeIterator
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNodeIterator
  nameWithType: XPathNodeIterator
  fullName: System.Xml.XPath.XPathNodeIterator
  commentId: T:System.Xml.XPath.XPathNodeIterator
- uid: System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: false
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
  commentId: T:System.Boolean
