items:
- uid: System.Net.NetworkInformation.PingReply
  id: PingReply
  parent: System.Net.NetworkInformation
  children:
  - System.Net.NetworkInformation.PingReply.Address
  - System.Net.NetworkInformation.PingReply.Buffer
  - System.Net.NetworkInformation.PingReply.Options
  - System.Net.NetworkInformation.PingReply.RoundtripTime
  - System.Net.NetworkInformation.PingReply.Status
  href: System.Net.NetworkInformation.PingReply.yml
  name: PingReply
  fullName: System.Net.NetworkInformation.PingReply
  type: Class
  source:
    remote: &o0
      path: src/System.Net.Utilities/ref/System.Net.Utilities.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Net.Utilities/ref/System.Net.Utilities.cs
    startLine: 60
  assemblies:
  - System.Net.Utilities
  namespace: System.Net.NetworkInformation
  summary: Provides information about the status and data resulting from a <see cref="Overload:System.Net.NetworkInformation.Ping.Send" /> or <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> operation.
  syntax:
    content: public class PingReply
    content.vb: Public Class PingReply
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Net.NetworkInformation.PingReply.Address
  id: Address
  parent: System.Net.NetworkInformation.PingReply
  href: System.Net.NetworkInformation.PingReply.yml
  name: Address
  fullName: System.Net.NetworkInformation.PingReply.Address
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Utilities/ref/System.Net.Utilities.cs
    startLine: 63
  assemblies:
  - System.Net.Utilities
  namespace: System.Net.NetworkInformation
  summary: Gets the address of the host that sends the Internet Control Message Protocol (ICMP) echo reply.
  syntax:
    content: public IPAddress Address { get; }
    content.vb: Public ReadOnly Property Address As IPAddress
    parameters: []
    return:
      type: System.Net.IPAddress
      description: An @'System.Net.IPAddress' containing the destination for the ICMP echo message.
- uid: System.Net.NetworkInformation.PingReply.Buffer
  id: Buffer
  parent: System.Net.NetworkInformation.PingReply
  href: System.Net.NetworkInformation.PingReply.yml
  name: Buffer
  fullName: System.Net.NetworkInformation.PingReply.Buffer
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Utilities/ref/System.Net.Utilities.cs
    startLine: 64
  assemblies:
  - System.Net.Utilities
  namespace: System.Net.NetworkInformation
  summary: Gets the buffer of data received in an Internet Control Message Protocol (ICMP) echo reply message.
  syntax:
    content: public byte[] Buffer { get; }
    content.vb: Public ReadOnly Property Buffer As Byte()
    parameters: []
    return:
      type: System.Byte[]
      description: A @'System.Byte' array containing the data received in an ICMP echo reply message, or an empty array, if no reply was received.
- uid: System.Net.NetworkInformation.PingReply.Options
  id: Options
  parent: System.Net.NetworkInformation.PingReply
  href: System.Net.NetworkInformation.PingReply.yml
  name: Options
  fullName: System.Net.NetworkInformation.PingReply.Options
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Utilities/ref/System.Net.Utilities.cs
    startLine: 65
  assemblies:
  - System.Net.Utilities
  namespace: System.Net.NetworkInformation
  summary: Gets the options used to transmit the reply to an Internet Control Message Protocol (ICMP) echo request.
  syntax:
    content: public PingOptions Options { get; }
    content.vb: Public ReadOnly Property Options As PingOptions
    parameters: []
    return:
      type: System.Net.NetworkInformation.PingOptions
      description: A @'System.Net.NetworkInformation.PingOptions' object that contains the Time to Live (TTL) and the fragmentation directive used for transmitting the reply if @'System.Net.NetworkInformation.PingReply.Status' is @'System.Net.NetworkInformation.IPStatus.Success'; otherwise, null.
- uid: System.Net.NetworkInformation.PingReply.RoundtripTime
  id: RoundtripTime
  parent: System.Net.NetworkInformation.PingReply
  href: System.Net.NetworkInformation.PingReply.yml
  name: RoundtripTime
  fullName: System.Net.NetworkInformation.PingReply.RoundtripTime
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Utilities/ref/System.Net.Utilities.cs
    startLine: 66
  assemblies:
  - System.Net.Utilities
  namespace: System.Net.NetworkInformation
  summary: Gets the number of milliseconds taken to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.
  syntax:
    content: public long RoundtripTime { get; }
    content.vb: Public ReadOnly Property RoundtripTime As Long
    parameters: []
    return:
      type: System.Int64
      description: An @'System.Int64' that specifies the round trip time, in milliseconds.
- uid: System.Net.NetworkInformation.PingReply.Status
  id: Status
  parent: System.Net.NetworkInformation.PingReply
  href: System.Net.NetworkInformation.PingReply.yml
  name: Status
  fullName: System.Net.NetworkInformation.PingReply.Status
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Utilities/ref/System.Net.Utilities.cs
    startLine: 67
  assemblies:
  - System.Net.Utilities
  namespace: System.Net.NetworkInformation
  summary: Gets the status of an attempt to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.
  syntax:
    content: public IPStatus Status { get; }
    content.vb: Public ReadOnly Property Status As IPStatus
    parameters: []
    return:
      type: System.Net.NetworkInformation.IPStatus
      description: An @'System.Net.NetworkInformation.IPStatus' value indicating the result of the request.
references:
- uid: System.Net.NetworkInformation
  isExternal: false
  name: System.Net.NetworkInformation
  fullName: System.Net.NetworkInformation
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: false
  href: System.Net.IPAddress.yml
  name: IPAddress
  fullName: System.Net.IPAddress
  type: Class
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
  type: Namespace
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Net.NetworkInformation.PingOptions
  parent: System.Net.NetworkInformation
  isExternal: false
  href: System.Net.NetworkInformation.PingOptions.yml
  name: PingOptions
  fullName: System.Net.NetworkInformation.PingOptions
  type: Class
- uid: System.Int64
  parent: System
  isExternal: false
  href: System.Int64.yml
  name: Int64
  fullName: System.Int64
  type: Struct
- uid: System.Net.NetworkInformation.IPStatus
  parent: System.Net.NetworkInformation
  isExternal: false
  href: System.Net.NetworkInformation.IPStatus.yml
  name: IPStatus
  fullName: System.Net.NetworkInformation.IPStatus
  type: Enum
