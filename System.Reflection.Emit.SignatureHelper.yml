items:
- uid: System.Reflection.Emit.SignatureHelper
  id: SignatureHelper
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.SignatureHelper.AddArgument(System.Type)
  - System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Boolean)
  - System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Type[],System.Type[])
  - System.Reflection.Emit.SignatureHelper.AddArguments(System.Type[],System.Type[][],System.Type[][])
  - System.Reflection.Emit.SignatureHelper.AddSentinel
  - System.Reflection.Emit.SignatureHelper.Equals(System.Object)
  - System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(System.Reflection.Module)
  - System.Reflection.Emit.SignatureHelper.GetHashCode
  - System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper
  - System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(System.Reflection.Module)
  - System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)
  - System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)
  - System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])
  - System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  - System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])
  - System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  - System.Reflection.Emit.SignatureHelper.GetSignature
  - System.Reflection.Emit.SignatureHelper.ToString
  href: System.Reflection.Emit.SignatureHelper.yml
  name: SignatureHelper
  fullName: System.Reflection.Emit.SignatureHelper
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Reflection/Emit/SignatureHelper.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Reflection/Emit/SignatureHelper.cs
    startLine: 16
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Provides methods for building signatures.
  syntax:
    content: 'public sealed class SignatureHelper : object'
    content.vb: Public NotInheritable Class SignatureHelper Inherits Object
  inheritance:
  - System.Object
- uid: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type)
  id: AddArgument(System.Type)
  parent: System.Reflection.Emit.SignatureHelper
  href: System.Reflection.Emit.SignatureHelper.yml
  name: AddArgument(Type)
  fullName: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/SignatureHelper.cs
    startLine: 818
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Adds an argument to the signature.
  syntax:
    content: public void AddArgument(Type clsArgument)
    content.vb: Public Sub AddArgument(clsArgument As Type)
    parameters:
    - id: clsArgument
      type: System.Type
      description: The type of the argument.
  exceptions:
  - type: System.ArgumentException
    description: The signature has already been finished.
  - type: System.ArgumentNullException
    description: '*clsArgument* is null.'
- uid: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Boolean)
  id: AddArgument(System.Type,System.Boolean)
  parent: System.Reflection.Emit.SignatureHelper
  href: System.Reflection.Emit.SignatureHelper.yml
  name: AddArgument(Type, Boolean)
  fullName: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/SignatureHelper.cs
    startLine: 823
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Adds an argument of the specified type to the signature, specifying whether the argument is pinned.
  syntax:
    content: public void AddArgument(Type argument, bool pinned)
    content.vb: Public Sub AddArgument(argument As Type, pinned As Boolean)
    parameters:
    - id: argument
      type: System.Type
      description: The argument type.
    - id: pinned
      type: System.Boolean
      description: true if the argument is pinned; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*argument* is null.'
- uid: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Type[],System.Type[])
  id: AddArgument(System.Type,System.Type[],System.Type[])
  parent: System.Reflection.Emit.SignatureHelper
  href: System.Reflection.Emit.SignatureHelper.yml
  name: AddArgument(Type, Type[], Type[])
  name.vb: AddArgument(Type, Type(), Type())
  fullName: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type, System.Type[], System.Type[])
  fullName.vb: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type, System.Type(), System.Type())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/SignatureHelper.cs
    startLine: 852
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Adds an argument to the signature, with the specified custom modifiers.
  syntax:
    content: public void AddArgument(Type argument, Type[] requiredCustomModifiers, Type[] optionalCustomModifiers)
    content.vb: Public Sub AddArgument(argument As Type, requiredCustomModifiers As Type(), optionalCustomModifiers As Type())
    parameters:
    - id: argument
      type: System.Type
      description: The argument type.
    - id: requiredCustomModifiers
      type: System.Type[]
      description: An array of types representing the required custom modifiers for the argument, such as @'System.Runtime.CompilerServices.IsConst' or @'System.Runtime.CompilerServices.IsBoxed'. If the argument has no required custom modifiers, specify null.
    - id: optionalCustomModifiers
      type: System.Type[]
      description: An array of types representing the optional custom modifiers for the argument, such as @'System.Runtime.CompilerServices.IsConst' or @'System.Runtime.CompilerServices.IsBoxed'. If the argument has no optional custom modifiers, specify null.
  exceptions:
  - type: System.ArgumentNullException
    description: '*argument* is null. -or-An element of *requiredCustomModifiers* or *optionalCustomModifiers* is null.'
  - type: System.ArgumentException
    description: The signature has already been finished. -or-One of the specified custom modifiers is an array type.-or-One of the specified custom modifiers is an open generic type. That is, the @'System.Type.ContainsGenericParameters' property is true for the custom modifier.
- uid: System.Reflection.Emit.SignatureHelper.AddArguments(System.Type[],System.Type[][],System.Type[][])
  id: AddArguments(System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.SignatureHelper
  href: System.Reflection.Emit.SignatureHelper.yml
  name: AddArguments(Type[], Type[][], Type[][])
  name.vb: AddArguments(Type(), Type()(), Type()())
  fullName: System.Reflection.Emit.SignatureHelper.AddArguments(System.Type[], System.Type[][], System.Type[][])
  fullName.vb: System.Reflection.Emit.SignatureHelper.AddArguments(System.Type(), System.Type()(), System.Type()())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/SignatureHelper.cs
    startLine: 833
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Adds a set of arguments to the signature, with the specified custom modifiers.
  syntax:
    content: public void AddArguments(Type[] arguments, Type[][] requiredCustomModifiers, Type[][] optionalCustomModifiers)
    content.vb: Public Sub AddArguments(arguments As Type(), requiredCustomModifiers As Type()(), optionalCustomModifiers As Type()())
    parameters:
    - id: arguments
      type: System.Type[]
      description: The types of the arguments to be added.
    - id: requiredCustomModifiers
      type: System.Type[][]
      description: An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding argument, such as @'System.Runtime.CompilerServices.IsConst' or @'System.Runtime.CompilerServices.IsBoxed'. If a particular argument has no required custom modifiers, specify null instead of an array of types. If none of the arguments have required custom modifiers, specify null instead of an array of arrays.
    - id: optionalCustomModifiers
      type: System.Type[][]
      description: An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding argument, such as @'System.Runtime.CompilerServices.IsConst' or @'System.Runtime.CompilerServices.IsBoxed'. If a particular argument has no optional custom modifiers, specify null instead of an array of types. If none of the arguments have optional custom modifiers, specify null instead of an array of arrays.
  exceptions:
  - type: System.ArgumentNullException
    description: An element of *arguments* is null. -or-One of the specified custom modifiers is null. (However, null can be specified for the array of custom modifiers for any argument.)
  - type: System.ArgumentException
    description: The signature has already been finished. -or-One of the specified custom modifiers is an array type.-or-One of the specified custom modifiers is an open generic type. That is, the @'System.Type.ContainsGenericParameters' property is true for the custom modifier. -or-The size of *requiredCustomModifiers* or *optionalCustomModifiers* does not equal the size of *arguments*.
- uid: System.Reflection.Emit.SignatureHelper.AddSentinel
  id: AddSentinel
  parent: System.Reflection.Emit.SignatureHelper
  href: System.Reflection.Emit.SignatureHelper.yml
  name: AddSentinel()
  fullName: System.Reflection.Emit.SignatureHelper.AddSentinel()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/SignatureHelper.cs
    startLine: 870
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Marks the end of a vararg fixed part. This is only used if the caller is creating a vararg signature call site.
  syntax:
    content: public void AddSentinel()
    content.vb: Public Sub AddSentinel
- uid: System.Reflection.Emit.SignatureHelper.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Emit.SignatureHelper
  href: System.Reflection.Emit.SignatureHelper.yml
  name: Equals(Object)
  fullName: System.Reflection.Emit.SignatureHelper.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/SignatureHelper.cs
    startLine: 875
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Checks if this instance is equal to the given object.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The object with which this instance should be compared.
    return:
      type: System.Boolean
      description: true if the given object is a SignatureHelper and represents the same signature; otherwise, false.
- uid: System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(System.Reflection.Module)
  id: GetFieldSigHelper(System.Reflection.Module)
  parent: System.Reflection.Emit.SignatureHelper
  href: System.Reflection.Emit.SignatureHelper.yml
  name: GetFieldSigHelper(Module)
  fullName: System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(System.Reflection.Module)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/SignatureHelper.cs
    startLine: 152
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Returns a signature helper for a field.
  syntax:
    content: public static SignatureHelper GetFieldSigHelper(Module mod)
    content.vb: Public Shared Function GetFieldSigHelper(mod As Module) As SignatureHelper
    parameters:
    - id: mod
      type: System.Reflection.Module
      description: The dynamic module that contains the field for which the SignatureHelper is requested.
    return:
      type: System.Reflection.Emit.SignatureHelper
      description: The SignatureHelper object for a field.
- uid: System.Reflection.Emit.SignatureHelper.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Emit.SignatureHelper
  href: System.Reflection.Emit.SignatureHelper.yml
  name: GetHashCode()
  fullName: System.Reflection.Emit.SignatureHelper.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/SignatureHelper.cs
    startLine: 897
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Creates and returns a hash code for this instance.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: Returns the hash code based on the name.
- uid: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper
  id: GetLocalVarSigHelper
  parent: System.Reflection.Emit.SignatureHelper
  href: System.Reflection.Emit.SignatureHelper.yml
  name: GetLocalVarSigHelper()
  fullName: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/SignatureHelper.cs
    startLine: 132
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Returns a signature helper for a local variable.
  syntax:
    content: public static SignatureHelper GetLocalVarSigHelper()
    content.vb: Public Shared Function GetLocalVarSigHelper As SignatureHelper
    return:
      type: System.Reflection.Emit.SignatureHelper
      description: A @'System.Reflection.Emit.SignatureHelper' for a local variable.
- uid: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(System.Reflection.Module)
  id: GetLocalVarSigHelper(System.Reflection.Module)
  parent: System.Reflection.Emit.SignatureHelper
  href: System.Reflection.Emit.SignatureHelper.yml
  name: GetLocalVarSigHelper(Module)
  fullName: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(System.Reflection.Module)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/SignatureHelper.cs
    startLine: 147
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Returns a signature helper for a local variable.
  syntax:
    content: public static SignatureHelper GetLocalVarSigHelper(Module mod)
    content.vb: Public Shared Function GetLocalVarSigHelper(mod As Module) As SignatureHelper
    parameters:
    - id: mod
      type: System.Reflection.Module
      description: The dynamic module that contains the local variable for which the SignatureHelper is requested.
    return:
      type: System.Reflection.Emit.SignatureHelper
      description: The SignatureHelper object for a local variable.
- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)
  id: GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)
  parent: System.Reflection.Emit.SignatureHelper
  href: System.Reflection.Emit.SignatureHelper.yml
  name: GetMethodSigHelper(CallingConventions, Type)
  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.CallingConventions, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/SignatureHelper.cs
    startLine: 137
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Returns a signature helper for a method given the method's calling convention and return type.
  syntax:
    content: public static SignatureHelper GetMethodSigHelper(CallingConventions callingConvention, Type returnType)
    content.vb: Public Shared Function GetMethodSigHelper(callingConvention As CallingConventions, returnType As Type) As SignatureHelper
    parameters:
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: The calling convention of the method.
    - id: returnType
      type: System.Type
      description: The return type of the method, or null for a void return type (Sub procedure in Visual Basic).
    return:
      type: System.Reflection.Emit.SignatureHelper
      description: The SignatureHelper object for a method.
- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)
  id: GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)
  parent: System.Reflection.Emit.SignatureHelper
  href: System.Reflection.Emit.SignatureHelper.yml
  name: GetMethodSigHelper(Module, CallingConventions, Type)
  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module, System.Reflection.CallingConventions, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/SignatureHelper.cs
    startLine: 38
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Returns a signature helper for a method given the method's module, calling convention, and return type.
  syntax:
    content: public static SignatureHelper GetMethodSigHelper(Module mod, CallingConventions callingConvention, Type returnType)
    content.vb: Public Shared Function GetMethodSigHelper(mod As Module, callingConvention As CallingConventions, returnType As Type) As SignatureHelper
    parameters:
    - id: mod
      type: System.Reflection.Module
      description: The @'System.Reflection.Emit.ModuleBuilder' that contains the method for which the SignatureHelper is requested.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: The calling convention of the method.
    - id: returnType
      type: System.Type
      description: The return type of the method, or null for a void return type (Sub procedure in Visual Basic).
    return:
      type: System.Reflection.Emit.SignatureHelper
      description: The SignatureHelper object for a method.
  exceptions:
  - type: System.ArgumentNullException
    description: '*mod* is null.'
  - type: System.ArgumentException
    description: '*mod* is not a @''System.Reflection.Emit.ModuleBuilder''.'
- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])
  id: GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])
  parent: System.Reflection.Emit.SignatureHelper
  href: System.Reflection.Emit.SignatureHelper.yml
  name: GetMethodSigHelper(Module, Type, Type[])
  name.vb: GetMethodSigHelper(Module, Type, Type())
  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module, System.Type, System.Type[])
  fullName.vb: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module, System.Type, System.Type())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/SignatureHelper.cs
    startLine: 26
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Returns a signature helper for a method with a standard calling convention, given the method's module, return type, and argument types.
  syntax:
    content: public static SignatureHelper GetMethodSigHelper(Module mod, Type returnType, Type[] parameterTypes)
    content.vb: Public Shared Function GetMethodSigHelper(mod As Module, returnType As Type, parameterTypes As Type()) As SignatureHelper
    parameters:
    - id: mod
      type: System.Reflection.Module
      description: The @'System.Reflection.Emit.ModuleBuilder' that contains the method for which the SignatureHelper is requested.
    - id: returnType
      type: System.Type
      description: The return type of the method, or null for a void return type (Sub procedure in Visual Basic).
    - id: parameterTypes
      type: System.Type[]
      description: The types of the arguments of the method, or null if the method has no arguments.
    return:
      type: System.Reflection.Emit.SignatureHelper
      description: The SignatureHelper object for a method.
  exceptions:
  - type: System.ArgumentNullException
    description: '*mod* is null.-or-An element of *parameterTypes* is null.'
  - type: System.ArgumentException
    description: '*mod* is not a @''System.Reflection.Emit.ModuleBuilder''.'
- uid: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  id: GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.SignatureHelper
  href: System.Reflection.Emit.SignatureHelper.yml
  name: GetPropertySigHelper(Module, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])
  name.vb: GetPropertySigHelper(Module, CallingConventions, Type, Type(), Type(), Type(), Type()(), Type()())
  fullName: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module, System.Reflection.CallingConventions, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])
  fullName.vb: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module, System.Reflection.CallingConventions, System.Type, System.Type(), System.Type(), System.Type(), System.Type()(), System.Type()())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/SignatureHelper.cs
    startLine: 169
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Returns a signature helper for a property, given the dynamic module that contains the property, the calling convention, the property type, the property arguments, and custom modifiers for the return type and arguments.
  syntax:
    content: public static SignatureHelper GetPropertySigHelper(Module mod, CallingConventions callingConvention, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers)
    content.vb: Public Shared Function GetPropertySigHelper(mod As Module, callingConvention As CallingConventions, returnType As Type, requiredReturnTypeCustomModifiers As Type(), optionalReturnTypeCustomModifiers As Type(), parameterTypes As Type(), requiredParameterTypeCustomModifiers As Type()(), optionalParameterTypeCustomModifiers As Type()()) As SignatureHelper
    parameters:
    - id: mod
      type: System.Reflection.Module
      description: The @'System.Reflection.Emit.ModuleBuilder' that contains the property for which the @'System.Reflection.Emit.SignatureHelper' is requested.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: The calling convention of the property accessors.
    - id: returnType
      type: System.Type
      description: The property type.
    - id: requiredReturnTypeCustomModifiers
      type: System.Type[]
      description: An array of types representing the required custom modifiers for the return type, such as @'System.Runtime.CompilerServices.IsConst' or @'System.Runtime.CompilerServices.IsBoxed'. If the return type has no required custom modifiers, specify null.
    - id: optionalReturnTypeCustomModifiers
      type: System.Type[]
      description: An array of types representing the optional custom modifiers for the return type, such as @'System.Runtime.CompilerServices.IsConst' or @'System.Runtime.CompilerServices.IsBoxed'. If the return type has no optional custom modifiers, specify null.
    - id: parameterTypes
      type: System.Type[]
      description: The types of the property's arguments, or null if the property has no arguments.
    - id: requiredParameterTypeCustomModifiers
      type: System.Type[][]
      description: An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding argument of the property. If a particular argument has no required custom modifiers, specify null instead of an array of types. If the property has no arguments, or if none of the arguments have required custom modifiers, specify null instead of an array of arrays.
    - id: optionalParameterTypeCustomModifiers
      type: System.Type[][]
      description: An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding argument of the property. If a particular argument has no optional custom modifiers, specify null instead of an array of types. If the property has no arguments, or if none of the arguments have optional custom modifiers, specify null instead of an array of arrays.
    return:
      type: System.Reflection.Emit.SignatureHelper
      description: A @'System.Reflection.Emit.SignatureHelper' object for a property.
  exceptions:
  - type: System.ArgumentNullException
    description: '*mod* is null.-or-An element of *parameterTypes* is null. -or-One of the specified custom modifiers is null. (However, null can be specified for the array of custom modifiers for any argument.)'
  - type: System.ArgumentException
    description: The signature has already been finished. -or-*mod* is not a @'System.Reflection.Emit.ModuleBuilder'.-or-One of the specified custom modifiers is an array type.-or-One of the specified custom modifiers is an open generic type. That is, the @'System.Type.ContainsGenericParameters' property is true for the custom modifier.-or-The size of *requiredParameterTypeCustomModifiers* or *optionalParameterTypeCustomModifiers* does not equal the size of *parameterTypes*.
- uid: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])
  id: GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])
  parent: System.Reflection.Emit.SignatureHelper
  href: System.Reflection.Emit.SignatureHelper.yml
  name: GetPropertySigHelper(Module, Type, Type[])
  name.vb: GetPropertySigHelper(Module, Type, Type())
  fullName: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module, System.Type, System.Type[])
  fullName.vb: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module, System.Type, System.Type())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/SignatureHelper.cs
    startLine: 157
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Returns a signature helper for a property, given the dynamic module that contains the property, the property type, and the property arguments.
  syntax:
    content: public static SignatureHelper GetPropertySigHelper(Module mod, Type returnType, Type[] parameterTypes)
    content.vb: Public Shared Function GetPropertySigHelper(mod As Module, returnType As Type, parameterTypes As Type()) As SignatureHelper
    parameters:
    - id: mod
      type: System.Reflection.Module
      description: The @'System.Reflection.Emit.ModuleBuilder' that contains the property for which the @'System.Reflection.Emit.SignatureHelper' is requested.
    - id: returnType
      type: System.Type
      description: The property type.
    - id: parameterTypes
      type: System.Type[]
      description: The argument types, or null if the property has no arguments.
    return:
      type: System.Reflection.Emit.SignatureHelper
      description: A @'System.Reflection.Emit.SignatureHelper' object for a property.
  exceptions:
  - type: System.ArgumentNullException
    description: '*mod* is null.-or-An element of *parameterTypes* is null.'
  - type: System.ArgumentException
    description: '*mod* is not a @''System.Reflection.Emit.ModuleBuilder''.'
- uid: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  id: GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.SignatureHelper
  href: System.Reflection.Emit.SignatureHelper.yml
  name: GetPropertySigHelper(Module, Type, Type[], Type[], Type[], Type[][], Type[][])
  name.vb: GetPropertySigHelper(Module, Type, Type(), Type(), Type(), Type()(), Type()())
  fullName: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])
  fullName.vb: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module, System.Type, System.Type(), System.Type(), System.Type(), System.Type()(), System.Type()())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/SignatureHelper.cs
    startLine: 162
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Returns a signature helper for a property, given the dynamic module that contains the property, the property type, the property arguments, and custom modifiers for the return type and arguments.
  syntax:
    content: public static SignatureHelper GetPropertySigHelper(Module mod, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers)
    content.vb: Public Shared Function GetPropertySigHelper(mod As Module, returnType As Type, requiredReturnTypeCustomModifiers As Type(), optionalReturnTypeCustomModifiers As Type(), parameterTypes As Type(), requiredParameterTypeCustomModifiers As Type()(), optionalParameterTypeCustomModifiers As Type()()) As SignatureHelper
    parameters:
    - id: mod
      type: System.Reflection.Module
      description: The @'System.Reflection.Emit.ModuleBuilder' that contains the property for which the @'System.Reflection.Emit.SignatureHelper' is requested.
    - id: returnType
      type: System.Type
      description: The property type.
    - id: requiredReturnTypeCustomModifiers
      type: System.Type[]
      description: An array of types representing the required custom modifiers for the return type, such as @'System.Runtime.CompilerServices.IsConst' or @'System.Runtime.CompilerServices.IsBoxed'. If the return type has no required custom modifiers, specify null.
    - id: optionalReturnTypeCustomModifiers
      type: System.Type[]
      description: An array of types representing the optional custom modifiers for the return type, such as @'System.Runtime.CompilerServices.IsConst' or @'System.Runtime.CompilerServices.IsBoxed'. If the return type has no optional custom modifiers, specify null.
    - id: parameterTypes
      type: System.Type[]
      description: The types of the property's arguments, or null if the property has no arguments.
    - id: requiredParameterTypeCustomModifiers
      type: System.Type[][]
      description: An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding argument of the property. If a particular argument has no required custom modifiers, specify null instead of an array of types. If the property has no arguments, or if none of the arguments have required custom modifiers, specify null instead of an array of arrays.
    - id: optionalParameterTypeCustomModifiers
      type: System.Type[][]
      description: An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding argument of the property. If a particular argument has no optional custom modifiers, specify null instead of an array of types. If the property has no arguments, or if none of the arguments have optional custom modifiers, specify null instead of an array of arrays.
    return:
      type: System.Reflection.Emit.SignatureHelper
      description: A @'System.Reflection.Emit.SignatureHelper' object for a property.
  exceptions:
  - type: System.ArgumentNullException
    description: '*mod* is null.-or-An element of *parameterTypes* is null. -or-One of the specified custom modifiers is null. (However, null can be specified for the array of custom modifiers for any argument.)'
  - type: System.ArgumentException
    description: The signature has already been finished. -or-*mod* is not a @'System.Reflection.Emit.ModuleBuilder'.-or-One of the specified custom modifiers is an array type.-or-One of the specified custom modifiers is an open generic type. That is, the @'System.Type.ContainsGenericParameters' property is true for the custom modifier.-or-The size of *requiredParameterTypeCustomModifiers* or *optionalParameterTypeCustomModifiers* does not equal the size of *parameterTypes*.
- uid: System.Reflection.Emit.SignatureHelper.GetSignature
  id: GetSignature
  parent: System.Reflection.Emit.SignatureHelper
  href: System.Reflection.Emit.SignatureHelper.yml
  name: GetSignature()
  fullName: System.Reflection.Emit.SignatureHelper.GetSignature()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/SignatureHelper.cs
    startLine: 913
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Adds the end token to the signature and marks the signature as finished, so no further tokens can be added.
  syntax:
    content: public byte[] GetSignature()
    content.vb: Public Function GetSignature As Byte()
    return:
      type: System.Byte[]
      description: Returns a byte array made up of the full signature.
- uid: System.Reflection.Emit.SignatureHelper.ToString
  id: ToString
  parent: System.Reflection.Emit.SignatureHelper
  href: System.Reflection.Emit.SignatureHelper.yml
  name: ToString()
  fullName: System.Reflection.Emit.SignatureHelper.ToString()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/SignatureHelper.cs
    startLine: 943
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Returns a string representing the signature arguments.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: Returns a string representing the arguments of this signature.
references:
- uid: System.Reflection.Emit
  isExternal: false
  name: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Type
  parent: System
  isExternal: false
  href: System.Type.yml
  name: Type
  fullName: System.Type
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.Type[]
  isExternal: false
  href: System.Type.yml
  name: Type[]
  name.vb: Type()
  fullName: System.Type[]
  fullName.vb: System.Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ()
    fullName: ()
- uid: System.Type[][]
  isExternal: true
  name: Type[][]
  name.vb: Type()()
  fullName: System.Type[][]
  fullName.vb: System.Type()()
  spec.csharp:
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: ()
    fullName: ()
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.Module.yml
  name: Module
  fullName: System.Reflection.Module
- uid: System.Reflection.Emit.SignatureHelper
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.SignatureHelper.yml
  name: SignatureHelper
  fullName: System.Reflection.Emit.SignatureHelper
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.CallingConventions.yml
  name: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Byte[]
  isExternal: false
  href: System.Byte.yml
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    href: System.Byte.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    href: System.Byte.yml
  - name: ()
    fullName: ()
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
