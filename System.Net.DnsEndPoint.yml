items:
- uid: System.Net.DnsEndPoint
  id: DnsEndPoint
  parent: System.Net
  children:
  - System.Net.DnsEndPoint.#ctor(System.String,System.Int32)
  - System.Net.DnsEndPoint.#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)
  - System.Net.DnsEndPoint.AddressFamily
  - System.Net.DnsEndPoint.Equals(System.Object)
  - System.Net.DnsEndPoint.GetHashCode
  - System.Net.DnsEndPoint.Host
  - System.Net.DnsEndPoint.Port
  - System.Net.DnsEndPoint.ToString
  href: System.Net.DnsEndPoint.yml
  name: DnsEndPoint
  fullName: System.Net.DnsEndPoint
  type: Class
  source:
    remote: &o0
      path: src/System.Net.Primitives/src/System/Net/DnsEndPoint.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Net.Primitives/src/System/Net/DnsEndPoint.cs
    startLine: 7
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Represents a network endpoint as a host name or a string representation of an IP address and a port number.
  syntax:
    content: 'public class DnsEndPoint : EndPoint'
    content.vb: Public Class DnsEndPoint Inherits EndPoint
  inheritance:
  - System.Object
  - System.Net.EndPoint
  inheritedMembers:
  - System.Net.EndPoint.Create(System.Net.SocketAddress)
  - System.Net.EndPoint.Serialize
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Net.DnsEndPoint.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Net.DnsEndPoint
  href: System.Net.DnsEndPoint.yml
  name: DnsEndPoint(String, Int32)
  fullName: System.Net.DnsEndPoint.DnsEndPoint(System.String, System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Net.Primitives/src/System/Net/DnsEndPoint.cs
    startLine: 13
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Initializes a new instance of the @'System.Net.DnsEndPoint' class with the host name or string representation of an IP address and a port number.
  syntax:
    content: public DnsEndPoint(string host, int port)
    content.vb: Public Sub New(host As String, port As Integer)
    parameters:
    - id: host
      type: System.String
      description: The host name or a string representation of the IP address.
    - id: port
      type: System.Int32
      description: The port number associated with the address, or 0 to specify any available port. *port* is in host order.
  exceptions:
  - type: System.ArgumentException
    description: The *host* parameter contains an empty string.
  - type: System.ArgumentNullException
    description: The *host* parameter is a null.
  - type: System.ArgumentOutOfRangeException
    description: '*port* is less than @''System.Net.IPEndPoint.MinPort''.-or- *port* is greater than @''System.Net.IPEndPoint.MaxPort''.'
- uid: System.Net.DnsEndPoint.#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)
  id: '#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)'
  parent: System.Net.DnsEndPoint
  href: System.Net.DnsEndPoint.yml
  name: DnsEndPoint(String, Int32, AddressFamily)
  fullName: System.Net.DnsEndPoint.DnsEndPoint(System.String, System.Int32, System.Net.Sockets.AddressFamily)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Net.Primitives/src/System/Net/DnsEndPoint.cs
    startLine: 15
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Initializes a new instance of the @'System.Net.DnsEndPoint' class with the host name or string representation of an IP address, a port number, and an address family.
  syntax:
    content: public DnsEndPoint(string host, int port, AddressFamily addressFamily)
    content.vb: Public Sub New(host As String, port As Integer, addressFamily As AddressFamily)
    parameters:
    - id: host
      type: System.String
      description: The host name or a string representation of the IP address.
    - id: port
      type: System.Int32
      description: The port number associated with the address, or 0 to specify any available port. *port* is in host order.
    - id: addressFamily
      type: System.Net.Sockets.AddressFamily
      description: One of the @'System.Net.Sockets.AddressFamily' values.
  exceptions:
  - type: System.ArgumentException
    description: The *host* parameter contains an empty string.-or- *addressFamily* is @'System.Net.Sockets.AddressFamily.Unknown'.
  - type: System.ArgumentNullException
    description: The *host* parameter is a null.
  - type: System.ArgumentOutOfRangeException
    description: '*port* is less than @''System.Net.IPEndPoint.MinPort''.-or- *port* is greater than @''System.Net.IPEndPoint.MaxPort''.'
- uid: System.Net.DnsEndPoint.AddressFamily
  id: AddressFamily
  parent: System.Net.DnsEndPoint
  href: System.Net.DnsEndPoint.yml
  name: AddressFamily
  fullName: System.Net.DnsEndPoint.AddressFamily
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Primitives/src/System/Net/DnsEndPoint.cs
    startLine: 76
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Gets the Internet Protocol (IP) address family.
  syntax:
    content: public override AddressFamily AddressFamily { get; }
    content.vb: Public Overrides ReadOnly Property AddressFamily As AddressFamily
    parameters: []
    return:
      type: System.Net.Sockets.AddressFamily
      description: One of the @'System.Net.Sockets.AddressFamily' values.
  overridden: System.Net.EndPoint.AddressFamily
- uid: System.Net.DnsEndPoint.Host
  id: Host
  parent: System.Net.DnsEndPoint
  href: System.Net.DnsEndPoint.yml
  name: Host
  fullName: System.Net.DnsEndPoint.Host
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Primitives/src/System/Net/DnsEndPoint.cs
    startLine: 68
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Gets the host name or string representation of the Internet Protocol (IP) address of the host.
  syntax:
    content: public string Host { get; }
    content.vb: Public ReadOnly Property Host As String
    parameters: []
    return:
      type: System.String
      description: A host name or string representation of an IP address.
- uid: System.Net.DnsEndPoint.Port
  id: Port
  parent: System.Net.DnsEndPoint
  href: System.Net.DnsEndPoint.yml
  name: Port
  fullName: System.Net.DnsEndPoint.Port
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Primitives/src/System/Net/DnsEndPoint.cs
    startLine: 84
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Gets the port number of the @'System.Net.DnsEndPoint'.
  syntax:
    content: public int Port { get; }
    content.vb: Public ReadOnly Property Port As Integer
    parameters: []
    return:
      type: System.Int32
      description: An integer value in the range 0 to 0xffff indicating the port number of the @'System.Net.DnsEndPoint'.
- uid: System.Net.DnsEndPoint.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.DnsEndPoint
  href: System.Net.DnsEndPoint.yml
  name: Equals(Object)
  fullName: System.Net.DnsEndPoint.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Primitives/src/System/Net/DnsEndPoint.cs
    startLine: 44
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Compares two @'System.Net.DnsEndPoint' objects.
  syntax:
    content: public override bool Equals(object comparand)
    content.vb: Public Overrides Function Equals(comparand As Object) As Boolean
    parameters:
    - id: comparand
      type: System.Object
      description: A @'System.Net.DnsEndPoint' instance to compare to the current instance.
    return:
      type: System.Boolean
      description: true if the two @'System.Net.DnsEndPoint' instances are equal; otherwise, false.
  overridden: System.Object.Equals(System.Object)
- uid: System.Net.DnsEndPoint.GetHashCode
  id: GetHashCode
  parent: System.Net.DnsEndPoint
  href: System.Net.DnsEndPoint.yml
  name: GetHashCode()
  fullName: System.Net.DnsEndPoint.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Primitives/src/System/Net/DnsEndPoint.cs
    startLine: 58
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Returns a hash value for a @'System.Net.DnsEndPoint'.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: An integer hash value for the @'System.Net.DnsEndPoint'.
  overridden: System.Object.GetHashCode
- uid: System.Net.DnsEndPoint.ToString
  id: ToString
  parent: System.Net.DnsEndPoint
  href: System.Net.DnsEndPoint.yml
  name: ToString()
  fullName: System.Net.DnsEndPoint.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Primitives/src/System/Net/DnsEndPoint.cs
    startLine: 63
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Returns the host name or string representation of the IP address and port number of the @'System.Net.DnsEndPoint'.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string containing the address family, host name or IP address string, and the port number of the specified @'System.Net.DnsEndPoint'.
  overridden: System.Object.ToString
references:
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Net.EndPoint
  parent: System.Net
  isExternal: false
  href: System.Net.EndPoint.yml
  name: EndPoint
  fullName: System.Net.EndPoint
  type: Class
- uid: System.Net.EndPoint.Create(System.Net.SocketAddress)
  parent: System.Net.EndPoint
  isExternal: false
  href: System.Net.EndPoint.yml
  name: Create(SocketAddress)
  fullName: System.Net.EndPoint.Create(System.Net.SocketAddress)
  spec.csharp:
  - uid: System.Net.EndPoint.Create(System.Net.SocketAddress)
    name: Create
    fullName: System.Net.EndPoint.Create
    href: System.Net.EndPoint.yml
  - name: (
    fullName: (
  - uid: System.Net.SocketAddress
    name: SocketAddress
    fullName: System.Net.SocketAddress
    href: System.Net.SocketAddress.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.EndPoint.Create(System.Net.SocketAddress)
    name: Create
    fullName: System.Net.EndPoint.Create
    href: System.Net.EndPoint.yml
  - name: (
    fullName: (
  - uid: System.Net.SocketAddress
    name: SocketAddress
    fullName: System.Net.SocketAddress
    href: System.Net.SocketAddress.yml
  - name: )
    fullName: )
- uid: System.Net.EndPoint.Serialize
  parent: System.Net.EndPoint
  isExternal: false
  href: System.Net.EndPoint.yml
  name: Serialize()
  fullName: System.Net.EndPoint.Serialize()
  spec.csharp:
  - uid: System.Net.EndPoint.Serialize
    name: Serialize
    fullName: System.Net.EndPoint.Serialize
    href: System.Net.EndPoint.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.EndPoint.Serialize
    name: Serialize
    fullName: System.Net.EndPoint.Serialize
    href: System.Net.EndPoint.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
  type: Class
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System.Net.Sockets.AddressFamily
  parent: System.Net.Sockets
  isExternal: false
  href: System.Net.Sockets.AddressFamily.yml
  name: AddressFamily
  fullName: System.Net.Sockets.AddressFamily
  type: Enum
- uid: System.Net.Sockets
  isExternal: false
  name: System.Net.Sockets
  fullName: System.Net.Sockets
  type: Namespace
- uid: System.Net.EndPoint.AddressFamily
  parent: System.Net.EndPoint
  isExternal: false
  href: System.Net.EndPoint.yml
  name: AddressFamily
  fullName: System.Net.EndPoint.AddressFamily
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  type: Class
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  type: Class
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  type: Class
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
