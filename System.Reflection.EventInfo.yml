items:
- uid: System.Reflection.EventInfo
  id: EventInfo
  parent: System.Reflection
  children:
  - System.Reflection.EventInfo.AddEventHandler(System.Object,System.Delegate)
  - System.Reflection.EventInfo.AddMethod
  - System.Reflection.EventInfo.Attributes
  - System.Reflection.EventInfo.Equals(System.Object)
  - System.Reflection.EventInfo.EventHandlerType
  - System.Reflection.EventInfo.GetHashCode
  - System.Reflection.EventInfo.IsSpecialName
  - System.Reflection.EventInfo.RaiseMethod
  - System.Reflection.EventInfo.RemoveEventHandler(System.Object,System.Delegate)
  - System.Reflection.EventInfo.RemoveMethod
  href: System.Reflection.EventInfo.yml
  name: EventInfo
  fullName: System.Reflection.EventInfo
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Reflection/EventInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Reflection/EventInfo.cs
    startLine: 17
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Discovers the attributes of an event and provides access to event metadata.
  syntax:
    content: 'public abstract class EventInfo : MemberInfo'
    content.vb: Public MustInherit Class EventInfo Inherits MemberInfo
  inheritance:
  - System.Object
  - System.Reflection.MemberInfo
  inheritedMembers:
  - System.Reflection.MemberInfo.CustomAttributes
  - System.Reflection.MemberInfo.DeclaringType
  - System.Reflection.MemberInfo.Module
  - System.Reflection.MemberInfo.Name
- uid: System.Reflection.EventInfo.AddMethod
  id: AddMethod
  parent: System.Reflection.EventInfo
  href: System.Reflection.EventInfo.yml
  name: AddMethod
  fullName: System.Reflection.EventInfo.AddMethod
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/EventInfo.cs
    startLine: 80
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the @'System.Reflection.MethodInfo' object for the @'System.Reflection.EventInfo.AddEventHandler(System.Object,System.Delegate)' method of the event, including non-public methods.
  syntax:
    content: public virtual MethodInfo AddMethod { get; }
    content.vb: Public Overridable ReadOnly Property AddMethod As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: The @'System.Reflection.MethodInfo' object for the @'System.Reflection.EventInfo.AddEventHandler(System.Object,System.Delegate)' method.
- uid: System.Reflection.EventInfo.Attributes
  id: Attributes
  parent: System.Reflection.EventInfo
  href: System.Reflection.EventInfo.yml
  name: Attributes
  fullName: System.Reflection.EventInfo.Attributes
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/EventInfo.cs
    startLine: 76
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the attributes for this event.
  syntax:
    content: public abstract EventAttributes Attributes { get; }
    content.vb: Public MustOverride ReadOnly Property Attributes As EventAttributes
    parameters: []
    return:
      type: System.Reflection.EventAttributes
      description: The read-only attributes for this event.
- uid: System.Reflection.EventInfo.EventHandlerType
  id: EventHandlerType
  parent: System.Reflection.EventInfo
  href: System.Reflection.EventInfo.yml
  name: EventHandlerType
  fullName: System.Reflection.EventInfo.EventHandlerType
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/EventInfo.cs
    startLine: 155
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the Type object of the underlying event-handler delegate associated with this event.
  syntax:
    content: public virtual Type EventHandlerType { get; }
    content.vb: Public Overridable ReadOnly Property EventHandlerType As Type
    parameters: []
    return:
      type: System.Type
      description: A read-only Type object representing the delegate event handler.
  exceptions:
  - type: System.Security.SecurityException
    description: The caller does not have the required permission.
- uid: System.Reflection.EventInfo.IsSpecialName
  id: IsSpecialName
  parent: System.Reflection.EventInfo
  href: System.Reflection.EventInfo.yml
  name: IsSpecialName
  fullName: System.Reflection.EventInfo.IsSpecialName
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/EventInfo.cs
    startLine: 175
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating whether the EventInfo has a name with a special meaning.
  syntax:
    content: public bool IsSpecialName { get; }
    content.vb: Public ReadOnly Property IsSpecialName As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if this event has a special name; otherwise, false.
- uid: System.Reflection.EventInfo.RaiseMethod
  id: RaiseMethod
  parent: System.Reflection.EventInfo
  href: System.Reflection.EventInfo.yml
  name: RaiseMethod
  fullName: System.Reflection.EventInfo.RaiseMethod
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/EventInfo.cs
    startLine: 96
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the method that is called when the event is raised, including non-public methods.
  syntax:
    content: public virtual MethodInfo RaiseMethod { get; }
    content.vb: Public Overridable ReadOnly Property RaiseMethod As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: The method that is called when the event is raised.
- uid: System.Reflection.EventInfo.RemoveMethod
  id: RemoveMethod
  parent: System.Reflection.EventInfo
  href: System.Reflection.EventInfo.yml
  name: RemoveMethod
  fullName: System.Reflection.EventInfo.RemoveMethod
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/EventInfo.cs
    startLine: 88
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the MethodInfo object for removing a method of the event, including non-public methods.
  syntax:
    content: public virtual MethodInfo RemoveMethod { get; }
    content.vb: Public Overridable ReadOnly Property RemoveMethod As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: The MethodInfo object for removing a method of the event.
- uid: System.Reflection.EventInfo.AddEventHandler(System.Object,System.Delegate)
  id: AddEventHandler(System.Object,System.Delegate)
  parent: System.Reflection.EventInfo
  href: System.Reflection.EventInfo.yml
  name: AddEventHandler(Object, Delegate)
  fullName: System.Reflection.EventInfo.AddEventHandler(System.Object, System.Delegate)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/EventInfo.cs
    startLine: 112
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Adds an event handler to an event source.
  syntax:
    content: public virtual void AddEventHandler(object target, Delegate handler)
    content.vb: Public Overridable Sub AddEventHandler(target As Object, handler As Delegate)
    parameters:
    - id: target
      type: System.Object
      description: The event source.
    - id: handler
      type: System.Delegate
      description: Encapsulates a method or methods to be invoked when the event is raised by the target.
  exceptions:
  - type: System.InvalidOperationException
    description: The event does not have a public add accessor.
  - type: System.ArgumentException
    description: The handler that was passed in cannot be used.
  - type: System.MethodAccessException
    description: In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, @'System.MemberAccessException', instead.The caller does not have access permission to the member.
  - type: System.Reflection.TargetException
    description: In the .NET for Windows Store apps or the Portable Class Library, catch @'System.Exception' instead.The *target* parameter is null and the event is not static.-or- The @'System.Reflection.EventInfo' is not declared on the target.
- uid: System.Reflection.EventInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.EventInfo
  href: System.Reflection.EventInfo.yml
  name: Equals(Object)
  fullName: System.Reflection.EventInfo.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/EventInfo.cs
    startLine: 50
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Returns a value that indicates whether this instance is equal to a specified object.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with this instance, or null.
    return:
      type: System.Boolean
      description: true if *obj* equals the type and value of this instance; otherwise, false.
  overridden: System.Reflection.MemberInfo.Equals(System.Object)
- uid: System.Reflection.EventInfo.GetHashCode
  id: GetHashCode
  parent: System.Reflection.EventInfo
  href: System.Reflection.EventInfo.yml
  name: GetHashCode()
  fullName: System.Reflection.EventInfo.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/EventInfo.cs
    startLine: 55
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Returns the hash code for this instance.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  overridden: System.Reflection.MemberInfo.GetHashCode
- uid: System.Reflection.EventInfo.RemoveEventHandler(System.Object,System.Delegate)
  id: RemoveEventHandler(System.Object,System.Delegate)
  parent: System.Reflection.EventInfo
  href: System.Reflection.EventInfo.yml
  name: RemoveEventHandler(Object, Delegate)
  fullName: System.Reflection.EventInfo.RemoveEventHandler(System.Object, System.Delegate)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/EventInfo.cs
    startLine: 132
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Removes an event handler from an event source.
  syntax:
    content: public virtual void RemoveEventHandler(object target, Delegate handler)
    content.vb: Public Overridable Sub RemoveEventHandler(target As Object, handler As Delegate)
    parameters:
    - id: target
      type: System.Object
      description: The event source.
    - id: handler
      type: System.Delegate
      description: The delegate to be disassociated from the events raised by target.
  exceptions:
  - type: System.InvalidOperationException
    description: The event does not have a public remove accessor.
  - type: System.ArgumentException
    description: The handler that was passed in cannot be used.
  - type: System.Reflection.TargetException
    description: In the .NET for Windows Store apps or the Portable Class Library, catch @'System.Exception' instead.The *target* parameter is null and the event is not static.-or- The @'System.Reflection.EventInfo' is not declared on the target.
  - type: System.MethodAccessException
    description: In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, @'System.MemberAccessException', instead.The caller does not have access permission to the member.
references:
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Reflection.MemberInfo.CustomAttributes
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: CustomAttributes
  fullName: System.Reflection.MemberInfo.CustomAttributes
- uid: System.Reflection.MemberInfo.DeclaringType
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: DeclaringType
  fullName: System.Reflection.MemberInfo.DeclaringType
- uid: System.Reflection.MemberInfo.Module
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: Module
  fullName: System.Reflection.MemberInfo.Module
- uid: System.Reflection.MemberInfo.Name
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: Name
  fullName: System.Reflection.MemberInfo.Name
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.MethodInfo.yml
  name: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection.EventAttributes
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.EventAttributes.yml
  name: EventAttributes
  fullName: System.Reflection.EventAttributes
- uid: System.Type
  parent: System
  isExternal: false
  href: System.Type.yml
  name: Type
  fullName: System.Type
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.Delegate
  parent: System
  isExternal: false
  href: System.Delegate.yml
  name: Delegate
  fullName: System.Delegate
- uid: System.Reflection.MemberInfo.Equals(System.Object)
  parent: System.Reflection.MemberInfo
  isExternal: true
  href: System.Reflection.MemberInfo.yml
  name: Equals(Object)
  fullName: System.Reflection.MemberInfo.Equals(System.Object)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.Equals(System.Object)
    name: Equals
    fullName: System.Reflection.MemberInfo.Equals
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.Equals(System.Object)
    name: Equals
    fullName: System.Reflection.MemberInfo.Equals
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.MemberInfo.GetHashCode
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: GetHashCode()
  fullName: System.Reflection.MemberInfo.GetHashCode()
  spec.csharp:
  - uid: System.Reflection.MemberInfo.GetHashCode
    name: GetHashCode
    fullName: System.Reflection.MemberInfo.GetHashCode
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.GetHashCode
    name: GetHashCode
    fullName: System.Reflection.MemberInfo.GetHashCode
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.Security.SecurityException
  isExternal: false
  href: System.Security.SecurityException.yml
  name: SecurityException
  fullName: System.Security.SecurityException
  summary: The exception that is thrown when a security error is detected.
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  href: System.InvalidOperationException.yml
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  summary: The exception that is thrown when a method call is invalid for the object's current state.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.MethodAccessException
  isExternal: false
  href: System.MethodAccessException.yml
  name: MethodAccessException
  fullName: System.MethodAccessException
  summary: The exception that is thrown when there is an invalid attempt to access a method, such as accessing a private method from partially trusted code.
- uid: System.Reflection.TargetException
