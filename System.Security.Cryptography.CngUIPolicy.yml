items:
- uid: System.Security.Cryptography.CngUIPolicy
  id: CngUIPolicy
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels)
  - System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String)
  - System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String)
  - System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String)
  - System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String,System.String)
  - System.Security.Cryptography.CngUIPolicy.CreationTitle
  - System.Security.Cryptography.CngUIPolicy.Description
  - System.Security.Cryptography.CngUIPolicy.FriendlyName
  - System.Security.Cryptography.CngUIPolicy.ProtectionLevel
  - System.Security.Cryptography.CngUIPolicy.UseContext
  href: System.Security.Cryptography.CngUIPolicy.yml
  name: CngUIPolicy
  fullName: System.Security.Cryptography.CngUIPolicy
  type: Class
  source:
    remote: &o0
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 212
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Encapsulates optional configuration parameters for the user interface (UI) that Cryptography Next Generation (CNG) displays when you access a protected key.
  syntax:
    content: public sealed class CngUIPolicy
    content.vb: Public NotInheritable Class CngUIPolicy
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels)
  id: '#ctor(System.Security.Cryptography.CngUIProtectionLevels)'
  parent: System.Security.Cryptography.CngUIPolicy
  href: System.Security.Cryptography.CngUIPolicy.yml
  name: CngUIPolicy(CngUIProtectionLevels)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(System.Security.Cryptography.CngUIProtectionLevels)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 214
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the @'System.Security.Cryptography.CngUIPolicy' class by using the specified protection level.
  syntax:
    content: public CngUIPolicy(CngUIProtectionLevels protectionLevel)
    content.vb: Public Sub New(protectionLevel As CngUIProtectionLevels)
    parameters:
    - id: protectionLevel
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: A bitwise combination of the enumeration values that specify the protection level.
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String)
  id: '#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String)'
  parent: System.Security.Cryptography.CngUIPolicy
  href: System.Security.Cryptography.CngUIPolicy.yml
  name: CngUIPolicy(CngUIProtectionLevels, String)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(System.Security.Cryptography.CngUIProtectionLevels, System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 215
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the @'System.Security.Cryptography.CngUIPolicy' class by using the specified protection level and friendly name.
  syntax:
    content: public CngUIPolicy(CngUIProtectionLevels protectionLevel, string friendlyName)
    content.vb: Public Sub New(protectionLevel As CngUIProtectionLevels, friendlyName As String)
    parameters:
    - id: protectionLevel
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: A bitwise combination of the enumeration values that specify the protection level.
    - id: friendlyName
      type: System.String
      description: A friendly name for the key to be used in the UI prompt. Specify a null string to use the default name.
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String)
  id: '#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String)'
  parent: System.Security.Cryptography.CngUIPolicy
  href: System.Security.Cryptography.CngUIPolicy.yml
  name: CngUIPolicy(CngUIProtectionLevels, String, String)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(System.Security.Cryptography.CngUIProtectionLevels, System.String, System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 216
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the @'System.Security.Cryptography.CngUIPolicy' class by using the specified protection level, friendly name, and description.
  syntax:
    content: public CngUIPolicy(CngUIProtectionLevels protectionLevel, string friendlyName, string description)
    content.vb: Public Sub New(protectionLevel As CngUIProtectionLevels, friendlyName As String, description As String)
    parameters:
    - id: protectionLevel
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: A bitwise combination of the enumeration values that specify the protection level.
    - id: friendlyName
      type: System.String
      description: A friendly name for the key to be used in the UI prompt. Specify a null string to use the default name.
    - id: description
      type: System.String
      description: The full-text description of the key. Specify a null string to use the default description.
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String)
  id: '#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String)'
  parent: System.Security.Cryptography.CngUIPolicy
  href: System.Security.Cryptography.CngUIPolicy.yml
  name: CngUIPolicy(CngUIProtectionLevels, String, String, String)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(System.Security.Cryptography.CngUIProtectionLevels, System.String, System.String, System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 217
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the @'System.Security.Cryptography.CngUIPolicy' class by using the specified protection level, friendly name, description string, and use context.
  syntax:
    content: public CngUIPolicy(CngUIProtectionLevels protectionLevel, string friendlyName, string description, string useContext)
    content.vb: Public Sub New(protectionLevel As CngUIProtectionLevels, friendlyName As String, description As String, useContext As String)
    parameters:
    - id: protectionLevel
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: A bitwise combination of the enumeration values that specify the protection level.
    - id: friendlyName
      type: System.String
      description: A friendly name for the key to be used in the UI prompt. Specify a null string to use the default name.
    - id: description
      type: System.String
      description: The full-text description of the key. Specify a null string to use the default description.
    - id: useContext
      type: System.String
      description: A description of how the key will be used. Specify a null string to use the default description.
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String,System.String)
  id: '#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String,System.String)'
  parent: System.Security.Cryptography.CngUIPolicy
  href: System.Security.Cryptography.CngUIPolicy.yml
  name: CngUIPolicy(CngUIProtectionLevels, String, String, String, String)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(System.Security.Cryptography.CngUIProtectionLevels, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 218
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the @'System.Security.Cryptography.CngUIPolicy' class by using the specified protection level, friendly name, description string, use context, and title.
  syntax:
    content: public CngUIPolicy(CngUIProtectionLevels protectionLevel, string friendlyName, string description, string useContext, string creationTitle)
    content.vb: Public Sub New(protectionLevel As CngUIProtectionLevels, friendlyName As String, description As String, useContext As String, creationTitle As String)
    parameters:
    - id: protectionLevel
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: A bitwise combination of the enumeration values that specify the protection level.
    - id: friendlyName
      type: System.String
      description: A friendly name for the key to be used in the UI prompt. Specify a null string to use the default name.
    - id: description
      type: System.String
      description: The full-text description of the key. Specify a null string to use the default description.
    - id: useContext
      type: System.String
      description: A description of how the key will be used. Specify a null string to use the default description.
    - id: creationTitle
      type: System.String
      description: The title for the dialog box that provides the UI prompt. Specify a null string to use the default title.
- uid: System.Security.Cryptography.CngUIPolicy.CreationTitle
  id: CreationTitle
  parent: System.Security.Cryptography.CngUIPolicy
  href: System.Security.Cryptography.CngUIPolicy.yml
  name: CreationTitle
  fullName: System.Security.Cryptography.CngUIPolicy.CreationTitle
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 219
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets the title that is displayed by the UI prompt.
  syntax:
    content: public string CreationTitle { get; }
    content.vb: Public ReadOnly Property CreationTitle As String
    parameters: []
    return:
      type: System.String
      description: The title of the dialog box that appears when the key is accessed.
- uid: System.Security.Cryptography.CngUIPolicy.Description
  id: Description
  parent: System.Security.Cryptography.CngUIPolicy
  href: System.Security.Cryptography.CngUIPolicy.yml
  name: Description
  fullName: System.Security.Cryptography.CngUIPolicy.Description
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 220
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets the description string that is displayed by the UI prompt.
  syntax:
    content: public string Description { get; }
    content.vb: Public ReadOnly Property Description As String
    parameters: []
    return:
      type: System.String
      description: The description text for the dialog box that appears when the key is accessed.
- uid: System.Security.Cryptography.CngUIPolicy.FriendlyName
  id: FriendlyName
  parent: System.Security.Cryptography.CngUIPolicy
  href: System.Security.Cryptography.CngUIPolicy.yml
  name: FriendlyName
  fullName: System.Security.Cryptography.CngUIPolicy.FriendlyName
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 221
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets the friendly name that is displayed by the UI prompt.
  syntax:
    content: public string FriendlyName { get; }
    content.vb: Public ReadOnly Property FriendlyName As String
    parameters: []
    return:
      type: System.String
      description: The friendly name that is used to describe the key in the dialog box that appears when the key is accessed.
- uid: System.Security.Cryptography.CngUIPolicy.ProtectionLevel
  id: ProtectionLevel
  parent: System.Security.Cryptography.CngUIPolicy
  href: System.Security.Cryptography.CngUIPolicy.yml
  name: ProtectionLevel
  fullName: System.Security.Cryptography.CngUIPolicy.ProtectionLevel
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 222
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets the UI protection level for the key.
  syntax:
    content: public CngUIProtectionLevels ProtectionLevel { get; }
    content.vb: Public ReadOnly Property ProtectionLevel As CngUIProtectionLevels
    parameters: []
    return:
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: An object that describes the level of UI protection to apply to the key.
- uid: System.Security.Cryptography.CngUIPolicy.UseContext
  id: UseContext
  parent: System.Security.Cryptography.CngUIPolicy
  href: System.Security.Cryptography.CngUIPolicy.yml
  name: UseContext
  fullName: System.Security.Cryptography.CngUIPolicy.UseContext
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 223
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets the description of how the key will be used.
  syntax:
    content: public string UseContext { get; }
    content.vb: Public ReadOnly Property UseContext As String
    parameters: []
    return:
      type: System.String
      description: The description of how the key will be used.
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Security.Cryptography.CngUIProtectionLevels
  parent: System.Security.Cryptography
  isExternal: false
  href: System.Security.Cryptography.CngUIProtectionLevels.yml
  name: CngUIProtectionLevels
  fullName: System.Security.Cryptography.CngUIProtectionLevels
  type: Enum
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
  type: Class
