items:
- uid: System.Security.Cryptography.ECDiffieHellman
  id: ECDiffieHellman
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.ECDiffieHellman.#ctor
  - System.Security.Cryptography.ECDiffieHellman.Create
  - System.Security.Cryptography.ECDiffieHellman.Create(System.String)
  - System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  - System.Security.Cryptography.ECDiffieHellman.PublicKey
  href: System.Security.Cryptography.ECDiffieHellman.yml
  name: ECDiffieHellman
  fullName: System.Security.Cryptography.ECDiffieHellman
  type: Class
  source:
    remote: &o0
      path: src/System.Security.Cryptography.Encryption.ECDiffieHellman/ref/System.Security.Cryptography.Encryption.ECDiffieHellman.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Security.Cryptography.Encryption.ECDiffieHellman/ref/System.Security.Cryptography.Encryption.ECDiffieHellman.cs
    startLine: 9
  assemblies:
  - System.Security.Cryptography.Encryption.ECDiffieHellman
  namespace: System.Security.Cryptography
  summary: Provides an abstract base class that Elliptic Curve Diffie-Hellman (ECDH) algorithm implementations can derive from. This class provides the basic set of operations that all ECDH implementations must support.
  syntax:
    content: 'public abstract class ECDiffieHellman : AsymmetricAlgorithm, IDisposable'
    content.vb: Public MustInherit Class ECDiffieHellman Inherits AsymmetricAlgorithm Implements IDisposable
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricAlgorithm
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  - System.Security.Cryptography.AsymmetricAlgorithm.Clear
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)
  - System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm
  - System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Security.Cryptography.ECDiffieHellman.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.ECDiffieHellman
  href: System.Security.Cryptography.ECDiffieHellman.yml
  name: ECDiffieHellman()
  fullName: System.Security.Cryptography.ECDiffieHellman.ECDiffieHellman()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Encryption.ECDiffieHellman/ref/System.Security.Cryptography.Encryption.ECDiffieHellman.cs
    startLine: 11
  assemblies:
  - System.Security.Cryptography.Encryption.ECDiffieHellman
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the @'System.Security.Cryptography.ECDiffieHellman' class.
  syntax:
    content: protected ECDiffieHellman()
    content.vb: Protected Sub New
- uid: System.Security.Cryptography.ECDiffieHellman.PublicKey
  id: PublicKey
  parent: System.Security.Cryptography.ECDiffieHellman
  href: System.Security.Cryptography.ECDiffieHellman.yml
  name: PublicKey
  fullName: System.Security.Cryptography.ECDiffieHellman.PublicKey
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Encryption.ECDiffieHellman/ref/System.Security.Cryptography.Encryption.ECDiffieHellman.cs
    startLine: 12
  assemblies:
  - System.Security.Cryptography.Encryption.ECDiffieHellman
  namespace: System.Security.Cryptography
  summary: Gets the public key that is being used by the current Elliptic Curve Diffie-Hellman (ECDH) instance.
  syntax:
    content: public abstract ECDiffieHellmanPublicKey PublicKey { get; }
    content.vb: Public MustOverride ReadOnly Property PublicKey As ECDiffieHellmanPublicKey
    parameters: []
    return:
      type: System.Security.Cryptography.ECDiffieHellmanPublicKey
      description: The public part of the ECDH key pair that is being used by this @'System.Security.Cryptography.ECDiffieHellman' instance.
- uid: System.Security.Cryptography.ECDiffieHellman.Create
  id: Create
  parent: System.Security.Cryptography.ECDiffieHellman
  href: System.Security.Cryptography.ECDiffieHellman.yml
  name: Create()
  fullName: System.Security.Cryptography.ECDiffieHellman.Create()
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Encryption.ECDiffieHellman/ref/System.Security.Cryptography.Encryption.ECDiffieHellman.cs
    startLine: 13
  assemblies:
  - System.Security.Cryptography.Encryption.ECDiffieHellman
  namespace: System.Security.Cryptography
  summary: Creates a new instance of the default implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm.
  syntax:
    content: public static ECDiffieHellman Create()
    content.vb: Public Shared Function Create As ECDiffieHellman
    return:
      type: System.Security.Cryptography.ECDiffieHellman
      description: A new instance of the default implementation of this class.
- uid: System.Security.Cryptography.ECDiffieHellman.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.ECDiffieHellman
  href: System.Security.Cryptography.ECDiffieHellman.yml
  name: Create(String)
  fullName: System.Security.Cryptography.ECDiffieHellman.Create(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Encryption.ECDiffieHellman/ref/System.Security.Cryptography.Encryption.ECDiffieHellman.cs
    startLine: 14
  assemblies:
  - System.Security.Cryptography.Encryption.ECDiffieHellman
  namespace: System.Security.Cryptography
  summary: Creates a new instance of the specified implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm.
  syntax:
    content: public static ECDiffieHellman Create(string algorithm)
    content.vb: Public Shared Function Create(algorithm As String) As ECDiffieHellman
    parameters:
    - id: algorithm
      type: System.String
      description: The name of an implementation of the ECDH algorithm. The following strings all refer to the same implementation, which is the only implementation currently supported in the .NET Framework:- "ECDH"- "ECDiffieHellman"- "ECDiffieHellmanCng"- "System.Security.Cryptography.ECDiffieHellmanCng"You can also provide the name of a custom ECDH implementation.
    return:
      type: System.Security.Cryptography.ECDiffieHellman
      description: A new instance of the specified implementation of this class. If the specified algorithm name does not map to an ECDH implementation, this method returns null.
  exceptions:
  - type: System.ArgumentNullException
    description: The *algorithm* parameter is null.
- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  id: DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  parent: System.Security.Cryptography.ECDiffieHellman
  href: System.Security.Cryptography.ECDiffieHellman.yml
  name: DeriveKeyMaterial(ECDiffieHellmanPublicKey)
  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Cryptography.Encryption.ECDiffieHellman/ref/System.Security.Cryptography.Encryption.ECDiffieHellman.cs
    startLine: 15
  assemblies:
  - System.Security.Cryptography.Encryption.ECDiffieHellman
  namespace: System.Security.Cryptography
  summary: Derives bytes that can be used as a key, given another party's public key.
  syntax:
    content: public abstract byte[] DeriveKeyMaterial(ECDiffieHellmanPublicKey otherPartyPublicKey)
    content.vb: Public MustOverride Function DeriveKeyMaterial(otherPartyPublicKey As ECDiffieHellmanPublicKey) As Byte()
    parameters:
    - id: otherPartyPublicKey
      type: System.Security.Cryptography.ECDiffieHellmanPublicKey
      description: The other party's public key.
    return:
      type: System.Byte[]
      description: "The key material from the key exchange with the other partyâ€™s public key."
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  href: System.Security.Cryptography.AsymmetricAlgorithm.yml
  name: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
  type: Class
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: KeySizeValue
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: LegalKeySizesValue
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: Dispose()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose()
  spec.csharp:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
    name: Dispose
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
    name: Dispose
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Clear
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: Clear()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Clear()
  spec.csharp:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.Clear
    name: Clear
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.Clear
    name: Clear
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: Dispose(Boolean)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
    name: Dispose
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
    name: Dispose
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: FromXmlString(String)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)
  spec.csharp:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)
    name: FromXmlString
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)
    name: FromXmlString
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: ToXmlString(Boolean)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)
  spec.csharp:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)
    name: ToXmlString
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)
    name: ToXmlString
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: KeySize
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeySize
- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: LegalKeySizes
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
- uid: System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: SignatureAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey
  parent: System.Security.Cryptography
  isExternal: false
  href: System.Security.Cryptography.ECDiffieHellmanPublicKey.yml
  name: ECDiffieHellmanPublicKey
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey
  type: Class
- uid: System.Security.Cryptography.ECDiffieHellman
  parent: System.Security.Cryptography
  isExternal: false
  href: System.Security.Cryptography.ECDiffieHellman.yml
  name: ECDiffieHellman
  fullName: System.Security.Cryptography.ECDiffieHellman
  type: Class
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
  type: Class
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  type: Class
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
