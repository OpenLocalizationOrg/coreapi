items:
- uid: Microsoft.VisualBasic.Strings
  id: Strings
  parent: Microsoft.VisualBasic
  children:
  - Microsoft.VisualBasic.Strings.AscW(System.Char)
  - Microsoft.VisualBasic.Strings.AscW(System.String)
  - Microsoft.VisualBasic.Strings.ChrW(System.Int32)
  href: Microsoft.VisualBasic.Strings.yml
  name: Strings
  fullName: Microsoft.VisualBasic.Strings
  type: Class
  source:
    remote: &o0
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 37
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: The Strings module contains procedures used to perform string operations.
  syntax:
    content: public sealed class Strings
    content.vb: Public NotInheritable Class Strings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Microsoft.VisualBasic.Strings.AscW(System.Char)
  id: AscW(System.Char)
  parent: Microsoft.VisualBasic.Strings
  href: Microsoft.VisualBasic.Strings.yml
  name: AscW(Char)
  fullName: Microsoft.VisualBasic.Strings.AscW(System.Char)
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 41
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: Returns an Integer value representing the character code corresponding to a character.
  syntax:
    content: public static int AscW(char String)
    content.vb: Public Shared Function AscW(String As Char) As Integer
    parameters:
    - id: String
      type: System.Char
      description: Required. Any valid Char or String expression. If *String* is a String expression, only the first character of the string is used for input. If *String* is Nothing or contains no characters, an @'System.ArgumentException' error occurs.
    return:
      type: System.Int32
      description: Returns an Integer value representing the character code corresponding to a character.
- uid: Microsoft.VisualBasic.Strings.AscW(System.String)
  id: AscW(System.String)
  parent: Microsoft.VisualBasic.Strings
  href: Microsoft.VisualBasic.Strings.yml
  name: AscW(String)
  fullName: Microsoft.VisualBasic.Strings.AscW(System.String)
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 42
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: Returns an Integer value representing the character code corresponding to a character.
  syntax:
    content: public static int AscW(string String)
    content.vb: Public Shared Function AscW(String As String) As Integer
    parameters:
    - id: String
      type: System.String
      description: Required. Any valid Char or String expression. If *String* is a String expression, only the first character of the string is used for input. If *String* is Nothing or contains no characters, an @'System.ArgumentException' error occurs.
    return:
      type: System.Int32
      description: Returns an Integer value representing the character code corresponding to a character.
- uid: Microsoft.VisualBasic.Strings.ChrW(System.Int32)
  id: ChrW(System.Int32)
  parent: Microsoft.VisualBasic.Strings
  href: Microsoft.VisualBasic.Strings.yml
  name: ChrW(Int32)
  fullName: Microsoft.VisualBasic.Strings.ChrW(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 43
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: Returns the character associated with the specified character code.
  syntax:
    content: public static char ChrW(int CharCode)
    content.vb: Public Shared Function ChrW(CharCode As Integer) As Char
    parameters:
    - id: CharCode
      type: System.Int32
      description: Required. An Integer expression representing the *code point*, or character code, for the character.
    return:
      type: System.Char
      description: Returns the character associated with the specified character code.
  exceptions:
  - type: System.ArgumentException
    description: '*CharCode* < -32768 or > 65535 for ChrW.'
references:
- uid: Microsoft.VisualBasic
  isExternal: false
  name: Microsoft.VisualBasic
  fullName: Microsoft.VisualBasic
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Char
  parent: System
  isExternal: false
  href: System.Char.yml
  name: Char
  fullName: System.Char
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
