items:
- uid: System.Xml.Serialization.XmlAnyAttributeAttribute
  commentId: T:System.Xml.Serialization.XmlAnyAttributeAttribute
  id: XmlAnyAttributeAttribute
  parent: System.Xml.Serialization
  children:
  - System.Xml.Serialization.XmlAnyAttributeAttribute.#ctor
  langs:
  - csharp
  - vb
  name: XmlAnyAttributeAttribute
  fullName: System.Xml.Serialization.XmlAnyAttributeAttribute
  type: Class
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlAnyAttributeAttribute
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 10
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Specifies that the member (a field that returns an array of <xref href=\"System.Xml.XmlAttribute\" data-throw-if-not-resolved=\"false\"></xref> objects) can contain any XML attributes.</p>\n"
  remarks: "\n<p>Use the <xref href=\"System.Xml.Serialization.XmlAnyAttributeAttribute\" data-throw-if-not-resolved=\"false\"></xref> to contain arbitrary data (as XML attributes) that is sent as part of an XML document, such as, metadata sent as part of the document.</p>\n<p>Apply the <xref href=\"System.Xml.Serialization.XmlAnyAttributeAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a field that returns an array of <xref href=\"System.Xml.XmlAttribute\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.XmlNode\" data-throw-if-not-resolved=\"false\"></xref> objects. When the <xref href=\"System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\" data-throw-if-not-resolved=\"false\"></xref> method of the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> class is called, all XML attributes that do not have a corresponding member in the class being deserialized are collected in the array. After deserialization, you can iterate through the collection of <xref href=\"System.Xml.XmlAttribute\" data-throw-if-not-resolved=\"false\"></xref> items to process the data.</p>\n<p>The <xref href=\"System.Xml.Serialization.XmlSerializer.UnknownNode\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Xml.Serialization.XmlSerializer.UnknownAttribute\" data-throw-if-not-resolved=\"false\"></xref> events of the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> do not occur if you apply the <xref href=\"System.Xml.Serialization.XmlAnyAttributeAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a member of a class.</p>\n<p>You can use the word <strong>XmlAnyAttribute</strong> in your code instead of the longer <xref href=\"System.Xml.Serialization.XmlAnyAttributeAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>For more information about using attributes, see Extending Metadata Using Attributes.</p>\n"
  example:
  - "\n<p>The following example collects all unknown attributes into an array of <xref href=\"System.Xml.XmlAttribute\" data-throw-if-not-resolved=\"false\"></xref> objects. To try the example, create a file named <code>UnknownAttributes.xml</code> that contains the following XML: </p>\n<pre><code> <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Group xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \nxmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \nGroupType = 'Technical' GroupNumber = '42' GroupBase = 'Red'>\n<GroupName>MyGroup</GroupName>\n</Group></code></pre>XmlAnyAttributeAttribute Example#1"
  syntax:
    content: 'public class XmlAnyAttributeAttribute : Attribute'
    content.vb: >-
      Public Class XmlAnyAttributeAttribute
          Inherits Attribute
  seealso:
  - type: System.Xml.Serialization.XmlAnyElementAttribute
    commentId: T:System.Xml.Serialization.XmlAnyElementAttribute
  - type: System.Xml.Serialization.XmlSerializer
    commentId: T:System.Xml.Serialization.XmlSerializer
  - type: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.Serialization.XmlAnyAttributeAttribute.#ctor
  commentId: M:System.Xml.Serialization.XmlAnyAttributeAttribute.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlAnyAttributeAttribute
  langs:
  - csharp
  - vb
  name: XmlAnyAttributeAttribute()
  fullName: System.Xml.Serialization.XmlAnyAttributeAttribute.XmlAnyAttributeAttribute()
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 13
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Constructs a new instance of the <xref href=\"System.Xml.Serialization.XmlAnyAttributeAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example:
  - "\n<p>The following example constructs an <xref href=\"System.Xml.Serialization.XmlAnyAttributeAttribute\" data-throw-if-not-resolved=\"false\"></xref> that is used to override the deserialization of an object. To try the example, create a file named UnknownAttributes.xml that contains the following XML: </p>\n<pre><code> <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Group xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" GroupType = 'Technical' GroupNumber = '42' GroupBase = 'Red'>\n<GroupName>MyGroup</GroupName>\n</Group></code></pre>XmlAnyAttributeAttribute_ctor Example#1"
  syntax:
    content: public XmlAnyAttributeAttribute()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Xml.Serialization
  isExternal: false
  name: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
