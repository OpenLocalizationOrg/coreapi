items:
- uid: System.Globalization.IdnMapping
  id: IdnMapping
  parent: System.Globalization
  children:
  - System.Globalization.IdnMapping.#ctor
  - System.Globalization.IdnMapping.AllowUnassigned
  - System.Globalization.IdnMapping.Equals(System.Object)
  - System.Globalization.IdnMapping.GetAscii(System.String)
  - System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)
  - System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)
  - System.Globalization.IdnMapping.GetHashCode
  - System.Globalization.IdnMapping.GetUnicode(System.String)
  - System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)
  - System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)
  - System.Globalization.IdnMapping.UseStd3AsciiRules
  href: System.Globalization.IdnMapping.yml
  name: IdnMapping
  fullName: System.Globalization.IdnMapping
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Globalization/IdnMapping.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Globalization/IdnMapping.cs
    startLine: 71
  assemblies:
  - System.Globalization.Extensions
  namespace: System.Globalization
  summary: Supports the use of non-ASCII characters for Internet domain names. This class cannot be inherited.
  syntax:
    content: 'public sealed class IdnMapping : object'
    content.vb: Public NotInheritable Class IdnMapping Inherits Object
  inheritance:
  - System.Object
- uid: System.Globalization.IdnMapping.#ctor
  id: '#ctor'
  parent: System.Globalization.IdnMapping
  href: System.Globalization.IdnMapping.yml
  name: IdnMapping()
  fullName: System.Globalization.IdnMapping.IdnMapping()
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/IdnMapping.cs
    startLine: 89
  assemblies:
  - System.Globalization.Extensions
  namespace: System.Globalization
  summary: Initializes a new instance of the @'System.Globalization.IdnMapping' class.
  syntax:
    content: public IdnMapping()
    content.vb: Public Sub New
- uid: System.Globalization.IdnMapping.AllowUnassigned
  id: AllowUnassigned
  parent: System.Globalization.IdnMapping
  href: System.Globalization.IdnMapping.yml
  name: AllowUnassigned
  fullName: System.Globalization.IdnMapping.AllowUnassigned
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/IdnMapping.cs
    startLine: 93
  assemblies:
  - System.Globalization.Extensions
  namespace: System.Globalization
  summary: Gets or sets a value that indicates whether unassigned Unicode code points are used in operations performed by members of the current @'System.Globalization.IdnMapping' object.
  syntax:
    content: public bool AllowUnassigned { get; set; }
    content.vb: Public Property AllowUnassigned As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if unassigned code points are used in operations; otherwise, false.
- uid: System.Globalization.IdnMapping.UseStd3AsciiRules
  id: UseStd3AsciiRules
  parent: System.Globalization.IdnMapping
  href: System.Globalization.IdnMapping.yml
  name: UseStd3AsciiRules
  fullName: System.Globalization.IdnMapping.UseStd3AsciiRules
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/IdnMapping.cs
    startLine: 106
  assemblies:
  - System.Globalization.Extensions
  namespace: System.Globalization
  summary: Gets or sets a value that indicates whether standard or relaxed naming conventions are used in operations performed by members of the current @'System.Globalization.IdnMapping' object.
  syntax:
    content: public bool UseStd3AsciiRules { get; set; }
    content.vb: Public Property UseStd3AsciiRules As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if standard naming conventions are used in operations; otherwise, false.
- uid: System.Globalization.IdnMapping.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Globalization.IdnMapping
  href: System.Globalization.IdnMapping.yml
  name: Equals(Object)
  fullName: System.Globalization.IdnMapping.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/IdnMapping.cs
    startLine: 331
  assemblies:
  - System.Globalization.Extensions
  namespace: System.Globalization
  summary: Indicates whether a specified object and the current @'System.Globalization.IdnMapping' object are equal.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare to the current object.
    return:
      type: System.Boolean
      description: true if the object specified by the *obj* parameter is derived from @'System.Globalization.IdnMapping' and its @'System.Globalization.IdnMapping.AllowUnassigned' and @'System.Globalization.IdnMapping.UseStd3AsciiRules' properties are equal; otherwise, false.
- uid: System.Globalization.IdnMapping.GetAscii(System.String)
  id: GetAscii(System.String)
  parent: System.Globalization.IdnMapping
  href: System.Globalization.IdnMapping.yml
  name: GetAscii(String)
  fullName: System.Globalization.IdnMapping.GetAscii(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/IdnMapping.cs
    startLine: 120
  assemblies:
  - System.Globalization.Extensions
  namespace: System.Globalization
  summary: Encodes a string of domain name labels that consist of Unicode characters to a string of displayable Unicode characters in the US-ASCII character range. The string is formatted according to the IDNA standard.
  syntax:
    content: public string GetAscii(string unicode)
    content.vb: Public Function GetAscii(unicode As String) As String
    parameters:
    - id: unicode
      type: System.String
      description: The string to convert, which consists of one or more domain name labels delimited with label separators.
    return:
      type: System.String
      description: The equivalent of the string specified by the *unicode* parameter, consisting of displayable Unicode characters in the US-ASCII character range (U+0020 to U+007E) and formatted according to the IDNA standard.
  exceptions:
  - type: System.ArgumentNullException
    description: '*unicode* is null.'
  - type: System.ArgumentException
    description: '*unicode* is invalid based on the @''System.Globalization.IdnMapping.AllowUnassigned'' and @''System.Globalization.IdnMapping.UseStd3AsciiRules'' properties, and the IDNA standard.'
- uid: System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)
  id: GetAscii(System.String,System.Int32)
  parent: System.Globalization.IdnMapping
  href: System.Globalization.IdnMapping.yml
  name: GetAscii(String, Int32)
  fullName: System.Globalization.IdnMapping.GetAscii(System.String, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/IdnMapping.cs
    startLine: 125
  assemblies:
  - System.Globalization.Extensions
  namespace: System.Globalization
  summary: Encodes a substring of domain name labels that include Unicode characters outside the US-ASCII character range. The substring is converted to a string of displayable Unicode characters in the US-ASCII character range and is formatted according to the IDNA standard.
  syntax:
    content: public string GetAscii(string unicode, int index)
    content.vb: Public Function GetAscii(unicode As String, index As Integer) As String
    parameters:
    - id: unicode
      type: System.String
      description: The string to convert, which consists of one or more domain name labels delimited with label separators.
    - id: index
      type: System.Int32
      description: A zero-based offset into *unicode* that specifies the start of the substring to convert. The conversion operation continues to the end of the *unicode* string.
    return:
      type: System.String
      description: The equivalent of the substring specified by the *unicode* and *index* parameters, consisting of displayable Unicode characters in the US-ASCII character range (U+0020 to U+007E) and formatted according to the IDNA standard.
  exceptions:
  - type: System.ArgumentNullException
    description: '*unicode* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*index* is less than zero.-or-*index* is greater than the length of *unicode*.'
  - type: System.ArgumentException
    description: '*unicode* is invalid based on the @''System.Globalization.IdnMapping.AllowUnassigned'' and @''System.Globalization.IdnMapping.UseStd3AsciiRules'' properties, and the IDNA standard.'
- uid: System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)
  id: GetAscii(System.String,System.Int32,System.Int32)
  parent: System.Globalization.IdnMapping
  href: System.Globalization.IdnMapping.yml
  name: GetAscii(String, Int32, Int32)
  fullName: System.Globalization.IdnMapping.GetAscii(System.String, System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/IdnMapping.cs
    startLine: 132
  assemblies:
  - System.Globalization.Extensions
  namespace: System.Globalization
  summary: Encodes the specified number of characters in a  substring of domain name labels that include Unicode characters outside the US-ASCII character range. The substring is converted to a string of displayable Unicode characters in the US-ASCII character range and is formatted according to the IDNA standard.
  syntax:
    content: public string GetAscii(string unicode, int index, int count)
    content.vb: Public Function GetAscii(unicode As String, index As Integer, count As Integer) As String
    parameters:
    - id: unicode
      type: System.String
      description: The string to convert, which consists of one or more domain name labels delimited with label separators.
    - id: index
      type: System.Int32
      description: A zero-based offset into *unicode* that specifies the start of the substring.
    - id: count
      type: System.Int32
      description: The number of characters to convert in the substring that starts at the position specified by  *index* in the *unicode* string.
    return:
      type: System.String
      description: The equivalent of the substring specified by the *unicode*, *index*, and *count* parameters, consisting of displayable Unicode characters in the US-ASCII character range (U+0020 to U+007E) and formatted according to the IDNA standard.
  exceptions:
  - type: System.ArgumentNullException
    description: '*unicode* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*index* or *count* is less than zero.-or-*index* is greater than the length of *unicode*.-or-*index* is greater than the length of *unicode* minus *count*.'
  - type: System.ArgumentException
    description: '*unicode* is invalid based on the @''System.Globalization.IdnMapping.AllowUnassigned'' and @''System.Globalization.IdnMapping.UseStd3AsciiRules'' properties, and the IDNA standard.'
- uid: System.Globalization.IdnMapping.GetHashCode
  id: GetHashCode
  parent: System.Globalization.IdnMapping
  href: System.Globalization.IdnMapping.yml
  name: GetHashCode()
  fullName: System.Globalization.IdnMapping.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/IdnMapping.cs
    startLine: 344
  assemblies:
  - System.Globalization.Extensions
  namespace: System.Globalization
  summary: Returns a hash code for this @'System.Globalization.IdnMapping' object.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: One of four 32-bit signed constants derived from the properties of an @'System.Globalization.IdnMapping' object.  The return value has no special meaning and is not suitable for use in a hash code algorithm.
- uid: System.Globalization.IdnMapping.GetUnicode(System.String)
  id: GetUnicode(System.String)
  parent: System.Globalization.IdnMapping
  href: System.Globalization.IdnMapping.yml
  name: GetUnicode(String)
  fullName: System.Globalization.IdnMapping.GetUnicode(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/IdnMapping.cs
    startLine: 243
  assemblies:
  - System.Globalization.Extensions
  namespace: System.Globalization
  summary: Decodes a string of one or more domain name labels, encoded according to the IDNA standard, to a string of Unicode characters.
  syntax:
    content: public string GetUnicode(string ascii)
    content.vb: Public Function GetUnicode(ascii As String) As String
    parameters:
    - id: ascii
      type: System.String
      description: The string to decode, which consists of one or more labels in the US-ASCII character range (U+0020 to U+007E) encoded according to the IDNA standard.
    return:
      type: System.String
      description: The Unicode equivalent of the IDNA substring specified by the *ascii* parameter.
  exceptions:
  - type: System.ArgumentNullException
    description: '*ascii* is null.'
  - type: System.ArgumentException
    description: '*ascii* is invalid based on the @''System.Globalization.IdnMapping.AllowUnassigned'' and @''System.Globalization.IdnMapping.UseStd3AsciiRules'' properties, and the IDNA standard.'
- uid: System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)
  id: GetUnicode(System.String,System.Int32)
  parent: System.Globalization.IdnMapping
  href: System.Globalization.IdnMapping.yml
  name: GetUnicode(String, Int32)
  fullName: System.Globalization.IdnMapping.GetUnicode(System.String, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/IdnMapping.cs
    startLine: 248
  assemblies:
  - System.Globalization.Extensions
  namespace: System.Globalization
  summary: Decodes a substring of one or more domain name labels, encoded according to the IDNA standard, to a string of Unicode characters.
  syntax:
    content: public string GetUnicode(string ascii, int index)
    content.vb: Public Function GetUnicode(ascii As String, index As Integer) As String
    parameters:
    - id: ascii
      type: System.String
      description: The string to decode, which consists of one or more labels in the US-ASCII character range (U+0020 to U+007E) encoded according to the IDNA standard.
    - id: index
      type: System.Int32
      description: A zero-based offset into *ascii* that specifies the start of the substring to decode. The decoding operation continues to the end of the *ascii* string.
    return:
      type: System.String
      description: The Unicode equivalent of the IDNA substring specified by the *ascii* and *index* parameters.
  exceptions:
  - type: System.ArgumentNullException
    description: '*ascii* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*index* is less than zero.-or-*index* is greater than the length of *ascii*.'
  - type: System.ArgumentException
    description: '*ascii* is invalid based on the @''System.Globalization.IdnMapping.AllowUnassigned'' and @''System.Globalization.IdnMapping.UseStd3AsciiRules'' properties, and the IDNA standard.'
- uid: System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)
  id: GetUnicode(System.String,System.Int32,System.Int32)
  parent: System.Globalization.IdnMapping
  href: System.Globalization.IdnMapping.yml
  name: GetUnicode(String, Int32, Int32)
  fullName: System.Globalization.IdnMapping.GetUnicode(System.String, System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Globalization/IdnMapping.cs
    startLine: 255
  assemblies:
  - System.Globalization.Extensions
  namespace: System.Globalization
  summary: Decodes a substring of a specified length that contains one or more domain name labels, encoded according to the IDNA standard, to a string of Unicode characters.
  syntax:
    content: public string GetUnicode(string ascii, int index, int count)
    content.vb: Public Function GetUnicode(ascii As String, index As Integer, count As Integer) As String
    parameters:
    - id: ascii
      type: System.String
      description: The string to decode, which consists of one or more labels in the US-ASCII character range (U+0020 to U+007E) encoded according to the IDNA standard.
    - id: index
      type: System.Int32
      description: A zero-based offset into *ascii* that specifies the start of the substring.
    - id: count
      type: System.Int32
      description: The number of characters to convert in the substring that starts at the position specified by *index* in the *ascii* string.
    return:
      type: System.String
      description: The Unicode equivalent of the IDNA substring specified by the *ascii*, *index*, and *count* parameters.
  exceptions:
  - type: System.ArgumentNullException
    description: '*ascii* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*index* or *count* is less than zero.-or-*index* is greater than the length of *ascii*.-or-*index* is greater than the length of *ascii* minus *count*.'
  - type: System.ArgumentException
    description: '*ascii* is invalid based on the @''System.Globalization.IdnMapping.AllowUnassigned'' and @''System.Globalization.IdnMapping.UseStd3AsciiRules'' properties, and the IDNA standard.'
references:
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
