items:
- uid: System.Net.Sockets.SocketAsyncEventArgs
  id: SocketAsyncEventArgs
  parent: System.Net.Sockets
  children:
  - System.Net.Sockets.SocketAsyncEventArgs.#ctor
  - System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket
  - System.Net.Sockets.SocketAsyncEventArgs.Buffer
  - System.Net.Sockets.SocketAsyncEventArgs.BufferList
  - System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred
  - System.Net.Sockets.SocketAsyncEventArgs.Completed
  - System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError
  - System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket
  - System.Net.Sockets.SocketAsyncEventArgs.Count
  - System.Net.Sockets.SocketAsyncEventArgs.Dispose
  - System.Net.Sockets.SocketAsyncEventArgs.Finalize
  - System.Net.Sockets.SocketAsyncEventArgs.LastOperation
  - System.Net.Sockets.SocketAsyncEventArgs.Offset
  - System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)
  - System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo
  - System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint
  - System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
  - System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize
  - System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)
  - System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)
  - System.Net.Sockets.SocketAsyncEventArgs.SocketError
  - System.Net.Sockets.SocketAsyncEventArgs.SocketFlags
  - System.Net.Sockets.SocketAsyncEventArgs.UserToken
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: SocketAsyncEventArgs
  fullName: System.Net.Sockets.SocketAsyncEventArgs
  type: Class
  source:
    remote: &o0
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 242
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Represents an asynchronous socket operation.
  syntax:
    content: 'public class SocketAsyncEventArgs : EventArgs, IDisposable'
    content.vb: Public Class SocketAsyncEventArgs Inherits EventArgs Implements IDisposable
  inheritance:
  - System.Object
  - System.EventArgs
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Net.Sockets.SocketAsyncEventArgs.#ctor
  id: '#ctor'
  parent: System.Net.Sockets.SocketAsyncEventArgs
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: SocketAsyncEventArgs()
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SocketAsyncEventArgs()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 244
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Creates an empty @'System.Net.Sockets.SocketAsyncEventArgs' instance.
  syntax:
    content: public SocketAsyncEventArgs()
    content.vb: Public Sub New
  exceptions:
  - type: System.NotSupportedException
    description: The platform is not supported.
- uid: System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket
  id: AcceptSocket
  parent: System.Net.Sockets.SocketAsyncEventArgs
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: AcceptSocket
  fullName: System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 245
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets the socket to use or the socket created for accepting a connection with an asynchronous socket method.
  syntax:
    content: public Socket AcceptSocket { get; set; }
    content.vb: Public Property AcceptSocket As Socket
    parameters: []
    return:
      type: System.Net.Sockets.Socket
      description: The @'System.Net.Sockets.Socket' to use or the socket created for accepting a connection with an asynchronous socket method.
- uid: System.Net.Sockets.SocketAsyncEventArgs.Buffer
  id: Buffer
  parent: System.Net.Sockets.SocketAsyncEventArgs
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: Buffer
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Buffer
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 246
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the data buffer to use with an asynchronous socket method.
  syntax:
    content: public byte[] Buffer { get; }
    content.vb: Public ReadOnly Property Buffer As Byte()
    parameters: []
    return:
      type: System.Byte[]
      description: A @'System.Byte' array that represents the data buffer to use with an asynchronous socket method.
- uid: System.Net.Sockets.SocketAsyncEventArgs.BufferList
  id: BufferList
  parent: System.Net.Sockets.SocketAsyncEventArgs
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: BufferList
  fullName: System.Net.Sockets.SocketAsyncEventArgs.BufferList
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 247
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets an array of data buffers to use with an asynchronous socket method.
  syntax:
    content: public IList<ArraySegment<byte>> BufferList { get; set; }
    content.vb: Public Property BufferList As IList(Of ArraySegment(Of Byte))
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: An @'System.Collections.IList' that represents an array of data buffers to use with an asynchronous socket method.
  exceptions:
  - type: System.ArgumentException
    description: There are ambiguous buffers specified on a set operation. This exception occurs if the @'System.Net.Sockets.SocketAsyncEventArgs.Buffer' property has been set to a non-null value and an attempt was made to set the @'System.Net.Sockets.SocketAsyncEventArgs.BufferList' property to a non-null value.
- uid: System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred
  id: BytesTransferred
  parent: System.Net.Sockets.SocketAsyncEventArgs
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: BytesTransferred
  fullName: System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 248
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the number of bytes transferred in the socket operation.
  syntax:
    content: public int BytesTransferred { get; }
    content.vb: Public ReadOnly Property BytesTransferred As Integer
    parameters: []
    return:
      type: System.Int32
      description: An @'System.Int32' that contains the number of bytes transferred in the socket operation.
- uid: System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError
  id: ConnectByNameError
  parent: System.Net.Sockets.SocketAsyncEventArgs
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: ConnectByNameError
  fullName: System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 249
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the exception in the case of a connection failure when a @'System.Net.DnsEndPoint' was used.
  syntax:
    content: public Exception ConnectByNameError { get; }
    content.vb: Public ReadOnly Property ConnectByNameError As Exception
    parameters: []
    return:
      type: System.Exception
      description: An @'System.Exception' that indicates the cause of the connection error when a @'System.Net.DnsEndPoint' was specified for the @'System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint' property.
- uid: System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket
  id: ConnectSocket
  parent: System.Net.Sockets.SocketAsyncEventArgs
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: ConnectSocket
  fullName: System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 250
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: The created and connected @'System.Net.Sockets.Socket' object after successful completion of the <see cref="Overload:System.Net.Sockets.Socket.ConnectAsync" /> method.
  syntax:
    content: public Socket ConnectSocket { get; }
    content.vb: Public ReadOnly Property ConnectSocket As Socket
    parameters: []
    return:
      type: System.Net.Sockets.Socket
      description: The connected @'System.Net.Sockets.Socket' object.
- uid: System.Net.Sockets.SocketAsyncEventArgs.Count
  id: Count
  parent: System.Net.Sockets.SocketAsyncEventArgs
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: Count
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 251
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the maximum amount of data, in bytes, to send or receive in an asynchronous operation.
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: An @'System.Int32' that contains the maximum amount of data, in bytes, to send or receive.
- uid: System.Net.Sockets.SocketAsyncEventArgs.LastOperation
  id: LastOperation
  parent: System.Net.Sockets.SocketAsyncEventArgs
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: LastOperation
  fullName: System.Net.Sockets.SocketAsyncEventArgs.LastOperation
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 252
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the type of socket operation most recently performed with this context object.
  syntax:
    content: public SocketAsyncOperation LastOperation { get; }
    content.vb: Public ReadOnly Property LastOperation As SocketAsyncOperation
    parameters: []
    return:
      type: System.Net.Sockets.SocketAsyncOperation
      description: A @'System.Net.Sockets.SocketAsyncOperation' instance that indicates the type of socket operation most recently performed with this context object.
- uid: System.Net.Sockets.SocketAsyncEventArgs.Offset
  id: Offset
  parent: System.Net.Sockets.SocketAsyncEventArgs
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: Offset
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Offset
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 253
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the offset, in bytes, into the data buffer referenced by the @'System.Net.Sockets.SocketAsyncEventArgs.Buffer' property.
  syntax:
    content: public int Offset { get; }
    content.vb: Public ReadOnly Property Offset As Integer
    parameters: []
    return:
      type: System.Int32
      description: An @'System.Int32' that contains the offset, in bytes, into the data buffer referenced by the @'System.Net.Sockets.SocketAsyncEventArgs.Buffer' property.
- uid: System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo
  id: ReceiveMessageFromPacketInfo
  parent: System.Net.Sockets.SocketAsyncEventArgs
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: ReceiveMessageFromPacketInfo
  fullName: System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 254
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the IP address and interface of a received packet.
  syntax:
    content: public IPPacketInformation ReceiveMessageFromPacketInfo { get; }
    content.vb: Public ReadOnly Property ReceiveMessageFromPacketInfo As IPPacketInformation
    parameters: []
    return:
      type: System.Net.Sockets.IPPacketInformation
      description: An @'System.Net.Sockets.IPPacketInformation' instance that contains the destination IP address and interface of a received packet.
- uid: System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint
  id: RemoteEndPoint
  parent: System.Net.Sockets.SocketAsyncEventArgs
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: RemoteEndPoint
  fullName: System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 255
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets the remote IP endpoint for an asynchronous operation.
  syntax:
    content: public EndPoint RemoteEndPoint { get; set; }
    content.vb: Public Property RemoteEndPoint As EndPoint
    parameters: []
    return:
      type: System.Net.EndPoint
      description: An @'System.Net.EndPoint' that represents the remote IP endpoint for an asynchronous operation.
- uid: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
  id: SendPacketsElements
  parent: System.Net.Sockets.SocketAsyncEventArgs
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: SendPacketsElements
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 256
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets an array of buffers to be sent for an asynchronous operation used by the @'System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)' method.
  syntax:
    content: public SendPacketsElement[] SendPacketsElements { get; set; }
    content.vb: Public Property SendPacketsElements As SendPacketsElement()
    parameters: []
    return:
      type: System.Net.Sockets.SendPacketsElement[]
      description: An array of @'System.Net.Sockets.SendPacketsElement' objects that represent an array of buffers to be sent.
- uid: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize
  id: SendPacketsSendSize
  parent: System.Net.Sockets.SocketAsyncEventArgs
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: SendPacketsSendSize
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 257
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets the size, in bytes, of the data block used in the send operation.
  syntax:
    content: public int SendPacketsSendSize { get; set; }
    content.vb: Public Property SendPacketsSendSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: An @'System.Int32' that contains the size, in bytes, of the data block used in the send operation.
- uid: System.Net.Sockets.SocketAsyncEventArgs.SocketError
  id: SocketError
  parent: System.Net.Sockets.SocketAsyncEventArgs
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: SocketError
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SocketError
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 258
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets the result of the asynchronous socket operation.
  syntax:
    content: public SocketError SocketError { get; set; }
    content.vb: Public Property SocketError As SocketError
    parameters: []
    return:
      type: System.Net.Sockets.SocketError
      description: A @'System.Net.Sockets.SocketError' that represents the result of the asynchronous socket operation.
- uid: System.Net.Sockets.SocketAsyncEventArgs.SocketFlags
  id: SocketFlags
  parent: System.Net.Sockets.SocketAsyncEventArgs
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: SocketFlags
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SocketFlags
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 259
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the results of an asynchronous socket operation or sets the behavior of an asynchronous operation.
  syntax:
    content: public SocketFlags SocketFlags { get; set; }
    content.vb: Public Property SocketFlags As SocketFlags
    parameters: []
    return:
      type: System.Net.Sockets.SocketFlags
      description: A @'System.Net.Sockets.SocketFlags' that represents the results of an asynchronous socket operation.
- uid: System.Net.Sockets.SocketAsyncEventArgs.UserToken
  id: UserToken
  parent: System.Net.Sockets.SocketAsyncEventArgs
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: UserToken
  fullName: System.Net.Sockets.SocketAsyncEventArgs.UserToken
  type: Property
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 260
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets a user or application object associated with this asynchronous socket operation.
  syntax:
    content: public object UserToken { get; set; }
    content.vb: Public Property UserToken As Object
    parameters: []
    return:
      type: System.Object
      description: An object that represents the user or application object associated with this asynchronous socket operation.
- uid: System.Net.Sockets.SocketAsyncEventArgs.Completed
  id: Completed
  parent: System.Net.Sockets.SocketAsyncEventArgs
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: Completed
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Completed
  type: Event
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 261
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: The event used to complete an asynchronous operation.
  syntax:
    content: public event EventHandler<SocketAsyncEventArgs> Completed
    content.vb: Public Event Completed As EventHandler(Of SocketAsyncEventArgs)
- uid: System.Net.Sockets.SocketAsyncEventArgs.Dispose
  id: Dispose
  parent: System.Net.Sockets.SocketAsyncEventArgs
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: Dispose()
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 262
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Releases the unmanaged resources used by the @'System.Net.Sockets.SocketAsyncEventArgs' instance and optionally disposes of the managed resources.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
- uid: System.Net.Sockets.SocketAsyncEventArgs.Finalize
  id: Finalize
  parent: System.Net.Sockets.SocketAsyncEventArgs
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: Finalize()
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Finalize()
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 263
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Frees resources used by the @'System.Net.Sockets.SocketAsyncEventArgs' class.
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
- uid: System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)
  id: OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.SocketAsyncEventArgs
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: OnCompleted(SocketAsyncEventArgs)
  fullName: System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 264
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Represents a method that is called when an asynchronous operation completes.
  syntax:
    content: protected virtual void OnCompleted(SocketAsyncEventArgs e)
    content.vb: Protected Overridable Sub OnCompleted(e As SocketAsyncEventArgs)
    parameters:
    - id: e
      type: System.Net.Sockets.SocketAsyncEventArgs
      description: The event that is signaled.
- uid: System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)
  id: SetBuffer(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Sockets.SocketAsyncEventArgs
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: SetBuffer(Byte[], Int32, Int32)
  name.vb: SetBuffer(Byte(), Int32, Int32)
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte(), System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 265
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sets the data buffer to use with an asynchronous socket method.
  syntax:
    content: public void SetBuffer(byte[] buffer, int offset, int count)
    content.vb: Public Sub SetBuffer(buffer As Byte(), offset As Integer, count As Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The data buffer to use with an asynchronous socket method.
    - id: offset
      type: System.Int32
      description: The offset, in bytes, in the data buffer where the operation starts.
    - id: count
      type: System.Int32
      description: The maximum amount of data, in bytes, to send or receive in the buffer.
  exceptions:
  - type: System.ArgumentException
    description: There are ambiguous buffers specified. This exception occurs if the @'System.Net.Sockets.SocketAsyncEventArgs.Buffer' property is also not null and the @'System.Net.Sockets.SocketAsyncEventArgs.BufferList' property is also not null.
  - type: System.ArgumentOutOfRangeException
    description: An argument was out of range. This exception occurs if the *offset* parameter is less than zero or greater than the length of the array in the @'System.Net.Sockets.SocketAsyncEventArgs.Buffer' property. This exception also occurs if the *count* parameter is less than zero or greater than the length of the array in the @'System.Net.Sockets.SocketAsyncEventArgs.Buffer' property minus the *offset* parameter.
- uid: System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)
  id: SetBuffer(System.Int32,System.Int32)
  parent: System.Net.Sockets.SocketAsyncEventArgs
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: SetBuffer(Int32, Int32)
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 266
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sets the data buffer to use with an asynchronous socket method.
  syntax:
    content: public void SetBuffer(int offset, int count)
    content.vb: Public Sub SetBuffer(offset As Integer, count As Integer)
    parameters:
    - id: offset
      type: System.Int32
      description: The offset, in bytes, in the data buffer where the operation starts.
    - id: count
      type: System.Int32
      description: The maximum amount of data, in bytes, to send or receive in the buffer.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: An argument was out of range. This exception occurs if the *offset* parameter is less than zero or greater than the length of the array in the @'System.Net.Sockets.SocketAsyncEventArgs.Buffer' property. This exception also occurs if the *count* parameter is less than zero or greater than the length of the array in the @'System.Net.Sockets.SocketAsyncEventArgs.Buffer' property minus the *offset* parameter.
references:
- uid: System.Net.Sockets
  isExternal: false
  name: System.Net.Sockets
  fullName: System.Net.Sockets
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.EventArgs
  parent: System
  isExternal: false
  href: System.EventArgs.yml
  name: EventArgs
  fullName: System.EventArgs
  type: Class
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Net.Sockets.Socket
  parent: System.Net.Sockets
  isExternal: false
  href: System.Net.Sockets.Socket.yml
  name: Socket
  fullName: System.Net.Sockets.Socket
  type: Class
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ArraySegment<Byte>>
  name.vb: IList(Of ArraySegment(Of Byte))
  fullName: System.Collections.Generic.IList<System.ArraySegment<System.Byte>>
  fullName.vb: System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.ArraySegment`1
    name: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.ArraySegment`1
    name: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.IList`1.yml
  name: IList<T>
  name.vb: IList(Of T)
  fullName: System.Collections.Generic.IList<T>
  fullName.vb: System.Collections.Generic.IList(Of T)
  type: Interface
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    href: System.Collections.Generic.IList`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    href: System.Collections.Generic.IList`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
  type: Namespace
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System.Exception
  parent: System
  isExternal: false
  href: System.Exception.yml
  name: Exception
  fullName: System.Exception
  type: Class
- uid: System.Net.Sockets.SocketAsyncOperation
  parent: System.Net.Sockets
  isExternal: false
  href: System.Net.Sockets.SocketAsyncOperation.yml
  name: SocketAsyncOperation
  fullName: System.Net.Sockets.SocketAsyncOperation
  type: Enum
- uid: System.Net.Sockets.IPPacketInformation
  parent: System.Net.Sockets
  isExternal: false
  href: System.Net.Sockets.IPPacketInformation.yml
  name: IPPacketInformation
  fullName: System.Net.Sockets.IPPacketInformation
  type: Struct
- uid: System.Net.EndPoint
  parent: System.Net
  isExternal: false
  href: System.Net.EndPoint.yml
  name: EndPoint
  fullName: System.Net.EndPoint
  type: Class
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
  type: Namespace
- uid: System.Net.Sockets.SendPacketsElement[]
  isExternal: false
  href: System.Net.Sockets.SendPacketsElement.yml
  name: SendPacketsElement[]
  name.vb: SendPacketsElement()
  fullName: System.Net.Sockets.SendPacketsElement[]
  fullName.vb: System.Net.Sockets.SendPacketsElement()
  spec.csharp:
  - uid: System.Net.Sockets.SendPacketsElement
    name: SendPacketsElement
    fullName: System.Net.Sockets.SendPacketsElement
    href: System.Net.Sockets.SendPacketsElement.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Net.Sockets.SendPacketsElement
    name: SendPacketsElement
    fullName: System.Net.Sockets.SendPacketsElement
    href: System.Net.Sockets.SendPacketsElement.yml
  - name: ()
    fullName: ()
- uid: System.Net.Sockets.SocketError
  parent: System.Net.Sockets
  isExternal: false
  href: System.Net.Sockets.SocketError.yml
  name: SocketError
  fullName: System.Net.Sockets.SocketError
  type: Enum
- uid: System.Net.Sockets.SocketFlags
  parent: System.Net.Sockets
  isExternal: false
  href: System.Net.Sockets.SocketFlags.yml
  name: SocketFlags
  fullName: System.Net.Sockets.SocketFlags
  type: Enum
- uid: System.Net.Sockets.SocketAsyncEventArgs
  parent: System.Net.Sockets
  isExternal: false
  href: System.Net.Sockets.SocketAsyncEventArgs.yml
  name: SocketAsyncEventArgs
  fullName: System.Net.Sockets.SocketAsyncEventArgs
  type: Class
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  href: System.NotSupportedException.yml
  name: NotSupportedException
  fullName: System.NotSupportedException
  type: Class
  summary: The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  type: Class
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  type: Class
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
