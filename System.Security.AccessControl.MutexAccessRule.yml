items:
- uid: System.Security.AccessControl.MutexAccessRule
  id: MutexAccessRule
  parent: System.Security.AccessControl
  children:
  - System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.MutexAccessRule.MutexRights
  href: System.Security.AccessControl.MutexAccessRule.yml
  name: MutexAccessRule
  fullName: System.Security.AccessControl.MutexAccessRule
  type: Class
  source:
    remote: &o0
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
    startLine: 22
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Represents a set of access rights allowed or denied for a user or group. This class cannot be inherited.
  syntax:
    content: 'public sealed class MutexAccessRule : AccessRule'
    content.vb: Public NotInheritable Class MutexAccessRule Inherits AccessRule
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AccessRule
  inheritedMembers:
  - System.Security.AccessControl.AccessRule.AccessControlType
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.MutexAccessRule
  href: System.Security.AccessControl.MutexAccessRule.yml
  name: MutexAccessRule(IdentityReference, MutexRights, AccessControlType)
  fullName: System.Security.AccessControl.MutexAccessRule.MutexAccessRule(System.Security.Principal.IdentityReference, System.Security.AccessControl.MutexRights, System.Security.AccessControl.AccessControlType)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
    startLine: 25
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the @'System.Security.AccessControl.MutexAccessRule' class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.
  syntax:
    content: public MutexAccessRule(IdentityReference identity, MutexRights eventRights, AccessControlType type)
    content.vb: Public Sub New(identity As IdentityReference, eventRights As MutexRights, type As AccessControlType)
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: The user or group the rule applies to. Must be of type @'System.Security.Principal.SecurityIdentifier' or a type such as @'System.Security.Principal.NTAccount' that can be converted to type @'System.Security.Principal.SecurityIdentifier'.
    - id: eventRights
      type: System.Security.AccessControl.MutexRights
      description: A bitwise combination of @'System.Security.AccessControl.MutexRights' values specifying the rights allowed or denied.
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: One of the @'System.Security.AccessControl.AccessControlType' values specifying whether the rights are allowed or denied.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*eventRights* specifies an invalid value.-or-*type* specifies an invalid value.'
  - type: System.ArgumentNullException
    description: '*identity* is null. -or-*eventRights* is zero.'
  - type: System.ArgumentException
    description: '*identity* is neither of type @''System.Security.Principal.SecurityIdentifier'' nor of a type such as @''System.Security.Principal.NTAccount'' that can be converted to type @''System.Security.Principal.SecurityIdentifier''.'
- uid: System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.MutexAccessRule
  href: System.Security.AccessControl.MutexAccessRule.yml
  name: MutexAccessRule(String, MutexRights, AccessControlType)
  fullName: System.Security.AccessControl.MutexAccessRule.MutexAccessRule(System.String, System.Security.AccessControl.MutexRights, System.Security.AccessControl.AccessControlType)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
    startLine: 26
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the @'System.Security.AccessControl.MutexAccessRule' class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.
  syntax:
    content: public MutexAccessRule(string identity, MutexRights eventRights, AccessControlType type)
    content.vb: Public Sub New(identity As String, eventRights As MutexRights, type As AccessControlType)
    parameters:
    - id: identity
      type: System.String
      description: The name of the user or group the rule applies to.
    - id: eventRights
      type: System.Security.AccessControl.MutexRights
      description: A bitwise combination of @'System.Security.AccessControl.MutexRights' values specifying the rights allowed or denied.
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: One of the @'System.Security.AccessControl.AccessControlType' values specifying whether the rights are allowed or denied.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*eventRights* specifies an invalid value.-or-*type* specifies an invalid value.'
  - type: System.ArgumentNullException
    description: '*eventRights* is zero.'
  - type: System.ArgumentException
    description: '*identity* is null.-or-*identity* is a zero-length string.-or-*identity* is longer than 512 characters.'
- uid: System.Security.AccessControl.MutexAccessRule.MutexRights
  id: MutexRights
  parent: System.Security.AccessControl.MutexAccessRule
  href: System.Security.AccessControl.MutexAccessRule.yml
  name: MutexRights
  fullName: System.Security.AccessControl.MutexAccessRule.MutexRights
  type: Property
  source:
    remote: *o0
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
    startLine: 27
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Gets the rights allowed or denied by the access rule.
  syntax:
    content: public MutexRights MutexRights { get; }
    content.vb: Public ReadOnly Property MutexRights As MutexRights
    parameters: []
    return:
      type: System.Security.AccessControl.MutexRights
      description: A bitwise combination of @'System.Security.AccessControl.MutexRights' values indicating the rights allowed or denied by the access rule.
references:
- uid: System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System.Security.AccessControl.AuthorizationRule
  parent: System.Security.AccessControl
  isExternal: false
  href: System.Security.AccessControl.AuthorizationRule.yml
  name: AuthorizationRule
  fullName: System.Security.AccessControl.AuthorizationRule
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  href: System.Security.AccessControl.AccessRule.yml
  name: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.AccessControl.AccessRule.AccessControlType
  parent: System.Security.AccessControl.AccessRule
  isExternal: false
  href: System.Security.AccessControl.AccessRule.yml
  name: AccessControlType
  fullName: System.Security.AccessControl.AccessRule.AccessControlType
- uid: System.Security.AccessControl.AuthorizationRule.IdentityReference
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  href: System.Security.AccessControl.AuthorizationRule.yml
  name: IdentityReference
  fullName: System.Security.AccessControl.AuthorizationRule.IdentityReference
- uid: System.Security.AccessControl.AuthorizationRule.AccessMask
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  href: System.Security.AccessControl.AuthorizationRule.yml
  name: AccessMask
  fullName: System.Security.AccessControl.AuthorizationRule.AccessMask
- uid: System.Security.AccessControl.AuthorizationRule.IsInherited
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  href: System.Security.AccessControl.AuthorizationRule.yml
  name: IsInherited
  fullName: System.Security.AccessControl.AuthorizationRule.IsInherited
- uid: System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  href: System.Security.AccessControl.AuthorizationRule.yml
  name: InheritanceFlags
  fullName: System.Security.AccessControl.AuthorizationRule.InheritanceFlags
- uid: System.Security.AccessControl.AuthorizationRule.PropagationFlags
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  href: System.Security.AccessControl.AuthorizationRule.yml
  name: PropagationFlags
  fullName: System.Security.AccessControl.AuthorizationRule.PropagationFlags
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  href: System.Security.Principal.IdentityReference.yml
  name: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.MutexRights
  parent: System.Security.AccessControl
  isExternal: false
  href: System.Security.AccessControl.MutexRights.yml
  name: MutexRights
  fullName: System.Security.AccessControl.MutexRights
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  href: System.Security.AccessControl.AccessControlType.yml
  name: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
