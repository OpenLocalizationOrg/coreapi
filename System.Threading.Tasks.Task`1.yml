items:
- uid: System.Threading.Tasks.Task`1
  id: Task`1
  parent: System.Threading.Tasks
  children:
  - System.Threading.Tasks.Task`1.#ctor(System.Func{`0})
  - System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken)
  - System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)
  - System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)
  - System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object)
  - System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)
  - System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)
  - System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)
  - System.Threading.Tasks.Task`1.ConfigureAwait(System.Boolean)
  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object)
  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken)
  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)
  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}})
  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken)
  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskContinuationOptions)
  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0})
  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken)
  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskContinuationOptions)
  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object)
  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken)
  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)
  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task`1.Factory
  - System.Threading.Tasks.Task`1.GetAwaiter
  - System.Threading.Tasks.Task`1.Result
  href: System.Threading.Tasks.Task`1.yml
  name: Task<TResult>
  name.vb: Task(Of TResult)
  fullName: System.Threading.Tasks.Task<TResult>
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Threading/Tasks/future.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 66
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: 'public class Task<TResult> : Task, IAsyncResult'
    content.vb: Public Class Task(Of TResult) Inherits Task Implements IAsyncResult
    typeParameters:
    - id: TResult
  inheritance:
  - System.Object
  - System.Threading.Tasks.Task
  implements:
  - System.IAsyncResult
  inheritedMembers:
  - System.Threading.Tasks.Task.AsyncState
  - System.Threading.Tasks.Task.CompletedTask
  - System.Threading.Tasks.Task.CreationOptions
  - System.Threading.Tasks.Task.CurrentId
  - System.Threading.Tasks.Task.Exception
  - System.Threading.Tasks.Task.Id
  - System.Threading.Tasks.Task.IsCanceled
  - System.Threading.Tasks.Task.IsCompleted
  - System.Threading.Tasks.Task.IsFaulted
  - System.Threading.Tasks.Task.Status
  - System.Threading.Tasks.Task.System#IAsyncResult#AsyncWaitHandle
  - System.Threading.Tasks.Task.System#IAsyncResult#CompletedSynchronously
  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object)
  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)
  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task})
  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)
  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,{TResult}})
  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,{TResult}},System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,{TResult}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,{TResult}},System.Threading.Tasks.TaskContinuationOptions)
  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,{TResult}},System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,{TResult}},System.Object)
  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,{TResult}},System.Object,System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,{TResult}},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,{TResult}},System.Object,System.Threading.Tasks.TaskContinuationOptions)
  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,{TResult}},System.Object,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task.Delay(System.Int32)
  - System.Threading.Tasks.Task.Delay(System.Int32,System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.Delay(System.TimeSpan)
  - System.Threading.Tasks.Task.Delay(System.TimeSpan,System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.FromCanceled(System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.FromCanceled``1(System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.FromException(System.Exception)
  - System.Threading.Tasks.Task.FromException``1(System.Exception)
  - System.Threading.Tasks.Task.FromResult``1({TResult})
  - System.Threading.Tasks.Task.Run(System.Action)
  - System.Threading.Tasks.Task.Run(System.Action,System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task})
  - System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.Run``1(System.Func{{TResult}})
  - System.Threading.Tasks.Task.Run``1(System.Func{{TResult}},System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{{TResult}}})
  - System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{{TResult}}},System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.RunSynchronously
  - System.Threading.Tasks.Task.RunSynchronously(System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task.Start
  - System.Threading.Tasks.Task.Start(System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task.Wait
  - System.Threading.Tasks.Task.Wait(System.Int32)
  - System.Threading.Tasks.Task.Wait(System.Int32,System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.Wait(System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.Wait(System.TimeSpan)
  - System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[])
  - System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32)
  - System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.TimeSpan)
  - System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[])
  - System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32)
  - System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.TimeSpan)
  - System.Threading.Tasks.Task.WhenAll(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})
  - System.Threading.Tasks.Task.WhenAll(System.Threading.Tasks.Task[])
  - System.Threading.Tasks.Task.WhenAll``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{{TResult}}})
  - System.Threading.Tasks.Task.WhenAll``1(System.Threading.Tasks.Task{{TResult}}[])
  - System.Threading.Tasks.Task.WhenAny(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})
  - System.Threading.Tasks.Task.WhenAny(System.Threading.Tasks.Task[])
  - System.Threading.Tasks.Task.WhenAny``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{{TResult}}})
  - System.Threading.Tasks.Task.WhenAny``1(System.Threading.Tasks.Task{{TResult}}[])
  - System.Threading.Tasks.Task.Yield
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{`0})
  id: '#ctor(System.Func{`0})'
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: Task(Func<TResult>)
  name.vb: Task(Func(Of TResult))
  fullName: System.Threading.Tasks.Task<TResult>.Task(System.Func<TResult>)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).Task(System.Func(Of TResult))
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 130
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task(Func<TResult> function)
    content.vb: Public Sub New(function As Func(Of TResult))
    parameters:
    - id: function
      type: System.Func{{TResult}}
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken)
  id: '#ctor(System.Func{`0},System.Threading.CancellationToken)'
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: Task(Func<TResult>, CancellationToken)
  name.vb: Task(Func(Of TResult), CancellationToken)
  fullName: System.Threading.Tasks.Task<TResult>.Task(System.Func<TResult>, System.Threading.CancellationToken)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).Task(System.Func(Of TResult), System.Threading.CancellationToken)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 154
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task(Func<TResult> function, CancellationToken cancellationToken)
    content.vb: Public Sub New(function As Func(Of TResult), cancellationToken As CancellationToken)
    parameters:
    - id: function
      type: System.Func{{TResult}}
    - id: cancellationToken
      type: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)
  id: '#ctor(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)'
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: Task(Func<TResult>, CancellationToken, TaskCreationOptions)
  name.vb: Task(Func(Of TResult), CancellationToken, TaskCreationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.Task(System.Func<TResult>, System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).Task(System.Func(Of TResult), System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 211
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task(Func<TResult> function, CancellationToken cancellationToken, TaskCreationOptions creationOptions)
    content.vb: Public Sub New(function As Func(Of TResult), cancellationToken As CancellationToken, creationOptions As TaskCreationOptions)
    parameters:
    - id: function
      type: System.Func{{TResult}}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: creationOptions
      type: System.Threading.Tasks.TaskCreationOptions
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)
  id: '#ctor(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)'
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: Task(Func<TResult>, TaskCreationOptions)
  name.vb: Task(Func(Of TResult), TaskCreationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.Task(System.Func<TResult>, System.Threading.Tasks.TaskCreationOptions)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).Task(System.Func(Of TResult), System.Threading.Tasks.TaskCreationOptions)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 181
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task(Func<TResult> function, TaskCreationOptions creationOptions)
    content.vb: Public Sub New(function As Func(Of TResult), creationOptions As TaskCreationOptions)
    parameters:
    - id: function
      type: System.Func{{TResult}}
    - id: creationOptions
      type: System.Threading.Tasks.TaskCreationOptions
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object)
  id: '#ctor(System.Func{System.Object,`0},System.Object)'
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: Task(Func<Object, TResult>, Object)
  name.vb: Task(Func(Of Object, TResult), Object)
  fullName: System.Threading.Tasks.Task<TResult>.Task(System.Func<System.Object, TResult>, System.Object)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).Task(System.Func(Of System.Object, TResult), System.Object)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 230
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task(Func<object, TResult> function, object state)
    content.vb: Public Sub New(function As Func(Of Object, TResult), state As Object)
    parameters:
    - id: function
      type: System.Func{System.Object,{TResult}}
    - id: state
      type: System.Object
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)
  id: '#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)'
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: Task(Func<Object, TResult>, Object, CancellationToken)
  name.vb: Task(Func(Of Object, TResult), Object, CancellationToken)
  fullName: System.Threading.Tasks.Task<TResult>.Task(System.Func<System.Object, TResult>, System.Object, System.Threading.CancellationToken)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).Task(System.Func(Of System.Object, TResult), System.Object, System.Threading.CancellationToken)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 254
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task(Func<object, TResult> function, object state, CancellationToken cancellationToken)
    content.vb: Public Sub New(function As Func(Of Object, TResult), state As Object, cancellationToken As CancellationToken)
    parameters:
    - id: function
      type: System.Func{System.Object,{TResult}}
    - id: state
      type: System.Object
    - id: cancellationToken
      type: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)
  id: '#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)'
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: Task(Func<Object, TResult>, Object, CancellationToken, TaskCreationOptions)
  name.vb: Task(Func(Of Object, TResult), Object, CancellationToken, TaskCreationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.Task(System.Func<System.Object, TResult>, System.Object, System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).Task(System.Func(Of System.Object, TResult), System.Object, System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 315
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task(Func<object, TResult> function, object state, CancellationToken cancellationToken, TaskCreationOptions creationOptions)
    content.vb: Public Sub New(function As Func(Of Object, TResult), state As Object, cancellationToken As CancellationToken, creationOptions As TaskCreationOptions)
    parameters:
    - id: function
      type: System.Func{System.Object,{TResult}}
    - id: state
      type: System.Object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: creationOptions
      type: System.Threading.Tasks.TaskCreationOptions
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)
  id: '#ctor(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)'
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: Task(Func<Object, TResult>, Object, TaskCreationOptions)
  name.vb: Task(Func(Of Object, TResult), Object, TaskCreationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.Task(System.Func<System.Object, TResult>, System.Object, System.Threading.Tasks.TaskCreationOptions)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).Task(System.Func(Of System.Object, TResult), System.Object, System.Threading.Tasks.TaskCreationOptions)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 282
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task(Func<object, TResult> function, object state, TaskCreationOptions creationOptions)
    content.vb: Public Sub New(function As Func(Of Object, TResult), state As Object, creationOptions As TaskCreationOptions)
    parameters:
    - id: function
      type: System.Func{System.Object,{TResult}}
    - id: state
      type: System.Object
    - id: creationOptions
      type: System.Threading.Tasks.TaskCreationOptions
- uid: System.Threading.Tasks.Task`1.Factory
  id: Factory
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: Factory
  fullName: System.Threading.Tasks.Task<TResult>.Factory
  fullName.vb: System.Threading.Tasks.Task(Of TResult).Factory
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 662
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public static TaskFactory<TResult> Factory { get; }
    content.vb: Public Shared ReadOnly Property Factory As TaskFactory(Of TResult)
    parameters: []
    return:
      type: System.Threading.Tasks.TaskFactory{{TResult}}
- uid: System.Threading.Tasks.Task`1.Result
  id: Result
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: Result
  fullName: System.Threading.Tasks.Task<TResult>.Result
  fullName.vb: System.Threading.Tasks.Task(Of TResult).Result
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 523
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public TResult Result { get; }
    content.vb: Public ReadOnly Property Result As TResult
    parameters: []
    return:
      type: '{TResult}'
- uid: System.Threading.Tasks.Task`1.ConfigureAwait(System.Boolean)
  id: ConfigureAwait(System.Boolean)
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: ConfigureAwait(Boolean)
  fullName: System.Threading.Tasks.Task<TResult>.ConfigureAwait(System.Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).ConfigureAwait(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 701
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public ConfiguredTaskAwaitable<TResult> ConfigureAwait(bool continueOnCapturedContext)
    content.vb: Public Function ConfigureAwait(continueOnCapturedContext As Boolean) As ConfiguredTaskAwaitable(Of TResult)
    parameters:
    - id: continueOnCapturedContext
      type: System.Boolean
    return:
      type: System.Runtime.CompilerServices.ConfiguredTaskAwaitable{{TResult}}
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object)
  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object)
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: ContinueWith(Action<Task<TResult>, Object>, Object)
  name.vb: ContinueWith(Action(Of Task(Of TResult), Object), Object)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(System.Action<System.Threading.Tasks.Task<TResult>, System.Object>, System.Object)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).ContinueWith(System.Action(Of System.Threading.Tasks.Task(Of TResult), System.Object), System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 928
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task ContinueWith(Action<Task<TResult>, object> continuationAction, object state)
    content.vb: Public Function ContinueWith(continuationAction As Action(Of Task(Of TResult), Object), state As Object) As Task
    parameters:
    - id: continuationAction
      type: System.Action{System.Threading.Tasks.Task`1,System.Object}
    - id: state
      type: System.Object
    return:
      type: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken)
  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: ContinueWith(Action<Task<TResult>, Object>, Object, CancellationToken)
  name.vb: ContinueWith(Action(Of Task(Of TResult), Object), Object, CancellationToken)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(System.Action<System.Threading.Tasks.Task<TResult>, System.Object>, System.Object, System.Threading.CancellationToken)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).ContinueWith(System.Action(Of System.Threading.Tasks.Task(Of TResult), System.Object), System.Object, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 957
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task ContinueWith(Action<Task<TResult>, object> continuationAction, object state, CancellationToken cancellationToken)
    content.vb: Public Function ContinueWith(continuationAction As Action(Of Task(Of TResult), Object), state As Object, cancellationToken As CancellationToken) As Task
    parameters:
    - id: continuationAction
      type: System.Action{System.Threading.Tasks.Task`1,System.Object}
    - id: state
      type: System.Object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: ContinueWith(Action<Task<TResult>, Object>, Object, CancellationToken, TaskContinuationOptions, TaskScheduler)
  name.vb: ContinueWith(Action(Of Task(Of TResult), Object), Object, CancellationToken, TaskContinuationOptions, TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(System.Action<System.Threading.Tasks.Task<TResult>, System.Object>, System.Object, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).ContinueWith(System.Action(Of System.Threading.Tasks.Task(Of TResult), System.Object), System.Object, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 1070
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task ContinueWith(Action<Task<TResult>, object> continuationAction, object state, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
    content.vb: Public Function ContinueWith(continuationAction As Action(Of Task(Of TResult), Object), state As Object, cancellationToken As CancellationToken, continuationOptions As TaskContinuationOptions, scheduler As TaskScheduler) As Task
    parameters:
    - id: continuationAction
      type: System.Action{System.Threading.Tasks.Task`1,System.Object}
    - id: state
      type: System.Object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: continuationOptions
      type: System.Threading.Tasks.TaskContinuationOptions
    - id: scheduler
      type: System.Threading.Tasks.TaskScheduler
    return:
      type: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)
  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: ContinueWith(Action<Task<TResult>, Object>, Object, TaskContinuationOptions)
  name.vb: ContinueWith(Action(Of Task(Of TResult), Object), Object, TaskContinuationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(System.Action<System.Threading.Tasks.Task<TResult>, System.Object>, System.Object, System.Threading.Tasks.TaskContinuationOptions)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).ContinueWith(System.Action(Of System.Threading.Tasks.Task(Of TResult), System.Object), System.Object, System.Threading.Tasks.TaskContinuationOptions)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 1024
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task ContinueWith(Action<Task<TResult>, object> continuationAction, object state, TaskContinuationOptions continuationOptions)
    content.vb: Public Function ContinueWith(continuationAction As Action(Of Task(Of TResult), Object), state As Object, continuationOptions As TaskContinuationOptions) As Task
    parameters:
    - id: continuationAction
      type: System.Action{System.Threading.Tasks.Task`1,System.Object}
    - id: state
      type: System.Object
    - id: continuationOptions
      type: System.Threading.Tasks.TaskContinuationOptions
    return:
      type: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskScheduler)
  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: ContinueWith(Action<Task<TResult>, Object>, Object, TaskScheduler)
  name.vb: ContinueWith(Action(Of Task(Of TResult), Object), Object, TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(System.Action<System.Threading.Tasks.Task<TResult>, System.Object>, System.Object, System.Threading.Tasks.TaskScheduler)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).ContinueWith(System.Action(Of System.Threading.Tasks.Task(Of TResult), System.Object), System.Object, System.Threading.Tasks.TaskScheduler)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 988
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task ContinueWith(Action<Task<TResult>, object> continuationAction, object state, TaskScheduler scheduler)
    content.vb: Public Function ContinueWith(continuationAction As Action(Of Task(Of TResult), Object), state As Object, scheduler As TaskScheduler) As Task
    parameters:
    - id: continuationAction
      type: System.Action{System.Threading.Tasks.Task`1,System.Object}
    - id: state
      type: System.Object
    - id: scheduler
      type: System.Threading.Tasks.TaskScheduler
    return:
      type: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}})
  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0}})
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: ContinueWith(Action<Task<TResult>>)
  name.vb: ContinueWith(Action(Of Task(Of TResult)))
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(System.Action<System.Threading.Tasks.Task<TResult>>)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).ContinueWith(System.Action(Of System.Threading.Tasks.Task(Of TResult)))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 728
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task ContinueWith(Action<Task<TResult>> continuationAction)
    content.vb: Public Function ContinueWith(continuationAction As Action(Of Task(Of TResult))) As Task
    parameters:
    - id: continuationAction
      type: System.Action{System.Threading.Tasks.Task`1}
    return:
      type: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken)
  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: ContinueWith(Action<Task<TResult>>, CancellationToken)
  name.vb: ContinueWith(Action(Of Task(Of TResult)), CancellationToken)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(System.Action<System.Threading.Tasks.Task<TResult>>, System.Threading.CancellationToken)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).ContinueWith(System.Action(Of System.Threading.Tasks.Task(Of TResult)), System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 756
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task ContinueWith(Action<Task<TResult>> continuationAction, CancellationToken cancellationToken)
    content.vb: Public Function ContinueWith(continuationAction As Action(Of Task(Of TResult)), cancellationToken As CancellationToken) As Task
    parameters:
    - id: continuationAction
      type: System.Action{System.Threading.Tasks.Task`1}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: ContinueWith(Action<Task<TResult>>, CancellationToken, TaskContinuationOptions, TaskScheduler)
  name.vb: ContinueWith(Action(Of Task(Of TResult)), CancellationToken, TaskContinuationOptions, TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(System.Action<System.Threading.Tasks.Task<TResult>>, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).ContinueWith(System.Action(Of System.Threading.Tasks.Task(Of TResult)), System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 866
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task ContinueWith(Action<Task<TResult>> continuationAction, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
    content.vb: Public Function ContinueWith(continuationAction As Action(Of Task(Of TResult)), cancellationToken As CancellationToken, continuationOptions As TaskContinuationOptions, scheduler As TaskScheduler) As Task
    parameters:
    - id: continuationAction
      type: System.Action{System.Threading.Tasks.Task`1}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: continuationOptions
      type: System.Threading.Tasks.TaskContinuationOptions
    - id: scheduler
      type: System.Threading.Tasks.TaskScheduler
    return:
      type: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskContinuationOptions)
  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskContinuationOptions)
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: ContinueWith(Action<Task<TResult>>, TaskContinuationOptions)
  name.vb: ContinueWith(Action(Of Task(Of TResult)), TaskContinuationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(System.Action<System.Threading.Tasks.Task<TResult>>, System.Threading.Tasks.TaskContinuationOptions)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).ContinueWith(System.Action(Of System.Threading.Tasks.Task(Of TResult)), System.Threading.Tasks.TaskContinuationOptions)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 821
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task ContinueWith(Action<Task<TResult>> continuationAction, TaskContinuationOptions continuationOptions)
    content.vb: Public Function ContinueWith(continuationAction As Action(Of Task(Of TResult)), continuationOptions As TaskContinuationOptions) As Task
    parameters:
    - id: continuationAction
      type: System.Action{System.Threading.Tasks.Task`1}
    - id: continuationOptions
      type: System.Threading.Tasks.TaskContinuationOptions
    return:
      type: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskScheduler)
  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: ContinueWith(Action<Task<TResult>>, TaskScheduler)
  name.vb: ContinueWith(Action(Of Task(Of TResult)), TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(System.Action<System.Threading.Tasks.Task<TResult>>, System.Threading.Tasks.TaskScheduler)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).ContinueWith(System.Action(Of System.Threading.Tasks.Task(Of TResult)), System.Threading.Tasks.TaskScheduler)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 786
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task ContinueWith(Action<Task<TResult>> continuationAction, TaskScheduler scheduler)
    content.vb: Public Function ContinueWith(continuationAction As Action(Of Task(Of TResult)), scheduler As TaskScheduler) As Task
    parameters:
    - id: continuationAction
      type: System.Action{System.Threading.Tasks.Task`1}
    - id: scheduler
      type: System.Threading.Tasks.TaskScheduler
    return:
      type: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0})
  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0})
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: ContinueWith<TNewResult>(Func<Task<TResult>, TNewResult>)
  name.vb: ContinueWith(Of TNewResult)(Func(Of Task(Of TResult), TNewResult))
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith<TNewResult>(System.Func<System.Threading.Tasks.Task<TResult>, TNewResult>)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).ContinueWith(Of TNewResult)(System.Func(Of System.Threading.Tasks.Task(Of TResult), TNewResult))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 1135
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task<TNewResult> ContinueWith<TNewResult>(Func<Task<TResult>, TNewResult> continuationFunction)
    content.vb: Public Function ContinueWith(Of TNewResult)(continuationFunction As Func(Of Task(Of TResult), TNewResult)) As Task(Of TNewResult)
    parameters:
    - id: continuationFunction
      type: System.Func{System.Threading.Tasks.Task`1,{TNewResult}}
    typeParameters:
    - id: TNewResult
    return:
      type: System.Threading.Tasks.Task{{TNewResult}}
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken)
  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: ContinueWith<TNewResult>(Func<Task<TResult>, TNewResult>, CancellationToken)
  name.vb: ContinueWith(Of TNewResult)(Func(Of Task(Of TResult), TNewResult), CancellationToken)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith<TNewResult>(System.Func<System.Threading.Tasks.Task<TResult>, TNewResult>, System.Threading.CancellationToken)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).ContinueWith(Of TNewResult)(System.Func(Of System.Threading.Tasks.Task(Of TResult), TNewResult), System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 1166
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task<TNewResult> ContinueWith<TNewResult>(Func<Task<TResult>, TNewResult> continuationFunction, CancellationToken cancellationToken)
    content.vb: Public Function ContinueWith(Of TNewResult)(continuationFunction As Func(Of Task(Of TResult), TNewResult), cancellationToken As CancellationToken) As Task(Of TNewResult)
    parameters:
    - id: continuationFunction
      type: System.Func{System.Threading.Tasks.Task`1,{TNewResult}}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TNewResult
    return:
      type: System.Threading.Tasks.Task{{TNewResult}}
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: ContinueWith<TNewResult>(Func<Task<TResult>, TNewResult>, CancellationToken, TaskContinuationOptions, TaskScheduler)
  name.vb: ContinueWith(Of TNewResult)(Func(Of Task(Of TResult), TNewResult), CancellationToken, TaskContinuationOptions, TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith<TNewResult>(System.Func<System.Threading.Tasks.Task<TResult>, TNewResult>, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).ContinueWith(Of TNewResult)(System.Func(Of System.Threading.Tasks.Task(Of TResult), TNewResult), System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 1297
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task<TNewResult> ContinueWith<TNewResult>(Func<Task<TResult>, TNewResult> continuationFunction, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
    content.vb: Public Function ContinueWith(Of TNewResult)(continuationFunction As Func(Of Task(Of TResult), TNewResult), cancellationToken As CancellationToken, continuationOptions As TaskContinuationOptions, scheduler As TaskScheduler) As Task(Of TNewResult)
    parameters:
    - id: continuationFunction
      type: System.Func{System.Threading.Tasks.Task`1,{TNewResult}}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: continuationOptions
      type: System.Threading.Tasks.TaskContinuationOptions
    - id: scheduler
      type: System.Threading.Tasks.TaskScheduler
    typeParameters:
    - id: TNewResult
    return:
      type: System.Threading.Tasks.Task{{TNewResult}}
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskContinuationOptions)
  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskContinuationOptions)
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: ContinueWith<TNewResult>(Func<Task<TResult>, TNewResult>, TaskContinuationOptions)
  name.vb: ContinueWith(Of TNewResult)(Func(Of Task(Of TResult), TNewResult), TaskContinuationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith<TNewResult>(System.Func<System.Threading.Tasks.Task<TResult>, TNewResult>, System.Threading.Tasks.TaskContinuationOptions)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).ContinueWith(Of TNewResult)(System.Func(Of System.Threading.Tasks.Task(Of TResult), TNewResult), System.Threading.Tasks.TaskContinuationOptions)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 1242
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task<TNewResult> ContinueWith<TNewResult>(Func<Task<TResult>, TNewResult> continuationFunction, TaskContinuationOptions continuationOptions)
    content.vb: Public Function ContinueWith(Of TNewResult)(continuationFunction As Func(Of Task(Of TResult), TNewResult), continuationOptions As TaskContinuationOptions) As Task(Of TNewResult)
    parameters:
    - id: continuationFunction
      type: System.Func{System.Threading.Tasks.Task`1,{TNewResult}}
    - id: continuationOptions
      type: System.Threading.Tasks.TaskContinuationOptions
    typeParameters:
    - id: TNewResult
    return:
      type: System.Threading.Tasks.Task{{TNewResult}}
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskScheduler)
  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: ContinueWith<TNewResult>(Func<Task<TResult>, TNewResult>, TaskScheduler)
  name.vb: ContinueWith(Of TNewResult)(Func(Of Task(Of TResult), TNewResult), TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith<TNewResult>(System.Func<System.Threading.Tasks.Task<TResult>, TNewResult>, System.Threading.Tasks.TaskScheduler)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).ContinueWith(Of TNewResult)(System.Func(Of System.Threading.Tasks.Task(Of TResult), TNewResult), System.Threading.Tasks.TaskScheduler)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 1198
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task<TNewResult> ContinueWith<TNewResult>(Func<Task<TResult>, TNewResult> continuationFunction, TaskScheduler scheduler)
    content.vb: Public Function ContinueWith(Of TNewResult)(continuationFunction As Func(Of Task(Of TResult), TNewResult), scheduler As TaskScheduler) As Task(Of TNewResult)
    parameters:
    - id: continuationFunction
      type: System.Func{System.Threading.Tasks.Task`1,{TNewResult}}
    - id: scheduler
      type: System.Threading.Tasks.TaskScheduler
    typeParameters:
    - id: TNewResult
    return:
      type: System.Threading.Tasks.Task{{TNewResult}}
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object)
  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object)
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: ContinueWith<TNewResult>(Func<Task<TResult>, Object, TNewResult>, Object)
  name.vb: ContinueWith(Of TNewResult)(Func(Of Task(Of TResult), Object, TNewResult), Object)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith<TNewResult>(System.Func<System.Threading.Tasks.Task<TResult>, System.Object, TNewResult>, System.Object)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).ContinueWith(Of TNewResult)(System.Func(Of System.Threading.Tasks.Task(Of TResult), System.Object, TNewResult), System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 1362
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task<TNewResult> ContinueWith<TNewResult>(Func<Task<TResult>, object, TNewResult> continuationFunction, object state)
    content.vb: Public Function ContinueWith(Of TNewResult)(continuationFunction As Func(Of Task(Of TResult), Object, TNewResult), state As Object) As Task(Of TNewResult)
    parameters:
    - id: continuationFunction
      type: System.Func{System.Threading.Tasks.Task`1,System.Object,{TNewResult}}
    - id: state
      type: System.Object
    typeParameters:
    - id: TNewResult
    return:
      type: System.Threading.Tasks.Task{{TNewResult}}
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken)
  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: ContinueWith<TNewResult>(Func<Task<TResult>, Object, TNewResult>, Object, CancellationToken)
  name.vb: ContinueWith(Of TNewResult)(Func(Of Task(Of TResult), Object, TNewResult), Object, CancellationToken)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith<TNewResult>(System.Func<System.Threading.Tasks.Task<TResult>, System.Object, TNewResult>, System.Object, System.Threading.CancellationToken)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).ContinueWith(Of TNewResult)(System.Func(Of System.Threading.Tasks.Task(Of TResult), System.Object, TNewResult), System.Object, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 1394
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task<TNewResult> ContinueWith<TNewResult>(Func<Task<TResult>, object, TNewResult> continuationFunction, object state, CancellationToken cancellationToken)
    content.vb: Public Function ContinueWith(Of TNewResult)(continuationFunction As Func(Of Task(Of TResult), Object, TNewResult), state As Object, cancellationToken As CancellationToken) As Task(Of TNewResult)
    parameters:
    - id: continuationFunction
      type: System.Func{System.Threading.Tasks.Task`1,System.Object,{TNewResult}}
    - id: state
      type: System.Object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TNewResult
    return:
      type: System.Threading.Tasks.Task{{TNewResult}}
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: ContinueWith<TNewResult>(Func<Task<TResult>, Object, TNewResult>, Object, CancellationToken, TaskContinuationOptions, TaskScheduler)
  name.vb: ContinueWith(Of TNewResult)(Func(Of Task(Of TResult), Object, TNewResult), Object, CancellationToken, TaskContinuationOptions, TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith<TNewResult>(System.Func<System.Threading.Tasks.Task<TResult>, System.Object, TNewResult>, System.Object, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).ContinueWith(Of TNewResult)(System.Func(Of System.Threading.Tasks.Task(Of TResult), System.Object, TNewResult), System.Object, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 1531
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task<TNewResult> ContinueWith<TNewResult>(Func<Task<TResult>, object, TNewResult> continuationFunction, object state, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
    content.vb: Public Function ContinueWith(Of TNewResult)(continuationFunction As Func(Of Task(Of TResult), Object, TNewResult), state As Object, cancellationToken As CancellationToken, continuationOptions As TaskContinuationOptions, scheduler As TaskScheduler) As Task(Of TNewResult)
    parameters:
    - id: continuationFunction
      type: System.Func{System.Threading.Tasks.Task`1,System.Object,{TNewResult}}
    - id: state
      type: System.Object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: continuationOptions
      type: System.Threading.Tasks.TaskContinuationOptions
    - id: scheduler
      type: System.Threading.Tasks.TaskScheduler
    typeParameters:
    - id: TNewResult
    return:
      type: System.Threading.Tasks.Task{{TNewResult}}
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)
  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: ContinueWith<TNewResult>(Func<Task<TResult>, Object, TNewResult>, Object, TaskContinuationOptions)
  name.vb: ContinueWith(Of TNewResult)(Func(Of Task(Of TResult), Object, TNewResult), Object, TaskContinuationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith<TNewResult>(System.Func<System.Threading.Tasks.Task<TResult>, System.Object, TNewResult>, System.Object, System.Threading.Tasks.TaskContinuationOptions)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).ContinueWith(Of TNewResult)(System.Func(Of System.Threading.Tasks.Task(Of TResult), System.Object, TNewResult), System.Object, System.Threading.Tasks.TaskContinuationOptions)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 1474
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task<TNewResult> ContinueWith<TNewResult>(Func<Task<TResult>, object, TNewResult> continuationFunction, object state, TaskContinuationOptions continuationOptions)
    content.vb: Public Function ContinueWith(Of TNewResult)(continuationFunction As Func(Of Task(Of TResult), Object, TNewResult), state As Object, continuationOptions As TaskContinuationOptions) As Task(Of TNewResult)
    parameters:
    - id: continuationFunction
      type: System.Func{System.Threading.Tasks.Task`1,System.Object,{TNewResult}}
    - id: state
      type: System.Object
    - id: continuationOptions
      type: System.Threading.Tasks.TaskContinuationOptions
    typeParameters:
    - id: TNewResult
    return:
      type: System.Threading.Tasks.Task{{TNewResult}}
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)
  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: ContinueWith<TNewResult>(Func<Task<TResult>, Object, TNewResult>, Object, TaskScheduler)
  name.vb: ContinueWith(Of TNewResult)(Func(Of Task(Of TResult), Object, TNewResult), Object, TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith<TNewResult>(System.Func<System.Threading.Tasks.Task<TResult>, System.Object, TNewResult>, System.Object, System.Threading.Tasks.TaskScheduler)
  fullName.vb: System.Threading.Tasks.Task(Of TResult).ContinueWith(Of TNewResult)(System.Func(Of System.Threading.Tasks.Task(Of TResult), System.Object, TNewResult), System.Object, System.Threading.Tasks.TaskScheduler)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 1428
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public Task<TNewResult> ContinueWith<TNewResult>(Func<Task<TResult>, object, TNewResult> continuationFunction, object state, TaskScheduler scheduler)
    content.vb: Public Function ContinueWith(Of TNewResult)(continuationFunction As Func(Of Task(Of TResult), Object, TNewResult), state As Object, scheduler As TaskScheduler) As Task(Of TNewResult)
    parameters:
    - id: continuationFunction
      type: System.Func{System.Threading.Tasks.Task`1,System.Object,{TNewResult}}
    - id: state
      type: System.Object
    - id: scheduler
      type: System.Threading.Tasks.TaskScheduler
    typeParameters:
    - id: TNewResult
    return:
      type: System.Threading.Tasks.Task{{TNewResult}}
- uid: System.Threading.Tasks.Task`1.GetAwaiter
  id: GetAwaiter
  parent: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: GetAwaiter()
  fullName: System.Threading.Tasks.Task<TResult>.GetAwaiter()
  fullName.vb: System.Threading.Tasks.Task(Of TResult).GetAwaiter()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Tasks/future.cs
    startLine: 691
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  syntax:
    content: public TaskAwaiter<TResult> GetAwaiter()
    content.vb: Public Function GetAwaiter As TaskAwaiter(Of TResult)
    return:
      type: System.Runtime.CompilerServices.TaskAwaiter{{TResult}}
references:
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: Task
  fullName: System.Threading.Tasks.Task
  type: Class
- uid: System.Threading.Tasks.Task.AsyncState
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: AsyncState
  fullName: System.Threading.Tasks.Task.AsyncState
- uid: System.Threading.Tasks.Task.CompletedTask
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: CompletedTask
  fullName: System.Threading.Tasks.Task.CompletedTask
- uid: System.Threading.Tasks.Task.CreationOptions
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: CreationOptions
  fullName: System.Threading.Tasks.Task.CreationOptions
- uid: System.Threading.Tasks.Task.CurrentId
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: CurrentId
  fullName: System.Threading.Tasks.Task.CurrentId
- uid: System.Threading.Tasks.Task.Exception
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: Exception
  fullName: System.Threading.Tasks.Task.Exception
- uid: System.Threading.Tasks.Task.Id
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: Id
  fullName: System.Threading.Tasks.Task.Id
- uid: System.Threading.Tasks.Task.IsCanceled
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: IsCanceled
  fullName: System.Threading.Tasks.Task.IsCanceled
- uid: System.Threading.Tasks.Task.IsCompleted
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: IsCompleted
  fullName: System.Threading.Tasks.Task.IsCompleted
- uid: System.Threading.Tasks.Task.IsFaulted
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: IsFaulted
  fullName: System.Threading.Tasks.Task.IsFaulted
- uid: System.Threading.Tasks.Task.Status
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: Status
  fullName: System.Threading.Tasks.Task.Status
- uid: System.Threading.Tasks.Task.System#IAsyncResult#AsyncWaitHandle
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: IAsyncResult.AsyncWaitHandle
  name.vb: System.IAsyncResult.AsyncWaitHandle
  fullName: System.Threading.Tasks.Task.System.IAsyncResult.AsyncWaitHandle
- uid: System.Threading.Tasks.Task.System#IAsyncResult#CompletedSynchronously
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: IAsyncResult.CompletedSynchronously
  name.vb: System.IAsyncResult.CompletedSynchronously
  fullName: System.Threading.Tasks.Task.System.IAsyncResult.CompletedSynchronously
- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: ContinueWith(Action<Task, Object>, Object)
  name.vb: ContinueWith(Action(Of Task, Object), Object)
  fullName: System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task, System.Object>, System.Object)
  fullName.vb: System.Threading.Tasks.Task.ContinueWith(System.Action(Of System.Threading.Tasks.Task, System.Object), System.Object)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object)
    name: ContinueWith
    fullName: System.Threading.Tasks.Task.ContinueWith
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action`2
    name: Action
    fullName: System.Action
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object)
    name: ContinueWith
    fullName: System.Threading.Tasks.Task.ContinueWith
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action`2
    name: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: ContinueWith(Action<Task, Object>, Object, CancellationToken)
  name.vb: ContinueWith(Action(Of Task, Object), Object, CancellationToken)
  fullName: System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task, System.Object>, System.Object, System.Threading.CancellationToken)
  fullName.vb: System.Threading.Tasks.Task.ContinueWith(System.Action(Of System.Threading.Tasks.Task, System.Object), System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken)
    name: ContinueWith
    fullName: System.Threading.Tasks.Task.ContinueWith
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action`2
    name: Action
    fullName: System.Action
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken)
    name: ContinueWith
    fullName: System.Threading.Tasks.Task.ContinueWith
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action`2
    name: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: ContinueWith(Action<Task, Object>, Object, CancellationToken, TaskContinuationOptions, TaskScheduler)
  name.vb: ContinueWith(Action(Of Task, Object), Object, CancellationToken, TaskContinuationOptions, TaskScheduler)
  fullName: System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task, System.Object>, System.Object, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)
  fullName.vb: System.Threading.Tasks.Task.ContinueWith(System.Action(Of System.Threading.Tasks.Task, System.Object), System.Object, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
    name: ContinueWith
    fullName: System.Threading.Tasks.Task.ContinueWith
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action`2
    name: Action
    fullName: System.Action
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskContinuationOptions
    name: TaskContinuationOptions
    fullName: System.Threading.Tasks.TaskContinuationOptions
    href: System.Threading.Tasks.TaskContinuationOptions.yml
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskScheduler
    name: TaskScheduler
    fullName: System.Threading.Tasks.TaskScheduler
    href: System.Threading.Tasks.TaskScheduler.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
    name: ContinueWith
    fullName: System.Threading.Tasks.Task.ContinueWith
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action`2
    name: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskContinuationOptions
    name: TaskContinuationOptions
    fullName: System.Threading.Tasks.TaskContinuationOptions
    href: System.Threading.Tasks.TaskContinuationOptions.yml
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskScheduler
    name: TaskScheduler
    fullName: System.Threading.Tasks.TaskScheduler
    href: System.Threading.Tasks.TaskScheduler.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: ContinueWith(Action<Task, Object>, Object, TaskContinuationOptions)
  name.vb: ContinueWith(Action(Of Task, Object), Object, TaskContinuationOptions)
  fullName: System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task, System.Object>, System.Object, System.Threading.Tasks.TaskContinuationOptions)
  fullName.vb: System.Threading.Tasks.Task.ContinueWith(System.Action(Of System.Threading.Tasks.Task, System.Object), System.Object, System.Threading.Tasks.TaskContinuationOptions)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)
    name: ContinueWith
    fullName: System.Threading.Tasks.Task.ContinueWith
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action`2
    name: Action
    fullName: System.Action
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskContinuationOptions
    name: TaskContinuationOptions
    fullName: System.Threading.Tasks.TaskContinuationOptions
    href: System.Threading.Tasks.TaskContinuationOptions.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)
    name: ContinueWith
    fullName: System.Threading.Tasks.Task.ContinueWith
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action`2
    name: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskContinuationOptions
    name: TaskContinuationOptions
    fullName: System.Threading.Tasks.TaskContinuationOptions
    href: System.Threading.Tasks.TaskContinuationOptions.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: ContinueWith(Action<Task, Object>, Object, TaskScheduler)
  name.vb: ContinueWith(Action(Of Task, Object), Object, TaskScheduler)
  fullName: System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task, System.Object>, System.Object, System.Threading.Tasks.TaskScheduler)
  fullName.vb: System.Threading.Tasks.Task.ContinueWith(System.Action(Of System.Threading.Tasks.Task, System.Object), System.Object, System.Threading.Tasks.TaskScheduler)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskScheduler)
    name: ContinueWith
    fullName: System.Threading.Tasks.Task.ContinueWith
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action`2
    name: Action
    fullName: System.Action
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskScheduler
    name: TaskScheduler
    fullName: System.Threading.Tasks.TaskScheduler
    href: System.Threading.Tasks.TaskScheduler.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskScheduler)
    name: ContinueWith
    fullName: System.Threading.Tasks.Task.ContinueWith
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action`2
    name: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskScheduler
    name: TaskScheduler
    fullName: System.Threading.Tasks.TaskScheduler
    href: System.Threading.Tasks.TaskScheduler.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task})
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: ContinueWith(Action<Task>)
  name.vb: ContinueWith(Action(Of Task))
  fullName: System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)
  fullName.vb: System.Threading.Tasks.Task.ContinueWith(System.Action(Of System.Threading.Tasks.Task))
  spec.csharp:
  - uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task})
    name: ContinueWith
    fullName: System.Threading.Tasks.Task.ContinueWith
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task})
    name: ContinueWith
    fullName: System.Threading.Tasks.Task.ContinueWith
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: ContinueWith(Action<Task>, CancellationToken)
  name.vb: ContinueWith(Action(Of Task), CancellationToken)
  fullName: System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>, System.Threading.CancellationToken)
  fullName.vb: System.Threading.Tasks.Task.ContinueWith(System.Action(Of System.Threading.Tasks.Task), System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)
    name: ContinueWith
    fullName: System.Threading.Tasks.Task.ContinueWith
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)
    name: ContinueWith
    fullName: System.Threading.Tasks.Task.ContinueWith
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: ContinueWith(Action<Task>, CancellationToken, TaskContinuationOptions, TaskScheduler)
  name.vb: ContinueWith(Action(Of Task), CancellationToken, TaskContinuationOptions, TaskScheduler)
  fullName: System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)
  fullName.vb: System.Threading.Tasks.Task.ContinueWith(System.Action(Of System.Threading.Tasks.Task), System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
    name: ContinueWith
    fullName: System.Threading.Tasks.Task.ContinueWith
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskContinuationOptions
    name: TaskContinuationOptions
    fullName: System.Threading.Tasks.TaskContinuationOptions
    href: System.Threading.Tasks.TaskContinuationOptions.yml
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskScheduler
    name: TaskScheduler
    fullName: System.Threading.Tasks.TaskScheduler
    href: System.Threading.Tasks.TaskScheduler.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
    name: ContinueWith
    fullName: System.Threading.Tasks.Task.ContinueWith
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskContinuationOptions
    name: TaskContinuationOptions
    fullName: System.Threading.Tasks.TaskContinuationOptions
    href: System.Threading.Tasks.TaskContinuationOptions.yml
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskScheduler
    name: TaskScheduler
    fullName: System.Threading.Tasks.TaskScheduler
    href: System.Threading.Tasks.TaskScheduler.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: ContinueWith(Action<Task>, TaskContinuationOptions)
  name.vb: ContinueWith(Action(Of Task), TaskContinuationOptions)
  fullName: System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>, System.Threading.Tasks.TaskContinuationOptions)
  fullName.vb: System.Threading.Tasks.Task.ContinueWith(System.Action(Of System.Threading.Tasks.Task), System.Threading.Tasks.TaskContinuationOptions)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)
    name: ContinueWith
    fullName: System.Threading.Tasks.Task.ContinueWith
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskContinuationOptions
    name: TaskContinuationOptions
    fullName: System.Threading.Tasks.TaskContinuationOptions
    href: System.Threading.Tasks.TaskContinuationOptions.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)
    name: ContinueWith
    fullName: System.Threading.Tasks.Task.ContinueWith
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskContinuationOptions
    name: TaskContinuationOptions
    fullName: System.Threading.Tasks.TaskContinuationOptions
    href: System.Threading.Tasks.TaskContinuationOptions.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: ContinueWith(Action<Task>, TaskScheduler)
  name.vb: ContinueWith(Action(Of Task), TaskScheduler)
  fullName: System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>, System.Threading.Tasks.TaskScheduler)
  fullName.vb: System.Threading.Tasks.Task.ContinueWith(System.Action(Of System.Threading.Tasks.Task), System.Threading.Tasks.TaskScheduler)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskScheduler)
    name: ContinueWith
    fullName: System.Threading.Tasks.Task.ContinueWith
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskScheduler
    name: TaskScheduler
    fullName: System.Threading.Tasks.TaskScheduler
    href: System.Threading.Tasks.TaskScheduler.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskScheduler)
    name: ContinueWith
    fullName: System.Threading.Tasks.Task.ContinueWith
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskScheduler
    name: TaskScheduler
    fullName: System.Threading.Tasks.TaskScheduler
    href: System.Threading.Tasks.TaskScheduler.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,{TResult}})
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: ContinueWith<TResult>(Func<Task, TResult>)
  name.vb: ContinueWith(Of TResult)(Func(Of Task, TResult))
  fullName: System.Threading.Tasks.Task.ContinueWith<TResult>(System.Func<System.Threading.Tasks.Task, TResult>)
  fullName.vb: System.Threading.Tasks.Task.ContinueWith(Of TResult)(System.Func(Of System.Threading.Tasks.Task, TResult))
  spec.csharp:
  - uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0})
    name: ContinueWith<TResult>
    fullName: System.Threading.Tasks.Task.ContinueWith<TResult>
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0})
    name: ContinueWith(Of TResult)
    fullName: System.Threading.Tasks.Task.ContinueWith(Of TResult)
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,{TResult}},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: ContinueWith<TResult>(Func<Task, TResult>, CancellationToken)
  name.vb: ContinueWith(Of TResult)(Func(Of Task, TResult), CancellationToken)
  fullName: System.Threading.Tasks.Task.ContinueWith<TResult>(System.Func<System.Threading.Tasks.Task, TResult>, System.Threading.CancellationToken)
  fullName.vb: System.Threading.Tasks.Task.ContinueWith(Of TResult)(System.Func(Of System.Threading.Tasks.Task, TResult), System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)
    name: ContinueWith<TResult>
    fullName: System.Threading.Tasks.Task.ContinueWith<TResult>
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)
    name: ContinueWith(Of TResult)
    fullName: System.Threading.Tasks.Task.ContinueWith(Of TResult)
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,{TResult}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: ContinueWith<TResult>(Func<Task, TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler)
  name.vb: ContinueWith(Of TResult)(Func(Of Task, TResult), CancellationToken, TaskContinuationOptions, TaskScheduler)
  fullName: System.Threading.Tasks.Task.ContinueWith<TResult>(System.Func<System.Threading.Tasks.Task, TResult>, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)
  fullName.vb: System.Threading.Tasks.Task.ContinueWith(Of TResult)(System.Func(Of System.Threading.Tasks.Task, TResult), System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
    name: ContinueWith<TResult>
    fullName: System.Threading.Tasks.Task.ContinueWith<TResult>
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskContinuationOptions
    name: TaskContinuationOptions
    fullName: System.Threading.Tasks.TaskContinuationOptions
    href: System.Threading.Tasks.TaskContinuationOptions.yml
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskScheduler
    name: TaskScheduler
    fullName: System.Threading.Tasks.TaskScheduler
    href: System.Threading.Tasks.TaskScheduler.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
    name: ContinueWith(Of TResult)
    fullName: System.Threading.Tasks.Task.ContinueWith(Of TResult)
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskContinuationOptions
    name: TaskContinuationOptions
    fullName: System.Threading.Tasks.TaskContinuationOptions
    href: System.Threading.Tasks.TaskContinuationOptions.yml
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskScheduler
    name: TaskScheduler
    fullName: System.Threading.Tasks.TaskScheduler
    href: System.Threading.Tasks.TaskScheduler.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,{TResult}},System.Threading.Tasks.TaskContinuationOptions)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: ContinueWith<TResult>(Func<Task, TResult>, TaskContinuationOptions)
  name.vb: ContinueWith(Of TResult)(Func(Of Task, TResult), TaskContinuationOptions)
  fullName: System.Threading.Tasks.Task.ContinueWith<TResult>(System.Func<System.Threading.Tasks.Task, TResult>, System.Threading.Tasks.TaskContinuationOptions)
  fullName.vb: System.Threading.Tasks.Task.ContinueWith(Of TResult)(System.Func(Of System.Threading.Tasks.Task, TResult), System.Threading.Tasks.TaskContinuationOptions)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)
    name: ContinueWith<TResult>
    fullName: System.Threading.Tasks.Task.ContinueWith<TResult>
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskContinuationOptions
    name: TaskContinuationOptions
    fullName: System.Threading.Tasks.TaskContinuationOptions
    href: System.Threading.Tasks.TaskContinuationOptions.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)
    name: ContinueWith(Of TResult)
    fullName: System.Threading.Tasks.Task.ContinueWith(Of TResult)
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskContinuationOptions
    name: TaskContinuationOptions
    fullName: System.Threading.Tasks.TaskContinuationOptions
    href: System.Threading.Tasks.TaskContinuationOptions.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,{TResult}},System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: ContinueWith<TResult>(Func<Task, TResult>, TaskScheduler)
  name.vb: ContinueWith(Of TResult)(Func(Of Task, TResult), TaskScheduler)
  fullName: System.Threading.Tasks.Task.ContinueWith<TResult>(System.Func<System.Threading.Tasks.Task, TResult>, System.Threading.Tasks.TaskScheduler)
  fullName.vb: System.Threading.Tasks.Task.ContinueWith(Of TResult)(System.Func(Of System.Threading.Tasks.Task, TResult), System.Threading.Tasks.TaskScheduler)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskScheduler)
    name: ContinueWith<TResult>
    fullName: System.Threading.Tasks.Task.ContinueWith<TResult>
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskScheduler
    name: TaskScheduler
    fullName: System.Threading.Tasks.TaskScheduler
    href: System.Threading.Tasks.TaskScheduler.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskScheduler)
    name: ContinueWith(Of TResult)
    fullName: System.Threading.Tasks.Task.ContinueWith(Of TResult)
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskScheduler
    name: TaskScheduler
    fullName: System.Threading.Tasks.TaskScheduler
    href: System.Threading.Tasks.TaskScheduler.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,{TResult}},System.Object)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: ContinueWith<TResult>(Func<Task, Object, TResult>, Object)
  name.vb: ContinueWith(Of TResult)(Func(Of Task, Object, TResult), Object)
  fullName: System.Threading.Tasks.Task.ContinueWith<TResult>(System.Func<System.Threading.Tasks.Task, System.Object, TResult>, System.Object)
  fullName.vb: System.Threading.Tasks.Task.ContinueWith(Of TResult)(System.Func(Of System.Threading.Tasks.Task, System.Object, TResult), System.Object)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object)
    name: ContinueWith<TResult>
    fullName: System.Threading.Tasks.Task.ContinueWith<TResult>
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object)
    name: ContinueWith(Of TResult)
    fullName: System.Threading.Tasks.Task.ContinueWith(Of TResult)
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,{TResult}},System.Object,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: ContinueWith<TResult>(Func<Task, Object, TResult>, Object, CancellationToken)
  name.vb: ContinueWith(Of TResult)(Func(Of Task, Object, TResult), Object, CancellationToken)
  fullName: System.Threading.Tasks.Task.ContinueWith<TResult>(System.Func<System.Threading.Tasks.Task, System.Object, TResult>, System.Object, System.Threading.CancellationToken)
  fullName.vb: System.Threading.Tasks.Task.ContinueWith(Of TResult)(System.Func(Of System.Threading.Tasks.Task, System.Object, TResult), System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken)
    name: ContinueWith<TResult>
    fullName: System.Threading.Tasks.Task.ContinueWith<TResult>
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken)
    name: ContinueWith(Of TResult)
    fullName: System.Threading.Tasks.Task.ContinueWith(Of TResult)
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,{TResult}},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: ContinueWith<TResult>(Func<Task, Object, TResult>, Object, CancellationToken, TaskContinuationOptions, TaskScheduler)
  name.vb: ContinueWith(Of TResult)(Func(Of Task, Object, TResult), Object, CancellationToken, TaskContinuationOptions, TaskScheduler)
  fullName: System.Threading.Tasks.Task.ContinueWith<TResult>(System.Func<System.Threading.Tasks.Task, System.Object, TResult>, System.Object, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)
  fullName.vb: System.Threading.Tasks.Task.ContinueWith(Of TResult)(System.Func(Of System.Threading.Tasks.Task, System.Object, TResult), System.Object, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
    name: ContinueWith<TResult>
    fullName: System.Threading.Tasks.Task.ContinueWith<TResult>
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskContinuationOptions
    name: TaskContinuationOptions
    fullName: System.Threading.Tasks.TaskContinuationOptions
    href: System.Threading.Tasks.TaskContinuationOptions.yml
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskScheduler
    name: TaskScheduler
    fullName: System.Threading.Tasks.TaskScheduler
    href: System.Threading.Tasks.TaskScheduler.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
    name: ContinueWith(Of TResult)
    fullName: System.Threading.Tasks.Task.ContinueWith(Of TResult)
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskContinuationOptions
    name: TaskContinuationOptions
    fullName: System.Threading.Tasks.TaskContinuationOptions
    href: System.Threading.Tasks.TaskContinuationOptions.yml
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskScheduler
    name: TaskScheduler
    fullName: System.Threading.Tasks.TaskScheduler
    href: System.Threading.Tasks.TaskScheduler.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,{TResult}},System.Object,System.Threading.Tasks.TaskContinuationOptions)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: ContinueWith<TResult>(Func<Task, Object, TResult>, Object, TaskContinuationOptions)
  name.vb: ContinueWith(Of TResult)(Func(Of Task, Object, TResult), Object, TaskContinuationOptions)
  fullName: System.Threading.Tasks.Task.ContinueWith<TResult>(System.Func<System.Threading.Tasks.Task, System.Object, TResult>, System.Object, System.Threading.Tasks.TaskContinuationOptions)
  fullName.vb: System.Threading.Tasks.Task.ContinueWith(Of TResult)(System.Func(Of System.Threading.Tasks.Task, System.Object, TResult), System.Object, System.Threading.Tasks.TaskContinuationOptions)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)
    name: ContinueWith<TResult>
    fullName: System.Threading.Tasks.Task.ContinueWith<TResult>
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskContinuationOptions
    name: TaskContinuationOptions
    fullName: System.Threading.Tasks.TaskContinuationOptions
    href: System.Threading.Tasks.TaskContinuationOptions.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)
    name: ContinueWith(Of TResult)
    fullName: System.Threading.Tasks.Task.ContinueWith(Of TResult)
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskContinuationOptions
    name: TaskContinuationOptions
    fullName: System.Threading.Tasks.TaskContinuationOptions
    href: System.Threading.Tasks.TaskContinuationOptions.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,{TResult}},System.Object,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: ContinueWith<TResult>(Func<Task, Object, TResult>, Object, TaskScheduler)
  name.vb: ContinueWith(Of TResult)(Func(Of Task, Object, TResult), Object, TaskScheduler)
  fullName: System.Threading.Tasks.Task.ContinueWith<TResult>(System.Func<System.Threading.Tasks.Task, System.Object, TResult>, System.Object, System.Threading.Tasks.TaskScheduler)
  fullName.vb: System.Threading.Tasks.Task.ContinueWith(Of TResult)(System.Func(Of System.Threading.Tasks.Task, System.Object, TResult), System.Object, System.Threading.Tasks.TaskScheduler)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)
    name: ContinueWith<TResult>
    fullName: System.Threading.Tasks.Task.ContinueWith<TResult>
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskScheduler
    name: TaskScheduler
    fullName: System.Threading.Tasks.TaskScheduler
    href: System.Threading.Tasks.TaskScheduler.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)
    name: ContinueWith(Of TResult)
    fullName: System.Threading.Tasks.Task.ContinueWith(Of TResult)
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.TaskScheduler
    name: TaskScheduler
    fullName: System.Threading.Tasks.TaskScheduler
    href: System.Threading.Tasks.TaskScheduler.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.Delay(System.Int32)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: Delay(Int32)
  fullName: System.Threading.Tasks.Task.Delay(System.Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.Delay(System.Int32)
    name: Delay
    fullName: System.Threading.Tasks.Task.Delay
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.Delay(System.Int32)
    name: Delay
    fullName: System.Threading.Tasks.Task.Delay
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.Delay(System.Int32,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: Delay(Int32, CancellationToken)
  fullName: System.Threading.Tasks.Task.Delay(System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.Delay(System.Int32,System.Threading.CancellationToken)
    name: Delay
    fullName: System.Threading.Tasks.Task.Delay
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.Delay(System.Int32,System.Threading.CancellationToken)
    name: Delay
    fullName: System.Threading.Tasks.Task.Delay
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.Delay(System.TimeSpan)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: Delay(TimeSpan)
  fullName: System.Threading.Tasks.Task.Delay(System.TimeSpan)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.Delay(System.TimeSpan)
    name: Delay
    fullName: System.Threading.Tasks.Task.Delay
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.Delay(System.TimeSpan)
    name: Delay
    fullName: System.Threading.Tasks.Task.Delay
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.Delay(System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: Delay(TimeSpan, CancellationToken)
  fullName: System.Threading.Tasks.Task.Delay(System.TimeSpan, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.Delay(System.TimeSpan,System.Threading.CancellationToken)
    name: Delay
    fullName: System.Threading.Tasks.Task.Delay
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.Delay(System.TimeSpan,System.Threading.CancellationToken)
    name: Delay
    fullName: System.Threading.Tasks.Task.Delay
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.FromCanceled(System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: FromCanceled(CancellationToken)
  fullName: System.Threading.Tasks.Task.FromCanceled(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.FromCanceled(System.Threading.CancellationToken)
    name: FromCanceled
    fullName: System.Threading.Tasks.Task.FromCanceled
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.FromCanceled(System.Threading.CancellationToken)
    name: FromCanceled
    fullName: System.Threading.Tasks.Task.FromCanceled
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.FromCanceled``1(System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: FromCanceled<TResult>(CancellationToken)
  name.vb: FromCanceled(Of TResult)(CancellationToken)
  fullName: System.Threading.Tasks.Task.FromCanceled<TResult>(System.Threading.CancellationToken)
  fullName.vb: System.Threading.Tasks.Task.FromCanceled(Of TResult)(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.FromCanceled``1(System.Threading.CancellationToken)
    name: FromCanceled<TResult>
    fullName: System.Threading.Tasks.Task.FromCanceled<TResult>
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.FromCanceled``1(System.Threading.CancellationToken)
    name: FromCanceled(Of TResult)
    fullName: System.Threading.Tasks.Task.FromCanceled(Of TResult)
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.FromException(System.Exception)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: FromException(Exception)
  fullName: System.Threading.Tasks.Task.FromException(System.Exception)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.FromException(System.Exception)
    name: FromException
    fullName: System.Threading.Tasks.Task.FromException
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Exception
    name: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.FromException(System.Exception)
    name: FromException
    fullName: System.Threading.Tasks.Task.FromException
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Exception
    name: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.FromException``1(System.Exception)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: FromException<TResult>(Exception)
  name.vb: FromException(Of TResult)(Exception)
  fullName: System.Threading.Tasks.Task.FromException<TResult>(System.Exception)
  fullName.vb: System.Threading.Tasks.Task.FromException(Of TResult)(System.Exception)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.FromException``1(System.Exception)
    name: FromException<TResult>
    fullName: System.Threading.Tasks.Task.FromException<TResult>
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Exception
    name: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.FromException``1(System.Exception)
    name: FromException(Of TResult)
    fullName: System.Threading.Tasks.Task.FromException(Of TResult)
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Exception
    name: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.FromResult``1({TResult})
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: FromResult<TResult>(TResult)
  name.vb: FromResult(Of TResult)(TResult)
  fullName: System.Threading.Tasks.Task.FromResult<TResult>(TResult)
  fullName.vb: System.Threading.Tasks.Task.FromResult(Of TResult)(TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.FromResult``1(``0)
    name: FromResult<TResult>
    fullName: System.Threading.Tasks.Task.FromResult<TResult>
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.FromResult``1(``0)
    name: FromResult(Of TResult)
    fullName: System.Threading.Tasks.Task.FromResult(Of TResult)
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.Run(System.Action)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: Run(Action)
  fullName: System.Threading.Tasks.Task.Run(System.Action)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.Run(System.Action)
    name: Run
    fullName: System.Threading.Tasks.Task.Run
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action
    name: Action
    fullName: System.Action
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.Run(System.Action)
    name: Run
    fullName: System.Threading.Tasks.Task.Run
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action
    name: Action
    fullName: System.Action
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.Run(System.Action,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: Run(Action, CancellationToken)
  fullName: System.Threading.Tasks.Task.Run(System.Action, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.Run(System.Action,System.Threading.CancellationToken)
    name: Run
    fullName: System.Threading.Tasks.Task.Run
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action
    name: Action
    fullName: System.Action
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.Run(System.Action,System.Threading.CancellationToken)
    name: Run
    fullName: System.Threading.Tasks.Task.Run
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Action
    name: Action
    fullName: System.Action
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task})
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: Run(Func<Task>)
  name.vb: Run(Func(Of Task))
  fullName: System.Threading.Tasks.Task.Run(System.Func<System.Threading.Tasks.Task>)
  fullName.vb: System.Threading.Tasks.Task.Run(System.Func(Of System.Threading.Tasks.Task))
  spec.csharp:
  - uid: System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task})
    name: Run
    fullName: System.Threading.Tasks.Task.Run
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task})
    name: Run
    fullName: System.Threading.Tasks.Task.Run
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: Run(Func<Task>, CancellationToken)
  name.vb: Run(Func(Of Task), CancellationToken)
  fullName: System.Threading.Tasks.Task.Run(System.Func<System.Threading.Tasks.Task>, System.Threading.CancellationToken)
  fullName.vb: System.Threading.Tasks.Task.Run(System.Func(Of System.Threading.Tasks.Task), System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)
    name: Run
    fullName: System.Threading.Tasks.Task.Run
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)
    name: Run
    fullName: System.Threading.Tasks.Task.Run
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.Run``1(System.Func{{TResult}})
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: Run<TResult>(Func<TResult>)
  name.vb: Run(Of TResult)(Func(Of TResult))
  fullName: System.Threading.Tasks.Task.Run<TResult>(System.Func<TResult>)
  fullName.vb: System.Threading.Tasks.Task.Run(Of TResult)(System.Func(Of TResult))
  spec.csharp:
  - uid: System.Threading.Tasks.Task.Run``1(System.Func{``0})
    name: Run<TResult>
    fullName: System.Threading.Tasks.Task.Run<TResult>
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.Run``1(System.Func{``0})
    name: Run(Of TResult)
    fullName: System.Threading.Tasks.Task.Run(Of TResult)
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.Run``1(System.Func{{TResult}},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: Run<TResult>(Func<TResult>, CancellationToken)
  name.vb: Run(Of TResult)(Func(Of TResult), CancellationToken)
  fullName: System.Threading.Tasks.Task.Run<TResult>(System.Func<TResult>, System.Threading.CancellationToken)
  fullName.vb: System.Threading.Tasks.Task.Run(Of TResult)(System.Func(Of TResult), System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.Run``1(System.Func{``0},System.Threading.CancellationToken)
    name: Run<TResult>
    fullName: System.Threading.Tasks.Task.Run<TResult>
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.Run``1(System.Func{``0},System.Threading.CancellationToken)
    name: Run(Of TResult)
    fullName: System.Threading.Tasks.Task.Run(Of TResult)
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{{TResult}}})
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: Run<TResult>(Func<Task<TResult>>)
  name.vb: Run(Of TResult)(Func(Of Task(Of TResult)))
  fullName: System.Threading.Tasks.Task.Run<TResult>(System.Func<System.Threading.Tasks.Task<TResult>>)
  fullName.vb: System.Threading.Tasks.Task.Run(Of TResult)(System.Func(Of System.Threading.Tasks.Task(Of TResult)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}})
    name: Run<TResult>
    fullName: System.Threading.Tasks.Task.Run<TResult>
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}})
    name: Run(Of TResult)
    fullName: System.Threading.Tasks.Task.Run(Of TResult)
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{{TResult}}},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: Run<TResult>(Func<Task<TResult>>, CancellationToken)
  name.vb: Run(Of TResult)(Func(Of Task(Of TResult)), CancellationToken)
  fullName: System.Threading.Tasks.Task.Run<TResult>(System.Func<System.Threading.Tasks.Task<TResult>>, System.Threading.CancellationToken)
  fullName.vb: System.Threading.Tasks.Task.Run(Of TResult)(System.Func(Of System.Threading.Tasks.Task(Of TResult)), System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)
    name: Run<TResult>
    fullName: System.Threading.Tasks.Task.Run<TResult>
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)
    name: Run(Of TResult)
    fullName: System.Threading.Tasks.Task.Run(Of TResult)
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.RunSynchronously
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: RunSynchronously()
  fullName: System.Threading.Tasks.Task.RunSynchronously()
  spec.csharp:
  - uid: System.Threading.Tasks.Task.RunSynchronously
    name: RunSynchronously
    fullName: System.Threading.Tasks.Task.RunSynchronously
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.RunSynchronously
    name: RunSynchronously
    fullName: System.Threading.Tasks.Task.RunSynchronously
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.RunSynchronously(System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: RunSynchronously(TaskScheduler)
  fullName: System.Threading.Tasks.Task.RunSynchronously(System.Threading.Tasks.TaskScheduler)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.RunSynchronously(System.Threading.Tasks.TaskScheduler)
    name: RunSynchronously
    fullName: System.Threading.Tasks.Task.RunSynchronously
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.TaskScheduler
    name: TaskScheduler
    fullName: System.Threading.Tasks.TaskScheduler
    href: System.Threading.Tasks.TaskScheduler.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.RunSynchronously(System.Threading.Tasks.TaskScheduler)
    name: RunSynchronously
    fullName: System.Threading.Tasks.Task.RunSynchronously
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.TaskScheduler
    name: TaskScheduler
    fullName: System.Threading.Tasks.TaskScheduler
    href: System.Threading.Tasks.TaskScheduler.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.Start
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: Start()
  fullName: System.Threading.Tasks.Task.Start()
  spec.csharp:
  - uid: System.Threading.Tasks.Task.Start
    name: Start
    fullName: System.Threading.Tasks.Task.Start
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.Start
    name: Start
    fullName: System.Threading.Tasks.Task.Start
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.Start(System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: Start(TaskScheduler)
  fullName: System.Threading.Tasks.Task.Start(System.Threading.Tasks.TaskScheduler)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.Start(System.Threading.Tasks.TaskScheduler)
    name: Start
    fullName: System.Threading.Tasks.Task.Start
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.TaskScheduler
    name: TaskScheduler
    fullName: System.Threading.Tasks.TaskScheduler
    href: System.Threading.Tasks.TaskScheduler.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.Start(System.Threading.Tasks.TaskScheduler)
    name: Start
    fullName: System.Threading.Tasks.Task.Start
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.TaskScheduler
    name: TaskScheduler
    fullName: System.Threading.Tasks.TaskScheduler
    href: System.Threading.Tasks.TaskScheduler.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.Wait
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: Wait()
  fullName: System.Threading.Tasks.Task.Wait()
  spec.csharp:
  - uid: System.Threading.Tasks.Task.Wait
    name: Wait
    fullName: System.Threading.Tasks.Task.Wait
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.Wait
    name: Wait
    fullName: System.Threading.Tasks.Task.Wait
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.Wait(System.Int32)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: Wait(Int32)
  fullName: System.Threading.Tasks.Task.Wait(System.Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.Wait(System.Int32)
    name: Wait
    fullName: System.Threading.Tasks.Task.Wait
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.Wait(System.Int32)
    name: Wait
    fullName: System.Threading.Tasks.Task.Wait
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.Wait(System.Int32,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: Wait(Int32, CancellationToken)
  fullName: System.Threading.Tasks.Task.Wait(System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.Wait(System.Int32,System.Threading.CancellationToken)
    name: Wait
    fullName: System.Threading.Tasks.Task.Wait
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.Wait(System.Int32,System.Threading.CancellationToken)
    name: Wait
    fullName: System.Threading.Tasks.Task.Wait
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.Wait(System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: Wait(CancellationToken)
  fullName: System.Threading.Tasks.Task.Wait(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.Wait(System.Threading.CancellationToken)
    name: Wait
    fullName: System.Threading.Tasks.Task.Wait
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.Wait(System.Threading.CancellationToken)
    name: Wait
    fullName: System.Threading.Tasks.Task.Wait
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.Wait(System.TimeSpan)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: Wait(TimeSpan)
  fullName: System.Threading.Tasks.Task.Wait(System.TimeSpan)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.Wait(System.TimeSpan)
    name: Wait
    fullName: System.Threading.Tasks.Task.Wait
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.Wait(System.TimeSpan)
    name: Wait
    fullName: System.Threading.Tasks.Task.Wait
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[])
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: WaitAll(Task[])
  name.vb: WaitAll(Task())
  fullName: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[])
  fullName.vb: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task())
  spec.csharp:
  - uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[])
    name: WaitAll
    fullName: System.Threading.Tasks.Task.WaitAll
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[])
    name: WaitAll
    fullName: System.Threading.Tasks.Task.WaitAll
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: WaitAll(Task[], Int32)
  name.vb: WaitAll(Task(), Int32)
  fullName: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[], System.Int32)
  fullName.vb: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task(), System.Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32)
    name: WaitAll
    fullName: System.Threading.Tasks.Task.WaitAll
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32)
    name: WaitAll
    fullName: System.Threading.Tasks.Task.WaitAll
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: WaitAll(Task[], Int32, CancellationToken)
  name.vb: WaitAll(Task(), Int32, CancellationToken)
  fullName: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[], System.Int32, System.Threading.CancellationToken)
  fullName.vb: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task(), System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)
    name: WaitAll
    fullName: System.Threading.Tasks.Task.WaitAll
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)
    name: WaitAll
    fullName: System.Threading.Tasks.Task.WaitAll
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: WaitAll(Task[], CancellationToken)
  name.vb: WaitAll(Task(), CancellationToken)
  fullName: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[], System.Threading.CancellationToken)
  fullName.vb: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task(), System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Threading.CancellationToken)
    name: WaitAll
    fullName: System.Threading.Tasks.Task.WaitAll
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Threading.CancellationToken)
    name: WaitAll
    fullName: System.Threading.Tasks.Task.WaitAll
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.TimeSpan)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: WaitAll(Task[], TimeSpan)
  name.vb: WaitAll(Task(), TimeSpan)
  fullName: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[], System.TimeSpan)
  fullName.vb: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task(), System.TimeSpan)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.TimeSpan)
    name: WaitAll
    fullName: System.Threading.Tasks.Task.WaitAll
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.TimeSpan)
    name: WaitAll
    fullName: System.Threading.Tasks.Task.WaitAll
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[])
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: WaitAny(Task[])
  name.vb: WaitAny(Task())
  fullName: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[])
  fullName.vb: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task())
  spec.csharp:
  - uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[])
    name: WaitAny
    fullName: System.Threading.Tasks.Task.WaitAny
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[])
    name: WaitAny
    fullName: System.Threading.Tasks.Task.WaitAny
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: WaitAny(Task[], Int32)
  name.vb: WaitAny(Task(), Int32)
  fullName: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[], System.Int32)
  fullName.vb: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task(), System.Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32)
    name: WaitAny
    fullName: System.Threading.Tasks.Task.WaitAny
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32)
    name: WaitAny
    fullName: System.Threading.Tasks.Task.WaitAny
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: WaitAny(Task[], Int32, CancellationToken)
  name.vb: WaitAny(Task(), Int32, CancellationToken)
  fullName: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[], System.Int32, System.Threading.CancellationToken)
  fullName.vb: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task(), System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)
    name: WaitAny
    fullName: System.Threading.Tasks.Task.WaitAny
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)
    name: WaitAny
    fullName: System.Threading.Tasks.Task.WaitAny
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: WaitAny(Task[], CancellationToken)
  name.vb: WaitAny(Task(), CancellationToken)
  fullName: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[], System.Threading.CancellationToken)
  fullName.vb: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task(), System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Threading.CancellationToken)
    name: WaitAny
    fullName: System.Threading.Tasks.Task.WaitAny
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Threading.CancellationToken)
    name: WaitAny
    fullName: System.Threading.Tasks.Task.WaitAny
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    href: System.Threading.CancellationToken.yml
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.TimeSpan)
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: WaitAny(Task[], TimeSpan)
  name.vb: WaitAny(Task(), TimeSpan)
  fullName: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[], System.TimeSpan)
  fullName.vb: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task(), System.TimeSpan)
  spec.csharp:
  - uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.TimeSpan)
    name: WaitAny
    fullName: System.Threading.Tasks.Task.WaitAny
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.TimeSpan)
    name: WaitAny
    fullName: System.Threading.Tasks.Task.WaitAny
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.WhenAll(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: WhenAll(IEnumerable<Task>)
  name.vb: WhenAll(IEnumerable(Of Task))
  fullName: System.Threading.Tasks.Task.WhenAll(System.Collections.Generic.IEnumerable<System.Threading.Tasks.Task>)
  fullName.vb: System.Threading.Tasks.Task.WhenAll(System.Collections.Generic.IEnumerable(Of System.Threading.Tasks.Task))
  spec.csharp:
  - uid: System.Threading.Tasks.Task.WhenAll(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})
    name: WhenAll
    fullName: System.Threading.Tasks.Task.WhenAll
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.WhenAll(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})
    name: WhenAll
    fullName: System.Threading.Tasks.Task.WhenAll
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.WhenAll(System.Threading.Tasks.Task[])
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: WhenAll(Task[])
  name.vb: WhenAll(Task())
  fullName: System.Threading.Tasks.Task.WhenAll(System.Threading.Tasks.Task[])
  fullName.vb: System.Threading.Tasks.Task.WhenAll(System.Threading.Tasks.Task())
  spec.csharp:
  - uid: System.Threading.Tasks.Task.WhenAll(System.Threading.Tasks.Task[])
    name: WhenAll
    fullName: System.Threading.Tasks.Task.WhenAll
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.WhenAll(System.Threading.Tasks.Task[])
    name: WhenAll
    fullName: System.Threading.Tasks.Task.WhenAll
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.WhenAll``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{{TResult}}})
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: WhenAll<TResult>(IEnumerable<Task<TResult>>)
  name.vb: WhenAll(Of TResult)(IEnumerable(Of Task(Of TResult)))
  fullName: System.Threading.Tasks.Task.WhenAll<TResult>(System.Collections.Generic.IEnumerable<System.Threading.Tasks.Task<TResult>>)
  fullName.vb: System.Threading.Tasks.Task.WhenAll(Of TResult)(System.Collections.Generic.IEnumerable(Of System.Threading.Tasks.Task(Of TResult)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task.WhenAll``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})
    name: WhenAll<TResult>
    fullName: System.Threading.Tasks.Task.WhenAll<TResult>
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.WhenAll``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})
    name: WhenAll(Of TResult)
    fullName: System.Threading.Tasks.Task.WhenAll(Of TResult)
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.WhenAll``1(System.Threading.Tasks.Task{{TResult}}[])
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: WhenAll<TResult>(Task<TResult>[])
  name.vb: WhenAll(Of TResult)(Task(Of TResult)())
  fullName: System.Threading.Tasks.Task.WhenAll<TResult>(System.Threading.Tasks.Task<TResult>[])
  fullName.vb: System.Threading.Tasks.Task.WhenAll(Of TResult)(System.Threading.Tasks.Task(Of TResult)())
  spec.csharp:
  - uid: System.Threading.Tasks.Task.WhenAll``1(System.Threading.Tasks.Task{``0}[])
    name: WhenAll<TResult>
    fullName: System.Threading.Tasks.Task.WhenAll<TResult>
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.WhenAll``1(System.Threading.Tasks.Task{``0}[])
    name: WhenAll(Of TResult)
    fullName: System.Threading.Tasks.Task.WhenAll(Of TResult)
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.WhenAny(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: WhenAny(IEnumerable<Task>)
  name.vb: WhenAny(IEnumerable(Of Task))
  fullName: System.Threading.Tasks.Task.WhenAny(System.Collections.Generic.IEnumerable<System.Threading.Tasks.Task>)
  fullName.vb: System.Threading.Tasks.Task.WhenAny(System.Collections.Generic.IEnumerable(Of System.Threading.Tasks.Task))
  spec.csharp:
  - uid: System.Threading.Tasks.Task.WhenAny(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})
    name: WhenAny
    fullName: System.Threading.Tasks.Task.WhenAny
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.WhenAny(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})
    name: WhenAny
    fullName: System.Threading.Tasks.Task.WhenAny
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.WhenAny(System.Threading.Tasks.Task[])
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: WhenAny(Task[])
  name.vb: WhenAny(Task())
  fullName: System.Threading.Tasks.Task.WhenAny(System.Threading.Tasks.Task[])
  fullName.vb: System.Threading.Tasks.Task.WhenAny(System.Threading.Tasks.Task())
  spec.csharp:
  - uid: System.Threading.Tasks.Task.WhenAny(System.Threading.Tasks.Task[])
    name: WhenAny
    fullName: System.Threading.Tasks.Task.WhenAny
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.WhenAny(System.Threading.Tasks.Task[])
    name: WhenAny
    fullName: System.Threading.Tasks.Task.WhenAny
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.WhenAny``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{{TResult}}})
  parent: System.Threading.Tasks.Task
  isExternal: true
  href: System.Threading.Tasks.Task.yml
  name: WhenAny<TResult>(IEnumerable<Task<TResult>>)
  name.vb: WhenAny(Of TResult)(IEnumerable(Of Task(Of TResult)))
  fullName: System.Threading.Tasks.Task.WhenAny<TResult>(System.Collections.Generic.IEnumerable<System.Threading.Tasks.Task<TResult>>)
  fullName.vb: System.Threading.Tasks.Task.WhenAny(Of TResult)(System.Collections.Generic.IEnumerable(Of System.Threading.Tasks.Task(Of TResult)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task.WhenAny``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})
    name: WhenAny<TResult>
    fullName: System.Threading.Tasks.Task.WhenAny<TResult>
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.WhenAny``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})
    name: WhenAny(Of TResult)
    fullName: System.Threading.Tasks.Task.WhenAny(Of TResult)
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.WhenAny``1(System.Threading.Tasks.Task{{TResult}}[])
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: WhenAny<TResult>(Task<TResult>[])
  name.vb: WhenAny(Of TResult)(Task(Of TResult)())
  fullName: System.Threading.Tasks.Task.WhenAny<TResult>(System.Threading.Tasks.Task<TResult>[])
  fullName.vb: System.Threading.Tasks.Task.WhenAny(Of TResult)(System.Threading.Tasks.Task(Of TResult)())
  spec.csharp:
  - uid: System.Threading.Tasks.Task.WhenAny``1(System.Threading.Tasks.Task{``0}[])
    name: WhenAny<TResult>
    fullName: System.Threading.Tasks.Task.WhenAny<TResult>
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.WhenAny``1(System.Threading.Tasks.Task{``0}[])
    name: WhenAny(Of TResult)
    fullName: System.Threading.Tasks.Task.WhenAny(Of TResult)
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task.Yield
  parent: System.Threading.Tasks.Task
  isExternal: false
  href: System.Threading.Tasks.Task.yml
  name: Yield()
  fullName: System.Threading.Tasks.Task.Yield()
  spec.csharp:
  - uid: System.Threading.Tasks.Task.Yield
    name: Yield
    fullName: System.Threading.Tasks.Task.Yield
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.Task.Yield
    name: Yield
    fullName: System.Threading.Tasks.Task.Yield
    href: System.Threading.Tasks.Task.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Func{{TResult}}
  parent: System
  definition: System.Func`1
  name: Func<TResult>
  name.vb: Func(Of TResult)
  fullName: System.Func<TResult>
  fullName.vb: System.Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Func`1
  parent: System
  isExternal: false
  href: System.Func`1.yml
  name: Func<TResult>
  name.vb: Func(Of TResult)
  fullName: System.Func<TResult>
  fullName.vb: System.Func(Of TResult)
  type: Delegate
  spec.csharp:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    href: System.Func`1.yml
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    href: System.Func`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  href: System.Threading.CancellationToken.yml
  name: CancellationToken
  fullName: System.Threading.CancellationToken
  type: Struct
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
  type: Namespace
- uid: System.Threading.Tasks.TaskCreationOptions
  parent: System.Threading.Tasks
  isExternal: false
  href: System.Threading.Tasks.TaskCreationOptions.yml
  name: TaskCreationOptions
  fullName: System.Threading.Tasks.TaskCreationOptions
  type: Enum
- uid: System.Func{System.Object,{TResult}}
  parent: System
  definition: System.Func`2
  name: Func<Object, TResult>
  name.vb: Func(Of Object, TResult)
  fullName: System.Func<System.Object, TResult>
  fullName.vb: System.Func(Of System.Object, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Func`2
  parent: System
  isExternal: false
  href: System.Func`2.yml
  name: Func<T, TResult>
  name.vb: Func(Of T, TResult)
  fullName: System.Func<T, TResult>
  fullName.vb: System.Func(Of T, TResult)
  type: Delegate
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    href: System.Func`2.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    href: System.Func`2.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks.TaskFactory{{TResult}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.TaskFactory`1
  href: System.Threading.Tasks.TaskFactory`1.yml
  name: TaskFactory<TResult>
  name.vb: TaskFactory(Of TResult)
  fullName: System.Threading.Tasks.TaskFactory<TResult>
  fullName.vb: System.Threading.Tasks.TaskFactory(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.TaskFactory`1
    name: TaskFactory
    fullName: System.Threading.Tasks.TaskFactory
    href: System.Threading.Tasks.TaskFactory`1.yml
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.TaskFactory`1
    name: TaskFactory
    fullName: System.Threading.Tasks.TaskFactory
    href: System.Threading.Tasks.TaskFactory`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks.TaskFactory`1
  parent: System.Threading.Tasks
  isExternal: false
  href: System.Threading.Tasks.TaskFactory`1.yml
  name: TaskFactory<TResult>
  name.vb: TaskFactory(Of TResult)
  fullName: System.Threading.Tasks.TaskFactory<TResult>
  fullName.vb: System.Threading.Tasks.TaskFactory(Of TResult)
  type: Class
  spec.csharp:
  - uid: System.Threading.Tasks.TaskFactory`1
    name: TaskFactory
    fullName: System.Threading.Tasks.TaskFactory
    href: System.Threading.Tasks.TaskFactory`1.yml
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.TaskFactory`1
    name: TaskFactory
    fullName: System.Threading.Tasks.TaskFactory
    href: System.Threading.Tasks.TaskFactory`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: '{TResult}'
  isExternal: false
  name: TResult
  fullName: TResult
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable{{TResult}}
  parent: System.Runtime.CompilerServices
  definition: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1
  href: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.yml
  name: ConfiguredTaskAwaitable<TResult>
  name.vb: ConfiguredTaskAwaitable(Of TResult)
  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable<TResult>
  fullName.vb: System.Runtime.CompilerServices.ConfiguredTaskAwaitable(Of TResult)
  spec.csharp:
  - uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1
    name: ConfiguredTaskAwaitable
    fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable
    href: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.yml
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1
    name: ConfiguredTaskAwaitable
    fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable
    href: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1
  parent: System.Runtime.CompilerServices
  isExternal: false
  href: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.yml
  name: ConfiguredTaskAwaitable<TResult>
  name.vb: ConfiguredTaskAwaitable(Of TResult)
  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable<TResult>
  fullName.vb: System.Runtime.CompilerServices.ConfiguredTaskAwaitable(Of TResult)
  type: Struct
  spec.csharp:
  - uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1
    name: ConfiguredTaskAwaitable
    fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable
    href: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.yml
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1
    name: ConfiguredTaskAwaitable
    fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable
    href: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Runtime.CompilerServices
  isExternal: false
  name: System.Runtime.CompilerServices
  fullName: System.Runtime.CompilerServices
  type: Namespace
- uid: System.Action{System.Threading.Tasks.Task`1,System.Object}
  parent: System
  definition: System.Action`2
  href: System.Threading.Tasks.Task`1.yml
  name: Action<Task<TResult>, Object>
  name.vb: Action(Of Task(Of TResult), Object)
  fullName: System.Action<System.Threading.Tasks.Task<TResult>, System.Object>
  fullName.vb: System.Action(Of System.Threading.Tasks.Task(Of TResult), System.Object)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    fullName: System.Action
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Action`2
  parent: System
  isExternal: false
  href: System.Action`2.yml
  name: Action<T1, T2>
  name.vb: Action(Of T1, T2)
  fullName: System.Action<T1, T2>
  fullName.vb: System.Action(Of T1, T2)
  type: Delegate
  spec.csharp:
  - uid: System.Action`2
    name: Action
    fullName: System.Action
    href: System.Action`2.yml
  - name: <
    fullName: <
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    fullName: System.Action
    href: System.Action`2.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: )
    fullName: )
- uid: System.Threading.Tasks.TaskContinuationOptions
  parent: System.Threading.Tasks
  isExternal: false
  href: System.Threading.Tasks.TaskContinuationOptions.yml
  name: TaskContinuationOptions
  fullName: System.Threading.Tasks.TaskContinuationOptions
  type: Enum
- uid: System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: false
  href: System.Threading.Tasks.TaskScheduler.yml
  name: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
  type: Class
- uid: System.Action{System.Threading.Tasks.Task`1}
  parent: System
  definition: System.Action`1
  href: System.Threading.Tasks.Task`1.yml
  name: Action<Task<TResult>>
  name.vb: Action(Of Task(Of TResult))
  fullName: System.Action<System.Threading.Tasks.Task<TResult>>
  fullName.vb: System.Action(Of System.Threading.Tasks.Task(Of TResult))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Action`1
  parent: System
  isExternal: false
  href: System.Action`1.yml
  name: Action<T>
  name.vb: Action(Of T)
  fullName: System.Action<T>
  fullName.vb: System.Action(Of T)
  type: Delegate
  spec.csharp:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    href: System.Action`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    href: System.Action`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Func{System.Threading.Tasks.Task`1,{TNewResult}}
  parent: System
  definition: System.Func`2
  href: System.Threading.Tasks.Task`1.yml
  name: Func<Task<TResult>, TNewResult>
  name.vb: Func(Of Task(Of TResult), TNewResult)
  fullName: System.Func<System.Threading.Tasks.Task<TResult>, TNewResult>
  fullName.vb: System.Func(Of System.Threading.Tasks.Task(Of TResult), TNewResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TNewResult
    fullName: TNewResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TNewResult
    fullName: TNewResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{{TNewResult}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: System.Threading.Tasks.Task`1.yml
  name: Task<TNewResult>
  name.vb: Task(Of TNewResult)
  fullName: System.Threading.Tasks.Task<TNewResult>
  fullName.vb: System.Threading.Tasks.Task(Of TNewResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: <
    fullName: <
  - name: TNewResult
    fullName: TNewResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TNewResult
    fullName: TNewResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: false
  href: System.Threading.Tasks.Task`1.yml
  name: Task<TResult>
  name.vb: Task(Of TResult)
  fullName: System.Threading.Tasks.Task<TResult>
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  type: Class
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Func{System.Threading.Tasks.Task`1,System.Object,{TNewResult}}
  parent: System
  definition: System.Func`3
  href: System.Threading.Tasks.Task`1.yml
  name: Func<Task<TResult>, Object, TNewResult>
  name.vb: Func(Of Task(Of TResult), Object, TNewResult)
  fullName: System.Func<System.Threading.Tasks.Task<TResult>, System.Object, TNewResult>
  fullName.vb: System.Func(Of System.Threading.Tasks.Task(Of TResult), System.Object, TNewResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TNewResult
    fullName: TNewResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TNewResult
    fullName: TNewResult
  - name: )
    fullName: )
- uid: System.Func`3
  parent: System
  isExternal: false
  href: System.Func`3.yml
  name: Func<T1, T2, TResult>
  name.vb: Func(Of T1, T2, TResult)
  fullName: System.Func<T1, T2, TResult>
  fullName.vb: System.Func(Of T1, T2, TResult)
  type: Delegate
  spec.csharp:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    href: System.Func`3.yml
  - name: <
    fullName: <
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    href: System.Func`3.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Runtime.CompilerServices.TaskAwaiter{{TResult}}
  parent: System.Runtime.CompilerServices
  definition: System.Runtime.CompilerServices.TaskAwaiter`1
  href: System.Runtime.CompilerServices.TaskAwaiter`1.yml
  name: TaskAwaiter<TResult>
  name.vb: TaskAwaiter(Of TResult)
  fullName: System.Runtime.CompilerServices.TaskAwaiter<TResult>
  fullName.vb: System.Runtime.CompilerServices.TaskAwaiter(Of TResult)
  spec.csharp:
  - uid: System.Runtime.CompilerServices.TaskAwaiter`1
    name: TaskAwaiter
    fullName: System.Runtime.CompilerServices.TaskAwaiter
    href: System.Runtime.CompilerServices.TaskAwaiter`1.yml
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Runtime.CompilerServices.TaskAwaiter`1
    name: TaskAwaiter
    fullName: System.Runtime.CompilerServices.TaskAwaiter
    href: System.Runtime.CompilerServices.TaskAwaiter`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Runtime.CompilerServices.TaskAwaiter`1
  parent: System.Runtime.CompilerServices
  isExternal: false
  href: System.Runtime.CompilerServices.TaskAwaiter`1.yml
  name: TaskAwaiter<TResult>
  name.vb: TaskAwaiter(Of TResult)
  fullName: System.Runtime.CompilerServices.TaskAwaiter<TResult>
  fullName.vb: System.Runtime.CompilerServices.TaskAwaiter(Of TResult)
  type: Struct
  spec.csharp:
  - uid: System.Runtime.CompilerServices.TaskAwaiter`1
    name: TaskAwaiter
    fullName: System.Runtime.CompilerServices.TaskAwaiter
    href: System.Runtime.CompilerServices.TaskAwaiter`1.yml
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Runtime.CompilerServices.TaskAwaiter`1
    name: TaskAwaiter
    fullName: System.Runtime.CompilerServices.TaskAwaiter
    href: System.Runtime.CompilerServices.TaskAwaiter`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
