items:
- uid: System.Security.Cryptography.RSA
  id: RSA
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.RSA.#ctor
  - System.Security.Cryptography.RSA.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSA.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSA.ExportParameters(System.Boolean)
  - System.Security.Cryptography.RSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSA.ImportParameters(System.Security.Cryptography.RSAParameters)
  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  href: System.Security.Cryptography.RSA.yml
  name: RSA
  fullName: System.Security.Cryptography.RSA
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Security/Cryptography/rsa.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Security/Cryptography/rsa.cs
    startLine: 27
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Represents the base class from which all implementations of the @'System.Security.Cryptography.RSA' algorithm inherit.
  syntax:
    content: 'public abstract class RSA : AsymmetricAlgorithm, IDisposable'
    content.vb: Public MustInherit Class RSA Inherits AsymmetricAlgorithm Implements IDisposable
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricAlgorithm
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  - System.Security.Cryptography.AsymmetricAlgorithm.Clear
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.AsymmetricAlgorithm.Create
  - System.Security.Cryptography.AsymmetricAlgorithm.Create(System.String)
  - System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)
  - System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm
  - System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Security.Cryptography.RSA.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RSA
  href: System.Security.Cryptography.RSA.yml
  name: RSA()
  fullName: System.Security.Cryptography.RSA.RSA()
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/rsa.cs
    startLine: 30
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the @'System.Security.Cryptography.RSA' class.
  syntax:
    content: protected RSA()
    content.vb: Protected Sub New
- uid: System.Security.Cryptography.RSA.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSA
  href: System.Security.Cryptography.RSA.yml
  name: Decrypt(Byte[], RSAEncryptionPadding)
  name.vb: Decrypt(Byte(), RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSA.Decrypt(System.Byte[], System.Security.Cryptography.RSAEncryptionPadding)
  fullName.vb: System.Security.Cryptography.RSA.Decrypt(System.Byte(), System.Security.Cryptography.RSAEncryptionPadding)
  type: Method
  source:
    remote: &o1
      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs
    startLine: 96
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, decrypts the input data using the specified padding mode.
  syntax:
    content: public abstract byte[] Decrypt(byte[] data, RSAEncryptionPadding padding)
    content.vb: Public MustOverride Function Decrypt(data As Byte(), padding As RSAEncryptionPadding) As Byte()
    parameters:
    - id: data
      type: System.Byte[]
      description: The data to decrypt.
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: The padding mode.
    return:
      type: System.Byte[]
      description: The decrypted data.
  exceptions:
  - type: System.NotImplementedException
    description: A derived class must override this method.
- uid: System.Security.Cryptography.RSA.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSA
  href: System.Security.Cryptography.RSA.yml
  name: Encrypt(Byte[], RSAEncryptionPadding)
  name.vb: Encrypt(Byte(), RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSA.Encrypt(System.Byte[], System.Security.Cryptography.RSAEncryptionPadding)
  fullName.vb: System.Security.Cryptography.RSA.Encrypt(System.Byte(), System.Security.Cryptography.RSAEncryptionPadding)
  type: Method
  source:
    remote: *o1
    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs
    startLine: 97
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, encrypts the input data using the specified padding mode.
  syntax:
    content: public abstract byte[] Encrypt(byte[] data, RSAEncryptionPadding padding)
    content.vb: Public MustOverride Function Encrypt(data As Byte(), padding As RSAEncryptionPadding) As Byte()
    parameters:
    - id: data
      type: System.Byte[]
      description: The data to encrypt.
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: The padding mode.
    return:
      type: System.Byte[]
      description: The encrypted data.
  exceptions:
  - type: System.NotImplementedException
    description: A derived class must override this method.
- uid: System.Security.Cryptography.RSA.ExportParameters(System.Boolean)
  id: ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSA
  href: System.Security.Cryptography.RSA.yml
  name: ExportParameters(Boolean)
  fullName: System.Security.Cryptography.RSA.ExportParameters(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/rsa.cs
    startLine: 318
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, exports the @'System.Security.Cryptography.RSAParameters'.
  syntax:
    content: public abstract RSAParameters ExportParameters(bool includePrivateParameters)
    content.vb: Public MustOverride Function ExportParameters(includePrivateParameters As Boolean) As RSAParameters
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: true to include private parameters; otherwise, false.
    return:
      type: System.Security.Cryptography.RSAParameters
      description: The parameters for @'System.Security.Cryptography.DSA'.
- uid: System.Security.Cryptography.RSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSA
  href: System.Security.Cryptography.RSA.yml
  name: HashData(Byte[], Int32, Int32, HashAlgorithmName)
  name.vb: HashData(Byte(), Int32, Int32, HashAlgorithmName)
  fullName: System.Security.Cryptography.RSA.HashData(System.Byte[], System.Int32, System.Int32, System.Security.Cryptography.HashAlgorithmName)
  fullName.vb: System.Security.Cryptography.RSA.HashData(System.Byte(), System.Int32, System.Int32, System.Security.Cryptography.HashAlgorithmName)
  type: Method
  source:
    remote: *o1
    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs
    startLine: 99
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, computes the hash value of a specified portion of a byte array by using a specified hashing algorithm.
  syntax:
    content: protected abstract byte[] HashData(byte[] data, int offset, int count, HashAlgorithmName hashAlgorithm)
    content.vb: Protected MustOverride Function HashData(data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()
    parameters:
    - id: data
      type: System.Byte[]
      description: The data to be hashed.
    - id: offset
      type: System.Int32
      description: The index of the first byte in *data* that is to be hashed.
    - id: count
      type: System.Int32
      description: The number of bytes to hash.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The algorithm to use in hash the data.
    return:
      type: System.Byte[]
      description: The hashed data.
  exceptions:
  - type: System.NotImplementedException
    description: A derived class must override this method.
- uid: System.Security.Cryptography.RSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSA
  href: System.Security.Cryptography.RSA.yml
  name: HashData(Stream, HashAlgorithmName)
  fullName: System.Security.Cryptography.RSA.HashData(System.IO.Stream, System.Security.Cryptography.HashAlgorithmName)
  type: Method
  source:
    remote: *o1
    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs
    startLine: 100
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, computes the hash value of a specified binary stream by using a specified hashing algorithm.
  syntax:
    content: protected abstract byte[] HashData(Stream data, HashAlgorithmName hashAlgorithm)
    content.vb: Protected MustOverride Function HashData(data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()
    parameters:
    - id: data
      type: System.IO.Stream
      description: The binary stream to hash.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The hash algorithm.
    return:
      type: System.Byte[]
      description: The hashed data.
  exceptions:
  - type: System.NotImplementedException
    description: A derived class must override this method.
- uid: System.Security.Cryptography.RSA.ImportParameters(System.Security.Cryptography.RSAParameters)
  id: ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSA
  href: System.Security.Cryptography.RSA.yml
  name: ImportParameters(RSAParameters)
  fullName: System.Security.Cryptography.RSA.ImportParameters(System.Security.Cryptography.RSAParameters)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/rsa.cs
    startLine: 320
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, imports the specified @'System.Security.Cryptography.RSAParameters'.
  syntax:
    content: public abstract void ImportParameters(RSAParameters parameters)
    content.vb: Public MustOverride Sub ImportParameters(parameters As RSAParameters)
    parameters:
    - id: parameters
      type: System.Security.Cryptography.RSAParameters
      description: The parameters for @'System.Security.Cryptography.RSA'.
- uid: System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  href: System.Security.Cryptography.RSA.yml
  name: SignData(Byte[], Int32, Int32, HashAlgorithmName, RSASignaturePadding)
  name.vb: SignData(Byte(), Int32, Int32, HashAlgorithmName, RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.SignData(System.Byte[], System.Int32, System.Int32, System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  fullName.vb: System.Security.Cryptography.RSA.SignData(System.Byte(), System.Int32, System.Int32, System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  type: Method
  source:
    remote: *o1
    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs
    startLine: 102
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Computes the hash value of a portion of the specified byte array using the specified hash algorithm and padding mode, and signs the resulting hash value.
  syntax:
    content: public virtual byte[] SignData(byte[] data, int offset, int count, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
    content.vb: Public Overridable Function SignData(data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName, padding As RSASignaturePadding) As Byte()
    parameters:
    - id: data
      type: System.Byte[]
      description: The input data for which to compute the hash.
    - id: offset
      type: System.Int32
      description: The offset into the array at which to begin using data.
    - id: count
      type: System.Int32
      description: The number of bytes in the array to use as data.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The hash algorithm to use to create the hash value.
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: The padding mode.
    return:
      type: System.Byte[]
      description: The RSA signature for the specified data.
  exceptions:
  - type: System.ArgumentNullException
    description: '*data* is null. -or-*padding* is null.'
  - type: System.ArgumentException
    description: '*hashAlgorithm*.@''System.Security.Cryptography.HashAlgorithmName.Name'' is null or @''System.String.Empty''.'
  - type: System.ArgumentOutOfRangeException
    description: "*offset* is less than zero. -or-*count* is less than zero. -or-*offset* + *count* – 1 results in an index that is beyond the upper bound of *data*."
- uid: System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  href: System.Security.Cryptography.RSA.yml
  name: SignData(Byte[], HashAlgorithmName, RSASignaturePadding)
  name.vb: SignData(Byte(), HashAlgorithmName, RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.SignData(System.Byte[], System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  fullName.vb: System.Security.Cryptography.RSA.SignData(System.Byte(), System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  type: Method
  source:
    remote: *o1
    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs
    startLine: 103
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Computes the hash value of the specified byte array using the specified hash algorithm and padding mode, and signs the resulting hash value.
  syntax:
    content: public byte[] SignData(byte[] data, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
    content.vb: Public Function SignData(data As Byte(), hashAlgorithm As HashAlgorithmName, padding As RSASignaturePadding) As Byte()
    parameters:
    - id: data
      type: System.Byte[]
      description: The input data for which to compute the hash.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The hash algorithm to use to create the hash value.
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: The padding mode.
    return:
      type: System.Byte[]
      description: The RSA signature for the specified data.
  exceptions:
  - type: System.ArgumentNullException
    description: '*data* is null. -or-*padding* is null.'
  - type: System.ArgumentException
    description: '*hashAlgorithm*.@''System.Security.Cryptography.HashAlgorithmName.Name'' is null or @''System.String.Empty''.'
- uid: System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  href: System.Security.Cryptography.RSA.yml
  name: SignData(Stream, HashAlgorithmName, RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.SignData(System.IO.Stream, System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  type: Method
  source:
    remote: *o1
    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs
    startLine: 104
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Computes the hash value of the specified stream using the specified hash algorithm and padding mode, and signs the resulting hash value.
  syntax:
    content: public virtual byte[] SignData(Stream data, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
    content.vb: Public Overridable Function SignData(data As Stream, hashAlgorithm As HashAlgorithmName, padding As RSASignaturePadding) As Byte()
    parameters:
    - id: data
      type: System.IO.Stream
      description: The input stream for which to compute the hash.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The hash algorithm to use to create the hash value.
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: The padding mode.
    return:
      type: System.Byte[]
      description: The RSA signature for the specified data.
  exceptions:
  - type: System.ArgumentNullException
    description: '*data* is null. -or-*padding* is null.'
  - type: System.ArgumentException
    description: '*hashAlgorithm*.@''System.Security.Cryptography.HashAlgorithmName.Name'' is null or @''System.String.Empty''.'
- uid: System.Security.Cryptography.RSA.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  href: System.Security.Cryptography.RSA.yml
  name: SignHash(Byte[], HashAlgorithmName, RSASignaturePadding)
  name.vb: SignHash(Byte(), HashAlgorithmName, RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.SignHash(System.Byte[], System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  fullName.vb: System.Security.Cryptography.RSA.SignHash(System.Byte(), System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  type: Method
  source:
    remote: *o1
    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs
    startLine: 105
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, computes the signature for the specified hash value by encrypting it with the private key using the specified padding.
  syntax:
    content: public abstract byte[] SignHash(byte[] hash, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
    content.vb: Public MustOverride Function SignHash(hash As Byte(), hashAlgorithm As HashAlgorithmName, padding As RSASignaturePadding) As Byte()
    parameters:
    - id: hash
      type: System.Byte[]
      description: The hash value of the data to be signed.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The hash algorithm used to create the hash value of the data.
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: The padding.
    return:
      type: System.Byte[]
      description: The RSA signature for the specified hash value.
  exceptions:
  - type: System.NotImplementedException
    description: A derived class must override this method.
- uid: System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  href: System.Security.Cryptography.RSA.yml
  name: VerifyData(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)
  name.vb: VerifyData(Byte(), Byte(), HashAlgorithmName, RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.VerifyData(System.Byte[], System.Byte[], System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  fullName.vb: System.Security.Cryptography.RSA.VerifyData(System.Byte(), System.Byte(), System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  type: Method
  source:
    remote: *o1
    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs
    startLine: 106
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Verifies that a digital signature is valid by calculating the hash value of the specified data using the specified hash algorithm and padding, and comparing it to the provided signature.
  syntax:
    content: public bool VerifyData(byte[] data, byte[] signature, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
    content.vb: Public Function VerifyData(data As Byte(), signature As Byte(), hashAlgorithm As HashAlgorithmName, padding As RSASignaturePadding) As Boolean
    parameters:
    - id: data
      type: System.Byte[]
      description: The signed data.
    - id: signature
      type: System.Byte[]
      description: The signature data to be verified.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The hash algorithm used to create the hash value of the data.
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: The padding mode.
    return:
      type: System.Boolean
      description: true if the signature is valid; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*data* is null. -or-*signature* is null.-or-*padding* is null.'
  - type: System.ArgumentException
    description: '*hashAlgorithm*.@''System.Security.Cryptography.HashAlgorithmName.Name'' is null or @''System.String.Empty''.'
- uid: System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  href: System.Security.Cryptography.RSA.yml
  name: VerifyData(Byte[], Int32, Int32, Byte[], HashAlgorithmName, RSASignaturePadding)
  name.vb: VerifyData(Byte(), Int32, Int32, Byte(), HashAlgorithmName, RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.VerifyData(System.Byte[], System.Int32, System.Int32, System.Byte[], System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  fullName.vb: System.Security.Cryptography.RSA.VerifyData(System.Byte(), System.Int32, System.Int32, System.Byte(), System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  type: Method
  source:
    remote: *o1
    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs
    startLine: 107
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Verifies that a digital signature is valid by calculating the hash value of the data in a portion of a byte array using the specified hash algorithm and padding, and comparing it to the provided signature.
  syntax:
    content: public virtual bool VerifyData(byte[] data, int offset, int count, byte[] signature, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
    content.vb: Public Overridable Function VerifyData(data As Byte(), offset As Integer, count As Integer, signature As Byte(), hashAlgorithm As HashAlgorithmName, padding As RSASignaturePadding) As Boolean
    parameters:
    - id: data
      type: System.Byte[]
      description: The signed data.
    - id: offset
      type: System.Int32
      description: The starting index at which to compute the hash.
    - id: count
      type: System.Int32
      description: The number of bytes to hash.
    - id: signature
      type: System.Byte[]
      description: The signature data to be verified.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The hash algorithm used to create the hash value of the data.
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: The padding mode.
    return:
      type: System.Boolean
      description: true if the signature is valid; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*data* is null. -or-*signature* is null.-or-*padding* is null.'
  - type: System.ArgumentException
    description: '*hashAlgorithm*.@''System.Security.Cryptography.HashAlgorithmName.Name'' is null or @''System.String.Empty''.'
  - type: System.ArgumentOutOfRangeException
    description: "*offset* is less than zero. -or-*count* is less than zero.-or-*offset* + *count* – 1 results in an index that is beyond the upper bound of *data*."
- uid: System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  href: System.Security.Cryptography.RSA.yml
  name: VerifyData(Stream, Byte[], HashAlgorithmName, RSASignaturePadding)
  name.vb: VerifyData(Stream, Byte(), HashAlgorithmName, RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.VerifyData(System.IO.Stream, System.Byte[], System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  fullName.vb: System.Security.Cryptography.RSA.VerifyData(System.IO.Stream, System.Byte(), System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  type: Method
  source:
    remote: *o1
    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs
    startLine: 108
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Verifies that a digital signature is valid by calculating the hash value of the specified stream using the specified hash algorithm and padding, and comparing it to the provided signature.
  syntax:
    content: public bool VerifyData(Stream data, byte[] signature, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
    content.vb: Public Function VerifyData(data As Stream, signature As Byte(), hashAlgorithm As HashAlgorithmName, padding As RSASignaturePadding) As Boolean
    parameters:
    - id: data
      type: System.IO.Stream
      description: The signed data.
    - id: signature
      type: System.Byte[]
      description: The signature data to be verified.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The hash algorithm used to create the hash value of the data.
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: The padding mode.
    return:
      type: System.Boolean
      description: true if the signature is valid; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*data* is null. -or-*signature* is null.-or-*padding* is null.'
  - type: System.ArgumentException
    description: '*hashAlgorithm*.@''System.Security.Cryptography.HashAlgorithmName.Name'' is null or @''System.String.Empty''.'
- uid: System.Security.Cryptography.RSA.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  href: System.Security.Cryptography.RSA.yml
  name: VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)
  name.vb: VerifyHash(Byte(), Byte(), HashAlgorithmName, RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.VerifyHash(System.Byte[], System.Byte[], System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  fullName.vb: System.Security.Cryptography.RSA.VerifyHash(System.Byte(), System.Byte(), System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  type: Method
  source:
    remote: *o1
    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs
    startLine: 109
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Verifies that a digital signature is valid by determining the hash value in the signature using the specified hash algorithm and padding, and comparing it to the provided hash value.
  syntax:
    content: public abstract bool VerifyHash(byte[] hash, byte[] signature, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
    content.vb: Public MustOverride Function VerifyHash(hash As Byte(), signature As Byte(), hashAlgorithm As HashAlgorithmName, padding As RSASignaturePadding) As Boolean
    parameters:
    - id: hash
      type: System.Byte[]
      description: The hash value of the signed data.
    - id: signature
      type: System.Byte[]
      description: The signature data to be verified.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The hash algorithm used to create the hash value.
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: The padding mode.
    return:
      type: System.Boolean
      description: true if the signature is valid; otherwise, false.
  exceptions:
  - type: System.NotImplementedException
    description: A derived class must override this method.
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  href: System.Security.Cryptography.AsymmetricAlgorithm.yml
  name: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
  type: Class
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: KeySizeValue
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: LegalKeySizesValue
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: Dispose()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose()
  spec.csharp:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
    name: Dispose
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
    name: Dispose
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Clear
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: Clear()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Clear()
  spec.csharp:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.Clear
    name: Clear
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.Clear
    name: Clear
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: Dispose(Boolean)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
    name: Dispose
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
    name: Dispose
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Create
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: Create()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Create()
  spec.csharp:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.Create
    name: Create
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.Create
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.Create
    name: Create
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.Create
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Create(System.String)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: Create(String)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Create(System.String)
  spec.csharp:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.Create(System.String)
    name: Create
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.Create
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.Create(System.String)
    name: Create
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.Create
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: FromXmlString(String)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)
  spec.csharp:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)
    name: FromXmlString
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)
    name: FromXmlString
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString
    isExternal: true
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: ToXmlString(Boolean)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)
  spec.csharp:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)
    name: ToXmlString
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)
    name: ToXmlString
    fullName: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: KeySize
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeySize
- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: LegalKeySizes
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
- uid: System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: SignatureAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: true
  name: KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Security.Cryptography.RSAEncryptionPadding
  parent: System.Security.Cryptography
  isExternal: false
  href: System.Security.Cryptography.RSAEncryptionPadding.yml
  name: RSAEncryptionPadding
  fullName: System.Security.Cryptography.RSAEncryptionPadding
  type: Class
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.Security.Cryptography.RSAParameters
  parent: System.Security.Cryptography
  isExternal: false
  href: System.Security.Cryptography.RSAParameters.yml
  name: RSAParameters
  fullName: System.Security.Cryptography.RSAParameters
  type: Struct
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  href: System.Security.Cryptography.HashAlgorithmName.yml
  name: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
  type: Struct
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  href: System.IO.Stream.yml
  name: Stream
  fullName: System.IO.Stream
  type: Class
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
  type: Namespace
- uid: System.Security.Cryptography.RSASignaturePadding
  parent: System.Security.Cryptography
  isExternal: false
  href: System.Security.Cryptography.RSASignaturePadding.yml
  name: RSASignaturePadding
  fullName: System.Security.Cryptography.RSASignaturePadding
  type: Class
- uid: System.NotImplementedException
  isExternal: false
  href: System.NotImplementedException.yml
  name: NotImplementedException
  fullName: System.NotImplementedException
  type: Class
  summary: The exception that is thrown when a requested method or operation is not implemented.
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  type: Class
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  type: Class
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  type: Class
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
