items:
- uid: System.Text.Encoder
  id: Encoder
  parent: System.Text
  children:
  - System.Text.Encoder.#ctor
  - System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)
  - System.Text.Encoder.Fallback
  - System.Text.Encoder.FallbackBuffer
  - System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)
  - System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)
  - System.Text.Encoder.Reset
  href: System.Text.Encoder.yml
  name: Encoder
  fullName: System.Text.Encoder
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Text/Encoder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Text/Encoder.cs
    startLine: 20
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Converts a set of characters into a sequence of bytes.
  syntax:
    content: public abstract class Encoder
    content.vb: Public MustInherit Class Encoder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Text.Encoder.#ctor
  id: '#ctor'
  parent: System.Text.Encoder
  href: System.Text.Encoder.yml
  name: Encoder()
  fullName: System.Text.Encoder.Encoder()
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Text/Encoder.cs
    startLine: 34
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Initializes a new instance of the @'System.Text.Encoder' class.
  syntax:
    content: protected Encoder()
    content.vb: Protected Sub New
- uid: System.Text.Encoder.Fallback
  id: Fallback
  parent: System.Text.Encoder
  href: System.Text.Encoder.yml
  name: Fallback
  fullName: System.Text.Encoder.Fallback
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Text/Encoder.cs
    startLine: 39
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Gets or sets a @'System.Text.EncoderFallback' object for the current @'System.Text.Encoder' object.
  syntax:
    content: public EncoderFallback Fallback { get; set; }
    content.vb: Public Property Fallback As EncoderFallback
    parameters: []
    return:
      type: System.Text.EncoderFallback
      description: A @'System.Text.EncoderFallback' object.
  exceptions:
  - type: System.ArgumentNullException
    description: The value in a set operation is null (Nothing).
  - type: System.ArgumentException
    description: A new value cannot be assigned in a set operation because the current @'System.Text.EncoderFallbackBuffer' object contains data that has not been encoded yet.
  - type: System.Text.EncoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for fuller explanation)-and-@'System.Text.Encoder.Fallback' is set to @'System.Text.EncoderExceptionFallback'.
- uid: System.Text.Encoder.FallbackBuffer
  id: FallbackBuffer
  parent: System.Text.Encoder
  href: System.Text.Encoder.yml
  name: FallbackBuffer
  fullName: System.Text.Encoder.FallbackBuffer
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Text/Encoder.cs
    startLine: 65
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Gets the @'System.Text.EncoderFallbackBuffer' object associated with the current @'System.Text.Encoder' object.
  syntax:
    content: public EncoderFallbackBuffer FallbackBuffer { get; }
    content.vb: Public ReadOnly Property FallbackBuffer As EncoderFallbackBuffer
    parameters: []
    return:
      type: System.Text.EncoderFallbackBuffer
      description: A @'System.Text.EncoderFallbackBuffer' object.
- uid: System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)
  id: Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)
  parent: System.Text.Encoder
  href: System.Text.Encoder.yml
  name: Convert(Char[], Int32, Int32, Byte[], Int32, Int32, Boolean, out Int32, out Int32, out Boolean)
  name.vb: Convert(Char(), Int32, Int32, Byte(), Int32, Int32, Boolean, ByRef Int32, ByRef Int32, ByRef Boolean)
  fullName: System.Text.Encoder.Convert(System.Char[], System.Int32, System.Int32, System.Byte[], System.Int32, System.Int32, System.Boolean, out System.Int32, out System.Int32, out System.Boolean)
  fullName.vb: System.Text.Encoder.Convert(System.Char(), System.Int32, System.Int32, System.Byte(), System.Int32, System.Int32, System.Boolean, ByRef System.Int32, ByRef System.Int32, ByRef System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Text/Encoder.cs
    startLine: 242
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Converts an array of Unicode characters to an encoded byte sequence and stores the result in an array of bytes.
  syntax:
    content: public virtual void Convert(char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex, int byteCount, bool flush, out int charsUsed, out int bytesUsed, out bool completed)
    content.vb: Public Overridable Sub Convert(chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer, byteCount As Integer, flush As Boolean, ByRef charsUsed As Integer, ByRef bytesUsed As Integer, ByRef completed As Boolean)
    parameters:
    - id: chars
      type: System.Char[]
      description: An array of characters to convert.
    - id: charIndex
      type: System.Int32
      description: The first element of *chars* to convert.
    - id: charCount
      type: System.Int32
      description: The number of elements of *chars* to convert.
    - id: bytes
      type: System.Byte[]
      description: An array where the converted bytes are stored.
    - id: byteIndex
      type: System.Int32
      description: The first element of *bytes* in which data is stored.
    - id: byteCount
      type: System.Int32
      description: The maximum number of elements of *bytes* to use in the conversion.
    - id: flush
      type: System.Boolean
      description: true to indicate no further data is to be converted; otherwise, false.
    - id: charsUsed
      type: System.Int32
      description: When this method returns, contains the number of characters from *chars* that were used in the conversion. This parameter is passed uninitialized.
    - id: bytesUsed
      type: System.Int32
      description: When this method returns, contains the number of bytes that were produced by the conversion. This parameter is passed uninitialized.
    - id: completed
      type: System.Boolean
      description: When this method returns, contains true if all the characters specified by *charCount* were converted; otherwise, false. This parameter is passed uninitialized.
  exceptions:
  - type: System.ArgumentNullException
    description: '*chars* or *bytes* is null (Nothing).'
  - type: System.ArgumentOutOfRangeException
    description: '*charIndex*, *charCount*, *byteIndex*, or *byteCount* is less than zero.-or-The length of *chars* - *charIndex* is less than *charCount*.-or-The length of *bytes* - *byteIndex* is less than *byteCount*.'
  - type: System.ArgumentException
    description: The output buffer is too small to contain any of the converted input. The output buffer should be greater than or equal to the size indicated by the  method.
  - type: System.Text.EncoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for fuller explanation)-and-@'System.Text.Encoder.Fallback' is set to @'System.Text.EncoderExceptionFallback'.
- uid: System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)
  id: GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)
  parent: System.Text.Encoder
  href: System.Text.Encoder.yml
  name: GetByteCount(Char[], Int32, Int32, Boolean)
  name.vb: GetByteCount(Char(), Int32, Int32, Boolean)
  fullName: System.Text.Encoder.GetByteCount(System.Char[], System.Int32, System.Int32, System.Boolean)
  fullName.vb: System.Text.Encoder.GetByteCount(System.Char(), System.Int32, System.Int32, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Text/Encoder.cs
    startLine: 116
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters from the specified character array. A parameter indicates whether to clear the internal state of the encoder after the calculation.
  syntax:
    content: public abstract int GetByteCount(char[] chars, int index, int count, bool flush)
    content.vb: Public MustOverride Function GetByteCount(chars As Char(), index As Integer, count As Integer, flush As Boolean) As Integer
    parameters:
    - id: chars
      type: System.Char[]
      description: The character array containing the set of characters to encode.
    - id: index
      type: System.Int32
      description: The index of the first character to encode.
    - id: count
      type: System.Int32
      description: The number of characters to encode.
    - id: flush
      type: System.Boolean
      description: true to simulate clearing the internal state of the encoder after the calculation; otherwise, false.
    return:
      type: System.Int32
      description: The number of bytes produced by encoding the specified characters and any characters in the internal buffer.
  exceptions:
  - type: System.ArgumentNullException
    description: '*chars* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*index* or *count* is less than zero.-or- *index* and *count* do not denote a valid range in *chars*.'
  - type: System.Text.EncoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for fuller explanation)-and-@'System.Text.Encoder.Fallback' is set to @'System.Text.EncoderExceptionFallback'.
- uid: System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)
  id: GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)
  parent: System.Text.Encoder
  href: System.Text.Encoder.yml
  name: GetBytes(Char[], Int32, Int32, Byte[], Int32, Boolean)
  name.vb: GetBytes(Char(), Int32, Int32, Byte(), Int32, Boolean)
  fullName: System.Text.Encoder.GetBytes(System.Char[], System.Int32, System.Int32, System.Byte[], System.Int32, System.Boolean)
  fullName.vb: System.Text.Encoder.GetBytes(System.Char(), System.Int32, System.Int32, System.Byte(), System.Int32, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Text/Encoder.cs
    startLine: 164
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, encodes a set of characters from the specified character array and any characters in the internal buffer into the specified byte array. A parameter indicates whether to clear the internal state of the encoder after the conversion.
  syntax:
    content: public abstract int GetBytes(char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex, bool flush)
    content.vb: Public MustOverride Function GetBytes(chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer, flush As Boolean) As Integer
    parameters:
    - id: chars
      type: System.Char[]
      description: The character array containing the set of characters to encode.
    - id: charIndex
      type: System.Int32
      description: The index of the first character to encode.
    - id: charCount
      type: System.Int32
      description: The number of characters to encode.
    - id: bytes
      type: System.Byte[]
      description: The byte array to contain the resulting sequence of bytes.
    - id: byteIndex
      type: System.Int32
      description: The index at which to start writing the resulting sequence of bytes.
    - id: flush
      type: System.Boolean
      description: true to clear the internal state of the encoder after the conversion; otherwise, false.
    return:
      type: System.Int32
      description: The actual number of bytes written into *bytes*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*chars* is null (Nothing).-or- *bytes* is null (Nothing).'
  - type: System.ArgumentOutOfRangeException
    description: '*charIndex* or *charCount* or *byteIndex* is less than zero.-or- *charIndex* and *charCount* do not denote a valid range in *chars*.-or- *byteIndex* is not a valid index in *bytes*.'
  - type: System.ArgumentException
    description: '*bytes* does not have enough capacity from *byteIndex* to the end of the array to accommodate the resulting bytes.'
  - type: System.Text.EncoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for fuller explanation)-and-@'System.Text.Encoder.Fallback' is set to @'System.Text.EncoderExceptionFallback'.
- uid: System.Text.Encoder.Reset
  id: Reset
  parent: System.Text.Encoder
  href: System.Text.Encoder.yml
  name: Reset()
  fullName: System.Text.Encoder.Reset()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Text/Encoder.cs
    startLine: 99
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, sets the encoder back to its initial state.
  syntax:
    content: public virtual void Reset()
    content.vb: Public Overridable Sub Reset
references:
- uid: System.Text
  isExternal: false
  name: System.Text
  fullName: System.Text
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Text.EncoderFallback
  parent: System.Text
  isExternal: false
  href: System.Text.EncoderFallback.yml
  name: EncoderFallback
  fullName: System.Text.EncoderFallback
  type: Class
- uid: System.Text.EncoderFallbackBuffer
  parent: System.Text
  isExternal: false
  href: System.Text.EncoderFallbackBuffer.yml
  name: EncoderFallbackBuffer
  fullName: System.Text.EncoderFallbackBuffer
  type: Class
- uid: System.Char[]
  isExternal: true
  name: Char[]
  name.vb: Char()
  fullName: System.Char[]
  fullName.vb: System.Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  type: Class
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  type: Class
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.Text.EncoderFallbackException
  isExternal: false
  href: System.Text.EncoderFallbackException.yml
  name: EncoderFallbackException
  fullName: System.Text.EncoderFallbackException
  type: Class
  summary: The exception that is thrown when an encoder fallback operation fails. This class cannot be inherited.
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  type: Class
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
