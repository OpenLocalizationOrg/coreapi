items:
- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  commentId: T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  id: DisplayFormatAttribute
  parent: System.ComponentModel.DataAnnotations
  children:
  - System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor
  - System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode
  - System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull
  - System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString
  - System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode
  - System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText
  langs:
  - csharp
  - vb
  name: DisplayFormatAttribute
  fullName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayFormatAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DisplayFormatAttribute
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayFormatAttribute.cs
    startLine: 10
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Specifies how data fields are displayed and formatted by ASP.NET Dynamic Data.</p>\n"
  remarks: "\n<p>When you apply this attribute to a data field, you must follow the guidelines for the use of the attributes. For more information, see ASP.NET Dynamic Data Guidelines.</p>\n"
  example:
  - "\n<p>See an online example of this feature: <see href=\"http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.ComponentModel.DataAnnotations.DisplayFormatAttribute\">Run</see>.</p>\n<p>The following example shows how to use the <xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute\" data-throw-if-not-resolved=\"false\"></xref> to customize formatting for a data field. The example performs the following steps:</p>\n<ul><li>\n<p>Implements a metadata partial class and an associated metadata class. </p>\n</li><li>\n<p>In the associated metadata class, it applies the <xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute to specify the following results:</p>\n<ul><li>\n<p>Display the text \"[Null]\" when a data field is empty.</p>\n</li><li>\n<p>Display currency data in locale specific currency format. </p>\n</li><li>\n<p>Display date information in short format (mm/dd/yy). This format also applies in edit mode.</p>\n</li></ul>\n</li></ul>System.ComponentModel.DataAnnotations.DisplayFormatAttribute#1<p>To compile the example, you need the following:</p><ul><li><p>Microsoft Visual Studio 2008 Service Pack 1 or Visual Web Developer 2008 Express Edition Service Pack 1. </p></li><li><p>The AdventureWorksLT sample database. For information about how to download and install the SQL Server sample database, see <see href=\"http://go.microsoft.com/fwlink/?LinkId=117483\">Microsoft SQL Server Product Samples: Database</see> on the CodePlex site. Make sure that you install the correct version of the sample database for the version of SQL Server that you are running (Microsoft SQL Server 2005 or Microsoft SQL Server 2008).</p></li><li><p>A data-driven Web site. This enables you to create a data context for the database and the class that contains the data field to customize. For more information, see Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding.</p></li></ul>"
  syntax:
    content: 'public class DisplayFormatAttribute : Attribute'
    content.vb: >-
      Public Class DisplayFormatAttribute
          Inherits Attribute
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor
  commentId: M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  langs:
  - csharp
  - vb
  name: DisplayFormatAttribute()
  fullName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DisplayFormatAttribute()
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayFormatAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayFormatAttribute.cs
    startLine: 16
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  example:
  - 
  syntax:
    content: public DisplayFormatAttribute()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode
  commentId: P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode
  id: ApplyFormatInEditMode
  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  langs:
  - csharp
  - vb
  name: ApplyFormatInEditMode
  fullName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayFormatAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ApplyFormatInEditMode
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayFormatAttribute.cs
    startLine: 41
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets or sets a value that indicates whether the formatting string that is specified by the <xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString\" data-throw-if-not-resolved=\"false\"></xref> property is applied to the field value when the data field is in edit mode.</p>\n"
  remarks: "\n<p>By default, the formatting string that is specified by the <xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString\" data-throw-if-not-resolved=\"false\"></xref> property is applied to field values only when the data-bound control is in read-only mode.</p>\n"
  example:
  - "\n<p>The following example shows how to use the <xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode\" data-throw-if-not-resolved=\"false\"></xref> property to set the display format for date information when the data field is in edit mode. The data field format to use for the data field is specified by setting the <xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString\" data-throw-if-not-resolved=\"false\"></xref> property. </p>System.ComponentModel.DataAnnotations.DisplayFormatAttribute#4"
  syntax:
    content: public bool ApplyFormatInEditMode { get; set; }
    content.vb: Public Property ApplyFormatInEditMode As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the formatting string applies to the field value in edit mode; otherwise, <strong>false</strong>. The default is <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull
  commentId: P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  langs:
  - csharp
  - vb
  name: ConvertEmptyStringToNull
  fullName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayFormatAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConvertEmptyStringToNull
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayFormatAttribute.cs
    startLine: 36
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets or sets a value that indicates whether empty string values (\"\") are automatically converted to <strong>null</strong> when the data field is updated in the data source.</p>\n"
  remarks: "\n<p>Users might enter an empty string for a field value. Use the <xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull\" data-throw-if-not-resolved=\"false\"></xref> property to specify whether an empty string value is automatically converted to <strong>null</strong> when the data field is updated in the database.</p>\n<p>By default, a <xref href=\"System.Web.DynamicData.DynamicField\" data-throw-if-not-resolved=\"false\"></xref> object displays <strong>null</strong> values as empty strings. To display a different value, set the <xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  example:
  - "\n<p>The following example shows how to use the <xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull\" data-throw-if-not-resolved=\"false\"></xref> to enable the conversion of empty string values to <strong>null</strong>. </p>System.ComponentModel.DataAnnotations.DisplayFormatAttribute#2"
  syntax:
    content: public bool ConvertEmptyStringToNull { get; set; }
    content.vb: Public Property ConvertEmptyStringToNull As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if empty string values are automatically converted to <strong>null</strong>; otherwise, <strong>false</strong>. The default is <strong>true</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString
  commentId: P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString
  id: DataFormatString
  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  langs:
  - csharp
  - vb
  name: DataFormatString
  fullName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayFormatAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DataFormatString
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayFormatAttribute.cs
    startLine: 26
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets or sets the display format for the field value.</p>\n"
  remarks: "\n<p>Use the <xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString\" data-throw-if-not-resolved=\"false\"></xref> property to specify a custom display format for the values that are displayed in the <xref href=\"System.Web.DynamicData.DynamicField\" data-throw-if-not-resolved=\"false\"></xref> object. If the <xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString\" data-throw-if-not-resolved=\"false\"></xref> property is not set, the field's value is displayed without any special formatting. For more information, see Formatting Types in the .NET Framework.</p>\n<p>When the <xref href=\"System.Web.DynamicData.DynamicField.HtmlEncode\" data-throw-if-not-resolved=\"false\"></xref> property is <strong>true</strong>, the value of the field is HTML encoded to its string representation before the formatting string is applied. For some objects, such as dates, you might want to control how the object is displayed with a formatting string. In those cases, you must set the <xref href=\"System.Web.DynamicData.DynamicField.HtmlEncode\" data-throw-if-not-resolved=\"false\"></xref> property to <strong>false</strong>.</p>\n<p>By default, the formatting string is applied to the field value only when the data-bound control that contains the <xref href=\"System.Web.DynamicData.DynamicField\" data-throw-if-not-resolved=\"false\"></xref> object is in read-only mode. To apply the formatting string to field values when they are in edit mode, set the <xref href=\"System.Web.DynamicData.DynamicField.ApplyFormatInEditMode\" data-throw-if-not-resolved=\"false\"></xref> property to <strong>true</strong>.</p>\n<p>The formatting string can be any literal string and usually includes a placeholder for the field's value. For example, in the formatting string \"Item Value: {0}\", the field's value is substituted for the {0} placeholder when the string is displayed in the <xref href=\"System.Web.DynamicData.DynamicField\" data-throw-if-not-resolved=\"false\"></xref> object. The remainder of the formatting string is displayed as literal text.</p>\n<p>If the formatting string does not include a placeholder, the field's value from the data source is not included in the final display text.</p>\n"
  example:
  - "\n<p>The following examples show how to use the <xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString\" data-throw-if-not-resolved=\"false\"></xref> property to set the display format of data fields. The first example sets the display format for a currency type data field. The second example sets the display format for a date type data field. </p>System.ComponentModel.DataAnnotations.DisplayFormatAttribute#3System.ComponentModel.DataAnnotations.DisplayFormatAttribute#4"
  syntax:
    content: public string DataFormatString { get; set; }
    content.vb: Public Property DataFormatString As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A formatting string that specifies the display format for the value of the data field. The default is an empty string (\"\"), which indicates that no special formatting is applied to the field value.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode
  commentId: P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode
  id: HtmlEncode
  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  langs:
  - csharp
  - vb
  name: HtmlEncode
  fullName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayFormatAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HtmlEncode
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayFormatAttribute.cs
    startLine: 46
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets or sets a value that indicates whether the field should be HTML-encoded.</p>\n"
  example:
  - 
  syntax:
    content: public bool HtmlEncode { get; set; }
    content.vb: Public Property HtmlEncode As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the field should be HTML-encoded; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText
  commentId: P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText
  id: NullDisplayText
  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  langs:
  - csharp
  - vb
  name: NullDisplayText
  fullName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayFormatAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NullDisplayText
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayFormatAttribute.cs
    startLine: 31
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets or sets the text that is displayed for a field when the field's value is <strong>null</strong>.</p>\n"
  remarks: "\n<p>Sometimes a data field's value is stored as null values in the source. You can specify custom text to display for data fields that have a null value by setting the <xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText\" data-throw-if-not-resolved=\"false\"></xref> property. If this property is not set, null field values are displayed as empty strings (\"\"). </p>\n<p>To convert an empty string field value to a null value, you must set the <xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull\" data-throw-if-not-resolved=\"false\"></xref> property to <strong>true</strong>.</p>\n"
  example:
  - "\n<p>The following example shows how to use the <xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText\" data-throw-if-not-resolved=\"false\"></xref> to define a caption to display when the data field is <strong>null</strong>. </p>System.ComponentModel.DataAnnotations.DisplayFormatAttribute#2"
  syntax:
    content: public string NullDisplayText { get; set; }
    content.vb: Public Property NullDisplayText As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The text that is displayed for a field when the field's value is <strong>null</strong>. The default is an empty string (\"\"), which indicates that this property is not set.</p>\n"
  seealso:
  - type: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString
    commentId: P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString
  - type: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull
    commentId: P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.ComponentModel.DataAnnotations
  isExternal: false
  name: System.ComponentModel.DataAnnotations
  fullName: System.ComponentModel.DataAnnotations
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
