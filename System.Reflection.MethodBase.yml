items:
- uid: System.Reflection.MethodBase
  id: MethodBase
  parent: System.Reflection
  children:
  - System.Reflection.MethodBase.Attributes
  - System.Reflection.MethodBase.CallingConvention
  - System.Reflection.MethodBase.ContainsGenericParameters
  - System.Reflection.MethodBase.Equals(System.Object)
  - System.Reflection.MethodBase.GetGenericArguments
  - System.Reflection.MethodBase.GetHashCode
  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)
  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)
  - System.Reflection.MethodBase.GetParameters
  - System.Reflection.MethodBase.Invoke(System.Object,System.Object[])
  - System.Reflection.MethodBase.IsAbstract
  - System.Reflection.MethodBase.IsAssembly
  - System.Reflection.MethodBase.IsConstructor
  - System.Reflection.MethodBase.IsFamily
  - System.Reflection.MethodBase.IsFamilyAndAssembly
  - System.Reflection.MethodBase.IsFamilyOrAssembly
  - System.Reflection.MethodBase.IsFinal
  - System.Reflection.MethodBase.IsGenericMethod
  - System.Reflection.MethodBase.IsGenericMethodDefinition
  - System.Reflection.MethodBase.IsHideBySig
  - System.Reflection.MethodBase.IsPrivate
  - System.Reflection.MethodBase.IsPublic
  - System.Reflection.MethodBase.IsSpecialName
  - System.Reflection.MethodBase.IsStatic
  - System.Reflection.MethodBase.IsVirtual
  - System.Reflection.MethodBase.MethodImplementationFlags
  href: System.Reflection.MethodBase.yml
  name: MethodBase
  fullName: System.Reflection.MethodBase
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Reflection/MethodBase.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 49
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Provides information about methods and constructors.
  syntax:
    content: 'public abstract class MethodBase : MemberInfo'
    content.vb: Public MustInherit Class MethodBase Inherits MemberInfo
  inheritance:
  - System.Object
  - System.Reflection.MemberInfo
  inheritedMembers:
  - System.Reflection.MemberInfo.CustomAttributes
  - System.Reflection.MemberInfo.DeclaringType
  - System.Reflection.MemberInfo.Module
  - System.Reflection.MemberInfo.Name
- uid: System.Reflection.MethodBase.Attributes
  id: Attributes
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: Attributes
  fullName: System.Reflection.MethodBase.Attributes
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 174
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the attributes associated with this method.
  syntax:
    content: public abstract MethodAttributes Attributes { get; }
    content.vb: Public MustOverride ReadOnly Property Attributes As MethodAttributes
    parameters: []
    return:
      type: System.Reflection.MethodAttributes
      description: One of the @'System.Reflection.MethodAttributes' values.
- uid: System.Reflection.MethodBase.CallingConvention
  id: CallingConvention
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: CallingConvention
  fullName: System.Reflection.MethodBase.CallingConvention
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 178
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating the calling conventions for this method.
  syntax:
    content: public virtual CallingConventions CallingConvention { get; }
    content.vb: Public Overridable ReadOnly Property CallingConvention As CallingConventions
    parameters: []
    return:
      type: System.Reflection.CallingConventions
      description: The @'System.Reflection.CallingConventions' for this method.
- uid: System.Reflection.MethodBase.ContainsGenericParameters
  id: ContainsGenericParameters
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: ContainsGenericParameters
  fullName: System.Reflection.MethodBase.ContainsGenericParameters
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 185
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating whether the generic method contains unassigned generic type parameters.
  syntax:
    content: public virtual bool ContainsGenericParameters { get; }
    content.vb: Public Overridable ReadOnly Property ContainsGenericParameters As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the current @'System.Reflection.MethodBase' object represents a generic method that contains unassigned generic type parameters; otherwise, false.
- uid: System.Reflection.MethodBase.IsAbstract
  id: IsAbstract
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: IsAbstract
  fullName: System.Reflection.MethodBase.IsAbstract
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 231
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating whether the method is abstract.
  syntax:
    content: public bool IsAbstract { get; }
    content.vb: Public ReadOnly Property IsAbstract As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the method is abstract; otherwise, false.
- uid: System.Reflection.MethodBase.IsAssembly
  id: IsAssembly
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: IsAssembly
  fullName: System.Reflection.MethodBase.IsAssembly
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 217
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating whether the potential visibility of this method or constructor is described by @'System.Reflection.MethodAttributes.Assembly'; that is, the method or constructor is visible at most to other types in the same assembly, and is not visible to derived types outside the assembly.
  syntax:
    content: public bool IsAssembly { get; }
    content.vb: Public ReadOnly Property IsAssembly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the visibility of this method or constructor is exactly described by @'System.Reflection.MethodAttributes.Assembly'; otherwise, false.
- uid: System.Reflection.MethodBase.IsConstructor
  id: IsConstructor
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: IsConstructor
  fullName: System.Reflection.MethodBase.IsConstructor
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 235
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating whether the method is a constructor.
  syntax:
    content: public bool IsConstructor { get; }
    content.vb: Public ReadOnly Property IsConstructor As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if this method is a constructor represented by a @'System.Reflection.ConstructorInfo' object (see note in Remarks about @'System.Reflection.Emit.ConstructorBuilder' objects); otherwise, false.
- uid: System.Reflection.MethodBase.IsFamily
  id: IsFamily
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: IsFamily
  fullName: System.Reflection.MethodBase.IsFamily
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 215
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating whether the visibility of this method or constructor is described by @'System.Reflection.MethodAttributes.Family'; that is, the method or constructor is visible only within its class and derived classes.
  syntax:
    content: public bool IsFamily { get; }
    content.vb: Public ReadOnly Property IsFamily As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if access to this method or constructor is exactly described by @'System.Reflection.MethodAttributes.Family'; otherwise, false.
- uid: System.Reflection.MethodBase.IsFamilyAndAssembly
  id: IsFamilyAndAssembly
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: IsFamilyAndAssembly
  fullName: System.Reflection.MethodBase.IsFamilyAndAssembly
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 219
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating whether the visibility of this method or constructor is described by @'System.Reflection.MethodAttributes.FamANDAssem'; that is, the method or constructor can be called by derived classes, but only if they are in the same assembly.
  syntax:
    content: public bool IsFamilyAndAssembly { get; }
    content.vb: Public ReadOnly Property IsFamilyAndAssembly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if access to this method or constructor is exactly described by @'System.Reflection.MethodAttributes.FamANDAssem'; otherwise, false.
- uid: System.Reflection.MethodBase.IsFamilyOrAssembly
  id: IsFamilyOrAssembly
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: IsFamilyOrAssembly
  fullName: System.Reflection.MethodBase.IsFamilyOrAssembly
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 221
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating whether the potential visibility of this method or constructor is described by @'System.Reflection.MethodAttributes.FamORAssem'; that is, the method or constructor can be called by derived classes wherever they are, and by classes in the same assembly.
  syntax:
    content: public bool IsFamilyOrAssembly { get; }
    content.vb: Public ReadOnly Property IsFamilyOrAssembly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if access to this method or constructor is exactly described by @'System.Reflection.MethodAttributes.FamORAssem'; otherwise, false.
- uid: System.Reflection.MethodBase.IsFinal
  id: IsFinal
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: IsFinal
  fullName: System.Reflection.MethodBase.IsFinal
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 225
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating whether this method is final.
  syntax:
    content: public bool IsFinal { get; }
    content.vb: Public ReadOnly Property IsFinal As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if this method is final; otherwise, false.
- uid: System.Reflection.MethodBase.IsGenericMethod
  id: IsGenericMethod
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: IsGenericMethod
  fullName: System.Reflection.MethodBase.IsGenericMethod
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 187
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating whether the method is generic.
  syntax:
    content: public virtual bool IsGenericMethod { get; }
    content.vb: Public Overridable ReadOnly Property IsGenericMethod As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the current @'System.Reflection.MethodBase' represents a generic method; otherwise, false.
- uid: System.Reflection.MethodBase.IsGenericMethodDefinition
  id: IsGenericMethodDefinition
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: IsGenericMethodDefinition
  fullName: System.Reflection.MethodBase.IsGenericMethodDefinition
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 183
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating whether the method is a generic method definition.
  syntax:
    content: public virtual bool IsGenericMethodDefinition { get; }
    content.vb: Public Overridable ReadOnly Property IsGenericMethodDefinition As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the current @'System.Reflection.MethodBase' object represents the definition of a generic method; otherwise, false.
- uid: System.Reflection.MethodBase.IsHideBySig
  id: IsHideBySig
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: IsHideBySig
  fullName: System.Reflection.MethodBase.IsHideBySig
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 229
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating whether only a member of the same kind with exactly the same signature is hidden in the derived class.
  syntax:
    content: public bool IsHideBySig { get; }
    content.vb: Public ReadOnly Property IsHideBySig As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the member is hidden by signature; otherwise, false.
- uid: System.Reflection.MethodBase.IsPrivate
  id: IsPrivate
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: IsPrivate
  fullName: System.Reflection.MethodBase.IsPrivate
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 213
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating whether this member is private.
  syntax:
    content: public bool IsPrivate { get; }
    content.vb: Public ReadOnly Property IsPrivate As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if access to this method is restricted to other members of the class itself; otherwise, false.
- uid: System.Reflection.MethodBase.IsPublic
  id: IsPublic
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: IsPublic
  fullName: System.Reflection.MethodBase.IsPublic
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 211
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating whether this is a public method.
  syntax:
    content: public bool IsPublic { get; }
    content.vb: Public ReadOnly Property IsPublic As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if this method is public; otherwise, false.
- uid: System.Reflection.MethodBase.IsSpecialName
  id: IsSpecialName
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: IsSpecialName
  fullName: System.Reflection.MethodBase.IsSpecialName
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 233
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating whether this method has a special name.
  syntax:
    content: public bool IsSpecialName { get; }
    content.vb: Public ReadOnly Property IsSpecialName As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if this method has a special name; otherwise, false.
- uid: System.Reflection.MethodBase.IsStatic
  id: IsStatic
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: IsStatic
  fullName: System.Reflection.MethodBase.IsStatic
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 223
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating whether the method is static.
  syntax:
    content: public bool IsStatic { get; }
    content.vb: Public ReadOnly Property IsStatic As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if this method is static; otherwise, false.
- uid: System.Reflection.MethodBase.IsVirtual
  id: IsVirtual
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: IsVirtual
  fullName: System.Reflection.MethodBase.IsVirtual
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 227
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value indicating whether the method is virtual.
  syntax:
    content: public bool IsVirtual { get; }
    content.vb: Public ReadOnly Property IsVirtual As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if this method is virtual; otherwise, false.
- uid: System.Reflection.MethodBase.MethodImplementationFlags
  id: MethodImplementationFlags
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: MethodImplementationFlags
  fullName: System.Reflection.MethodBase.MethodImplementationFlags
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 162
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the @'System.Reflection.MethodImplAttributes' flags that specify the attributes of a method implementation.
  syntax:
    content: public abstract MethodImplAttributes MethodImplementationFlags { get; }
    content.vb: Public MustOverride ReadOnly Property MethodImplementationFlags As MethodImplAttributes
    parameters: []
    return:
      type: System.Reflection.MethodImplAttributes
      description: The method implementation flags.
- uid: System.Reflection.MethodBase.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: Equals(Object)
  fullName: System.Reflection.MethodBase.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 123
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Returns a value that indicates whether this instance is equal to a specified object.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with this instance, or null.
    return:
      type: System.Boolean
      description: true if *obj* equals the type and value of this instance; otherwise, false.
  overridden: System.Reflection.MemberInfo.Equals(System.Object)
- uid: System.Reflection.MethodBase.GetGenericArguments
  id: GetGenericArguments
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: GetGenericArguments()
  fullName: System.Reflection.MethodBase.GetGenericArguments()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 180
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Returns an array of @'System.Type' objects that represent the type arguments of a generic method or the type parameters of a generic method definition.
  syntax:
    content: public virtual Type[] GetGenericArguments()
    content.vb: Public Overridable Function GetGenericArguments As Type()
    return:
      type: System.Type[]
      description: An array of @'System.Type' objects that represent the type arguments of a generic method or the type parameters of a generic method definition. Returns an empty array if the current method is not a generic method.
  exceptions:
  - type: System.NotSupportedException
    description: The current object is a @'System.Reflection.ConstructorInfo'. Generic constructors are not supported in the .NET Framework version 2.0. This exception is the default behavior if this method is not overridden in a derived class.
- uid: System.Reflection.MethodBase.GetHashCode
  id: GetHashCode
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: GetHashCode()
  fullName: System.Reflection.MethodBase.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 128
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Returns the hash code for this instance.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  overridden: System.Reflection.MemberInfo.GetHashCode
- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)
  id: GetMethodFromHandle(System.RuntimeMethodHandle)
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: GetMethodFromHandle(RuntimeMethodHandle)
  fullName: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 59
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets method information by using the method's internal metadata representation (handle).
  syntax:
    content: public static MethodBase GetMethodFromHandle(RuntimeMethodHandle handle)
    content.vb: Public Shared Function GetMethodFromHandle(handle As RuntimeMethodHandle) As MethodBase
    parameters:
    - id: handle
      type: System.RuntimeMethodHandle
      description: The method's handle.
    return:
      type: System.Reflection.MethodBase
      description: A MethodBase containing information about the method.
  exceptions:
  - type: System.ArgumentException
    description: '*handle* is invalid.'
- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)
  id: GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)
  fullName: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle, System.RuntimeTypeHandle)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 75
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a @'System.Reflection.MethodBase' object for the constructor or method represented by the specified handle, for the specified generic type.
  syntax:
    content: public static MethodBase GetMethodFromHandle(RuntimeMethodHandle handle, RuntimeTypeHandle declaringType)
    content.vb: Public Shared Function GetMethodFromHandle(handle As RuntimeMethodHandle, declaringType As RuntimeTypeHandle) As MethodBase
    parameters:
    - id: handle
      type: System.RuntimeMethodHandle
      description: A handle to the internal metadata representation of a constructor or method.
    - id: declaringType
      type: System.RuntimeTypeHandle
      description: A handle to the generic type that defines the constructor or method.
    return:
      type: System.Reflection.MethodBase
      description: A @'System.Reflection.MethodBase' object representing the method or constructor specified by *handle*, in the generic type specified by *declaringType*.
  exceptions:
  - type: System.ArgumentException
    description: '*handle* is invalid.'
- uid: System.Reflection.MethodBase.GetParameters
  id: GetParameters
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: GetParameters()
  fullName: System.Reflection.MethodBase.GetParameters()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 159
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: When overridden in a derived class, gets the parameters of the specified method or constructor.
  syntax:
    content: public abstract ParameterInfo[] GetParameters()
    content.vb: Public MustOverride Function GetParameters As ParameterInfo()
    return:
      type: System.Reflection.ParameterInfo[]
      description: An array of type ParameterInfo containing information that matches the signature of the method (or constructor) reflected by this MethodBase instance.
- uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])
  id: Invoke(System.Object,System.Object[])
  parent: System.Reflection.MethodBase
  href: System.Reflection.MethodBase.yml
  name: Invoke(Object, Object[])
  name.vb: Invoke(Object, Object())
  fullName: System.Reflection.MethodBase.Invoke(System.Object, System.Object[])
  fullName.vb: System.Reflection.MethodBase.Invoke(System.Object, System.Object())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBase.cs
    startLine: 198
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Invokes the method or constructor represented by the current instance, using the specified parameters.
  syntax:
    content: public virtual object Invoke(object obj, object[] parameters)
    content.vb: Public Overridable Function Invoke(obj As Object, parameters As Object()) As Object
    parameters:
    - id: obj
      type: System.Object
      description: The object on which to invoke the method or constructor. If a method is static, this argument is ignored. If a constructor is static, this argument must be null or an instance of the class that defines the constructor.
    - id: parameters
      type: System.Object[]
      description: An argument list for the invoked method or constructor. This is an array of objects with the same number, order, and type as the parameters of the method or constructor to be invoked. If there are no parameters, *parameters* should be null.If the method or constructor represented by this instance takes a ref parameter (ByRef in Visual Basic), no special attribute is required for that parameter in order to invoke the method or constructor using this function. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is null. For value-type elements, this value is 0, 0.0, or false, depending on the specific element type.
    return:
      type: System.Object
      description: An object containing the return value of the invoked method, or null in the case of a constructor.CautionElements of the *parameters* array that represent parameters declared with the ref or out keyword may also be modified.
  exceptions:
  - type: System.Reflection.TargetException
    description: In the .NET for Windows Store apps or the Portable Class Library, catch @'System.Exception' instead.The *obj* parameter is null and the method is not static.-or- The method is not declared or inherited by the class of *obj*. -or-A static constructor is invoked, and *obj* is neither null nor an instance of the class that declared the constructor.
  - type: System.ArgumentException
    description: The elements of the *parameters*array do not match the signature of the method or constructor reflected by this instance.
  - type: System.Reflection.TargetInvocationException
    description: The invoked method or constructor throws an exception. -or-The current instance is a @'System.Reflection.Emit.DynamicMethod' that contains unverifiable code. See the "Verification" section in Remarks for @'System.Reflection.Emit.DynamicMethod'.
  - type: System.Reflection.TargetParameterCountException
    description: The *parameters* array does not have the correct number of arguments.
  - type: System.MethodAccessException
    description: In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, @'System.MemberAccessException', instead.The caller does not have permission to execute the method or constructor that is represented by the current instance.
  - type: System.InvalidOperationException
    description: The type that declares the method is an open generic type. That is, the @'System.Type.ContainsGenericParameters' property returns true for the declaring type.
  - type: System.NotSupportedException
    description: The current instance is a @'System.Reflection.Emit.MethodBuilder'.
references:
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Reflection.MemberInfo.CustomAttributes
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: CustomAttributes
  fullName: System.Reflection.MemberInfo.CustomAttributes
- uid: System.Reflection.MemberInfo.DeclaringType
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: DeclaringType
  fullName: System.Reflection.MemberInfo.DeclaringType
- uid: System.Reflection.MemberInfo.Module
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: Module
  fullName: System.Reflection.MemberInfo.Module
- uid: System.Reflection.MemberInfo.Name
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: Name
  fullName: System.Reflection.MemberInfo.Name
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.MethodAttributes.yml
  name: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.CallingConventions.yml
  name: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MethodImplAttributes
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.MethodImplAttributes.yml
  name: MethodImplAttributes
  fullName: System.Reflection.MethodImplAttributes
- uid: System.Reflection.MemberInfo.Equals(System.Object)
  parent: System.Reflection.MemberInfo
  isExternal: true
  href: System.Reflection.MemberInfo.yml
  name: Equals(Object)
  fullName: System.Reflection.MemberInfo.Equals(System.Object)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.Equals(System.Object)
    name: Equals
    fullName: System.Reflection.MemberInfo.Equals
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.Equals(System.Object)
    name: Equals
    fullName: System.Reflection.MemberInfo.Equals
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Type[]
  isExternal: false
  href: System.Type.yml
  name: Type[]
  name.vb: Type()
  fullName: System.Type[]
  fullName.vb: System.Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ()
    fullName: ()
- uid: System.Reflection.MemberInfo.GetHashCode
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: GetHashCode()
  fullName: System.Reflection.MemberInfo.GetHashCode()
  spec.csharp:
  - uid: System.Reflection.MemberInfo.GetHashCode
    name: GetHashCode
    fullName: System.Reflection.MemberInfo.GetHashCode
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.GetHashCode
    name: GetHashCode
    fullName: System.Reflection.MemberInfo.GetHashCode
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.RuntimeMethodHandle
  parent: System
  isExternal: false
  href: System.RuntimeMethodHandle.yml
  name: RuntimeMethodHandle
  fullName: System.RuntimeMethodHandle
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: Reflection.MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.RuntimeTypeHandle
  parent: System
  isExternal: false
  href: System.RuntimeTypeHandle.yml
  name: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
- uid: System.Reflection.ParameterInfo[]
  isExternal: false
  href: System.Reflection.ParameterInfo.yml
  name: ParameterInfo[]
  name.vb: ParameterInfo()
  fullName: System.Reflection.ParameterInfo[]
  fullName.vb: System.Reflection.ParameterInfo()
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    href: System.Reflection.ParameterInfo.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    href: System.Reflection.ParameterInfo.yml
  - name: ()
    fullName: ()
- uid: System.Object[]
  isExternal: false
  href: System.Object.yml
  name: Object[]
  name.vb: Object()
  fullName: System.Object[]
  fullName.vb: System.Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ()
    fullName: ()
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  href: System.NotSupportedException.yml
  name: NotSupportedException
  fullName: System.NotSupportedException
  summary: The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.Reflection.TargetException
- uid: System.Reflection.TargetInvocationException
  isExternal: false
  href: System.Reflection.TargetInvocationException.yml
  name: TargetInvocationException
  fullName: System.Reflection.TargetInvocationException
  summary: The exception that is thrown by methods invoked through reflection. This class cannot be inherited.
- uid: System.Reflection.TargetParameterCountException
  isExternal: false
  href: System.Reflection.TargetParameterCountException.yml
  name: TargetParameterCountException
  fullName: System.Reflection.TargetParameterCountException
  summary: The exception that is thrown when the number of parameters for an invocation does not match the number expected. This class cannot be inherited.
- uid: System.MethodAccessException
  isExternal: false
  href: System.MethodAccessException.yml
  name: MethodAccessException
  fullName: System.MethodAccessException
  summary: The exception that is thrown when there is an invalid attempt to access a method, such as accessing a private method from partially trusted code.
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  href: System.InvalidOperationException.yml
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  summary: The exception that is thrown when a method call is invalid for the object's current state.
