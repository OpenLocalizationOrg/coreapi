items:
- uid: System.IO.FileOptions
  id: FileOptions
  parent: System.IO
  children:
  - System.IO.FileOptions.Asynchronous
  - System.IO.FileOptions.DeleteOnClose
  - System.IO.FileOptions.Encrypted
  - System.IO.FileOptions.None
  - System.IO.FileOptions.RandomAccess
  - System.IO.FileOptions.SequentialScan
  - System.IO.FileOptions.WriteThrough
  href: System.IO.FileOptions.yml
  name: FileOptions
  fullName: System.IO.FileOptions
  type: Enum
  source:
    remote: &o0
      path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
    startLine: 12
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Represents advanced options for creating a @'System.IO.FileStream' object.
  syntax:
    content: public enum FileOptions
    content.vb: Public Enum FileOptions
- uid: System.IO.FileOptions.Asynchronous
  id: Asynchronous
  parent: System.IO.FileOptions
  href: System.IO.FileOptions.yml
  name: Asynchronous
  fullName: System.IO.FileOptions.Asynchronous
  type: Field
  source:
    remote: *o0
    path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
    startLine: 22
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Indicates that a file can be used for asynchronous reading and writing.
  syntax:
    content: Asynchronous = 1073741824
- uid: System.IO.FileOptions.DeleteOnClose
  id: DeleteOnClose
  parent: System.IO.FileOptions
  href: System.IO.FileOptions.yml
  name: DeleteOnClose
  fullName: System.IO.FileOptions.DeleteOnClose
  type: Field
  source:
    remote: *o0
    path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
    startLine: 25
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Indicates that a file is automatically deleted when it is no longer in use.
  syntax:
    content: DeleteOnClose = 67108864
- uid: System.IO.FileOptions.Encrypted
  id: Encrypted
  parent: System.IO.FileOptions
  href: System.IO.FileOptions.yml
  name: Encrypted
  fullName: System.IO.FileOptions.Encrypted
  type: Field
  source:
    remote: *o0
    path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
    startLine: 32
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Indicates that a file is encrypted and can be decrypted only by using the same user account used for encryption.
  syntax:
    content: Encrypted = 16384
- uid: System.IO.FileOptions.None
  id: None
  parent: System.IO.FileOptions
  href: System.IO.FileOptions.yml
  name: None
  fullName: System.IO.FileOptions.None
  type: Field
  source:
    remote: *o0
    path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
    startLine: 20
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Indicates that no additional options should be used when creating a @'System.IO.FileStream' object.
  syntax:
    content: None = 0
- uid: System.IO.FileOptions.RandomAccess
  id: RandomAccess
  parent: System.IO.FileOptions
  href: System.IO.FileOptions.yml
  name: RandomAccess
  fullName: System.IO.FileOptions.RandomAccess
  type: Field
  source:
    remote: *o0
    path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
    startLine: 24
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Indicates that the file is accessed randomly. The system can use this as a hint to optimize file caching.
  syntax:
    content: RandomAccess = 268435456
- uid: System.IO.FileOptions.SequentialScan
  id: SequentialScan
  parent: System.IO.FileOptions
  href: System.IO.FileOptions.yml
  name: SequentialScan
  fullName: System.IO.FileOptions.SequentialScan
  type: Field
  source:
    remote: *o0
    path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
    startLine: 26
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Indicates that the file is to be accessed sequentially from beginning to end. The system can use this as a hint to optimize file caching. If an application moves the file pointer for random access, optimum caching may not occur; however, correct operation is still guaranteed.
  syntax:
    content: SequentialScan = 134217728
- uid: System.IO.FileOptions.WriteThrough
  id: WriteThrough
  parent: System.IO.FileOptions
  href: System.IO.FileOptions.yml
  name: WriteThrough
  fullName: System.IO.FileOptions.WriteThrough
  type: Field
  source:
    remote: *o0
    path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
    startLine: 21
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Indicates that the system should write through any intermediate cache and go directly to disk.
  syntax:
    content: WriteThrough = -2147483648
references:
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
