items:
- uid: System.Threading.TimerCallback
  commentId: T:System.Threading.TimerCallback
  id: TimerCallback
  parent: System.Threading
  children: []
  langs:
  - csharp
  - vb
  name: TimerCallback
  nameWithType: TimerCallback
  fullName: System.Threading.TimerCallback
  type: Delegate
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Timer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TimerCallback
    path: src/mscorlib/src/System/Threading/Timer.cs
    startLine: 22
  assemblies:
  - System.Threading.Timer
  namespace: System.Threading
  summary: "\n<p>Represents the method that handles calls from a <xref href=\"System.Threading.Timer\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>Use a <strong>TimerCallback</strong> delegate to specify the method that is called by a <xref href=\"System.Threading.Timer\" data-throw-if-not-resolved=\"false\"></xref>. This method does not execute in the thread that created the timer; it executes in a separate thread pool thread that is provided by the system. The <strong>TimerCallback</strong> delegate invokes the method once after the start time elapses, and continues to invoke it once per timer interval until the <xref href=\"System.Threading.Timer.Dispose(System.Threading.WaitHandle)\" data-throw-if-not-resolved=\"false\"></xref> method is called, or until the <xref href=\"System.Threading.Timer.Change(System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method is called with the interval value <xref href=\"System.Threading.Timeout.Infinite\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Callbacks can occur after the <xref href=\"System.Threading.Timer.Dispose\" data-throw-if-not-resolved=\"false\"></xref> method overload has been called, because the timer queues callbacks for execution by thread pool threads. You can use the <xref href=\"System.Threading.Timer.Dispose(System.Threading.WaitHandle)\" data-throw-if-not-resolved=\"false\"></xref> method overload to wait until all callbacks have completed.</p>\n<p>The timer delegate is specified when the timer is constructed, and cannot be changed. The start time for a <strong>Timer</strong> is passed in the <em>dueTime</em> parameter of the <strong>Timer</strong> constructors, and the period is passed in the <em>period</em> parameter. For an example that demonstrates creating and using a <strong>TimerCallback</strong> delegate, see <xref href=\"System.Threading.Timer\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [ComVisible(true)]

      public delegate void TimerCallback(object state);
    content.vb: >-
      <ComVisible(True)>

      Public Delegate Sub TimerCallback(state As Object)
    parameters:
    - id: state
      type: System.Object
      description: "\n<p>An object containing application-specific information relevant to the method invoked by this delegate, or <strong>null</strong>. </p>\n"
  seealso:
  - type: System.Threading.Timer
    commentId: T:System.Threading.Timer
  - type: System.Threading.ThreadPool
    commentId: T:System.Threading.ThreadPool
  extensionMethods:
  - System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
    ctor: System.Runtime.InteropServices.ComVisibleAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
references:
- uid: System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  commentId: N:System.Threading
- uid: System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  parent: System.Reflection.RuntimeReflectionExtensions
  definition: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  name: GetMethodInfo()
  nameWithType: RuntimeReflectionExtensions.GetMethodInfo()
  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo()
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
    name: GetMethodInfo
    nameWithType: RuntimeReflectionExtensions.GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
    name: GetMethodInfo
    nameWithType: RuntimeReflectionExtensions.GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
  commentId: T:System.Object
- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  isExternal: true
  name: GetMethodInfo(Delegate)
  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)
  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
    name: GetMethodInfo
    nameWithType: RuntimeReflectionExtensions.GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Delegate
    name: Delegate
    nameWithType: Delegate
    fullName: System.Delegate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
    name: GetMethodInfo
    nameWithType: RuntimeReflectionExtensions.GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Delegate
    name: Delegate
    nameWithType: Delegate
    fullName: System.Delegate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
- uid: System.Reflection.RuntimeReflectionExtensions
  parent: System.Reflection
  isExternal: false
  name: RuntimeReflectionExtensions
  nameWithType: RuntimeReflectionExtensions
  fullName: System.Reflection.RuntimeReflectionExtensions
  commentId: T:System.Reflection.RuntimeReflectionExtensions
- uid: System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
  commentId: N:System
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
  commentId: N:System.Reflection
