items:
- uid: System.ComponentModel.DataAnnotations.DisplayAttribute
  commentId: T:System.ComponentModel.DataAnnotations.DisplayAttribute
  id: DisplayAttribute
  parent: System.ComponentModel.DataAnnotations
  children:
  - System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
  - System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField
  - System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter
  - System.ComponentModel.DataAnnotations.DisplayAttribute.Description
  - System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateField
  - System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateFilter
  - System.ComponentModel.DataAnnotations.DisplayAttribute.GetDescription
  - System.ComponentModel.DataAnnotations.DisplayAttribute.GetGroupName
  - System.ComponentModel.DataAnnotations.DisplayAttribute.GetName
  - System.ComponentModel.DataAnnotations.DisplayAttribute.GetOrder
  - System.ComponentModel.DataAnnotations.DisplayAttribute.GetPrompt
  - System.ComponentModel.DataAnnotations.DisplayAttribute.GetShortName
  - System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName
  - System.ComponentModel.DataAnnotations.DisplayAttribute.Name
  - System.ComponentModel.DataAnnotations.DisplayAttribute.Order
  - System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt
  - System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType
  - System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName
  langs:
  - csharp
  - vb
  name: DisplayAttribute
  fullName: System.ComponentModel.DataAnnotations.DisplayAttribute
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DisplayAttribute
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
    startLine: 13
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Provides a general-purpose attribute that lets you specify localizable strings for types and members of entity partial classes.</p>\n"
  remarks: "\n<p>The properties of this class can be used either as literals or as resource identifiers for a specified <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  example:
  - 
  syntax:
    content: 'public sealed class DisplayAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class DisplayAttribute
          Inherits Attribute
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
  commentId: M:System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.DataAnnotations.DisplayAttribute
  langs:
  - csharp
  - vb
  name: DisplayAttribute()
  fullName: System.ComponentModel.DataAnnotations.DisplayAttribute.DisplayAttribute()
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Annotations/ref/System.ComponentModel.Annotations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Annotations/ref/System.ComponentModel.Annotations.cs
    startLine: 86
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>The constructor initializes the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Description\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt\" data-throw-if-not-resolved=\"false\"></xref> properties to an empty string.</p>\n"
  example:
  - 
  syntax:
    content: public DisplayAttribute()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField
  commentId: P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField
  id: AutoGenerateField
  parent: System.ComponentModel.DataAnnotations.DisplayAttribute
  langs:
  - csharp
  - vb
  name: AutoGenerateField
  fullName: System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AutoGenerateField
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
    startLine: 231
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets or sets a value that indicates whether UI should be generated automatically in order to display this field.</p>\n"
  remarks: "\n<p>Do not use this property to access the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField\" data-throw-if-not-resolved=\"false\"></xref> property. Use the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateField\" data-throw-if-not-resolved=\"false\"></xref> method instead.</p>\n"
  example:
  - 
  syntax:
    content: public bool AutoGenerateField { get; set; }
    content.vb: Public Property AutoGenerateField As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if UI should be generated automatically to display this field; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>An attempt was made to get the property value before it was set.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter
  commentId: P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter
  id: AutoGenerateFilter
  parent: System.ComponentModel.DataAnnotations.DisplayAttribute
  langs:
  - csharp
  - vb
  name: AutoGenerateFilter
  fullName: System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AutoGenerateFilter
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
    startLine: 261
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets or sets a value that indicates whether filtering UI is automatically displayed for this field. </p>\n"
  remarks: "\n<p>Do not use this property to get the value of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter\" data-throw-if-not-resolved=\"false\"></xref> property. Use the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateFilter\" data-throw-if-not-resolved=\"false\"></xref> method instead.</p>\n<p>Setting this property overrides the default behavior for specifying which columns are included as filters.</p>\n"
  example:
  - "\n<p>The following example shows how to disable the filter for the Employee1 field.</p>\n<pre><code class=\"c#\">[MetadataType(typeof(EmployeeMD))]\npublic partial class Employee {\npublic class EmployeeMD {\n[Display(Name = \"Last Name\", Order = -9, \n    Prompt = \"Enter Last Name\", Description=\"Emp Last Name\")]\npublic object LastName { get; set; }\n\n[Display(Name = \"Manager\", AutoGenerateFilter=false)]\npublic object Employee1 { get; set; }\n}\n}</code></pre>\n<pre><code class=\"vb#\"><MetadataType(GetType(EmployeeMD))>  _\nPublic Class Employee\n\nPublic Class EmployeeMD\n\n<Display(Name:=\"Last Name\", Order:=-9, _\n   Prompt:=\"Enter Last Name\", Description:=\"Emp Last Name\")>  _\nPublic Property LastName As Object\nEnd Property\n\n<Display(Name:=\"Manager\", AutoGenerateFilter:=false)>  _\nPublic Property Employee1 As Object\nEnd Property\nEnd Class\nEnd Class</code></pre>\n"
  syntax:
    content: public bool AutoGenerateFilter { get; set; }
    content.vb: Public Property AutoGenerateFilter As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if UI should be generated automatically to display filtering for this field; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>An attempt was made to get the property value before it was set.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayAttribute.Description
  commentId: P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description
  id: Description
  parent: System.ComponentModel.DataAnnotations.DisplayAttribute
  langs:
  - csharp
  - vb
  name: Description
  fullName: System.ComponentModel.DataAnnotations.DisplayAttribute.Description
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Description
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
    startLine: 119
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets or sets a value that is used to display a description in the UI.</p>\n"
  remarks: "\n<p>Do not use this property to get the value of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Description\" data-throw-if-not-resolved=\"false\"></xref> property. Use the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.GetDescription\" data-throw-if-not-resolved=\"false\"></xref> method instead. </p>\n<p>The <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Description\" data-throw-if-not-resolved=\"false\"></xref> property is typically used as a tooltip or description UI element that is bound to the member using this attribute. The Dynamic Data Edit.ascx template will display the description as a tooltip in text-entry fields. A <strong>null</strong> value or empty string is valid.</p>\n"
  example:
  - "\n<p>The following example shows how to set the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Description\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<pre><code class=\"c#\">[MetadataType(typeof(EmployeeMD))]\npublic partial class Employee {\npublic class EmployeeMD {\n[Display(Name = \"Last Name\", Order = -9, \nPrompt = \"Enter Last Name\", Description=\"Emp Last Name\")]\npublic object LastName { get; set; }\n\n[Display(Name = \"Manager\", AutoGenerateFilter=false)]\npublic object Employee1 { get; set; }\n}\n}</code></pre>\n<pre><code class=\"vb#\"><MetadataType(GetType(EmployeeMD))>  _\nPublic Class Employee\n\nPublic Class EmployeeMD\n\n<Display(Name:=\"Last Name\", Order:=-9, _\n   Prompt:=\"Enter Last Name\", Description:=\"Emp Last Name\")>  _\nPublic Property LastName As Object\nEnd Property\n\n<Display(Name:=\"Manager\", AutoGenerateFilter:=false)>  _\nPublic Property Employee1 As Object\nEnd Property\nEnd Class\nEnd Class</code></pre>\n"
  syntax:
    content: public string Description { get; set; }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The value that is used to display a description in the UI.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName
  commentId: P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName
  id: GroupName
  parent: System.ComponentModel.DataAnnotations.DisplayAttribute
  langs:
  - csharp
  - vb
  name: GroupName
  fullName: System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GroupName
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
    startLine: 181
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets or sets a value that is used to group fields in the UI.</p>\n"
  remarks: "\n<p>Do not use this property to get the value of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName\" data-throw-if-not-resolved=\"false\"></xref> property. Use the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.GetDescription\" data-throw-if-not-resolved=\"false\"></xref> method instead. A <strong>null</strong> value or empty string is valid.</p>\n"
  example:
  - 
  syntax:
    content: public string GroupName { get; set; }
    content.vb: Public Property GroupName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A value that is used to group fields in the UI.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayAttribute.Name
  commentId: P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name
  id: Name
  parent: System.ComponentModel.DataAnnotations.DisplayAttribute
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.ComponentModel.DataAnnotations.DisplayAttribute.Name
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
    startLine: 88
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets or sets a value that is used for display in the UI.</p>\n"
  remarks: "\n<p>Do not use this property to get the value of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> property. Use the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.GetName\" data-throw-if-not-resolved=\"false\"></xref> method instead. </p>\n<p>The name is typically used as the field label for a UI element that is bound to the property that is annotated with this attribute. The Dynamic Data List.aspx, ListDetails.aspx, and Details.aspx page templates use the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> property for the field label. A <strong>null</strong> value or empty string is valid.</p>\n"
  example:
  - "\n<p>The following example shows how to set the name property.</p>\n<pre><code class=\"c#\">[MetadataType(typeof(EmployeeMD))]\npublic partial class Employee {\npublic class EmployeeMD {\n[Display(Name = \"Last Name\", Order = -9, \nPrompt = \"Enter Last Name\", Description=\"Emp Last Name\")]\npublic object LastName { get; set; }\n\n[Display(Name = \"Manager\", AutoGenerateFilter=false)]\npublic object Employee1 { get; set; }\n}\n}</code></pre>\n<pre><code class=\"vb#\"><MetadataType(GetType(EmployeeMD))>  _\nPublic Class Employee\n\nPublic Class EmployeeMD\n\n<Display(Name:=\"Last Name\", Order:=-9, _\n   Prompt:=\"Enter Last Name\", Description:=\"Emp Last Name\")>  _\nPublic Property LastName As Object\nEnd Property\n\n<Display(Name:=\"Manager\", AutoGenerateFilter:=false)>  _\nPublic Property Employee1 As Object\nEnd Property\nEnd Class\nEnd Class</code></pre>\n"
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A value that is used for display in the UI.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayAttribute.Order
  commentId: P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order
  id: Order
  parent: System.ComponentModel.DataAnnotations.DisplayAttribute
  langs:
  - csharp
  - vb
  name: Order
  fullName: System.ComponentModel.DataAnnotations.DisplayAttribute.Order
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Order
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
    startLine: 289
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets or sets the order weight of the column.</p>\n"
  remarks: "\n<p>Columns are sorted in increasing order based on the order value. Columns without this attribute have an order value of 0. Negative values are valid and can be used to position a column before all non-negative columns. If an order is not specified, presentation layers should consider using the value 10000. This value lets explicitly-ordered fields be displayed before and after the fields that do not have a specified order.</p>\n"
  example:
  - "\n<p>The following example shows how to set the order weight of the LastName field to -9. The other fields in the entity have the default order weight of zero. Therefore, the LastName field will be displayed first.</p>\n<pre><code class=\"c#\">[MetadataType(typeof(EmployeeMD))]\npublic partial class Employee {\npublic class EmployeeMD {\n[Display(Name = \"Last Name\", Order = -9, \nPrompt = \"Enter Last Name\", Description=\"Emp Last Name\")]\npublic object LastName { get; set; }\n\n[Display(Name = \"Manager\", AutoGenerateFilter=false)]\npublic object Employee1 { get; set; }\n}\n}</code></pre>\n<pre><code class=\"vb#\"><MetadataType(GetType(EmployeeMD))>  _\nPublic Class Employee\n\nPublic Class EmployeeMD\n\n<Display(Name:=\"Last Name\", Order:=-9, _\n   Prompt:=\"Enter Last Name\", Description:=\"Emp Last Name\")>  _\nPublic Property LastName As Object\nEnd Property\n\n<Display(Name:=\"Manager\", AutoGenerateFilter:=false)>  _\nPublic Property Employee1 As Object\nEnd Property\nEnd Class\nEnd Class</code></pre>\n"
  syntax:
    content: public int Order { get; set; }
    content.vb: Public Property Order As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The order weight of the column.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt
  commentId: P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt
  id: Prompt
  parent: System.ComponentModel.DataAnnotations.DisplayAttribute
  langs:
  - csharp
  - vb
  name: Prompt
  fullName: System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Prompt
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
    startLine: 150
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets or sets a value that will be used to set the watermark for prompts in the UI.</p>\n"
  remarks: "\n<p>This property is typically used as a prompt or watermark for a UI element that is bound to the property that is annotated with this attribute. Do not use this method to access the prompt string. Use the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.GetPrompt\" data-throw-if-not-resolved=\"false\"></xref> method instead.</p>\n"
  example:
  - "\n<p>The following example shows how to set the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt\" data-throw-if-not-resolved=\"false\"></xref> property to \"Enter Last Name\".</p>\n<pre><code class=\"c#\">[MetadataType(typeof(EmployeeMD))]\npublic partial class Employee {\npublic class EmployeeMD {\n[Display(Name = \"Last Name\", Order = -9, \nPrompt = \"Enter Last Name\", Description=\"Emp Last Name\")]\npublic object LastName { get; set; }\n\n[Display(Name = \"Manager\", AutoGenerateFilter=false)]\npublic object Employee1 { get; set; }\n}\n}</code></pre>\n<pre><code class=\"vb#\"><MetadataType(GetType(EmployeeMD))>  _\nPublic Class Employee\n\nPublic Class EmployeeMD\n\n<Display(Name:=\"Last Name\", Order:=-9, _\n   Prompt:=\"Enter Last Name\", Description:=\"Emp Last Name\")>  _\nPublic Property LastName As Object\nEnd Property\n\n<Display(Name:=\"Manager\", AutoGenerateFilter:=false)>  _\nPublic Property Employee1 As Object\nEnd Property\nEnd Class\nEnd Class</code></pre>\n"
  syntax:
    content: public string Prompt { get; set; }
    content.vb: Public Property Prompt As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A value that will be used to display a watermark in the UI.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType
  commentId: P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType
  id: ResourceType
  parent: System.ComponentModel.DataAnnotations.DisplayAttribute
  langs:
  - csharp
  - vb
  name: ResourceType
  fullName: System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ResourceType
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
    startLine: 200
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets or sets the type that contains the resources for the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Description\" data-throw-if-not-resolved=\"false\"></xref> properties.</p>\n"
  remarks: "\n<p>If this value is <strong>null</strong>, the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Description\" data-throw-if-not-resolved=\"false\"></xref> properties are assumed to be literal, non-localized strings. If this value is not <strong>null</strong>, the string properties are assumed to be the names of public static properties that return the actual string value. </p>\n"
  example:
  - 
  syntax:
    content: public Type ResourceType { get; set; }
    content.vb: Public Property ResourceType As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>The type of the resource that contains the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Description\" data-throw-if-not-resolved=\"false\"></xref> properties.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName
  commentId: P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName
  id: ShortName
  parent: System.ComponentModel.DataAnnotations.DisplayAttribute
  langs:
  - csharp
  - vb
  name: ShortName
  fullName: System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ShortName
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
    startLine: 57
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets or sets a value that is used for the grid column label.</p>\n"
  remarks: "\n<p>The short name is used as the grid column label for a UI element that is bound to the property that is annotated with this attribute. The Dynamic Data Insert.aspx and Edit.aspx page templates use the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName\" data-throw-if-not-resolved=\"false\"></xref> for the field label. This property returns the localized string for <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType\" data-throw-if-not-resolved=\"false\"></xref> if the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType\" data-throw-if-not-resolved=\"false\"></xref> property has been specified and if the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName\" data-throw-if-not-resolved=\"false\"></xref> property represents a resource key. If the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType\" data-throw-if-not-resolved=\"false\"></xref> property has not been specified or if the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName\" data-throw-if-not-resolved=\"false\"></xref> property is not a resource key, this property returns a non-localized string.</p>\n"
  example:
  - 
  syntax:
    content: public string ShortName { get; set; }
    content.vb: Public Property ShortName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A value that is for the grid column label.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateField
  commentId: M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateField
  id: GetAutoGenerateField
  parent: System.ComponentModel.DataAnnotations.DisplayAttribute
  langs:
  - csharp
  - vb
  name: GetAutoGenerateField()
  fullName: System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateField()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAutoGenerateField
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
    startLine: 454
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Returns the value of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  example:
  - 
  syntax:
    content: public Nullable<bool> GetAutoGenerateField()
    content.vb: Public Function GetAutoGenerateField As Nullable(Of Boolean)
    return:
      type: System.Nullable{System.Boolean}
      description: "\n<p>The value of <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField\" data-throw-if-not-resolved=\"false\"></xref> if the property has been initialized; otherwise, <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateFilter
  commentId: M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateFilter
  id: GetAutoGenerateFilter
  parent: System.ComponentModel.DataAnnotations.DisplayAttribute
  langs:
  - csharp
  - vb
  name: GetAutoGenerateFilter()
  fullName: System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateFilter()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAutoGenerateFilter
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
    startLine: 468
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Returns a value that indicates whether UI should be generated automatically in order to display filtering for this field. </p>\n"
  example:
  - 
  syntax:
    content: public Nullable<bool> GetAutoGenerateFilter()
    content.vb: Public Function GetAutoGenerateFilter As Nullable(Of Boolean)
    return:
      type: System.Nullable{System.Boolean}
      description: "\n<p>The value of <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter\" data-throw-if-not-resolved=\"false\"></xref> if the property has been initialized; otherwise, <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayAttribute.GetDescription
  commentId: M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetDescription
  id: GetDescription
  parent: System.ComponentModel.DataAnnotations.DisplayAttribute
  langs:
  - csharp
  - vb
  name: GetDescription()
  fullName: System.ComponentModel.DataAnnotations.DisplayAttribute.GetDescription()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDescription
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
    startLine: 388
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Returns the value of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Description\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  remarks: "\n<p>The <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Description\" data-throw-if-not-resolved=\"false\"></xref> property is typically used as a tooltip for the property that is annotated with this attribute.</p>\n"
  example:
  - 
  syntax:
    content: public string GetDescription()
    content.vb: Public Function GetDescription As String
    return:
      type: System.String
      description: "\n<p>The localized description, if the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType\" data-throw-if-not-resolved=\"false\"></xref> has been specified and the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Description\" data-throw-if-not-resolved=\"false\"></xref> property represents a resource key; otherwise, the non-localized value of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Description\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType\" data-throw-if-not-resolved=\"false\"></xref> property and the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Description\" data-throw-if-not-resolved=\"false\"></xref> property are initialized, but a public static property that has a name that matches the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Description\" data-throw-if-not-resolved=\"false\"></xref> value could not be found for the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayAttribute.GetGroupName
  commentId: M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetGroupName
  id: GetGroupName
  parent: System.ComponentModel.DataAnnotations.DisplayAttribute
  langs:
  - csharp
  - vb
  name: GetGroupName()
  fullName: System.ComponentModel.DataAnnotations.DisplayAttribute.GetGroupName()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetGroupName
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
    startLine: 440
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Returns the value of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  example:
  - 
  syntax:
    content: public string GetGroupName()
    content.vb: Public Function GetGroupName As String
    return:
      type: System.String
      description: "\n<p>A value that will be used for grouping fields in the UI, if <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName\" data-throw-if-not-resolved=\"false\"></xref> has been initialized; otherwise, <strong>null</strong>. If the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType\" data-throw-if-not-resolved=\"false\"></xref> property has been specified and the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName\" data-throw-if-not-resolved=\"false\"></xref> property represents a resource key, a localized string is returned; otherwise, a non-localized string is returned.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayAttribute.GetName
  commentId: M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetName
  id: GetName
  parent: System.ComponentModel.DataAnnotations.DisplayAttribute
  langs:
  - csharp
  - vb
  name: GetName()
  fullName: System.ComponentModel.DataAnnotations.DisplayAttribute.GetName()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetName
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
    startLine: 362
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Returns a value that is used for field display in the UI.</p>\n"
  remarks: "\n<p>The name is typically used as the field label for a UI element that is bound to the property that is annotated with the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> property. A <strong>null</strong> value or empty string is valid.</p>\n"
  example:
  - 
  syntax:
    content: public string GetName()
    content.vb: Public Function GetName As String
    return:
      type: System.String
      description: "\n<p>The localized string for the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> property, if the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType\" data-throw-if-not-resolved=\"false\"></xref> property has been specified and the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> property represents a resource key; otherwise, the non-localized value of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType\" data-throw-if-not-resolved=\"false\"></xref> property and the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> property are initialized, but a public static property that has a name that matches the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> value could not be found for the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayAttribute.GetOrder
  commentId: M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetOrder
  id: GetOrder
  parent: System.ComponentModel.DataAnnotations.DisplayAttribute
  langs:
  - csharp
  - vb
  name: GetOrder()
  fullName: System.ComponentModel.DataAnnotations.DisplayAttribute.GetOrder()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetOrder
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
    startLine: 487
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Returns the value of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Order\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  remarks: "\n<p>If an order is not specified, presentation layers should consider setting the value of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Order\" data-throw-if-not-resolved=\"false\"></xref> property to 10000. This value lets explicitly-ordered fields be displayed before and after the fields that do not have a specified order.</p>\n"
  example:
  - 
  syntax:
    content: public Nullable<int> GetOrder()
    content.vb: Public Function GetOrder As Nullable(Of Integer)
    return:
      type: System.Nullable{System.Int32}
      description: "\n<p>The value of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Order\" data-throw-if-not-resolved=\"false\"></xref> property, if it has been set; otherwise, <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayAttribute.GetPrompt
  commentId: M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetPrompt
  id: GetPrompt
  parent: System.ComponentModel.DataAnnotations.DisplayAttribute
  langs:
  - csharp
  - vb
  name: GetPrompt()
  fullName: System.ComponentModel.DataAnnotations.DisplayAttribute.GetPrompt()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetPrompt
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
    startLine: 414
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Returns the value of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  remarks: "\n<p>The <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt\" data-throw-if-not-resolved=\"false\"></xref> property is typically used as a prompt or watermark for a UI element that is bound to the property that is annotated with the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt\" data-throw-if-not-resolved=\"false\"></xref> attribute.</p>\n"
  example:
  - 
  syntax:
    content: public string GetPrompt()
    content.vb: Public Function GetPrompt As String
    return:
      type: System.String
      description: "\n<p>Gets the localized string for the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt\" data-throw-if-not-resolved=\"false\"></xref> property if the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType\" data-throw-if-not-resolved=\"false\"></xref> property has been specified and if the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt\" data-throw-if-not-resolved=\"false\"></xref> property represents a resource key; otherwise, the non-localized value of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.DisplayAttribute.GetShortName
  commentId: M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetShortName
  id: GetShortName
  parent: System.ComponentModel.DataAnnotations.DisplayAttribute
  langs:
  - csharp
  - vb
  name: GetShortName()
  fullName: System.ComponentModel.DataAnnotations.DisplayAttribute.GetShortName()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetShortName
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/DisplayAttribute.cs
    startLine: 332
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Returns the value of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  remarks: "\n<p>The short name is used as the grid column label for a UI element that is bound to the property that is annotated with this attribute. This property returns either the literal, non-localized string, or a localized string if <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType\" data-throw-if-not-resolved=\"false\"></xref> is not <strong>null</strong>.</p>\n"
  example:
  - 
  syntax:
    content: public string GetShortName()
    content.vb: Public Function GetShortName As String
    return:
      type: System.String
      description: "\n<p>The localized string for the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName\" data-throw-if-not-resolved=\"false\"></xref> property if the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType\" data-throw-if-not-resolved=\"false\"></xref> property has been specified and if the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName\" data-throw-if-not-resolved=\"false\"></xref> property represents a resource key; otherwise, the non-localized value of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName\" data-throw-if-not-resolved=\"false\"></xref> value property.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.ComponentModel.DataAnnotations
  isExternal: false
  name: System.ComponentModel.DataAnnotations
  fullName: System.ComponentModel.DataAnnotations
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Nullable{System.Boolean}
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: false
  name: Nullable<>
  fullName: System.Nullable<>
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Nullable{System.Int32}
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
