items:
- uid: System.Lazy`1
  id: Lazy`1
  parent: System
  children:
  - System.Lazy`1.#ctor
  - System.Lazy`1.#ctor(System.Boolean)
  - System.Lazy`1.#ctor(System.Func{`0})
  - System.Lazy`1.#ctor(System.Func{`0},System.Boolean)
  - System.Lazy`1.#ctor(System.Func{`0},System.Threading.LazyThreadSafetyMode)
  - System.Lazy`1.#ctor(System.Threading.LazyThreadSafetyMode)
  - System.Lazy`1.IsValueCreated
  - System.Lazy`1.ToString
  - System.Lazy`1.Value
  href: System.Lazy`1.yml
  name: Lazy<T>
  name.vb: Lazy(Of T)
  fullName: System.Lazy<T>
  fullName.vb: System.Lazy(Of T)
  type: Class
  source:
    remote: &o0
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1199
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public class Lazy<T>
    content.vb: Public Class Lazy(Of T)
    typeParameters:
    - id: T
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Lazy`1.#ctor
  id: '#ctor'
  parent: System.Lazy`1
  href: System.Lazy`1.yml
  name: Lazy()
  fullName: System.Lazy<T>.Lazy()
  fullName.vb: System.Lazy(Of T).Lazy()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1201
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public Lazy()
    content.vb: Public Sub New
- uid: System.Lazy`1.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Lazy`1
  href: System.Lazy`1.yml
  name: Lazy(Boolean)
  fullName: System.Lazy<T>.Lazy(System.Boolean)
  fullName.vb: System.Lazy(Of T).Lazy(System.Boolean)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1202
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public Lazy(bool isThreadSafe)
    content.vb: Public Sub New(isThreadSafe As Boolean)
    parameters:
    - id: isThreadSafe
      type: System.Boolean
- uid: System.Lazy`1.#ctor(System.Func{`0})
  id: '#ctor(System.Func{`0})'
  parent: System.Lazy`1
  href: System.Lazy`1.yml
  name: Lazy(Func<T>)
  name.vb: Lazy(Func(Of T))
  fullName: System.Lazy<T>.Lazy(System.Func<T>)
  fullName.vb: System.Lazy(Of T).Lazy(System.Func(Of T))
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1203
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public Lazy(Func<T> valueFactory)
    content.vb: Public Sub New(valueFactory As Func(Of T))
    parameters:
    - id: valueFactory
      type: System.Func{{T}}
- uid: System.Lazy`1.#ctor(System.Func{`0},System.Boolean)
  id: '#ctor(System.Func{`0},System.Boolean)'
  parent: System.Lazy`1
  href: System.Lazy`1.yml
  name: Lazy(Func<T>, Boolean)
  name.vb: Lazy(Func(Of T), Boolean)
  fullName: System.Lazy<T>.Lazy(System.Func<T>, System.Boolean)
  fullName.vb: System.Lazy(Of T).Lazy(System.Func(Of T), System.Boolean)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1204
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public Lazy(Func<T> valueFactory, bool isThreadSafe)
    content.vb: Public Sub New(valueFactory As Func(Of T), isThreadSafe As Boolean)
    parameters:
    - id: valueFactory
      type: System.Func{{T}}
    - id: isThreadSafe
      type: System.Boolean
- uid: System.Lazy`1.#ctor(System.Func{`0},System.Threading.LazyThreadSafetyMode)
  id: '#ctor(System.Func{`0},System.Threading.LazyThreadSafetyMode)'
  parent: System.Lazy`1
  href: System.Lazy`1.yml
  name: Lazy(Func<T>, LazyThreadSafetyMode)
  name.vb: Lazy(Func(Of T), LazyThreadSafetyMode)
  fullName: System.Lazy<T>.Lazy(System.Func<T>, System.Threading.LazyThreadSafetyMode)
  fullName.vb: System.Lazy(Of T).Lazy(System.Func(Of T), System.Threading.LazyThreadSafetyMode)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1205
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public Lazy(Func<T> valueFactory, LazyThreadSafetyMode mode)
    content.vb: Public Sub New(valueFactory As Func(Of T), mode As LazyThreadSafetyMode)
    parameters:
    - id: valueFactory
      type: System.Func{{T}}
    - id: mode
      type: System.Threading.LazyThreadSafetyMode
- uid: System.Lazy`1.#ctor(System.Threading.LazyThreadSafetyMode)
  id: '#ctor(System.Threading.LazyThreadSafetyMode)'
  parent: System.Lazy`1
  href: System.Lazy`1.yml
  name: Lazy(LazyThreadSafetyMode)
  fullName: System.Lazy<T>.Lazy(System.Threading.LazyThreadSafetyMode)
  fullName.vb: System.Lazy(Of T).Lazy(System.Threading.LazyThreadSafetyMode)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1206
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public Lazy(LazyThreadSafetyMode mode)
    content.vb: Public Sub New(mode As LazyThreadSafetyMode)
    parameters:
    - id: mode
      type: System.Threading.LazyThreadSafetyMode
- uid: System.Lazy`1.IsValueCreated
  id: IsValueCreated
  parent: System.Lazy`1
  href: System.Lazy`1.yml
  name: IsValueCreated
  fullName: System.Lazy<T>.IsValueCreated
  fullName.vb: System.Lazy(Of T).IsValueCreated
  type: Property
  source:
    remote: *o0
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1207
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public bool IsValueCreated { get; }
    content.vb: Public ReadOnly Property IsValueCreated As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: 
- uid: System.Lazy`1.Value
  id: Value
  parent: System.Lazy`1
  href: System.Lazy`1.yml
  name: Value
  fullName: System.Lazy<T>.Value
  fullName.vb: System.Lazy(Of T).Value
  type: Property
  source:
    remote: *o0
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1208
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public T Value { get; }
    content.vb: Public ReadOnly Property Value As T
    parameters: []
    return:
      type: '{T}'
      description: 
- uid: System.Lazy`1.ToString
  id: ToString
  parent: System.Lazy`1
  href: System.Lazy`1.yml
  name: ToString()
  fullName: System.Lazy<T>.ToString()
  fullName.vb: System.Lazy(Of T).ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1209
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: 
  overridden: System.Object.ToString
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.Func{{T}}
  parent: System
  definition: System.Func`1
  href: System.Func`1.yml
  name: Func<T>
  name.vb: Func(Of T)
  fullName: System.Func<T>
  fullName.vb: System.Func(Of T)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    href: System.Func`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    href: System.Func`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Func`1
  parent: System
  isExternal: false
  href: System.Func`1.yml
  name: Func<TResult>
  name.vb: Func(Of TResult)
  fullName: System.Func<TResult>
  fullName.vb: System.Func(Of TResult)
  type: Delegate
  spec.csharp:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    href: System.Func`1.yml
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    href: System.Func`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.LazyThreadSafetyMode
  parent: System.Threading
  isExternal: false
  href: System.Threading.LazyThreadSafetyMode.yml
  name: LazyThreadSafetyMode
  fullName: System.Threading.LazyThreadSafetyMode
  type: Enum
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
  type: Namespace
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
  type: Class
