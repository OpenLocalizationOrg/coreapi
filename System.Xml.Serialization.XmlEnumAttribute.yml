items:
- uid: System.Xml.Serialization.XmlEnumAttribute
  commentId: T:System.Xml.Serialization.XmlEnumAttribute
  id: XmlEnumAttribute
  parent: System.Xml.Serialization
  children:
  - System.Xml.Serialization.XmlEnumAttribute.#ctor
  - System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)
  - System.Xml.Serialization.XmlEnumAttribute.Name
  langs:
  - csharp
  - vb
  name: XmlEnumAttribute
  fullName: System.Xml.Serialization.XmlEnumAttribute
  type: Class
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlEnumAttribute
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 145
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Controls how the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes an enumeration member.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Xml.Serialization.XmlEnumAttribute\" data-throw-if-not-resolved=\"false\"></xref> belongs to a family of attributes that controls how the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes or deserializes an object. For a complete list of similar attributes, see Attributes That Control XML Serialization.</p>\n<p>Use the <xref href=\"System.Xml.Serialization.XmlEnumAttribute\" data-throw-if-not-resolved=\"false\"></xref> to change the enumeration that the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> generates or recognizes (when it serializes or deserializes a class, respectively). For example, if an enumeration contains a member named <strong>One</strong>, but you prefer that the XML output be named <strong>Single</strong>, apply the <xref href=\"System.Xml.Serialization.XmlEnumAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the enumeration member and set the <xref href=\"System.Xml.Serialization.XmlEnumAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> property to \"Single\".</p>\n<p>You can override the <xref href=\"System.Xml.Serialization.XmlEnumAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> property value of an <xref href=\"System.Xml.Serialization.XmlEnumAttribute\" data-throw-if-not-resolved=\"false\"></xref> by creating an instance of the <xref href=\"System.Xml.Serialization.XmlEnumAttribute\" data-throw-if-not-resolved=\"false\"></xref> class and assigning it to the <xref href=\"System.Xml.Serialization.XmlAttributes.XmlEnum\" data-throw-if-not-resolved=\"false\"></xref> property of an <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object. For details, see the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>You can use the word <strong>XmlEnum</strong> in your code instead of the longer <xref href=\"System.Xml.Serialization.XmlEnumAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example applies the <xref href=\"System.Xml.Serialization.XmlEnumAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the members of an enumeration. When the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> generates XML data for this enumeration, the data conforms to the values of the <xref href=\"System.Xml.Serialization.XmlEnumAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> properties.</p>Classic XmlEnumAttribute Example#1<p>You can use the word <strong>XmlEnum</strong> in your code instead of the longer <xref href=\"System.Xml.Serialization.XmlEnumAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>"
  syntax:
    content: 'public class XmlEnumAttribute : Attribute'
    content.vb: >-
      Public Class XmlEnumAttribute
          Inherits Attribute
  seealso:
  - type: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)
    commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)
  - type: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
    commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  - type: System.Xml.Serialization.XmlSerializer
    commentId: T:System.Xml.Serialization.XmlSerializer
  - type: System.Xml.Serialization.XmlAttributes.XmlEnum
    commentId: P:System.Xml.Serialization.XmlAttributes.XmlEnum
  - type: System.Xml.Serialization.XmlAttributeOverrides
    commentId: T:System.Xml.Serialization.XmlAttributeOverrides
  - type: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  - type: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.Serialization.XmlEnumAttribute.#ctor
  commentId: M:System.Xml.Serialization.XmlEnumAttribute.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlEnumAttribute
  langs:
  - csharp
  - vb
  name: XmlEnumAttribute()
  fullName: System.Xml.Serialization.XmlEnumAttribute.XmlEnumAttribute()
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 148
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlEnumAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>You can use the <xref href=\"System.Xml.Serialization.XmlEnumAttribute.#ctor\" data-throw-if-not-resolved=\"false\"></xref> to override an existing enumeration.</p>\n<p>You can use the word <strong>XmlEnum</strong> in your code instead of the longer <xref href=\"System.Xml.Serialization.XmlEnumAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example serializes two classes named <strong>Food</strong> and <strong>FoodType</strong>. The <strong>FoodType</strong> class contains two enumerations that are overridden and, for each enumeration, the example creates an <xref href=\"System.Xml.Serialization.XmlEnumAttribute\" data-throw-if-not-resolved=\"false\"></xref> object that is assigned to the <xref href=\"System.Xml.Serialization.XmlAttributes.XmlEnum\" data-throw-if-not-resolved=\"false\"></xref> property of an <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object. The example then adds the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object to an <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object, which is used to create an <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref>.</p>Classic XmlEnumAttribute.XmlEnumAttribute Example#1"
  syntax:
    content: public XmlEnumAttribute()
    content.vb: Public Sub New
  seealso:
  - type: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)
    commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)
  - type: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
    commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  - type: System.Xml.Serialization.XmlSerializer
    commentId: T:System.Xml.Serialization.XmlSerializer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)
  commentId: M:System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Xml.Serialization.XmlEnumAttribute
  langs:
  - csharp
  - vb
  name: XmlEnumAttribute(String)
  fullName: System.Xml.Serialization.XmlEnumAttribute.XmlEnumAttribute(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 149
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlEnumAttribute\" data-throw-if-not-resolved=\"false\"></xref> class, and specifies the XML value that the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> generates or recognizes (when it serializes or deserializes the enumeration, respectively).</p>\n"
  remarks: "\n<p>You can use the word <strong>XmlEnum</strong> in your code instead of the longer <xref href=\"System.Xml.Serialization.XmlEnumAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example applies the <xref href=\"System.Xml.Serialization.XmlEnumAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the members of an enumeration. When the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> generates XML data for this enumeration, the data conforms to the values of the <xref href=\"System.Xml.Serialization.XmlEnumAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> properties.</p>Classic XmlEnumAttribute.Name Example#1"
  syntax:
    content: public XmlEnumAttribute(string name)
    content.vb: Public Sub New(name As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The overriding name of the enumeration member. </p>\n"
  seealso:
  - type: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)
    commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)
  - type: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
    commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  - type: System.Xml.Serialization.XmlSerializer
    commentId: T:System.Xml.Serialization.XmlSerializer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlEnumAttribute.Name
  commentId: P:System.Xml.Serialization.XmlEnumAttribute.Name
  id: Name
  parent: System.Xml.Serialization.XmlEnumAttribute
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Xml.Serialization.XmlEnumAttribute.Name
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 150
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets the value generated in an XML-document instance when the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes an enumeration, or the value recognized when it deserializes the enumeration member.</p>\n"
  remarks: "\n<p>Specify the <xref href=\"System.Xml.Serialization.XmlEnumAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> when you want the generated XML data to differ from the enumeration identifier.</p>\n<p>You can use the word <strong>XmlEnum</strong> in your code instead of the longer <xref href=\"System.Xml.Serialization.XmlEnumAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example applies the <xref href=\"System.Xml.Serialization.XmlEnumAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute to members of an enumeration. The generated XML data conforms to the values set for the <xref href=\"System.Xml.Serialization.XmlEnumAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> property.</p>Classic XmlEnumAttribute.Name Example#1"
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The value generated in an XML-document instance when the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes the enumeration, or the value recognized when it is deserializes the enumeration member.</p>\n"
  seealso:
  - type: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)
    commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)
  - type: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
    commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  - type: System.Xml.Serialization.XmlSerializer
    commentId: T:System.Xml.Serialization.XmlSerializer
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Xml.Serialization
  isExternal: false
  name: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
