items:
- uid: System.IO.DriveInfo
  id: DriveInfo
  parent: System.IO
  children:
  - System.IO.DriveInfo.#ctor(System.String)
  - System.IO.DriveInfo.AvailableFreeSpace
  - System.IO.DriveInfo.DriveFormat
  - System.IO.DriveInfo.DriveType
  - System.IO.DriveInfo.GetDrives
  - System.IO.DriveInfo.IsReady
  - System.IO.DriveInfo.Name
  - System.IO.DriveInfo.RootDirectory
  - System.IO.DriveInfo.ToString
  - System.IO.DriveInfo.TotalFreeSpace
  - System.IO.DriveInfo.TotalSize
  - System.IO.DriveInfo.VolumeLabel
  href: System.IO.DriveInfo.yml
  name: DriveInfo
  fullName: System.IO.DriveInfo
  type: Class
  source:
    remote: &o0
      path: src/System.IO.FileSystem.DriveInfo/src/System/IO/DriveInfo.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.IO.FileSystem.DriveInfo/src/System/IO/DriveInfo.Windows.cs
    startLine: 11
  assemblies:
  - System.IO.FileSystem.DriveInfo
  namespace: System.IO
  summary: Provides access to information on a drive.
  syntax:
    content: public sealed class DriveInfo
    content.vb: Public NotInheritable Class DriveInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.IO.DriveInfo.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.DriveInfo
  href: System.IO.DriveInfo.yml
  name: DriveInfo(String)
  fullName: System.IO.DriveInfo.DriveInfo(System.String)
  type: Constructor
  source:
    remote: &o1
      path: src/System.IO.FileSystem.DriveInfo/src/System/IO/DriveInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.IO.FileSystem.DriveInfo/src/System/IO/DriveInfo.cs
    startLine: 12
  assemblies:
  - System.IO.FileSystem.DriveInfo
  namespace: System.IO
  summary: Provides access to information on the specified drive.
  syntax:
    content: public DriveInfo(string driveName)
    content.vb: Public Sub New(driveName As String)
    parameters:
    - id: driveName
      type: System.String
      description: A valid drive path or drive letter. This can be either uppercase or lowercase, 'a' to 'z'. A null value is not valid.
  exceptions:
  - type: System.ArgumentNullException
    description: The drive letter cannot be null.
  - type: System.ArgumentException
    description: The first letter of *driveName* is not an uppercase or lowercase letter from 'a' to 'z'.-or-*driveName* does not refer to a valid drive.
- uid: System.IO.DriveInfo.AvailableFreeSpace
  id: AvailableFreeSpace
  parent: System.IO.DriveInfo
  href: System.IO.DriveInfo.yml
  name: AvailableFreeSpace
  fullName: System.IO.DriveInfo.AvailableFreeSpace
  type: Property
  source:
    remote: *o0
    path: src/System.IO.FileSystem.DriveInfo/src/System/IO/DriveInfo.Windows.cs
    startLine: 86
  assemblies:
  - System.IO.FileSystem.DriveInfo
  namespace: System.IO
  summary: Indicates the amount of available free space on a drive, in bytes.
  syntax:
    content: public long AvailableFreeSpace { get; }
    content.vb: Public ReadOnly Property AvailableFreeSpace As Long
    parameters: []
    return:
      type: System.Int64
      description: The amount of free space available on the drive, in bytes.
  exceptions:
  - type: System.UnauthorizedAccessException
    description: Access to the drive information is denied.
  - type: System.IO.IOException
    description: An I/O error occurred (for example, a disk error or a drive was not ready).
- uid: System.IO.DriveInfo.DriveFormat
  id: DriveFormat
  parent: System.IO.DriveInfo
  href: System.IO.DriveInfo.yml
  name: DriveFormat
  fullName: System.IO.DriveInfo.DriveFormat
  type: Property
  source:
    remote: *o0
    path: src/System.IO.FileSystem.DriveInfo/src/System/IO/DriveInfo.Windows.cs
    startLine: 58
  assemblies:
  - System.IO.FileSystem.DriveInfo
  namespace: System.IO
  summary: Gets the name of the file system, such as NTFS or FAT32.
  syntax:
    content: public string DriveFormat { get; }
    content.vb: Public ReadOnly Property DriveFormat As String
    parameters: []
    return:
      type: System.String
      description: The name of the file system on the specified drive.
  exceptions:
  - type: System.UnauthorizedAccessException
    description: Access to the drive information is denied.
  - type: System.IO.DriveNotFoundException
    description: The drive does not exist or is not mapped.
  - type: System.IO.IOException
    description: An I/O error occurred (for example, a disk error or a drive was not ready).
- uid: System.IO.DriveInfo.DriveType
  id: DriveType
  parent: System.IO.DriveInfo
  href: System.IO.DriveInfo.yml
  name: DriveType
  fullName: System.IO.DriveInfo.DriveType
  type: Property
  source:
    remote: *o0
    path: src/System.IO.FileSystem.DriveInfo/src/System/IO/DriveInfo.Windows.cs
    startLine: 48
  assemblies:
  - System.IO.FileSystem.DriveInfo
  namespace: System.IO
  summary: Gets the drive type, such as CD-ROM, removable, network, or fixed.
  syntax:
    content: public DriveType DriveType { get; }
    content.vb: Public ReadOnly Property DriveType As DriveType
    parameters: []
    return:
      type: System.IO.DriveType
      description: One of the enumeration values that specifies a drive type.
- uid: System.IO.DriveInfo.IsReady
  id: IsReady
  parent: System.IO.DriveInfo
  href: System.IO.DriveInfo.yml
  name: IsReady
  fullName: System.IO.DriveInfo.IsReady
  type: Property
  source:
    remote: *o1
    path: src/System.IO.FileSystem.DriveInfo/src/System/IO/DriveInfo.cs
    startLine: 28
  assemblies:
  - System.IO.FileSystem.DriveInfo
  namespace: System.IO
  summary: Gets a value that indicates whether a drive is ready.
  syntax:
    content: public bool IsReady { get; }
    content.vb: Public ReadOnly Property IsReady As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the drive is ready; false if the drive is not ready.
- uid: System.IO.DriveInfo.Name
  id: Name
  parent: System.IO.DriveInfo
  href: System.IO.DriveInfo.yml
  name: Name
  fullName: System.IO.DriveInfo.Name
  type: Property
  source:
    remote: *o1
    path: src/System.IO.FileSystem.DriveInfo/src/System/IO/DriveInfo.cs
    startLine: 23
  assemblies:
  - System.IO.FileSystem.DriveInfo
  namespace: System.IO
  summary: Gets the name of a drive, such as C:\.
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: The name of the drive.
- uid: System.IO.DriveInfo.RootDirectory
  id: RootDirectory
  parent: System.IO.DriveInfo
  href: System.IO.DriveInfo.yml
  name: RootDirectory
  fullName: System.IO.DriveInfo.RootDirectory
  type: Property
  source:
    remote: *o1
    path: src/System.IO.FileSystem.DriveInfo/src/System/IO/DriveInfo.cs
    startLine: 33
  assemblies:
  - System.IO.FileSystem.DriveInfo
  namespace: System.IO
  summary: Gets the root directory of a drive.
  syntax:
    content: public DirectoryInfo RootDirectory { get; }
    content.vb: Public ReadOnly Property RootDirectory As DirectoryInfo
    parameters: []
    return:
      type: System.IO.DirectoryInfo
      description: An object that contains the root directory of the drive.
- uid: System.IO.DriveInfo.TotalFreeSpace
  id: TotalFreeSpace
  parent: System.IO.DriveInfo
  href: System.IO.DriveInfo.yml
  name: TotalFreeSpace
  fullName: System.IO.DriveInfo.TotalFreeSpace
  type: Property
  source:
    remote: *o0
    path: src/System.IO.FileSystem.DriveInfo/src/System/IO/DriveInfo.Windows.cs
    startLine: 107
  assemblies:
  - System.IO.FileSystem.DriveInfo
  namespace: System.IO
  summary: Gets the total amount of free space available on a drive, in bytes.
  syntax:
    content: public long TotalFreeSpace { get; }
    content.vb: Public ReadOnly Property TotalFreeSpace As Long
    parameters: []
    return:
      type: System.Int64
      description: The total free space available on a drive, in bytes.
  exceptions:
  - type: System.UnauthorizedAccessException
    description: Access to the drive information is denied.
  - type: System.IO.DriveNotFoundException
    description: The drive is not mapped or does not exist.
  - type: System.IO.IOException
    description: An I/O error occurred (for example, a disk error or a drive was not ready).
- uid: System.IO.DriveInfo.TotalSize
  id: TotalSize
  parent: System.IO.DriveInfo
  href: System.IO.DriveInfo.yml
  name: TotalSize
  fullName: System.IO.DriveInfo.TotalSize
  type: Property
  source:
    remote: *o0
    path: src/System.IO.FileSystem.DriveInfo/src/System/IO/DriveInfo.Windows.cs
    startLine: 128
  assemblies:
  - System.IO.FileSystem.DriveInfo
  namespace: System.IO
  summary: Gets the total size of storage space on a drive, in bytes.
  syntax:
    content: public long TotalSize { get; }
    content.vb: Public ReadOnly Property TotalSize As Long
    parameters: []
    return:
      type: System.Int64
      description: The total size of the drive, in bytes.
  exceptions:
  - type: System.UnauthorizedAccessException
    description: Access to the drive information is denied.
  - type: System.IO.DriveNotFoundException
    description: The drive is not mapped or does not exist.
  - type: System.IO.IOException
    description: An I/O error occurred (for example, a disk error or a drive was not ready).
- uid: System.IO.DriveInfo.VolumeLabel
  id: VolumeLabel
  parent: System.IO.DriveInfo
  href: System.IO.DriveInfo.yml
  name: VolumeLabel
  fullName: System.IO.DriveInfo.VolumeLabel
  type: Property
  source:
    remote: *o0
    path: src/System.IO.FileSystem.DriveInfo/src/System/IO/DriveInfo.Windows.cs
    startLine: 187
  assemblies:
  - System.IO.FileSystem.DriveInfo
  namespace: System.IO
  summary: Gets or sets the volume label of a drive.
  syntax:
    content: public string VolumeLabel { get; set; }
    content.vb: Public Property VolumeLabel As String
    parameters: []
    return:
      type: System.String
      description: The volume label.
  exceptions:
  - type: System.IO.IOException
    description: An I/O error occurred (for example, a disk error or a drive was not ready).
  - type: System.IO.DriveNotFoundException
    description: The drive is not mapped or does not exist.
  - type: System.Security.SecurityException
    description: The caller does not have the required permission.
  - type: System.UnauthorizedAccessException
    description: The volume label is being set on a network or CD-ROM drive.-or-Access to the drive information is denied.
- uid: System.IO.DriveInfo.GetDrives
  id: GetDrives
  parent: System.IO.DriveInfo
  href: System.IO.DriveInfo.yml
  name: GetDrives()
  fullName: System.IO.DriveInfo.GetDrives()
  type: Method
  source:
    remote: *o0
    path: src/System.IO.FileSystem.DriveInfo/src/System/IO/DriveInfo.Windows.cs
    startLine: 151
  assemblies:
  - System.IO.FileSystem.DriveInfo
  namespace: System.IO
  summary: Retrieves the drive names of all logical drives on a computer.
  syntax:
    content: public static DriveInfo[] GetDrives()
    content.vb: Public Shared Function GetDrives As DriveInfo()
    return:
      type: System.IO.DriveInfo[]
      description: An array of type @'System.IO.DriveInfo' that represents the logical drives on a computer.
  exceptions:
  - type: System.IO.IOException
    description: An I/O error occurred (for example, a disk error or a drive was not ready).
  - type: System.UnauthorizedAccessException
    description: The caller does not have the required permission.
- uid: System.IO.DriveInfo.ToString
  id: ToString
  parent: System.IO.DriveInfo
  href: System.IO.DriveInfo.yml
  name: ToString()
  fullName: System.IO.DriveInfo.ToString()
  type: Method
  source:
    remote: *o1
    path: src/System.IO.FileSystem.DriveInfo/src/System/IO/DriveInfo.cs
    startLine: 38
  assemblies:
  - System.IO.FileSystem.DriveInfo
  namespace: System.IO
  summary: Returns a drive name as a string.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: The name of the drive.
  overridden: System.Object.ToString
references:
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
- uid: System.Int64
  parent: System
  isExternal: false
  href: System.Int64.yml
  name: Int64
  fullName: System.Int64
- uid: System.IO.DriveType
  parent: System.IO
  isExternal: false
  href: System.IO.DriveType.yml
  name: DriveType
  fullName: System.IO.DriveType
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.IO.DirectoryInfo
  parent: System.IO
  isExternal: false
  href: System.IO.DirectoryInfo.yml
  name: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: System.IO.DriveInfo[]
  isExternal: false
  href: System.IO.DriveInfo.yml
  name: DriveInfo[]
  name.vb: DriveInfo()
  fullName: System.IO.DriveInfo[]
  fullName.vb: System.IO.DriveInfo()
  spec.csharp:
  - uid: System.IO.DriveInfo
    name: DriveInfo
    fullName: System.IO.DriveInfo
    href: System.IO.DriveInfo.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.IO.DriveInfo
    name: DriveInfo
    fullName: System.IO.DriveInfo
    href: System.IO.DriveInfo.yml
  - name: ()
    fullName: ()
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.UnauthorizedAccessException
  parent: System
  isExternal: false
  href: System.UnauthorizedAccessException.yml
  name: UnauthorizedAccessException
  fullName: System.UnauthorizedAccessException
  summary: The exception that is thrown when the operating system denies access because of an I/O error or a specific type of security error.
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  href: System.IO.IOException.yml
  name: IOException
  fullName: System.IO.IOException
  summary: The exception that is thrown when an I/O error occurs.
- uid: System.IO.DriveNotFoundException
  isExternal: false
  href: System.IO.DriveNotFoundException.yml
  name: DriveNotFoundException
  fullName: System.IO.DriveNotFoundException
  summary: The exception that is thrown when trying to access a drive or share that is not available.
- uid: System.Security.SecurityException
  isExternal: false
  href: System.Security.SecurityException.yml
  name: SecurityException
  fullName: System.Security.SecurityException
  summary: The exception that is thrown when a security error is detected.
