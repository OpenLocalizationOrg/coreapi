items:
- uid: System.Collections.ReadOnlyCollectionBase
  id: ReadOnlyCollectionBase
  parent: System.Collections
  children:
  - System.Collections.ReadOnlyCollectionBase.#ctor
  - System.Collections.ReadOnlyCollectionBase.Count
  - System.Collections.ReadOnlyCollectionBase.GetEnumerator
  - System.Collections.ReadOnlyCollectionBase.InnerList
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  href: System.Collections.ReadOnlyCollectionBase.yml
  name: ReadOnlyCollectionBase
  fullName: System.Collections.ReadOnlyCollectionBase
  type: Class
  source:
    remote: &o0
      path: src/System.Collections.NonGeneric/src/System/Collections/ReadOnlyCollectionBase.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Collections.NonGeneric/src/System/Collections/ReadOnlyCollectionBase.cs
    startLine: 17
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Provides the abstract base class for a strongly typed non-generic read-only collection.
  syntax:
    content: 'public abstract class ReadOnlyCollectionBase : ICollection, IEnumerable'
    content.vb: Public MustInherit Class ReadOnlyCollectionBase Implements ICollection, IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Collections.ReadOnlyCollectionBase.#ctor
  id: '#ctor'
  parent: System.Collections.ReadOnlyCollectionBase
  href: System.Collections.ReadOnlyCollectionBase.yml
  name: ReadOnlyCollectionBase()
  fullName: System.Collections.ReadOnlyCollectionBase.ReadOnlyCollectionBase()
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://vicancy@github.com/dotnet/corefx.git
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 200
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the @'System.Collections.ReadOnlyCollectionBase' class.
  syntax:
    content: protected ReadOnlyCollectionBase()
    content.vb: Protected Sub New
- uid: System.Collections.ReadOnlyCollectionBase.Count
  id: Count
  parent: System.Collections.ReadOnlyCollectionBase
  href: System.Collections.ReadOnlyCollectionBase.yml
  name: Count
  fullName: System.Collections.ReadOnlyCollectionBase.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/ReadOnlyCollectionBase.cs
    startLine: 31
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets the number of elements contained in the @'System.Collections.ReadOnlyCollectionBase' instance.
  syntax:
    content: public virtual int Count { get; }
    content.vb: Public Overridable ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of elements contained in the @'System.Collections.ReadOnlyCollectionBase' instance.Retrieving the value of this property is an O(1) operation.
- uid: System.Collections.ReadOnlyCollectionBase.InnerList
  id: InnerList
  parent: System.Collections.ReadOnlyCollectionBase
  href: System.Collections.ReadOnlyCollectionBase.yml
  name: InnerList
  fullName: System.Collections.ReadOnlyCollectionBase.InnerList
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/ReadOnlyCollectionBase.cs
    startLine: 21
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets the list of elements contained in the @'System.Collections.ReadOnlyCollectionBase' instance.
  syntax:
    content: protected ArrayList InnerList { get; }
    content.vb: Protected ReadOnly Property InnerList As ArrayList
    parameters: []
    return:
      type: System.Collections.ArrayList
      description: An @'System.Collections.ArrayList' representing the @'System.Collections.ReadOnlyCollectionBase' instance itself.
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  parent: System.Collections.ReadOnlyCollectionBase
  href: System.Collections.ReadOnlyCollectionBase.yml
  name: ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.ReadOnlyCollectionBase.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/ReadOnlyCollectionBase.cs
    startLine: 36
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets a value indicating whether access to a @'System.Collections.ReadOnlyCollectionBase' object is synchronized (thread safe).
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
    parameters: []
    return:
      type: System.Boolean
      description: true if access to the @'System.Collections.ReadOnlyCollectionBase' object is synchronized (thread safe); otherwise, false. The default is false.
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  parent: System.Collections.ReadOnlyCollectionBase
  href: System.Collections.ReadOnlyCollectionBase.yml
  name: ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
  fullName: System.Collections.ReadOnlyCollectionBase.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/ReadOnlyCollectionBase.cs
    startLine: 41
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets an object that can be used to synchronize access to a @'System.Collections.ReadOnlyCollectionBase' object.
  syntax:
    content: object ICollection.SyncRoot { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
    parameters: []
    return:
      type: System.Object
      description: An object that can be used to synchronize access to the @'System.Collections.ReadOnlyCollectionBase' object.
- uid: System.Collections.ReadOnlyCollectionBase.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.ReadOnlyCollectionBase
  href: System.Collections.ReadOnlyCollectionBase.yml
  name: GetEnumerator()
  fullName: System.Collections.ReadOnlyCollectionBase.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/ReadOnlyCollectionBase.cs
    startLine: 51
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns an enumerator that iterates through the @'System.Collections.ReadOnlyCollectionBase' instance.
  syntax:
    content: public virtual IEnumerator GetEnumerator()
    content.vb: Public Overridable Function GetEnumerator As IEnumerator
    return:
      type: System.Collections.IEnumerator
      description: An @'System.Collections.IEnumerator' for the @'System.Collections.ReadOnlyCollectionBase' instance.
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.ReadOnlyCollectionBase
  href: System.Collections.ReadOnlyCollectionBase.yml
  name: ICollection.CopyTo(Array, Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ReadOnlyCollectionBase.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/ReadOnlyCollectionBase.cs
    startLine: 46
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Copies the entire @'System.Collections.ReadOnlyCollectionBase' to a compatible one-dimensional @'System.Array', starting at the specified index of the target array.
  syntax:
    content: void ICollection.CopyTo(Array array, int index)
    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo
    parameters:
    - id: array
      type: System.Array
      description: The one-dimensional @'System.Array' that is the destination of the elements copied from @'System.Collections.ReadOnlyCollectionBase'. The @'System.Array' must have zero-based indexing.
    - id: index
      type: System.Int32
      description: The zero-based index in *array* at which copying begins.
  exceptions:
  - type: System.ArgumentNullException
    description: '*array* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*index* is less than zero.'
  - type: System.ArgumentException
    description: '*array* is multidimensional.-or- The number of elements in the source @''System.Collections.ReadOnlyCollectionBase'' is greater than the available space from *index* to the end of the destination *array*.'
  - type: System.InvalidCastException
    description: The type of the source @'System.Collections.ReadOnlyCollectionBase' cannot be cast automatically to the type of the destination *array*.
references:
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  href: System.Collections.ArrayList.yml
  name: ArrayList
  fullName: System.Collections.ArrayList
  type: Class
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  href: System.Collections.IEnumerator.yml
  name: IEnumerator
  fullName: System.Collections.IEnumerator
  type: Interface
- uid: System.Array
  parent: System
  isExternal: false
  href: System.Array.yml
  name: Array
  fullName: System.Array
  type: Class
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  type: Class
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  type: Class
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  type: Class
- uid: System.InvalidCastException
  isExternal: false
  href: System.InvalidCastException.yml
  name: InvalidCastException
  fullName: System.InvalidCastException
  type: Class
  summary: The exception that is thrown for invalid casting or explicit conversion.
