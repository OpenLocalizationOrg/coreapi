items:
- uid: System.Security.Cryptography.KeyedHashAlgorithm
  id: KeyedHashAlgorithm
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.KeyedHashAlgorithm.#ctor
  - System.Security.Cryptography.KeyedHashAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.KeyedHashAlgorithm.Key
  href: System.Security.Cryptography.KeyedHashAlgorithm.yml
  name: KeyedHashAlgorithm
  fullName: System.Security.Cryptography.KeyedHashAlgorithm
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Security/Cryptography/KeyedHashAlgorithm.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Security/Cryptography/KeyedHashAlgorithm.cs
    startLine: 5
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  summary: Represents the abstract class from which all implementations of keyed hash algorithms must derive.
  syntax:
    content: 'public abstract class KeyedHashAlgorithm : HashAlgorithm'
    content.vb: Public MustInherit Class KeyedHashAlgorithm Inherits HashAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.HashFinal
  - System.Security.Cryptography.HashAlgorithm.Initialize
- uid: System.Security.Cryptography.KeyedHashAlgorithm.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  href: System.Security.Cryptography.KeyedHashAlgorithm.yml
  name: KeyedHashAlgorithm()
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.KeyedHashAlgorithm()
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/KeyedHashAlgorithm.cs
    startLine: 9
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the @'System.Security.Cryptography.KeyedHashAlgorithm' class.
  syntax:
    content: protected KeyedHashAlgorithm()
    content.vb: Protected Sub New
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Key
  id: Key
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  href: System.Security.Cryptography.KeyedHashAlgorithm.yml
  name: Key
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Key
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/KeyedHashAlgorithm.cs
    startLine: 26
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  summary: Gets or sets the key to use in the hash algorithm.
  syntax:
    content: public virtual byte[] Key { get; set; }
    content.vb: Public Overridable Property Key As Byte()
    parameters: []
    return:
      type: System.Byte[]
      description: The key to use in the hash algorithm.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: An attempt was made to change the @'System.Security.Cryptography.KeyedHashAlgorithm.Key' property after hashing has begun.
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  href: System.Security.Cryptography.KeyedHashAlgorithm.yml
  name: Dispose(Boolean)
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Dispose(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/KeyedHashAlgorithm.cs
    startLine: 12
  assemblies:
  - System.Security.Cryptography.Primitives
  namespace: System.Security.Cryptography
  summary: Releases the unmanaged resources used by the @'System.Security.Cryptography.KeyedHashAlgorithm' and optionally releases the managed resources.
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: true to release both managed and unmanaged resources; false to release only unmanaged resources.
  overridden: System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  href: System.Security.Cryptography.HashAlgorithm.yml
  name: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.Security.Cryptography.HashAlgorithm.HashSize
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  href: System.Security.Cryptography.HashAlgorithm.yml
  name: HashSize
  fullName: System.Security.Cryptography.HashAlgorithm.HashSize
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: true
  href: System.Security.Cryptography.HashAlgorithm.yml
  name: ComputeHash(Byte[])
  name.vb: ComputeHash(Byte())
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  fullName.vb: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte())
  spec.csharp:
  - uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
    name: ComputeHash
    fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash
    href: System.Security.Cryptography.HashAlgorithm.yml
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
    name: ComputeHash
    fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash
    href: System.Security.Cryptography.HashAlgorithm.yml
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: true
  href: System.Security.Cryptography.HashAlgorithm.yml
  name: ComputeHash(Byte[], Int32, Int32)
  name.vb: ComputeHash(Byte(), Int32, Int32)
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte(), System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
    name: ComputeHash
    fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash
    href: System.Security.Cryptography.HashAlgorithm.yml
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
    name: ComputeHash
    fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash
    href: System.Security.Cryptography.HashAlgorithm.yml
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: true
  href: System.Security.Cryptography.HashAlgorithm.yml
  name: ComputeHash(IO.Stream)
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  spec.csharp:
  - uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
    name: ComputeHash
    fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash
    href: System.Security.Cryptography.HashAlgorithm.yml
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: IO.Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
    name: ComputeHash
    fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash
    href: System.Security.Cryptography.HashAlgorithm.yml
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: IO.Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Cryptography.HashAlgorithm.Dispose
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  href: System.Security.Cryptography.HashAlgorithm.yml
  name: Dispose()
  fullName: System.Security.Cryptography.HashAlgorithm.Dispose()
  spec.csharp:
  - uid: System.Security.Cryptography.HashAlgorithm.Dispose
    name: Dispose
    fullName: System.Security.Cryptography.HashAlgorithm.Dispose
    href: System.Security.Cryptography.HashAlgorithm.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.HashAlgorithm.Dispose
    name: Dispose
    fullName: System.Security.Cryptography.HashAlgorithm.Dispose
    href: System.Security.Cryptography.HashAlgorithm.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: true
  href: System.Security.Cryptography.HashAlgorithm.yml
  name: HashCore(Byte[], Int32, Int32)
  name.vb: HashCore(Byte(), Int32, Int32)
  fullName: System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte(), System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
    name: HashCore
    fullName: System.Security.Cryptography.HashAlgorithm.HashCore
    href: System.Security.Cryptography.HashAlgorithm.yml
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
    name: HashCore
    fullName: System.Security.Cryptography.HashAlgorithm.HashCore
    href: System.Security.Cryptography.HashAlgorithm.yml
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Cryptography.HashAlgorithm.HashFinal
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  href: System.Security.Cryptography.HashAlgorithm.yml
  name: HashFinal()
  fullName: System.Security.Cryptography.HashAlgorithm.HashFinal()
  spec.csharp:
  - uid: System.Security.Cryptography.HashAlgorithm.HashFinal
    name: HashFinal
    fullName: System.Security.Cryptography.HashAlgorithm.HashFinal
    href: System.Security.Cryptography.HashAlgorithm.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.HashAlgorithm.HashFinal
    name: HashFinal
    fullName: System.Security.Cryptography.HashAlgorithm.HashFinal
    href: System.Security.Cryptography.HashAlgorithm.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.Cryptography.HashAlgorithm.Initialize
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  href: System.Security.Cryptography.HashAlgorithm.yml
  name: Initialize()
  fullName: System.Security.Cryptography.HashAlgorithm.Initialize()
  spec.csharp:
  - uid: System.Security.Cryptography.HashAlgorithm.Initialize
    name: Initialize
    fullName: System.Security.Cryptography.HashAlgorithm.Initialize
    href: System.Security.Cryptography.HashAlgorithm.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.HashAlgorithm.Initialize
    name: Initialize
    fullName: System.Security.Cryptography.HashAlgorithm.Initialize
    href: System.Security.Cryptography.HashAlgorithm.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Byte[]
  isExternal: false
  href: System.Byte.yml
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    href: System.Byte.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    href: System.Byte.yml
  - name: ()
    fullName: ()
- uid: System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: true
  href: System.Security.Cryptography.HashAlgorithm.yml
  name: Dispose(Boolean)
  fullName: System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
    name: Dispose
    fullName: System.Security.Cryptography.HashAlgorithm.Dispose
    href: System.Security.Cryptography.HashAlgorithm.yml
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
    name: Dispose
    fullName: System.Security.Cryptography.HashAlgorithm.Dispose
    href: System.Security.Cryptography.HashAlgorithm.yml
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CryptographicException
  isExternal: false
  href: System.Security.Cryptography.CryptographicException.yml
  name: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
  summary: The exception that is thrown when an error occurs during a cryptographic operation.
