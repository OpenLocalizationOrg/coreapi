items:
- uid: System.Net.Dns
  id: Dns
  parent: System.Net
  children:
  - System.Net.Dns.GetHostAddressesAsync(System.String)
  - System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)
  - System.Net.Dns.GetHostEntryAsync(System.String)
  - System.Net.Dns.GetHostName
  href: System.Net.Dns.yml
  name: Dns
  fullName: System.Net.Dns
  type: Class
  source:
    remote: &o0
      path: src/System.Net.NameResolution/src/System/Net/DNS.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Net.NameResolution/src/System/Net/DNS.cs
    startLine: 16
  assemblies:
  - System.Net.NameResolution
  namespace: System.Net
  summary: Provides simple domain name resolution functionality.
  syntax:
    content: public class Dns
    content.vb: Public Class Dns
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Net.Dns.GetHostAddressesAsync(System.String)
  id: GetHostAddressesAsync(System.String)
  parent: System.Net.Dns
  href: System.Net.Dns.yml
  name: GetHostAddressesAsync(String)
  fullName: System.Net.Dns.GetHostAddressesAsync(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Net.NameResolution/src/System/Net/DNS.cs
    startLine: 379
  assemblies:
  - System.Net.NameResolution
  namespace: System.Net
  summary: Returns the Internet Protocol (IP) addresses for the specified host as an asynchronous operation.
  syntax:
    content: public static Task<IPAddress[]> GetHostAddressesAsync(string hostNameOrAddress)
    content.vb: Public Shared Function GetHostAddressesAsync(hostNameOrAddress As String) As Task(Of IPAddress())
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: The host name or IP address to resolve.
    return:
      type: System.Threading.Tasks.Task{System.Net.IPAddress[]}
      description: Returns @'System.Threading.Tasks.Task`1'.The task object representing the asynchronous operation. The @'System.Threading.Tasks.Task`1.Result' property on the task object returns an array of type @'System.Net.IPAddress' that holds the IP addresses for the host that is specified by the *hostNameOrAddress* parameter.
  exceptions:
  - type: System.ArgumentNullException
    description: '*hostNameOrAddress* is null.'
  - type: System.ArgumentOutOfRangeException
    description: The length of *hostNameOrAddress* is greater than 255 characters.
  - type: System.Net.Sockets.SocketException
    description: An error is encountered when resolving *hostNameOrAddress*.
  - type: System.ArgumentException
    description: '*hostNameOrAddress* is an invalid IP address.'
- uid: System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)
  id: GetHostEntryAsync(System.Net.IPAddress)
  parent: System.Net.Dns
  href: System.Net.Dns.yml
  name: GetHostEntryAsync(IPAddress)
  fullName: System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)
  type: Method
  source:
    remote:
      path: src/System.Net.NameResolution/ref/System.Net.NameResolution.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Net.NameResolution/ref/System.Net.NameResolution.cs
    startLine: 12
  assemblies:
  - System.Net.NameResolution
  namespace: System.Net
  summary: Resolves an IP address to an @'System.Net.IPHostEntry' instance as an asynchronous operation.
  syntax:
    content: public static Task<IPHostEntry> GetHostEntryAsync(IPAddress address)
    content.vb: Public Shared Function GetHostEntryAsync(address As IPAddress) As Task(Of IPHostEntry)
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: An IP address.
    return:
      type: System.Threading.Tasks.Task{System.Net.IPHostEntry}
      description: Returns @'System.Threading.Tasks.Task`1'.The task object representing the asynchronous operation. The @'System.Threading.Tasks.Task`1.Result' property on the task object returns an @'System.Net.IPHostEntry' instance that contains address information about the host specified in *address*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*address* is null.'
  - type: System.Net.Sockets.SocketException
    description: An error is encountered when resolving *address*.
  - type: System.ArgumentException
    description: '*address* is an invalid IP address.'
- uid: System.Net.Dns.GetHostEntryAsync(System.String)
  id: GetHostEntryAsync(System.String)
  parent: System.Net.Dns
  href: System.Net.Dns.yml
  name: GetHostEntryAsync(String)
  fullName: System.Net.Dns.GetHostEntryAsync(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Net.NameResolution/src/System/Net/DNS.cs
    startLine: 397
  assemblies:
  - System.Net.NameResolution
  namespace: System.Net
  summary: Resolves a host name or IP address to an @'System.Net.IPHostEntry' instance as an asynchronous operation.
  syntax:
    content: public static Task<IPHostEntry> GetHostEntryAsync(string hostNameOrAddress)
    content.vb: Public Shared Function GetHostEntryAsync(hostNameOrAddress As String) As Task(Of IPHostEntry)
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: The host name or IP address to resolve.
    return:
      type: System.Threading.Tasks.Task{System.Net.IPHostEntry}
      description: Returns @'System.Threading.Tasks.Task`1'.The task object representing the asynchronous operation. The @'System.Threading.Tasks.Task`1.Result' property on the task object returns an @'System.Net.IPHostEntry' instance that contains address information about the host specified in *hostNameOrAddress*.
  exceptions:
  - type: System.ArgumentNullException
    description: The *hostNameOrAddress* parameter is null.
  - type: System.ArgumentOutOfRangeException
    description: The length of *hostNameOrAddress* parameter is greater than 255 characters.
  - type: System.Net.Sockets.SocketException
    description: An error was encountered when resolving the *hostNameOrAddress* parameter.
  - type: System.ArgumentException
    description: The *hostNameOrAddress* parameter is an invalid IP address.
- uid: System.Net.Dns.GetHostName
  id: GetHostName
  parent: System.Net.Dns
  href: System.Net.Dns.yml
  name: GetHostName()
  fullName: System.Net.Dns.GetHostName()
  type: Method
  source:
    remote: *o0
    path: src/System.Net.NameResolution/src/System/Net/DNS.cs
    startLine: 156
  assemblies:
  - System.Net.NameResolution
  namespace: System.Net
  summary: Gets the host name of the local computer.
  syntax:
    content: public static string GetHostName()
    content.vb: Public Shared Function GetHostName As String
    return:
      type: System.String
      description: A string that contains the DNS host name of the local computer.
  exceptions:
  - type: System.Net.Sockets.SocketException
    description: An error is encountered when resolving the local host name.
references:
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
  type: Class
- uid: System.Threading.Tasks.Task{System.Net.IPAddress[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IPAddress[]>
  name.vb: Task(Of IPAddress())
  fullName: System.Threading.Tasks.Task<System.Net.IPAddress[]>
  fullName.vb: System.Threading.Tasks.Task(Of System.Net.IPAddress())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: false
  href: System.Threading.Tasks.Task`1.yml
  name: Task<TResult>
  name.vb: Task(Of TResult)
  fullName: System.Threading.Tasks.Task<TResult>
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  type: Class
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    href: System.Threading.Tasks.Task`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
  type: Namespace
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: false
  href: System.Net.IPAddress.yml
  name: IPAddress
  fullName: System.Net.IPAddress
  type: Class
- uid: System.Threading.Tasks.Task{System.Net.IPHostEntry}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: System.Net.IPHostEntry.yml
  name: Task<IPHostEntry>
  name.vb: Task(Of IPHostEntry)
  fullName: System.Threading.Tasks.Task<System.Net.IPHostEntry>
  fullName.vb: System.Threading.Tasks.Task(Of System.Net.IPHostEntry)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.IPHostEntry
    name: IPHostEntry
    fullName: System.Net.IPHostEntry
    href: System.Net.IPHostEntry.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.IPHostEntry
    name: IPHostEntry
    fullName: System.Net.IPHostEntry
    href: System.Net.IPHostEntry.yml
  - name: )
    fullName: )
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  type: Class
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  type: Class
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
- uid: System.Net.Sockets.SocketException
  isExternal: false
  href: System.Net.Sockets.SocketException.yml
  name: SocketException
  fullName: System.Net.Sockets.SocketException
  type: Class
  summary: The exception that is thrown when a socket error occurs.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  type: Class
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
