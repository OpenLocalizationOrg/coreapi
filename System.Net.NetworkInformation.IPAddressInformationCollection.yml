items:
- uid: System.Net.NetworkInformation.IPAddressInformationCollection
  commentId: T:System.Net.NetworkInformation.IPAddressInformationCollection
  id: IPAddressInformationCollection
  parent: System.Net.NetworkInformation
  children:
  - System.Net.NetworkInformation.IPAddressInformationCollection.Add(System.Net.NetworkInformation.IPAddressInformation)
  - System.Net.NetworkInformation.IPAddressInformationCollection.Clear
  - System.Net.NetworkInformation.IPAddressInformationCollection.Contains(System.Net.NetworkInformation.IPAddressInformation)
  - System.Net.NetworkInformation.IPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.IPAddressInformation[],System.Int32)
  - System.Net.NetworkInformation.IPAddressInformationCollection.Count
  - System.Net.NetworkInformation.IPAddressInformationCollection.GetEnumerator
  - System.Net.NetworkInformation.IPAddressInformationCollection.IsReadOnly
  - System.Net.NetworkInformation.IPAddressInformationCollection.Item(System.Int32)
  - System.Net.NetworkInformation.IPAddressInformationCollection.Remove(System.Net.NetworkInformation.IPAddressInformation)
  langs:
  - csharp
  - vb
  name: IPAddressInformationCollection
  fullName: System.Net.NetworkInformation.IPAddressInformationCollection
  type: Class
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformationCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IPAddressInformationCollection
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformationCollection.cs
    startLine: 8
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Stores a set of <xref href=\"System.Net.NetworkInformation.IPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref> types.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.NetworkInformation.IPAddressInformationCollection.Item(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> property returns a member of the collection.</p>\n"
  syntax:
    content: 'public class IPAddressInformationCollection : Collections.Generic.ICollection<IPAddressInformation>, Collections.Generic.IEnumerable<IPAddressInformation>, Collections.IEnumerable'
    content.vb: >-
      Public Class IPAddressInformationCollection
          Inherits Collections.Generic.ICollection(Of IPAddressInformation)
          Implements Collections.Generic.IEnumerable(Of IPAddressInformation), Collections.IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}
  - System.Collections.IEnumerable
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.NetworkInformation.IPAddressInformationCollection.Count
  commentId: P:System.Net.NetworkInformation.IPAddressInformationCollection.Count
  id: Count
  parent: System.Net.NetworkInformation.IPAddressInformationCollection
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Net.NetworkInformation.IPAddressInformationCollection.Count
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformationCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformationCollection.cs
    startLine: 22
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of <xref href=\"System.Net.NetworkInformation.IPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref> types in this collection.</p>\n"
  syntax:
    content: public virtual int Count { get; }
    content.vb: Public Overridable ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>An <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> value that contains the number of <xref href=\"System.Net.NetworkInformation.IPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref> types in this collection.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Net.NetworkInformation.IPAddressInformationCollection.IsReadOnly
  commentId: P:System.Net.NetworkInformation.IPAddressInformationCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Net.NetworkInformation.IPAddressInformationCollection
  langs:
  - csharp
  - vb
  name: IsReadOnly
  fullName: System.Net.NetworkInformation.IPAddressInformationCollection.IsReadOnly
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformationCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsReadOnly
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformationCollection.cs
    startLine: 30
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets a value that indicates whether access to this collection is read-only.</p>\n"
  syntax:
    content: public virtual bool IsReadOnly { get; }
    content.vb: Public Overridable ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> in all cases.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Net.NetworkInformation.IPAddressInformationCollection.Item(System.Int32)
  commentId: P:System.Net.NetworkInformation.IPAddressInformationCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Net.NetworkInformation.IPAddressInformationCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  fullName: System.Net.NetworkInformation.IPAddressInformationCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformationCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformationCollection.cs
    startLine: 63
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the <xref href=\"System.Net.NetworkInformation.IPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref> at the specified index in the collection. </p>\n"
  syntax:
    content: public virtual IPAddressInformation this[int index] { get; }
    content.vb: Public Overridable ReadOnly Property Item(index As Integer) As IPAddressInformation
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>The zero-based index of the element.</p>\n"
    return:
      type: System.Net.NetworkInformation.IPAddressInformation
      description: "\n<p>The <xref href=\"System.Net.NetworkInformation.IPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref> at the specified location.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: System.Net.NetworkInformation.IPAddressInformationCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.Net.NetworkInformation.IPAddressInformationCollection.Add(System.Net.NetworkInformation.IPAddressInformation)
  commentId: M:System.Net.NetworkInformation.IPAddressInformationCollection.Add(System.Net.NetworkInformation.IPAddressInformation)
  id: Add(System.Net.NetworkInformation.IPAddressInformation)
  parent: System.Net.NetworkInformation.IPAddressInformationCollection
  langs:
  - csharp
  - vb
  name: Add(IPAddressInformation)
  fullName: System.Net.NetworkInformation.IPAddressInformationCollection.Add(System.Net.NetworkInformation.IPAddressInformation)
  type: Method
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformationCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformationCollection.cs
    startLine: 38
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Throws a <xref href=\"System.NotSupportedException\" data-throw-if-not-resolved=\"false\"></xref> because this operation is not supported for this collection.</p>\n"
  syntax:
    content: public virtual void Add(IPAddressInformation address)
    content.vb: Public Overridable Sub Add(address As IPAddressInformation)
    parameters:
    - id: address
      type: System.Net.NetworkInformation.IPAddressInformation
      description: "\n<p>The object to be added to the collection.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Net.NetworkInformation.IPAddressInformationCollection.Clear
  commentId: M:System.Net.NetworkInformation.IPAddressInformationCollection.Clear
  id: Clear
  parent: System.Net.NetworkInformation.IPAddressInformationCollection
  langs:
  - csharp
  - vb
  name: Clear()
  fullName: System.Net.NetworkInformation.IPAddressInformationCollection.Clear()
  type: Method
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformationCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clear
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformationCollection.cs
    startLine: 76
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Throws a <xref href=\"System.NotSupportedException\" data-throw-if-not-resolved=\"false\"></xref> because this operation is not supported for this collection.</p>\n"
  syntax:
    content: public virtual void Clear()
    content.vb: Public Overridable Sub Clear
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Net.NetworkInformation.IPAddressInformationCollection.Contains(System.Net.NetworkInformation.IPAddressInformation)
  commentId: M:System.Net.NetworkInformation.IPAddressInformationCollection.Contains(System.Net.NetworkInformation.IPAddressInformation)
  id: Contains(System.Net.NetworkInformation.IPAddressInformation)
  parent: System.Net.NetworkInformation.IPAddressInformationCollection
  langs:
  - csharp
  - vb
  name: Contains(IPAddressInformation)
  fullName: System.Net.NetworkInformation.IPAddressInformationCollection.Contains(System.Net.NetworkInformation.IPAddressInformation)
  type: Method
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformationCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformationCollection.cs
    startLine: 48
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Checks whether the collection contains the specified <xref href=\"System.Net.NetworkInformation.IPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public virtual bool Contains(IPAddressInformation address)
    content.vb: Public Overridable Function Contains(address As IPAddressInformation) As Boolean
    parameters:
    - id: address
      type: System.Net.NetworkInformation.IPAddressInformation
      description: "\n<p>The <xref href=\"System.Net.NetworkInformation.IPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref> object to be searched in the collection.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Net.NetworkInformation.IPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref> object exists in the collection; otherwise. <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Net.NetworkInformation.IPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.IPAddressInformation[],System.Int32)
  commentId: M:System.Net.NetworkInformation.IPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.IPAddressInformation[],System.Int32)
  id: CopyTo(System.Net.NetworkInformation.IPAddressInformation[],System.Int32)
  parent: System.Net.NetworkInformation.IPAddressInformationCollection
  langs:
  - csharp
  - vb
  name: CopyTo(IPAddressInformation[], Int32)
  fullName: System.Net.NetworkInformation.IPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.IPAddressInformation[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformationCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformationCollection.cs
    startLine: 16
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Copies the collection to the specified array.</p>\n"
  remarks: "\n<p>The <em>array</em> parameter must be one-dimensional with zero-based indexing.</p>\n"
  syntax:
    content: public virtual void CopyTo(IPAddressInformation[] array, int offset)
    content.vb: Public Overridable Sub CopyTo(array As IPAddressInformation(), offset As Integer)
    parameters:
    - id: array
      type: System.Net.NetworkInformation.IPAddressInformation[]
      description: "\n<p>A one-dimensional array that receives a copy of the collection.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The zero-based index in <em>array</em> at which the copy begins.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is less than zero. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>array</em> is multidimensional.</p>\n<p>-or- </p>\n<p>The number of elements in this <xref href=\"System.Net.NetworkInformation.IPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref> is greater than the available space from <em>offset</em> to the end of the destination <em>array</em>. </p>\n"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The elements in this <xref href=\"System.Net.NetworkInformation.IPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref> cannot be cast automatically to the type of the destination <em>array</em>. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Net.NetworkInformation.IPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.IPAddressInformation(), System.Int32)
  name.vb: CopyTo(IPAddressInformation(), Int32)
- uid: System.Net.NetworkInformation.IPAddressInformationCollection.GetEnumerator
  commentId: M:System.Net.NetworkInformation.IPAddressInformationCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Net.NetworkInformation.IPAddressInformationCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Net.NetworkInformation.IPAddressInformationCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformationCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformationCollection.cs
    startLine: 58
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Returns an object that can be used to iterate through this collection.</p>\n"
  remarks: "\n<p>The object that is returned by this method is initially positioned before the first element in this collection. You must call the <xref href=\"System.Collections.IEnumerator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> method before you can access the first element. To access the element at the current position, call the <xref href=\"System.Collections.IEnumerator.Current\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>Do not modify the collection while using the enumerator. If the collection is modified while an enumerator is in use, an attempt to set the position by calling <xref href=\"System.Collections.IEnumerator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Collections.IEnumerator.Reset\" data-throw-if-not-resolved=\"false\"></xref> causes an <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>For a detailed description of enumerators, see the documentation for the <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> class and the <xref href=\"System.Collections.IEnumerable.GetEnumerator\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: public virtual Collections.Generic.IEnumerator<IPAddressInformation> GetEnumerator()
    content.vb: Public Overridable Function GetEnumerator As Collections.Generic.IEnumerator(Of IPAddressInformation)
    return:
      type: System.Collections.Generic.IEnumerator{System.Net.NetworkInformation.IPAddressInformation}
      description: "\n<p>An object that implements the <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> interface and provides access to the <xref href=\"System.Net.NetworkInformation.IPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref> types in this collection.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Net.NetworkInformation.IPAddressInformationCollection.Remove(System.Net.NetworkInformation.IPAddressInformation)
  commentId: M:System.Net.NetworkInformation.IPAddressInformationCollection.Remove(System.Net.NetworkInformation.IPAddressInformation)
  id: Remove(System.Net.NetworkInformation.IPAddressInformation)
  parent: System.Net.NetworkInformation.IPAddressInformationCollection
  langs:
  - csharp
  - vb
  name: Remove(IPAddressInformation)
  fullName: System.Net.NetworkInformation.IPAddressInformationCollection.Remove(System.Net.NetworkInformation.IPAddressInformation)
  type: Method
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformationCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPAddressInformationCollection.cs
    startLine: 71
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Throws a <xref href=\"System.NotSupportedException\" data-throw-if-not-resolved=\"false\"></xref> because this operation is not supported for this collection.</p>\n"
  syntax:
    content: public virtual bool Remove(IPAddressInformation address)
    content.vb: Public Overridable Function Remove(address As IPAddressInformation) As Boolean
    parameters:
    - id: address
      type: System.Net.NetworkInformation.IPAddressInformation
      description: "\n<p>The object to be removed.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>Always throws a <xref href=\"System.NotSupportedException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Net.NetworkInformation
  isExternal: false
  name: System.Net.NetworkInformation
  fullName: System.Net.NetworkInformation
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}
  definition: System.Collections.Generic.IEnumerable`1
  name: Collections.Generic.IEnumerable<IPAddressInformation>
  fullName: System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.IPAddressInformation>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.IPAddressInformation)
  name.vb: Collections.Generic.IEnumerable(Of IPAddressInformation)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.IPAddressInformation
    name: IPAddressInformation
    fullName: System.Net.NetworkInformation.IPAddressInformation
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.IPAddressInformation
    name: IPAddressInformation
    fullName: System.Net.NetworkInformation.IPAddressInformation
  - name: )
    fullName: )
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  fullname.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Net.NetworkInformation.IPAddressInformation
  parent: System.Net.NetworkInformation
  isExternal: false
  name: IPAddressInformation
  fullName: System.Net.NetworkInformation.IPAddressInformation
- uid: System.Net.NetworkInformation.IPAddressInformation[]
  isExternal: false
  name: IPAddressInformation[]
  fullName: System.Net.NetworkInformation.IPAddressInformation[]
  fullname.vb: System.Net.NetworkInformation.IPAddressInformation()
  name.vb: IPAddressInformation()
  spec.csharp:
  - uid: System.Net.NetworkInformation.IPAddressInformation
    name: IPAddressInformation
    fullName: System.Net.NetworkInformation.IPAddressInformation
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Net.NetworkInformation.IPAddressInformation
    name: IPAddressInformation
    fullName: System.Net.NetworkInformation.IPAddressInformation
  - name: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerator{System.Net.NetworkInformation.IPAddressInformation}
  definition: System.Collections.Generic.IEnumerator`1
  name: Collections.Generic.IEnumerator<IPAddressInformation>
  fullName: System.Collections.Generic.IEnumerator<System.Net.NetworkInformation.IPAddressInformation>
  fullname.vb: System.Collections.Generic.IEnumerator(Of System.Net.NetworkInformation.IPAddressInformation)
  name.vb: Collections.Generic.IEnumerator(Of IPAddressInformation)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.IPAddressInformation
    name: IPAddressInformation
    fullName: System.Net.NetworkInformation.IPAddressInformation
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.IPAddressInformation
    name: IPAddressInformation
    fullName: System.Net.NetworkInformation.IPAddressInformation
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IEnumerator<>
  fullName: System.Collections.Generic.IEnumerator<>
  fullname.vb: System.Collections.Generic.IEnumerator(Of )
  name.vb: Collections.Generic.IEnumerator(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: false
  name: InvalidCastException
  fullName: System.InvalidCastException
