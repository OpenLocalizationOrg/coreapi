items:
- uid: System.Dynamic.ExpandoObject
  commentId: T:System.Dynamic.ExpandoObject
  id: ExpandoObject
  parent: System.Dynamic
  children:
  - System.Dynamic.ExpandoObject.#ctor
  - System.Dynamic.ExpandoObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  langs:
  - csharp
  - vb
  name: ExpandoObject
  fullName: System.Dynamic.ExpandoObject
  type: Class
  source:
    remote:
      path: src/System.Dynamic.Runtime/src/System/Dynamic/ExpandoObject.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExpandoObject
    path: src/System.Dynamic.Runtime/src/System/Dynamic/ExpandoObject.cs
    startLine: 17
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  summary: "\n<p>Represents an object whose members can be dynamically added and removed at run time.</p>\n"
  remarks: "\n<p>The <strong>ExpandoObject</strong> class enables you to add and delete members of its instances at run time and also to set and get values of these members. This class supports dynamic binding, which enables you to use standard syntax like <code>sampleObject.sampleMember</code> instead of more complex syntax like <code>sampleObject.GetAttribute(\"sampleMember\")</code>.</p>\n<p>The <strong>ExpandoObject</strong> class implements the standard Dynamic Language Runtime (DLR) interface <xref href=\"System.Dynamic.IDynamicMetaObjectProvider\" data-throw-if-not-resolved=\"false\"></xref>, which enables you to share instances of the <strong>ExpandoObject</strong> class between languages that support the DLR interoperability model. For example, you can create an instance of the <strong>ExpandoObject</strong> class in C# and then pass it to an IronPython function. For more information, see Dynamic Language Runtime Overview documentation on the <see href=\"http://go.microsoft.com/fwlink/?LinkId=141028\">CodePlex</see> Web site, and <see href=\"http://go.microsoft.com/fwlink/?LinkID=169157\">Introducing the ExpandoObject</see> on the C# Frequently Asked Questions Web site.</p>\n<p>The <strong>ExpandoObject</strong> class is an implementation of the dynamic object concept that enables getting, setting, and invoking members. If you want to define types that have their own dynamic dispatch semantics, use the <xref href=\"System.Dynamic.DynamicObject\" data-throw-if-not-resolved=\"false\"></xref> class. If you want to define how dynamic objects participate in the interoperability protocol and manage DLR fast dynamic dispatch caching, create your own implementation of the <xref href=\"System.Dynamic.IDynamicMetaObjectProvider\" data-throw-if-not-resolved=\"false\"></xref> interface.</p>\n"
  example:
  - 
  syntax:
    content: 'public sealed class ExpandoObject : Collections.Generic.ICollection<Collections.Generic.KeyValuePair<string, object>>, Collections.Generic.IDictionary<string, object>, Collections.Generic.IEnumerable<Collections.Generic.KeyValuePair<string, object>>, Collections.IEnumerable, ComponentModel.INotifyPropertyChanged, IDynamicMetaObjectProvider'
    content.vb: >-
      Public NotInheritable Class ExpandoObject
          Inherits Collections.Generic.ICollection(Of Collections.Generic.KeyValuePair(Of String, Object))
          Implements Collections.Generic.IDictionary(Of String, Object), Collections.Generic.IEnumerable(Of Collections.Generic.KeyValuePair(Of String, Object)), Collections.IEnumerable, ComponentModel.INotifyPropertyChanged, IDynamicMetaObjectProvider
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IDictionary{System.String,System.Object}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  - System.Collections.IEnumerable
  - System.ComponentModel.INotifyPropertyChanged
  - System.Dynamic.IDynamicMetaObjectProvider
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Dynamic.ExpandoObject.#ctor
  commentId: M:System.Dynamic.ExpandoObject.#ctor
  id: '#ctor'
  parent: System.Dynamic.ExpandoObject
  langs:
  - csharp
  - vb
  name: ExpandoObject()
  fullName: System.Dynamic.ExpandoObject.ExpandoObject()
  type: Constructor
  source:
    remote:
      path: src/System.Dynamic.Runtime/src/System/Dynamic/ExpandoObject.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Dynamic.Runtime/src/System/Dynamic/ExpandoObject.cs
    startLine: 34
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  summary: "\n<p>Initializes a new <strong>ExpandoObject</strong> that does not have members.</p>\n"
  example:
  - 
  syntax:
    content: public ExpandoObject()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Dynamic.ExpandoObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  commentId: M:System.Dynamic.ExpandoObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  id: System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  isEii: true
  parent: System.Dynamic.ExpandoObject
  langs:
  - csharp
  - vb
  name: IDynamicMetaObjectProvider.GetMetaObject(Expression)
  fullName: System.Dynamic.ExpandoObject.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 151
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  summary: "\n<p>The provided MetaObject will dispatch to the dynamic virtual methods. The object can be encapsulated inside another MetaObject to provide custom behavior for individual actions.</p>\n"
  example:
  - 
  syntax:
    content: DynamicMetaObject IDynamicMetaObjectProvider.GetMetaObject(Expression parameter)
    content.vb: Function System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(parameter As Expression) As DynamicMetaObject Implements IDynamicMetaObjectProvider.GetMetaObject
    parameters:
    - id: parameter
      type: System.Linq.Expressions.Expression
      description: "\n<p>The expression that represents the MetaObject to dispatch to the Dynamic virtual methods.</p>\n"
    return:
      type: System.Dynamic.DynamicMetaObject
      description: "\n<p>The object of the <xref href=\"System.Dynamic.DynamicMetaObject\" data-throw-if-not-resolved=\"false\"></xref> type.</p>\n"
  implements:
  - System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  name.vb: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)
references:
- uid: System.Dynamic
  isExternal: false
  name: System.Dynamic
  fullName: System.Dynamic
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  definition: System.Collections.Generic.IDictionary`2
  name: Collections.Generic.IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: Collections.Generic.IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  definition: System.Collections.Generic.IEnumerable`1
  name: Collections.Generic.IEnumerable<Collections.Generic.KeyValuePair<String, Object>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.Object>>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: Collections.Generic.IEnumerable(Of Collections.Generic.KeyValuePair(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: Collections.Generic.KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: Collections.Generic.KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: false
  name: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.Dynamic.IDynamicMetaObjectProvider
  parent: System.Dynamic
  isExternal: false
  name: IDynamicMetaObjectProvider
  fullName: System.Dynamic.IDynamicMetaObjectProvider
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IDictionary`2
  isExternal: false
  name: Collections.Generic.IDictionary<, >
  fullName: System.Collections.Generic.IDictionary<, >
  fullname.vb: System.Collections.Generic.IDictionary(Of , )
  name.vb: Collections.Generic.IDictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    fullName: <
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  fullname.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  parent: System.Dynamic.IDynamicMetaObjectProvider
  isExternal: true
  name: GetMetaObject(Expression)
  fullName: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    fullName: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    fullName: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Dynamic.DynamicMetaObject
  parent: System.Dynamic
  isExternal: false
  name: DynamicMetaObject
  fullName: System.Dynamic.DynamicMetaObject
- uid: System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  fullName: System.Linq.Expressions
