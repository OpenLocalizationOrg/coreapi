items:
- uid: System.Threading.CancellationToken
  id: CancellationToken
  parent: System.Threading
  children:
  - System.Threading.CancellationToken.#ctor(System.Boolean)
  - System.Threading.CancellationToken.CanBeCanceled
  - System.Threading.CancellationToken.Equals(System.Object)
  - System.Threading.CancellationToken.Equals(System.Threading.CancellationToken)
  - System.Threading.CancellationToken.GetHashCode
  - System.Threading.CancellationToken.IsCancellationRequested
  - System.Threading.CancellationToken.None
  - System.Threading.CancellationToken.op_Equality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  - System.Threading.CancellationToken.op_Inequality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  - System.Threading.CancellationToken.Register(System.Action)
  - System.Threading.CancellationToken.Register(System.Action,System.Boolean)
  - System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object)
  - System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object,System.Boolean)
  - System.Threading.CancellationToken.ThrowIfCancellationRequested
  - System.Threading.CancellationToken.WaitHandle
  href: System.Threading.CancellationToken.yml
  name: CancellationToken
  fullName: System.Threading.CancellationToken
  type: Struct
  source:
    remote: &o0
      path: src/mscorlib/src/System/Threading/CancellationToken.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/Threading/CancellationToken.cs
    startLine: 40
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Propagates notification that operations should be canceled.
  syntax:
    content: public struct CancellationToken
    content.vb: Public Structure CancellationToken
- uid: System.Threading.CancellationToken.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Threading.CancellationToken
  href: System.Threading.CancellationToken.yml
  name: CancellationToken(Boolean)
  fullName: System.Threading.CancellationToken.CancellationToken(System.Boolean)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CancellationToken.cs
    startLine: 155
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Initializes the @'System.Threading.CancellationToken'.
  syntax:
    content: public CancellationToken(bool canceled)
    content.vb: Public Sub New(canceled As Boolean)
    parameters:
    - id: canceled
      type: System.Boolean
      description: The canceled state for the token.
- uid: System.Threading.CancellationToken.CanBeCanceled
  id: CanBeCanceled
  parent: System.Threading.CancellationToken
  href: System.Threading.CancellationToken.yml
  name: CanBeCanceled
  fullName: System.Threading.CancellationToken.CanBeCanceled
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CancellationToken.cs
    startLine: 99
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Gets whether this token is capable of being in the canceled state.
  syntax:
    content: public bool CanBeCanceled { get; }
    content.vb: Public ReadOnly Property CanBeCanceled As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if this token is capable of being in the canceled state; otherwise, false.
- uid: System.Threading.CancellationToken.IsCancellationRequested
  id: IsCancellationRequested
  parent: System.Threading.CancellationToken
  href: System.Threading.CancellationToken.yml
  name: IsCancellationRequested
  fullName: System.Threading.CancellationToken.IsCancellationRequested
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CancellationToken.cs
    startLine: 83
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Gets whether cancellation has been requested for this token.
  syntax:
    content: public bool IsCancellationRequested { get; }
    content.vb: Public ReadOnly Property IsCancellationRequested As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if cancellation has been requested for this token; otherwise, false.
- uid: System.Threading.CancellationToken.None
  id: None
  parent: System.Threading.CancellationToken
  href: System.Threading.CancellationToken.yml
  name: None
  fullName: System.Threading.CancellationToken.None
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CancellationToken.cs
    startLine: 59
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Returns an empty @'System.Threading.CancellationToken' value.
  syntax:
    content: public static CancellationToken None { get; }
    content.vb: Public Shared ReadOnly Property None As CancellationToken
    parameters: []
    return:
      type: System.Threading.CancellationToken
      description: An empty cancellation token.
- uid: System.Threading.CancellationToken.WaitHandle
  id: WaitHandle
  parent: System.Threading.CancellationToken
  href: System.Threading.CancellationToken.yml
  name: WaitHandle
  fullName: System.Threading.CancellationToken.WaitHandle
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CancellationToken.cs
    startLine: 117
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Gets a @'System.Threading.WaitHandle' that is signaled when the token is canceled.
  syntax:
    content: public WaitHandle WaitHandle { get; }
    content.vb: Public ReadOnly Property WaitHandle As WaitHandle
    parameters: []
    return:
      type: System.Threading.WaitHandle
      description: A @'System.Threading.WaitHandle' that is signaled when the token is canceled.
  exceptions:
  - type: System.ObjectDisposedException
    description: The associated @'System.Threading.CancellationTokenSource' has been disposed.
- uid: System.Threading.CancellationToken.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Threading.CancellationToken
  href: System.Threading.CancellationToken.yml
  name: Equals(Object)
  fullName: System.Threading.CancellationToken.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CancellationToken.cs
    startLine: 398
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Determines whether the current @'System.Threading.CancellationToken' instance is equal to the specified @'System.Object'.
  syntax:
    content: public override bool Equals(object other)
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
    parameters:
    - id: other
      type: System.Object
      description: The other object to which to compare this instance.
    return:
      type: System.Boolean
      description: true if *other* is a @'System.Threading.CancellationToken' and if the two instances are equal; otherwise, false. Two tokens are equal if they are associated with the same @'System.Threading.CancellationTokenSource' or if they were both constructed from public @'System.Threading.CancellationToken' constructors and their @'System.Threading.CancellationToken.IsCancellationRequested' values are equal.
  exceptions:
  - type: System.ObjectDisposedException
    description: An associated @'System.Threading.CancellationTokenSource' has been disposed.
- uid: System.Threading.CancellationToken.Equals(System.Threading.CancellationToken)
  id: Equals(System.Threading.CancellationToken)
  parent: System.Threading.CancellationToken
  href: System.Threading.CancellationToken.yml
  name: Equals(CancellationToken)
  fullName: System.Threading.CancellationToken.Equals(System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CancellationToken.cs
    startLine: 362
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Determines whether the current @'System.Threading.CancellationToken' instance is equal to the specified token.
  syntax:
    content: public bool Equals(CancellationToken other)
    content.vb: Public Function Equals(other As CancellationToken) As Boolean
    parameters:
    - id: other
      type: System.Threading.CancellationToken
      description: The other @'System.Threading.CancellationToken' to which to compare this instance.
    return:
      type: System.Boolean
      description: true if the instances are equal; otherwise, false. Two tokens are equal if they are associated with the same @'System.Threading.CancellationTokenSource' or if they were both constructed from public @'System.Threading.CancellationToken' constructors and their @'System.Threading.CancellationToken.IsCancellationRequested' values are equal.
- uid: System.Threading.CancellationToken.GetHashCode
  id: GetHashCode
  parent: System.Threading.CancellationToken
  href: System.Threading.CancellationToken.yml
  name: GetHashCode()
  fullName: System.Threading.CancellationToken.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CancellationToken.cs
    startLine: 412
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Serves as a hash function for a @'System.Threading.CancellationToken'.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A hash code for the current @'System.Threading.CancellationToken' instance.
- uid: System.Threading.CancellationToken.op_Equality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  id: op_Equality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  parent: System.Threading.CancellationToken
  href: System.Threading.CancellationToken.yml
  name: Equality(CancellationToken, CancellationToken)
  fullName: System.Threading.CancellationToken.Equality(System.Threading.CancellationToken, System.Threading.CancellationToken)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CancellationToken.cs
    startLine: 431
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Determines whether two @'System.Threading.CancellationToken' instances are equal.
  syntax:
    content: public static bool operator ==(CancellationToken left, CancellationToken right)
    content.vb: Public Shared Operator =(left As CancellationToken, right As CancellationToken) As Boolean
    parameters:
    - id: left
      type: System.Threading.CancellationToken
      description: The first instance.
    - id: right
      type: System.Threading.CancellationToken
      description: The second instance.
    return:
      type: System.Boolean
      description: true if the instances are equal; otherwise, false.
  exceptions:
  - type: System.ObjectDisposedException
    description: An associated @'System.Threading.CancellationTokenSource' has been disposed.
- uid: System.Threading.CancellationToken.op_Inequality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  id: op_Inequality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  parent: System.Threading.CancellationToken
  href: System.Threading.CancellationToken.yml
  name: Inequality(CancellationToken, CancellationToken)
  fullName: System.Threading.CancellationToken.Inequality(System.Threading.CancellationToken, System.Threading.CancellationToken)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CancellationToken.cs
    startLine: 444
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Determines whether two @'System.Threading.CancellationToken' instances are not equal.
  syntax:
    content: public static bool operator !=(CancellationToken left, CancellationToken right)
    content.vb: Public Shared Operator <>(left As CancellationToken, right As CancellationToken) As Boolean
    parameters:
    - id: left
      type: System.Threading.CancellationToken
      description: The first instance.
    - id: right
      type: System.Threading.CancellationToken
      description: The second instance.
    return:
      type: System.Boolean
      description: true if the instances are not equal; otherwise, false.
  exceptions:
  - type: System.ObjectDisposedException
    description: An associated @'System.Threading.CancellationTokenSource' has been disposed.
- uid: System.Threading.CancellationToken.Register(System.Action)
  id: Register(System.Action)
  parent: System.Threading.CancellationToken
  href: System.Threading.CancellationToken.yml
  name: Register(Action)
  fullName: System.Threading.CancellationToken.Register(System.Action)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CancellationToken.cs
    startLine: 191
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Registers a delegate that will be called when this @'System.Threading.CancellationToken' is canceled.
  syntax:
    content: public CancellationTokenRegistration Register(Action callback)
    content.vb: Public Function Register(callback As Action) As CancellationTokenRegistration
    parameters:
    - id: callback
      type: System.Action
      description: The delegate to be executed when the @'System.Threading.CancellationToken' is canceled.
    return:
      type: System.Threading.CancellationTokenRegistration
      description: The @'System.Threading.CancellationTokenRegistration' instance that can be used to deregister the callback.
  exceptions:
  - type: System.ObjectDisposedException
    description: The associated @'System.Threading.CancellationTokenSource' has been disposed.
  - type: System.ArgumentNullException
    description: '*callback* is null.'
- uid: System.Threading.CancellationToken.Register(System.Action,System.Boolean)
  id: Register(System.Action,System.Boolean)
  parent: System.Threading.CancellationToken
  href: System.Threading.CancellationToken.yml
  name: Register(Action, Boolean)
  fullName: System.Threading.CancellationToken.Register(System.Action, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CancellationToken.cs
    startLine: 226
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Registers a delegate that will be called when this @'System.Threading.CancellationToken' is canceled.
  syntax:
    content: public CancellationTokenRegistration Register(Action callback, bool useSynchronizationContext)
    content.vb: Public Function Register(callback As Action, useSynchronizationContext As Boolean) As CancellationTokenRegistration
    parameters:
    - id: callback
      type: System.Action
      description: The delegate to be executed when the @'System.Threading.CancellationToken' is canceled.
    - id: useSynchronizationContext
      type: System.Boolean
      description: A Boolean value that indicates whether to capture the current @'System.Threading.SynchronizationContext' and use it when invoking the *callback*.
    return:
      type: System.Threading.CancellationTokenRegistration
      description: The @'System.Threading.CancellationTokenRegistration' instance that can be used to deregister the callback.
  exceptions:
  - type: System.ObjectDisposedException
    description: The associated @'System.Threading.CancellationTokenSource' has been disposed.
  - type: System.ArgumentNullException
    description: '*callback* is null.'
- uid: System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object)
  id: Register(System.Action{System.Object},System.Object)
  parent: System.Threading.CancellationToken
  href: System.Threading.CancellationToken.yml
  name: Register(Action<Object>, Object)
  name.vb: Register(Action(Of Object), Object)
  fullName: System.Threading.CancellationToken.Register(System.Action<System.Object>, System.Object)
  fullName.vb: System.Threading.CancellationToken.Register(System.Action(Of System.Object), System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CancellationToken.cs
    startLine: 259
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Registers a delegate that will be called when this @'System.Threading.CancellationToken' is canceled.
  syntax:
    content: public CancellationTokenRegistration Register(Action<object> callback, object state)
    content.vb: Public Function Register(callback As Action(Of Object), state As Object) As CancellationTokenRegistration
    parameters:
    - id: callback
      type: System.Action{System.Object}
      description: The delegate to be executed when the @'System.Threading.CancellationToken' is canceled.
    - id: state
      type: System.Object
      description: The state to pass to the *callback* when the delegate is invoked. This may be null.
    return:
      type: System.Threading.CancellationTokenRegistration
      description: The @'System.Threading.CancellationTokenRegistration' instance that can be used to deregister the callback.
  exceptions:
  - type: System.ObjectDisposedException
    description: The associated @'System.Threading.CancellationTokenSource' has been disposed.
  - type: System.ArgumentNullException
    description: '*callback* is null.'
- uid: System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object,System.Boolean)
  id: Register(System.Action{System.Object},System.Object,System.Boolean)
  parent: System.Threading.CancellationToken
  href: System.Threading.CancellationToken.yml
  name: Register(Action<Object>, Object, Boolean)
  name.vb: Register(Action(Of Object), Object, Boolean)
  fullName: System.Threading.CancellationToken.Register(System.Action<System.Object>, System.Object, System.Boolean)
  fullName.vb: System.Threading.CancellationToken.Register(System.Action(Of System.Object), System.Object, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CancellationToken.cs
    startLine: 297
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Registers a delegate that will be called when this @'System.Threading.CancellationToken' is canceled.
  syntax:
    content: public CancellationTokenRegistration Register(Action<object> callback, object state, bool useSynchronizationContext)
    content.vb: Public Function Register(callback As Action(Of Object), state As Object, useSynchronizationContext As Boolean) As CancellationTokenRegistration
    parameters:
    - id: callback
      type: System.Action{System.Object}
      description: The delegate to be executed when the @'System.Threading.CancellationToken' is canceled.
    - id: state
      type: System.Object
      description: The state to pass to the *callback* when the delegate is invoked. This may be null.
    - id: useSynchronizationContext
      type: System.Boolean
      description: A Boolean value that indicates whether to capture the current @'System.Threading.SynchronizationContext' and use it when invoking the *callback*.
    return:
      type: System.Threading.CancellationTokenRegistration
      description: The @'System.Threading.CancellationTokenRegistration' instance that can be used to deregister the callback.
  exceptions:
  - type: System.ObjectDisposedException
    description: The associated @'System.Threading.CancellationTokenSource' has been disposed.
  - type: System.ArgumentNullException
    description: '*callback* is null.'
- uid: System.Threading.CancellationToken.ThrowIfCancellationRequested
  id: ThrowIfCancellationRequested
  parent: System.Threading.CancellationToken
  href: System.Threading.CancellationToken.yml
  name: ThrowIfCancellationRequested()
  fullName: System.Threading.CancellationToken.ThrowIfCancellationRequested()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/CancellationToken.cs
    startLine: 463
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Throws a @'System.OperationCanceledException' if this token has had cancellation requested.
  syntax:
    content: public void ThrowIfCancellationRequested()
    content.vb: Public Sub ThrowIfCancellationRequested
  exceptions:
  - type: System.OperationCanceledException
    description: The token has had cancellation requested.
  - type: System.ObjectDisposedException
    description: The associated @'System.Threading.CancellationTokenSource' has been disposed.
references:
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  href: System.Threading.CancellationToken.yml
  name: Threading.CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.WaitHandle
  parent: System.Threading
  isExternal: false
  href: System.Threading.WaitHandle.yml
  name: WaitHandle
  fullName: System.Threading.WaitHandle
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
- uid: System.Action
  isExternal: false
  href: System.Action.yml
  name: Action
  fullName: System.Action
- uid: System.Threading.CancellationTokenRegistration
  parent: System.Threading
  isExternal: false
  href: System.Threading.CancellationTokenRegistration.yml
  name: CancellationTokenRegistration
  fullName: System.Threading.CancellationTokenRegistration
- uid: System.Action{System.Object}
  definition: System.Action`1
  name: Action<Object>
  name.vb: Action(Of Object)
  fullName: System.Action<System.Object>
  fullName.vb: System.Action(Of System.Object)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Action`1
  isExternal: false
  href: System.Action`1.yml
  name: Action<>
  name.vb: Action(Of )
  fullName: System.Action<>
  fullName.vb: System.Action(Of )
  spec.csharp:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    href: System.Action`1.yml
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    href: System.Action`1.yml
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.ObjectDisposedException
  isExternal: false
  href: System.ObjectDisposedException.yml
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
  summary: The exception that is thrown when an operation is performed on a disposed object.
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.OperationCanceledException
  parent: System
  isExternal: false
  href: System.OperationCanceledException.yml
  name: OperationCanceledException
  fullName: System.OperationCanceledException
  summary: The exception that is thrown in a thread upon cancellation of an operation that the thread was executing.
