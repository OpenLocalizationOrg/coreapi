items:
- uid: System.Security.Claims.ClaimsIdentity
  id: ClaimsIdentity
  parent: System.Security.Claims
  children:
  - System.Security.Claims.ClaimsIdentity.#ctor
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.IO.BinaryReader)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.String)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.String,System.String,System.String)
  - System.Security.Claims.ClaimsIdentity.Actor
  - System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)
  - System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.AuthenticationType
  - System.Security.Claims.ClaimsIdentity.BootstrapContext
  - System.Security.Claims.ClaimsIdentity.Claims
  - System.Security.Claims.ClaimsIdentity.Clone
  - System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)
  - System.Security.Claims.ClaimsIdentity.CustomSerializationData
  - System.Security.Claims.ClaimsIdentity.DefaultIssuer
  - System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
  - System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
  - System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.FindAll(System.String)
  - System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.FindFirst(System.String)
  - System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)
  - System.Security.Claims.ClaimsIdentity.IsAuthenticated
  - System.Security.Claims.ClaimsIdentity.Label
  - System.Security.Claims.ClaimsIdentity.Name
  - System.Security.Claims.ClaimsIdentity.NameClaimType
  - System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)
  - System.Security.Claims.ClaimsIdentity.RoleClaimType
  - System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)
  - System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)
  - System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])
  href: System.Security.Claims.ClaimsIdentity.yml
  name: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
  type: Class
  source:
    remote: &o0
      path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 16
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Represents a claims-based identity.
  syntax:
    content: 'public class ClaimsIdentity : IIdentity'
    content.vb: Public Class ClaimsIdentity Implements IIdentity
  inheritance:
  - System.Object
  implements:
  - System.Security.Principal.IIdentity
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Security.Claims.ClaimsIdentity.DefaultIssuer
  id: DefaultIssuer
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: DefaultIssuer
  fullName: System.Security.Claims.ClaimsIdentity.DefaultIssuer
  type: Field
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 41
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: "The default issuer; “LOCAL AUTHORITY”."
  syntax:
    content: public const string DefaultIssuer
    content.vb: Public Const DefaultIssuer As String = "LOCAL AUTHORITY"
- uid: System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
  id: DefaultNameClaimType
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: DefaultNameClaimType
  fullName: System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
  type: Field
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 42
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: The default name claim type; @'System.Security.Claims.ClaimTypes.Name'.
  syntax:
    content: public const string DefaultNameClaimType
    content.vb: Public Const DefaultNameClaimType As String = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name"
- uid: System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
  id: DefaultRoleClaimType
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: DefaultRoleClaimType
  fullName: System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
  type: Field
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 43
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: The default role claim type; @'System.Security.Claims.ClaimTypes.Role'.
  syntax:
    content: public const string DefaultRoleClaimType
    content.vb: Public Const DefaultRoleClaimType As String = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role"
- uid: System.Security.Claims.ClaimsIdentity.#ctor
  id: '#ctor'
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: ClaimsIdentity()
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 53
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Initializes a new instance of the @'System.Security.Claims.ClaimsIdentity' class with an empty claims collection.
  syntax:
    content: public ClaimsIdentity()
    content.vb: Public Sub New
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})'
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: ClaimsIdentity(IEnumerable<Claim>)
  name.vb: ClaimsIdentity(IEnumerable(Of Claim))
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>)
  fullName.vb: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim))
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 75
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Initializes a new instance of the @'System.Security.Claims.ClaimsIdentity' class using an enumerated collection of @'System.Security.Claims.Claim' objects.
  syntax:
    content: public ClaimsIdentity(IEnumerable<Claim> claims)
    content.vb: Public Sub New(claims As IEnumerable(Of Claim))
    parameters:
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: The claims with which to populate the claims identity.
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: ClaimsIdentity(IEnumerable<Claim>, String)
  name.vb: ClaimsIdentity(IEnumerable(Of Claim), String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>, System.String)
  fullName.vb: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim), System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 95
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Initializes a new instance of the @'System.Security.Claims.ClaimsIdentity' class with the specified claims and authentication type.
  syntax:
    content: public ClaimsIdentity(IEnumerable<Claim> claims, string authenticationType)
    content.vb: Public Sub New(claims As IEnumerable(Of Claim), authenticationType As String)
    parameters:
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: The claims with which to populate the claims identity.
    - id: authenticationType
      type: System.String
      description: The type of authentication used.
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: ClaimsIdentity(IEnumerable<Claim>, String, String, String)
  name.vb: ClaimsIdentity(IEnumerable(Of Claim), String, String, String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>, System.String, System.String, System.String)
  fullName.vb: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim), System.String, System.String, System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 131
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Initializes a new instance of the @'System.Security.Claims.ClaimsIdentity' class with the specified, claims, authentication type, name claim type, and role claim type.
  syntax:
    content: public ClaimsIdentity(IEnumerable<Claim> claims, string authenticationType, string nameType, string roleType)
    content.vb: Public Sub New(claims As IEnumerable(Of Claim), authenticationType As String, nameType As String, roleType As String)
    parameters:
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: The claims with which to populate the claims identity.
    - id: authenticationType
      type: System.String
      description: The type of authentication used.
    - id: nameType
      type: System.String
      description: The claim type to use for name claims.
    - id: roleType
      type: System.String
      description: The claim type to use for role claims.
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.IO.BinaryReader)
  id: '#ctor(System.IO.BinaryReader)'
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: ClaimsIdentity(BinaryReader)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(System.IO.BinaryReader)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 201
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  syntax:
    content: public ClaimsIdentity(BinaryReader reader)
    content.vb: Public Sub New(reader As BinaryReader)
    parameters:
    - id: reader
      type: System.IO.BinaryReader
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Claims.ClaimsIdentity)
  id: '#ctor(System.Security.Claims.ClaimsIdentity)'
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: ClaimsIdentity(ClaimsIdentity)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(System.Security.Claims.ClaimsIdentity)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 214
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  syntax:
    content: protected ClaimsIdentity(ClaimsIdentity other)
    content.vb: Protected Sub New(other As ClaimsIdentity)
    parameters:
    - id: other
      type: System.Security.Claims.ClaimsIdentity
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity)
  id: '#ctor(System.Security.Principal.IIdentity)'
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: ClaimsIdentity(IIdentity)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(System.Security.Principal.IIdentity)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 63
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Initializes a new instance of the @'System.Security.Claims.ClaimsIdentity' class using the name and authentication type from the specified @'System.Security.Principal.IIdentity'.
  syntax:
    content: public ClaimsIdentity(IIdentity identity)
    content.vb: Public Sub New(identity As IIdentity)
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: The identity from which to base the new claims identity.
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  id: '#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})'
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: ClaimsIdentity(IIdentity, IEnumerable<Claim>)
  name.vb: ClaimsIdentity(IIdentity, IEnumerable(Of Claim))
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(System.Security.Principal.IIdentity, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>)
  fullName.vb: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(System.Security.Principal.IIdentity, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim))
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 106
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Initializes a new instance of the @'System.Security.Claims.ClaimsIdentity' class using the specified claims and the specified @'System.Security.Principal.IIdentity'.
  syntax:
    content: public ClaimsIdentity(IIdentity identity, IEnumerable<Claim> claims)
    content.vb: Public Sub New(identity As IIdentity, claims As IEnumerable(Of Claim))
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: The identity from which to base the new claims identity.
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: The claims with which to populate the claims identity.
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  id: '#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: ClaimsIdentity(IIdentity, IEnumerable<Claim>, String, String, String)
  name.vb: ClaimsIdentity(IIdentity, IEnumerable(Of Claim), String, String, String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(System.Security.Principal.IIdentity, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>, System.String, System.String, System.String)
  fullName.vb: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(System.Security.Principal.IIdentity, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim), System.String, System.String, System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 150
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Initializes a new instance of the @'System.Security.Claims.ClaimsIdentity' class from the specified @'System.Security.Principal.IIdentity' using the specified claims, authentication type, name claim type, and role claim type.
  syntax:
    content: public ClaimsIdentity(IIdentity identity, IEnumerable<Claim> claims, string authenticationType, string nameType, string roleType)
    content.vb: Public Sub New(identity As IIdentity, claims As IEnumerable(Of Claim), authenticationType As String, nameType As String, roleType As String)
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: The identity from which to base the new claims identity.
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: The claims with which to populate the new claims identity.
    - id: authenticationType
      type: System.String
      description: The type of authentication used.
    - id: nameType
      type: System.String
      description: The claim type to use for name claims.
    - id: roleType
      type: System.String
      description: The claim type to use for role claims.
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: ClaimsIdentity(String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 84
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Initializes a new instance of the @'System.Security.Claims.ClaimsIdentity' class with an empty claims collection and the specified authentication type.
  syntax:
    content: public ClaimsIdentity(string authenticationType)
    content.vb: Public Sub New(authenticationType As String)
    parameters:
    - id: authenticationType
      type: System.String
      description: The type of authentication used.
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: ClaimsIdentity(String, String, String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(System.String, System.String, System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 118
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Initializes a new instance of the @'System.Security.Claims.ClaimsIdentity' class with the specified authentication type, name claim type, and role claim type.
  syntax:
    content: public ClaimsIdentity(string authenticationType, string nameType, string roleType)
    content.vb: Public Sub New(authenticationType As String, nameType As String, roleType As String)
    parameters:
    - id: authenticationType
      type: System.String
      description: The type of authentication used.
    - id: nameType
      type: System.String
      description: The claim type to use for name claims.
    - id: roleType
      type: System.String
      description: The claim type to use for role claims.
- uid: System.Security.Claims.ClaimsIdentity.Actor
  id: Actor
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: Actor
  fullName: System.Security.Claims.ClaimsIdentity.Actor
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 259
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Gets or sets the identity of the calling party that was granted delegation rights.
  syntax:
    content: public ClaimsIdentity Actor { get; set; }
    content.vb: Public Property Actor As ClaimsIdentity
    parameters: []
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: The calling party that was granted delegation rights.
  exceptions:
  - type: System.InvalidOperationException
    description: An attempt to set the property to the current instance occurs.
- uid: System.Security.Claims.ClaimsIdentity.AuthenticationType
  id: AuthenticationType
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: AuthenticationType
  fullName: System.Security.Claims.ClaimsIdentity.AuthenticationType
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 242
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Gets the authentication type.
  syntax:
    content: public virtual string AuthenticationType { get; }
    content.vb: Public Overridable ReadOnly Property AuthenticationType As String
    parameters: []
    return:
      type: System.String
      description: The authentication type.
- uid: System.Security.Claims.ClaimsIdentity.BootstrapContext
  id: BootstrapContext
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: BootstrapContext
  fullName: System.Security.Claims.ClaimsIdentity.BootstrapContext
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 278
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Gets or sets the token that was used to create this claims identity.
  syntax:
    content: public object BootstrapContext { get; set; }
    content.vb: Public Property BootstrapContext As Object
    parameters: []
    return:
      type: System.Object
      description: The bootstrap context.
- uid: System.Security.Claims.ClaimsIdentity.Claims
  id: Claims
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: Claims
  fullName: System.Security.Claims.ClaimsIdentity.Claims
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 290
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Gets the claims associated with this claims identity.
  syntax:
    content: public virtual IEnumerable<Claim> Claims { get; }
    content.vb: Public Overridable ReadOnly Property Claims As IEnumerable(Of Claim)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: The collection of claims associated with this claims identity.
- uid: System.Security.Claims.ClaimsIdentity.CustomSerializationData
  id: CustomSerializationData
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: CustomSerializationData
  fullName: System.Security.Claims.ClaimsIdentity.CustomSerializationData
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 318
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  syntax:
    content: protected virtual byte[] CustomSerializationData { get; }
    content.vb: Protected Overridable ReadOnly Property CustomSerializationData As Byte()
    parameters: []
    return:
      type: System.Byte[]
- uid: System.Security.Claims.ClaimsIdentity.IsAuthenticated
  id: IsAuthenticated
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: IsAuthenticated
  fullName: System.Security.Claims.ClaimsIdentity.IsAuthenticated
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 250
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Gets a value that indicates whether the identity has been authenticated.
  syntax:
    content: public virtual bool IsAuthenticated { get; }
    content.vb: Public Overridable ReadOnly Property IsAuthenticated As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the identity has been authenticated; otherwise, false.
- uid: System.Security.Claims.ClaimsIdentity.Label
  id: Label
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: Label
  fullName: System.Security.Claims.ClaimsIdentity.Label
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 338
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Gets or sets the label for this claims identity.
  syntax:
    content: public string Label { get; set; }
    content.vb: Public Property Label As String
    parameters: []
    return:
      type: System.String
      description: The label.
- uid: System.Security.Claims.ClaimsIdentity.Name
  id: Name
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: Name
  fullName: System.Security.Claims.ClaimsIdentity.Name
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 348
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Gets the name of this claims identity.
  syntax:
    content: public virtual string Name { get; }
    content.vb: Public Overridable ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: The name or null.
- uid: System.Security.Claims.ClaimsIdentity.NameClaimType
  id: NameClaimType
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: NameClaimType
  fullName: System.Security.Claims.ClaimsIdentity.NameClaimType
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 366
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Gets the claim type that is used to determine which claims provide the value for the @'System.Security.Claims.ClaimsIdentity.Name' property of this claims identity.
  syntax:
    content: public string NameClaimType { get; }
    content.vb: Public ReadOnly Property NameClaimType As String
    parameters: []
    return:
      type: System.String
      description: The name claim type.
- uid: System.Security.Claims.ClaimsIdentity.RoleClaimType
  id: RoleClaimType
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: RoleClaimType
  fullName: System.Security.Claims.ClaimsIdentity.RoleClaimType
  type: Property
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 374
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Gets the claim type that will be interpreted as a .NET Framework role among the claims in this claims identity.
  syntax:
    content: public string RoleClaimType { get; }
    content.vb: Public ReadOnly Property RoleClaimType As String
    parameters: []
    return:
      type: System.String
      description: The role claim type.
- uid: System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)
  id: AddClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: AddClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 393
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Adds a single claim to this claims identity.
  syntax:
    content: public virtual void AddClaim(Claim claim)
    content.vb: Public Overridable Sub AddClaim(claim As Claim)
    parameters:
    - id: claim
      type: System.Security.Claims.Claim
      description: The claim to add.
  exceptions:
  - type: System.ArgumentNullException
    description: '*claim* is null.'
- uid: System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  id: AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: AddClaims(IEnumerable<Claim>)
  name.vb: AddClaims(IEnumerable(Of Claim))
  fullName: System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>)
  fullName.vb: System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim))
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 418
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Adds a list of claims to this claims identity.
  syntax:
    content: public virtual void AddClaims(IEnumerable<Claim> claims)
    content.vb: Public Overridable Sub AddClaims(claims As IEnumerable(Of Claim))
    parameters:
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: The claims to add.
  exceptions:
  - type: System.ArgumentNullException
    description: '*claims* is null.'
- uid: System.Security.Claims.ClaimsIdentity.Clone
  id: Clone
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: Clone()
  fullName: System.Security.Claims.ClaimsIdentity.Clone()
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 382
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Returns a new @'System.Security.Claims.ClaimsIdentity' copied from this claims identity.
  syntax:
    content: public virtual ClaimsIdentity Clone()
    content.vb: Public Overridable Function Clone As ClaimsIdentity
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: A copy of the current instance.
- uid: System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)
  id: CreateClaim(System.IO.BinaryReader)
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: CreateClaim(BinaryReader)
  fullName: System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 797
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  syntax:
    content: protected virtual Claim CreateClaim(BinaryReader reader)
    content.vb: Protected Overridable Function CreateClaim(reader As BinaryReader) As Claim
    parameters:
    - id: reader
      type: System.IO.BinaryReader
    return:
      type: System.Security.Claims.Claim
- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})
  id: FindAll(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: FindAll(Predicate<Claim>)
  name.vb: FindAll(Predicate(Of Claim))
  fullName: System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate<System.Security.Claims.Claim>)
  fullName.vb: System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate(Of System.Security.Claims.Claim))
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 540
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Retrieves all of the claims that are matched by the specified predicate.
  syntax:
    content: public virtual IEnumerable<Claim> FindAll(Predicate<Claim> match)
    content.vb: Public Overridable Function FindAll(match As Predicate(Of Claim)) As IEnumerable(Of Claim)
    parameters:
    - id: match
      type: System.Predicate{System.Security.Claims.Claim}
      description: The function that performs the matching logic.
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: The matching claims. The list is read-only.
  exceptions:
  - type: System.ArgumentNullException
    description: '*match* is null.'
- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.String)
  id: FindAll(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: FindAll(String)
  fullName: System.Security.Claims.ClaimsIdentity.FindAll(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 565
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Retrieves all of the claims that have the specified claim type.
  syntax:
    content: public virtual IEnumerable<Claim> FindAll(string type)
    content.vb: Public Overridable Function FindAll(type As String) As IEnumerable(Of Claim)
    parameters:
    - id: type
      type: System.String
      description: The claim type against which to match claims.
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: The matching claims. The list is read-only.
  exceptions:
  - type: System.ArgumentNullException
    description: '*type* is null.'
- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})
  id: FindFirst(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: FindFirst(Predicate<Claim>)
  name.vb: FindFirst(Predicate(Of Claim))
  fullName: System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate<System.Security.Claims.Claim>)
  fullName.vb: System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate(Of System.Security.Claims.Claim))
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 592
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Retrieves the first claim that is matched by the specified predicate.
  syntax:
    content: public virtual Claim FindFirst(Predicate<Claim> match)
    content.vb: Public Overridable Function FindFirst(match As Predicate(Of Claim)) As Claim
    parameters:
    - id: match
      type: System.Predicate{System.Security.Claims.Claim}
      description: The function that performs the matching logic.
    return:
      type: System.Security.Claims.Claim
      description: The first matching claim or null if no match is found.
  exceptions:
  - type: System.ArgumentNullException
    description: '*match* is null.'
- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.String)
  id: FindFirst(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: FindFirst(String)
  fullName: System.Security.Claims.ClaimsIdentity.FindFirst(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 619
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Retrieves the first claim with the specified claim type.
  syntax:
    content: public virtual Claim FindFirst(string type)
    content.vb: Public Overridable Function FindFirst(type As String) As Claim
    parameters:
    - id: type
      type: System.String
      description: The claim type to match.
    return:
      type: System.Security.Claims.Claim
      description: The first matching claim or null if no match is found.
  exceptions:
  - type: System.ArgumentNullException
    description: '*type* is null.'
- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})
  id: HasClaim(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: HasClaim(Predicate<Claim>)
  name.vb: HasClaim(Predicate(Of Claim))
  fullName: System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate<System.Security.Claims.Claim>)
  fullName.vb: System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate(Of System.Security.Claims.Claim))
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 648
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Determines whether this claims identity has a claim that is matched by the specified predicate.
  syntax:
    content: public virtual bool HasClaim(Predicate<Claim> match)
    content.vb: Public Overridable Function HasClaim(match As Predicate(Of Claim)) As Boolean
    parameters:
    - id: match
      type: System.Predicate{System.Security.Claims.Claim}
      description: The function that performs the matching logic.
    return:
      type: System.Boolean
      description: true if a matching claim exists; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*match* is null.'
- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)
  id: HasClaim(System.String,System.String)
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: HasClaim(String, String)
  fullName: System.Security.Claims.ClaimsIdentity.HasClaim(System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 677
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Determines whether this claims identity has a claim with the specified claim type and value.
  syntax:
    content: public virtual bool HasClaim(string type, string value)
    content.vb: Public Overridable Function HasClaim(type As String, value As String) As Boolean
    parameters:
    - id: type
      type: System.String
      description: The type of the claim to match.
    - id: value
      type: System.String
      description: The value of the claim to match.
    return:
      type: System.Boolean
      description: true if a match is found; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    description: '*type* is null.-or-*value* is null.'
- uid: System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)
  id: RemoveClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: RemoveClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 481
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Attempts to remove a claim from the claims identity.
  syntax:
    content: public virtual void RemoveClaim(Claim claim)
    content.vb: Public Overridable Sub RemoveClaim(claim As Claim)
    parameters:
    - id: claim
      type: System.Security.Claims.Claim
      description: The claim to remove.
  exceptions:
  - type: System.InvalidOperationException
    description: The claim cannot be removed.
- uid: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)
  id: TryRemoveClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: TryRemoveClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 452
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  summary: Attempts to remove a claim from the claims identity.
  syntax:
    content: public virtual bool TryRemoveClaim(Claim claim)
    content.vb: Public Overridable Function TryRemoveClaim(claim As Claim) As Boolean
    parameters:
    - id: claim
      type: System.Security.Claims.Claim
      description: The claim to remove.
    return:
      type: System.Boolean
      description: true if the claim was successfully removed; otherwise, false.
- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)
  id: WriteTo(System.IO.BinaryWriter)
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: WriteTo(BinaryWriter)
  fullName: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 812
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  syntax:
    content: public virtual void WriteTo(BinaryWriter writer)
    content.vb: Public Overridable Sub WriteTo(writer As BinaryWriter)
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])
  id: WriteTo(System.IO.BinaryWriter,System.Byte[])
  parent: System.Security.Claims.ClaimsIdentity
  href: System.Security.Claims.ClaimsIdentity.yml
  name: WriteTo(BinaryWriter, Byte[])
  name.vb: WriteTo(BinaryWriter, Byte())
  fullName: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter, System.Byte[])
  fullName.vb: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter, System.Byte())
  type: Method
  source:
    remote: *o0
    path: src/System.Security.Claims/src/System/Security/Claims/ClaimsIdentity.cs
    startLine: 823
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Claims
  syntax:
    content: protected virtual void WriteTo(BinaryWriter writer, byte[] userData)
    content.vb: Protected Overridable Sub WriteTo(writer As BinaryWriter, userData As Byte())
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
    - id: userData
      type: System.Byte[]
references:
- uid: System.Security.Claims
  isExternal: false
  name: System.Security.Claims
  fullName: System.Security.Claims
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Security.Claims.Claim.yml
  name: IEnumerable<Claim>
  name.vb: IEnumerable(Of Claim)
  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
    href: System.Security.Claims.Claim.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
    href: System.Security.Claims.Claim.yml
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.IEnumerable`1.yml
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  type: Interface
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
  type: Namespace
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
  type: Class
- uid: System.IO.BinaryReader
  parent: System.IO
  isExternal: false
  href: System.IO.BinaryReader.yml
  name: BinaryReader
  fullName: System.IO.BinaryReader
  type: Class
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
  type: Namespace
- uid: System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: false
  href: System.Security.Claims.ClaimsIdentity.yml
  name: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
  type: Class
- uid: System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: false
  href: System.Security.Principal.IIdentity.yml
  name: IIdentity
  fullName: System.Security.Principal.IIdentity
  type: Interface
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
  type: Namespace
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.Security.Claims.Claim
  parent: System.Security.Claims
  isExternal: false
  href: System.Security.Claims.Claim.yml
  name: Claim
  fullName: System.Security.Claims.Claim
  type: Class
- uid: System.Predicate{System.Security.Claims.Claim}
  parent: System
  definition: System.Predicate`1
  href: System.Security.Claims.Claim.yml
  name: Predicate<Claim>
  name.vb: Predicate(Of Claim)
  fullName: System.Predicate<System.Security.Claims.Claim>
  fullName.vb: System.Predicate(Of System.Security.Claims.Claim)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
    href: System.Security.Claims.Claim.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
    href: System.Security.Claims.Claim.yml
  - name: )
    fullName: )
- uid: System.Predicate`1
  parent: System
  isExternal: false
  href: System.Predicate`1.yml
  name: Predicate<T>
  name.vb: Predicate(Of T)
  fullName: System.Predicate<T>
  fullName.vb: System.Predicate(Of T)
  type: Delegate
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    href: System.Predicate`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    href: System.Predicate`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.IO.BinaryWriter
  parent: System.IO
  isExternal: false
  href: System.IO.BinaryWriter.yml
  name: BinaryWriter
  fullName: System.IO.BinaryWriter
  type: Class
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  href: System.InvalidOperationException.yml
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  type: Class
  summary: The exception that is thrown when a method call is invalid for the object's current state.
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  type: Class
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
