items:
- uid: System.ComponentModel.BrowsableAttribute
  commentId: T:System.ComponentModel.BrowsableAttribute
  id: BrowsableAttribute
  parent: System.ComponentModel
  children:
  - System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
  - System.ComponentModel.BrowsableAttribute.Browsable
  - System.ComponentModel.BrowsableAttribute.Default
  - System.ComponentModel.BrowsableAttribute.Equals(System.Object)
  - System.ComponentModel.BrowsableAttribute.GetHashCode
  - System.ComponentModel.BrowsableAttribute.No
  - System.ComponentModel.BrowsableAttribute.Yes
  langs:
  - csharp
  - vb
  name: BrowsableAttribute
  fullName: System.ComponentModel.BrowsableAttribute
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/BrowsableAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BrowsableAttribute
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/BrowsableAttribute.cs
    startLine: 10
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Specifies whether a property or event should be displayed in a Properties window.</p>\n"
  remarks: "\n<p>A visual designer typically displays in the Properties window those members that either have no browsable attribute or are marked with the <xref href=\"System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> constructor's <em>browsable</em> parameter set to <strong>true</strong>. These members can be modified at design time. Members marked with the <xref href=\"System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> constructor's <em>browsable</em> parameter set to <strong>false</strong> are not appropriate for design-time editing and therefore are not displayed in a visual designer. The default is <strong>true</strong>.</p>\n<p>When you mark a property with <code>Browsable(true)</code>, the value of this attribute is set to the constant member <xref href=\"System.ComponentModel.BrowsableAttribute.Yes\" data-throw-if-not-resolved=\"false\"></xref>. For a property marked with <code>Browsable(false)</code>, the value is <xref href=\"System.ComponentModel.BrowsableAttribute.No\" data-throw-if-not-resolved=\"false\"></xref>. Therefore, when you check the value of this attribute in your code, you must specify the attribute as <xref href=\"System.ComponentModel.BrowsableAttribute.Yes\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.ComponentModel.BrowsableAttribute.No\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>For more information, see Extending Metadata Using Attributes.</p>\n"
  example:
  - "\n<p>The following example marks a property as browsable.</p>Classic BrowsableAttribute Example#1<p>The next example shows how to check the value of the <xref href=\"System.ComponentModel.BrowsableAttribute\" data-throw-if-not-resolved=\"false\"></xref> for <code>MyProperty</code>. First, the code gets a <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> with all the properties for the object. Next, the code indexes into the <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> to get <code>MyProperty</code>. Then it returns the attributes for this property and saves them in the attributes variable.</p><p>The example presents two different ways of checking the value of the <xref href=\"System.ComponentModel.BrowsableAttribute\" data-throw-if-not-resolved=\"false\"></xref>. In the second code fragment, the example calls the <xref href=\"System.Object.Equals(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method. In the last code fragment, the example uses the <xref href=\"System.ComponentModel.BrowsableAttribute.Browsable\" data-throw-if-not-resolved=\"false\"></xref> property to check the value.</p>Classic BrowsableAttribute Example#2<p>If you marked a class with the <xref href=\"System.ComponentModel.BrowsableAttribute\" data-throw-if-not-resolved=\"false\"></xref>, use the following code to check the value.</p>Classic BrowsableAttribute Example#3"
  syntax:
    content: 'public sealed class BrowsableAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class BrowsableAttribute
          Inherits Attribute
  seealso:
  - type: System.Attribute
    commentId: T:System.Attribute
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.EventDescriptor
    commentId: T:System.ComponentModel.EventDescriptor
  - type: System.ComponentModel.AttributeCollection
    commentId: T:System.ComponentModel.AttributeCollection
  - type: System.ComponentModel.PropertyDescriptorCollection
    commentId: T:System.ComponentModel.PropertyDescriptorCollection
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.ComponentModel.BrowsableAttribute.Default
  commentId: F:System.ComponentModel.BrowsableAttribute.Default
  id: Default
  parent: System.ComponentModel.BrowsableAttribute
  langs:
  - csharp
  - vb
  name: Default
  fullName: System.ComponentModel.BrowsableAttribute.Default
  type: Field
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/BrowsableAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Default
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/BrowsableAttribute.cs
    startLine: 34
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Specifies the default value for the <xref href=\"System.ComponentModel.BrowsableAttribute\" data-throw-if-not-resolved=\"false\"></xref>, which is <xref href=\"System.ComponentModel.BrowsableAttribute.Yes\" data-throw-if-not-resolved=\"false\"></xref>. This <strong>static</strong> field is read-only.</p>\n"
  remarks: "\n<p>When you mark a property with this value, this attribute is set to the constant member <xref href=\"System.ComponentModel.BrowsableAttribute.Yes\" data-throw-if-not-resolved=\"false\"></xref>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref href=\"System.ComponentModel.BrowsableAttribute.Yes\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static readonly BrowsableAttribute Default
    content.vb: Public Shared ReadOnly Default As BrowsableAttribute
    return:
      type: System.ComponentModel.BrowsableAttribute
  seealso:
  - type: System.ComponentModel.BrowsableAttribute
    commentId: T:System.ComponentModel.BrowsableAttribute
  - type: System.ComponentModel.BrowsableAttribute.Yes
    commentId: F:System.ComponentModel.BrowsableAttribute.Yes
  - type: System.ComponentModel.BrowsableAttribute.No
    commentId: F:System.ComponentModel.BrowsableAttribute.No
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ComponentModel.BrowsableAttribute.No
  commentId: F:System.ComponentModel.BrowsableAttribute.No
  id: No
  parent: System.ComponentModel.BrowsableAttribute
  langs:
  - csharp
  - vb
  name: No
  fullName: System.ComponentModel.BrowsableAttribute.No
  type: Field
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/BrowsableAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: No
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/BrowsableAttribute.cs
    startLine: 28
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Specifies that a property or event cannot be modified at design time. This <strong>static</strong> field is read-only.</p>\n"
  remarks: "\n<p>When you mark a property with the <xref href=\"System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> constructor of the value <strong>false</strong>, this attribute is set to the constant member <xref href=\"System.ComponentModel.BrowsableAttribute.No\" data-throw-if-not-resolved=\"false\"></xref>. Therefore, when you check whether the attribute is set to this value in your code, you must specify the attribute as <xref href=\"System.ComponentModel.BrowsableAttribute.No\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static readonly BrowsableAttribute No
    content.vb: Public Shared ReadOnly No As BrowsableAttribute
    return:
      type: System.ComponentModel.BrowsableAttribute
  seealso:
  - type: System.ComponentModel.BrowsableAttribute
    commentId: T:System.ComponentModel.BrowsableAttribute
  - type: System.ComponentModel.BrowsableAttribute.Yes
    commentId: F:System.ComponentModel.BrowsableAttribute.Yes
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ComponentModel.BrowsableAttribute.Yes
  commentId: F:System.ComponentModel.BrowsableAttribute.Yes
  id: Yes
  parent: System.ComponentModel.BrowsableAttribute
  langs:
  - csharp
  - vb
  name: Yes
  fullName: System.ComponentModel.BrowsableAttribute.Yes
  type: Field
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/BrowsableAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Yes
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/BrowsableAttribute.cs
    startLine: 20
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Specifies that a property or event can be modified at design time. This <strong>static</strong> field is read-only.</p>\n"
  remarks: "\n<p>This field is the default setting for this attribute.</p>\n<p>When you mark a property with the <xref href=\"System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> constructor of the value <strong>true</strong>, this attribute is set to the constant member <xref href=\"System.ComponentModel.BrowsableAttribute.Yes\" data-throw-if-not-resolved=\"false\"></xref>. Therefore, when you check whether the attribute is set to this value in your code, you must specify the attribute as <xref href=\"System.ComponentModel.BrowsableAttribute.Yes\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static readonly BrowsableAttribute Yes
    content.vb: Public Shared ReadOnly Yes As BrowsableAttribute
    return:
      type: System.ComponentModel.BrowsableAttribute
  seealso:
  - type: System.ComponentModel.BrowsableAttribute
    commentId: T:System.ComponentModel.BrowsableAttribute
  - type: System.ComponentModel.BrowsableAttribute.No
    commentId: F:System.ComponentModel.BrowsableAttribute.No
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
  commentId: M:System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ComponentModel.BrowsableAttribute
  langs:
  - csharp
  - vb
  name: BrowsableAttribute(Boolean)
  fullName: System.ComponentModel.BrowsableAttribute.BrowsableAttribute(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/BrowsableAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/BrowsableAttribute.cs
    startLine: 41
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.BrowsableAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>When you mark a property with the <xref href=\"System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> constructor of the value <strong>true</strong>, the value of this attribute is set to the constant member <xref href=\"System.ComponentModel.BrowsableAttribute.Yes\" data-throw-if-not-resolved=\"false\"></xref>. For a property marked with the <xref href=\"System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> constructor of the value <strong>false</strong>, the value is <xref href=\"System.ComponentModel.BrowsableAttribute.No\" data-throw-if-not-resolved=\"false\"></xref>. Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref href=\"System.ComponentModel.BrowsableAttribute.Yes\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.ComponentModel.BrowsableAttribute.No\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example marks a property as browsable. This code creates a new <xref href=\"System.ComponentModel.BrowsableAttribute\" data-throw-if-not-resolved=\"false\"></xref>, sets its value to <xref href=\"System.ComponentModel.BrowsableAttribute.Yes\" data-throw-if-not-resolved=\"false\"></xref>, and binds it to the property.</p>Classic BrowsableAttribute.BrowsableAttribute Example#1"
  syntax:
    content: public BrowsableAttribute(bool browsable)
    content.vb: Public Sub New(browsable As Boolean)
    parameters:
    - id: browsable
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if a property or event can be modified at design time; otherwise, <strong>false</strong>. The default is <strong>true</strong>. </p>\n"
  seealso:
  - type: System.ComponentModel.BrowsableAttribute
    commentId: T:System.ComponentModel.BrowsableAttribute
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.BrowsableAttribute.Browsable
  commentId: P:System.ComponentModel.BrowsableAttribute.Browsable
  id: Browsable
  parent: System.ComponentModel.BrowsableAttribute
  langs:
  - csharp
  - vb
  name: Browsable
  fullName: System.ComponentModel.BrowsableAttribute.Browsable
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/BrowsableAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Browsable
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/BrowsableAttribute.cs
    startLine: 51
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Gets a value indicating whether an object is browsable.</p>\n"
  example:
  - "\n<p>The following example checks to see whether <code>MyProperty</code> is browsable. First the code gets the attributes for <code>MyProperty</code> by: </p>\n<ul><li>\n<p>Retrieving a <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> with all the properties for the object.</p>\n</li><li>\n<p>Indexing into the <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> to get <code>MyProperty</code>.</p>\n</li><li>\n<p>Saving the attributes for this property in the attributes variable.</p>\n</li></ul>\n<p>Then the code sets <code>myAttribute</code> to the value of the <xref href=\"System.ComponentModel.BrowsableAttribute\" data-throw-if-not-resolved=\"false\"></xref> in the <xref href=\"System.ComponentModel.AttributeCollection\" data-throw-if-not-resolved=\"false\"></xref> and checks whether the property is browsable.</p>Classic BrowsableAttribute.Browsable Example#1"
  syntax:
    content: public bool Browsable { get; }
    content.vb: Public ReadOnly Property Browsable As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the object is browsable; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.ComponentModel.BrowsableAttribute
    commentId: T:System.ComponentModel.BrowsableAttribute
  - type: System.Attribute
    commentId: T:System.Attribute
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.EventDescriptor
    commentId: T:System.ComponentModel.EventDescriptor
  - type: System.ComponentModel.AttributeCollection
    commentId: T:System.ComponentModel.AttributeCollection
  - type: System.ComponentModel.PropertyDescriptorCollection
    commentId: T:System.ComponentModel.PropertyDescriptorCollection
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.BrowsableAttribute.Equals(System.Object)
  commentId: M:System.ComponentModel.BrowsableAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.BrowsableAttribute
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.ComponentModel.BrowsableAttribute.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/BrowsableAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/BrowsableAttribute.cs
    startLine: 55
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Indicates whether this instance and a specified object are equal.</p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>Another object to compare to. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>obj</em> is equal to this instance; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.BrowsableAttribute.GetHashCode
  commentId: M:System.ComponentModel.BrowsableAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.BrowsableAttribute
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.ComponentModel.BrowsableAttribute.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/BrowsableAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/BrowsableAttribute.cs
    startLine: 69
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Returns the hash code for this instance.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>A 32-bit signed integer hash code.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.ComponentModel.BrowsableAttribute
  parent: System.ComponentModel
  isExternal: false
  name: BrowsableAttribute
  fullName: System.ComponentModel.BrowsableAttribute
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
