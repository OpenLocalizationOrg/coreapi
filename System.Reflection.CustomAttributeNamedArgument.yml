items:
- uid: System.Reflection.CustomAttributeNamedArgument
  id: CustomAttributeNamedArgument
  parent: System.Reflection
  children:
  - System.Reflection.CustomAttributeNamedArgument.Equals(System.Object)
  - System.Reflection.CustomAttributeNamedArgument.GetHashCode
  - System.Reflection.CustomAttributeNamedArgument.IsField
  - System.Reflection.CustomAttributeNamedArgument.MemberName
  - System.Reflection.CustomAttributeNamedArgument.op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)
  - System.Reflection.CustomAttributeNamedArgument.op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)
  - System.Reflection.CustomAttributeNamedArgument.ToString
  - System.Reflection.CustomAttributeNamedArgument.TypedValue
  langs:
  - csharp
  - vb
  name: CustomAttributeNamedArgument
  fullName: System.Reflection.CustomAttributeNamedArgument
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CustomAttributeNamedArgument
    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
    startLine: 584
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Represents a named argument of a custom attribute in the reflection-only context.
  syntax:
    content: public struct CustomAttributeNamedArgument
    content.vb: Public Structure CustomAttributeNamedArgument
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  commentId: T:System.Reflection.CustomAttributeNamedArgument
- uid: System.Reflection.CustomAttributeNamedArgument.IsField
  id: IsField
  parent: System.Reflection.CustomAttributeNamedArgument
  langs:
  - csharp
  - vb
  name: IsField
  fullName: System.Reflection.CustomAttributeNamedArgument.IsField
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsField
    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
    startLine: 669
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a value that indicates whether the named argument is a field.
  syntax:
    content: >-
      public bool IsField

      {
          get;
      }
    content.vb: Public ReadOnly Property IsField As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the named argument is a field; otherwise, false.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  commentId: P:System.Reflection.CustomAttributeNamedArgument.IsField
- uid: System.Reflection.CustomAttributeNamedArgument.MemberName
  id: MemberName
  parent: System.Reflection.CustomAttributeNamedArgument
  langs:
  - csharp
  - vb
  name: MemberName
  fullName: System.Reflection.CustomAttributeNamedArgument.MemberName
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MemberName
    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
    startLine: 668
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets the name of the attribute member that would be used to set the named argument.
  syntax:
    content: >-
      public string MemberName

      {
          get;
      }
    content.vb: Public ReadOnly Property MemberName As String
    parameters: []
    return:
      type: System.String
      description: The name of the attribute member that would be used to set the named argument.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  commentId: P:System.Reflection.CustomAttributeNamedArgument.MemberName
- uid: System.Reflection.CustomAttributeNamedArgument.TypedValue
  id: TypedValue
  parent: System.Reflection.CustomAttributeNamedArgument
  langs:
  - csharp
  - vb
  name: TypedValue
  fullName: System.Reflection.CustomAttributeNamedArgument.TypedValue
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TypedValue
    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
    startLine: 667
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Gets a <xref href="System.Reflection.CustomAttributeTypedArgument" data-throw-if-not-resolved="false"></xref> structure that can be used to obtain the type and value of the current named argument.
  syntax:
    content: >-
      public CustomAttributeTypedArgument TypedValue

      {
          get;
      }
    content.vb: Public ReadOnly Property TypedValue As CustomAttributeTypedArgument
    parameters: []
    return:
      type: System.Reflection.CustomAttributeTypedArgument
      description: A structure that can be used to obtain the type and value of the current named argument.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  commentId: P:System.Reflection.CustomAttributeNamedArgument.TypedValue
- uid: System.Reflection.CustomAttributeNamedArgument.op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)
  id: op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)
  parent: System.Reflection.CustomAttributeNamedArgument
  langs:
  - csharp
  - vb
  name: Equality(CustomAttributeNamedArgument, CustomAttributeNamedArgument)
  fullName: System.Reflection.CustomAttributeNamedArgument.Equality(System.Reflection.CustomAttributeNamedArgument, System.Reflection.CustomAttributeNamedArgument)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Equality
    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
    startLine: 589
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Tests whether two <xref href="System.Reflection.CustomAttributeNamedArgument" data-throw-if-not-resolved="false"></xref> structures are equivalent.
  syntax:
    content: public static bool operator ==(CustomAttributeNamedArgument left, CustomAttributeNamedArgument right)
    content.vb: Public Shared Operator =(left As CustomAttributeNamedArgument, right As CustomAttributeNamedArgument) As Boolean
    parameters:
    - id: left
      type: System.Reflection.CustomAttributeNamedArgument
      description: The structure to the left of the equality operator.
    - id: right
      type: System.Reflection.CustomAttributeNamedArgument
      description: The structure to the right of the equality operator.
    return:
      type: System.Boolean
      description: true if the two <xref href="System.Reflection.CustomAttributeNamedArgument" data-throw-if-not-resolved="false"></xref> structures are equal; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  commentId: M:System.Reflection.CustomAttributeNamedArgument.op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)
- uid: System.Reflection.CustomAttributeNamedArgument.op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)
  id: op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)
  parent: System.Reflection.CustomAttributeNamedArgument
  langs:
  - csharp
  - vb
  name: Inequality(CustomAttributeNamedArgument, CustomAttributeNamedArgument)
  fullName: System.Reflection.CustomAttributeNamedArgument.Inequality(System.Reflection.CustomAttributeNamedArgument, System.Reflection.CustomAttributeNamedArgument)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Inequality
    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
    startLine: 593
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Tests whether two <xref href="System.Reflection.CustomAttributeNamedArgument" data-throw-if-not-resolved="false"></xref> structures are different.
  syntax:
    content: public static bool operator !=(CustomAttributeNamedArgument left, CustomAttributeNamedArgument right)
    content.vb: Public Shared Operator <>(left As CustomAttributeNamedArgument, right As CustomAttributeNamedArgument) As Boolean
    parameters:
    - id: left
      type: System.Reflection.CustomAttributeNamedArgument
      description: The structure to the left of the inequality operator.
    - id: right
      type: System.Reflection.CustomAttributeNamedArgument
      description: The structure to the right of the inequality operator.
    return:
      type: System.Boolean
      description: true if the two <xref href="System.Reflection.CustomAttributeNamedArgument" data-throw-if-not-resolved="false"></xref> structures are different; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  commentId: M:System.Reflection.CustomAttributeNamedArgument.op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)
- uid: System.Reflection.CustomAttributeNamedArgument.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.CustomAttributeNamedArgument
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Reflection.CustomAttributeNamedArgument.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
    startLine: 647
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Returns a value that indicates whether this instance is equal to a specified object.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with this instance, or null.
    return:
      type: System.Boolean
      description: true if <em>obj</em> equals the type and value of this instance; otherwise, false.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  commentId: M:System.Reflection.CustomAttributeNamedArgument.Equals(System.Object)
- uid: System.Reflection.CustomAttributeNamedArgument.GetHashCode
  id: GetHashCode
  parent: System.Reflection.CustomAttributeNamedArgument
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Reflection.CustomAttributeNamedArgument.GetHashCode()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetHashCode
    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
    startLine: 643
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Returns the hash code for this instance.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  commentId: M:System.Reflection.CustomAttributeNamedArgument.GetHashCode
- uid: System.Reflection.CustomAttributeNamedArgument.ToString
  id: ToString
  parent: System.Reflection.CustomAttributeNamedArgument
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Reflection.CustomAttributeNamedArgument.ToString()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs
    startLine: 636
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: Returns a string that consists of the argument name, the equal sign, and a string representation of the argument value.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string that consists of the argument name, the equal sign, and a string representation of the argument value.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  commentId: M:System.Reflection.CustomAttributeNamedArgument.ToString
references:
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Reflection.CustomAttributeTypedArgument
  parent: System.Reflection
  isExternal: false
  name: CustomAttributeTypedArgument
  fullName: System.Reflection.CustomAttributeTypedArgument
- uid: System.Reflection.CustomAttributeNamedArgument
  parent: System.Reflection
  isExternal: false
  name: CustomAttributeNamedArgument
  fullName: System.Reflection.CustomAttributeNamedArgument
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
