items:
- uid: System.ComponentModel.DisplayNameAttribute
  commentId: T:System.ComponentModel.DisplayNameAttribute
  id: DisplayNameAttribute
  parent: System.ComponentModel
  children:
  - System.ComponentModel.DisplayNameAttribute.#ctor
  - System.ComponentModel.DisplayNameAttribute.#ctor(System.String)
  - System.ComponentModel.DisplayNameAttribute.Default
  - System.ComponentModel.DisplayNameAttribute.DisplayName
  - System.ComponentModel.DisplayNameAttribute.DisplayNameValue
  - System.ComponentModel.DisplayNameAttribute.Equals(System.Object)
  - System.ComponentModel.DisplayNameAttribute.GetHashCode
  langs:
  - csharp
  - vb
  name: DisplayNameAttribute
  fullName: System.ComponentModel.DisplayNameAttribute
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DisplayNameAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DisplayNameAttribute
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DisplayNameAttribute.cs
    startLine: 9
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Specifies the display name for a property, event, or public void method which takes no arguments. </p>\n"
  remarks: "\n<p>The default is the name of the property or event. The default implementation of <xref href=\"System.ComponentModel.Design.DesignerActionList.GetSortedActionItems\" data-throw-if-not-resolved=\"false\"></xref> uses reflection to search the public properties and public void methods that take no arguments. <xref href=\"System.ComponentModel.Design.DesignerActionList.GetSortedActionItems\" data-throw-if-not-resolved=\"false\"></xref> searches for the <xref href=\"System.ComponentModel.DisplayNameAttribute\" data-throw-if-not-resolved=\"false\"></xref> on each property and method and, if found, uses that string instead of the property or method name.</p>\n"
  example:
  - "\n<p>The following code example demonstrates using the <xref href=\"System.ComponentModel.DisplayNameAttribute\" data-throw-if-not-resolved=\"false\"></xref> class to change the name of a property called <code>MisnamedProperty</code> to <code>RenamedProperty</code> in a <xref href=\"System.Windows.Forms.PropertyGrid\" data-throw-if-not-resolved=\"false\"></xref> control. For a full code listing, see How to: Apply Attributes in Windows Forms Controls.</p>System.ComponentModel.AttributesDemoControl#30"
  syntax:
    content: 'public class DisplayNameAttribute : Attribute'
    content.vb: >-
      Public Class DisplayNameAttribute
          Inherits Attribute
  seealso:
  - type: System.ComponentModel.Design.DesignerActionList.GetSortedActionItems
    commentId: M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ComponentModel.DisplayNameAttribute.Default
  commentId: F:System.ComponentModel.DisplayNameAttribute.Default
  id: Default
  parent: System.ComponentModel.DisplayNameAttribute
  langs:
  - csharp
  - vb
  name: Default
  fullName: System.ComponentModel.DisplayNameAttribute.Default
  type: Field
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DisplayNameAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Default
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DisplayNameAttribute.cs
    startLine: 17
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Specifies the default value for the <xref href=\"System.ComponentModel.DisplayNameAttribute\" data-throw-if-not-resolved=\"false\"></xref>. This field is read-only.</p>\n"
  syntax:
    content: public static readonly DisplayNameAttribute Default
    content.vb: Public Shared ReadOnly Default As DisplayNameAttribute
    return:
      type: System.ComponentModel.DisplayNameAttribute
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ComponentModel.DisplayNameAttribute.#ctor
  commentId: M:System.ComponentModel.DisplayNameAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.DisplayNameAttribute
  langs:
  - csharp
  - vb
  name: DisplayNameAttribute()
  fullName: System.ComponentModel.DisplayNameAttribute.DisplayNameAttribute()
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DisplayNameAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DisplayNameAttribute.cs
    startLine: 22
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.DisplayNameAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public DisplayNameAttribute()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DisplayNameAttribute.#ctor(System.String)
  commentId: M:System.ComponentModel.DisplayNameAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.DisplayNameAttribute
  langs:
  - csharp
  - vb
  name: DisplayNameAttribute(String)
  fullName: System.ComponentModel.DisplayNameAttribute.DisplayNameAttribute(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DisplayNameAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DisplayNameAttribute.cs
    startLine: 29
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.DisplayNameAttribute\" data-throw-if-not-resolved=\"false\"></xref> class using the display name.</p>\n"
  syntax:
    content: public DisplayNameAttribute(string displayName)
    content.vb: Public Sub New(displayName As String)
    parameters:
    - id: displayName
      type: System.String
      description: "\n<p>The display name.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DisplayNameAttribute.DisplayName
  commentId: P:System.ComponentModel.DisplayNameAttribute.DisplayName
  id: DisplayName
  parent: System.ComponentModel.DisplayNameAttribute
  langs:
  - csharp
  - vb
  name: DisplayName
  fullName: System.ComponentModel.DisplayNameAttribute.DisplayName
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DisplayNameAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DisplayName
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DisplayNameAttribute.cs
    startLine: 37
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Gets the display name for a property, event, or public void method that takes no arguments stored in this attribute.</p>\n"
  syntax:
    content: public virtual string DisplayName { get; }
    content.vb: Public Overridable ReadOnly Property DisplayName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The display name.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.ComponentModel.DisplayNameAttribute.DisplayNameValue
  commentId: P:System.ComponentModel.DisplayNameAttribute.DisplayNameValue
  id: DisplayNameValue
  parent: System.ComponentModel.DisplayNameAttribute
  langs:
  - csharp
  - vb
  name: DisplayNameValue
  fullName: System.ComponentModel.DisplayNameAttribute.DisplayNameValue
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DisplayNameAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DisplayNameValue
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DisplayNameAttribute.cs
    startLine: 44
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Gets or sets the display name.</p>\n"
  syntax:
    content: protected string DisplayNameValue { get; set; }
    content.vb: Protected Property DisplayNameValue As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The display name.</p>\n"
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: System.ComponentModel.DisplayNameAttribute.Equals(System.Object)
  commentId: M:System.ComponentModel.DisplayNameAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.DisplayNameAttribute
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.ComponentModel.DisplayNameAttribute.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DisplayNameAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DisplayNameAttribute.cs
    startLine: 46
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Determines whether two <xref href=\"System.ComponentModel.DisplayNameAttribute\" data-throw-if-not-resolved=\"false\"></xref> instances are equal.</p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>The <xref href=\"System.ComponentModel.DisplayNameAttribute\" data-throw-if-not-resolved=\"false\"></xref> to test the value equality of.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the value of the given object is equal to that of the current object; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.DisplayNameAttribute.GetHashCode
  commentId: M:System.ComponentModel.DisplayNameAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.DisplayNameAttribute
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.ComponentModel.DisplayNameAttribute.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DisplayNameAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/DisplayNameAttribute.cs
    startLine: 58
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Returns the hash code for this instance.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>A hash code for the current <xref href=\"System.ComponentModel.DisplayNameAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.ComponentModel.DisplayNameAttribute
  parent: System.ComponentModel
  isExternal: false
  name: DisplayNameAttribute
  fullName: System.ComponentModel.DisplayNameAttribute
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
