items:
- uid: System.ComponentModel.AsyncOperation
  id: AsyncOperation
  parent: System.ComponentModel
  children:
  - System.ComponentModel.AsyncOperation.Finalize
  - System.ComponentModel.AsyncOperation.OperationCompleted
  - System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)
  - System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)
  - System.ComponentModel.AsyncOperation.SynchronizationContext
  - System.ComponentModel.AsyncOperation.UserSuppliedState
  href: System.ComponentModel.AsyncOperation.yml
  name: AsyncOperation
  fullName: System.ComponentModel.AsyncOperation
  type: Class
  source:
    remote: &o0
      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs
    startLine: 7
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Tracks the lifetime of an asynchronous operation.
  syntax:
    content: public sealed class AsyncOperation
    content.vb: Public NotInheritable Class AsyncOperation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.ComponentModel.AsyncOperation.SynchronizationContext
  id: SynchronizationContext
  parent: System.ComponentModel.AsyncOperation
  href: System.ComponentModel.AsyncOperation.yml
  name: SynchronizationContext
  fullName: System.ComponentModel.AsyncOperation.SynchronizationContext
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs
    startLine: 45
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Gets the @'System.Threading.SynchronizationContext' object that was passed to the constructor.
  syntax:
    content: public SynchronizationContext SynchronizationContext { get; }
    content.vb: Public ReadOnly Property SynchronizationContext As SynchronizationContext
    parameters: []
    return:
      type: System.Threading.SynchronizationContext
      description: The @'System.Threading.SynchronizationContext' object that was passed to the constructor.
- uid: System.ComponentModel.AsyncOperation.UserSuppliedState
  id: UserSuppliedState
  parent: System.ComponentModel.AsyncOperation
  href: System.ComponentModel.AsyncOperation.yml
  name: UserSuppliedState
  fullName: System.ComponentModel.AsyncOperation.UserSuppliedState
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs
    startLine: 36
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Gets or sets an object used to uniquely identify an asynchronous operation.
  syntax:
    content: public object UserSuppliedState { get; }
    content.vb: Public ReadOnly Property UserSuppliedState As Object
    parameters: []
    return:
      type: System.Object
      description: The state object passed to the asynchronous method invocation.
- uid: System.ComponentModel.AsyncOperation.Finalize
  id: Finalize
  parent: System.ComponentModel.AsyncOperation
  href: System.ComponentModel.AsyncOperation.yml
  name: Finalize()
  fullName: System.ComponentModel.AsyncOperation.Finalize()
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs
    startLine: 28
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Finalizes the asynchronous operation.
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
- uid: System.ComponentModel.AsyncOperation.OperationCompleted
  id: OperationCompleted
  parent: System.ComponentModel.AsyncOperation
  href: System.ComponentModel.AsyncOperation.yml
  name: OperationCompleted()
  fullName: System.ComponentModel.AsyncOperation.OperationCompleted()
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs
    startLine: 64
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Ends the lifetime of an asynchronous operation.
  syntax:
    content: public void OperationCompleted()
    content.vb: Public Sub OperationCompleted
  exceptions:
  - type: System.InvalidOperationException
    description: '@''System.ComponentModel.AsyncOperation.OperationCompleted'' has been called previously for this task.'
- uid: System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)
  id: Post(System.Threading.SendOrPostCallback,System.Object)
  parent: System.ComponentModel.AsyncOperation
  href: System.ComponentModel.AsyncOperation.yml
  name: Post(SendOrPostCallback, Object)
  fullName: System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs
    startLine: 53
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Invokes a delegate on the thread or context appropriate for the application model.
  syntax:
    content: public void Post(SendOrPostCallback d, object arg)
    content.vb: Public Sub Post(d As SendOrPostCallback, arg As Object)
    parameters:
    - id: d
      type: System.Threading.SendOrPostCallback
      description: A @'System.Threading.SendOrPostCallback' object that wraps the delegate to be called when the operation ends.
    - id: arg
      type: System.Object
      description: An argument for the delegate contained in the *d* parameter.
  exceptions:
  - type: System.InvalidOperationException
    description: The @'System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)' method has been called previously for this task.
  - type: System.ArgumentNullException
    description: '*d* is null.'
- uid: System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)
  id: PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)
  parent: System.ComponentModel.AsyncOperation
  href: System.ComponentModel.AsyncOperation.yml
  name: PostOperationCompleted(SendOrPostCallback, Object)
  fullName: System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs
    startLine: 58
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Ends the lifetime of an asynchronous operation.
  syntax:
    content: public void PostOperationCompleted(SendOrPostCallback d, object arg)
    content.vb: Public Sub PostOperationCompleted(d As SendOrPostCallback, arg As Object)
    parameters:
    - id: d
      type: System.Threading.SendOrPostCallback
      description: A @'System.Threading.SendOrPostCallback' object that wraps the delegate to be called when the operation ends.
    - id: arg
      type: System.Object
      description: An argument for the delegate contained in the *d* parameter.
  exceptions:
  - type: System.InvalidOperationException
    description: '@''System.ComponentModel.AsyncOperation.OperationCompleted'' has been called previously for this task.'
  - type: System.ArgumentNullException
    description: '*d* is null.'
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Threading.SynchronizationContext
  parent: System.Threading
  isExternal: false
  href: System.Threading.SynchronizationContext.yml
  name: SynchronizationContext
  fullName: System.Threading.SynchronizationContext
  type: Class
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
  type: Namespace
- uid: System.Threading.SendOrPostCallback
  parent: System.Threading
  isExternal: false
  href: System.Threading.SendOrPostCallback.yml
  name: SendOrPostCallback
  fullName: System.Threading.SendOrPostCallback
  type: Delegate
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  href: System.InvalidOperationException.yml
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  type: Class
  summary: The exception that is thrown when a method call is invalid for the object's current state.
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  type: Class
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
