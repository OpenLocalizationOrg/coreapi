items:
- uid: System.Diagnostics.Debug
  commentId: T:System.Diagnostics.Debug
  id: Debug
  parent: System.Diagnostics
  children:
  - System.Diagnostics.Debug.Assert(System.Boolean)
  - System.Diagnostics.Debug.Assert(System.Boolean,System.String)
  - System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)
  - System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])
  - System.Diagnostics.Debug.Fail(System.String)
  - System.Diagnostics.Debug.Fail(System.String,System.String)
  - System.Diagnostics.Debug.Write(System.Object)
  - System.Diagnostics.Debug.Write(System.Object,System.String)
  - System.Diagnostics.Debug.Write(System.String)
  - System.Diagnostics.Debug.Write(System.String,System.String)
  - System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)
  - System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)
  - System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)
  - System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)
  - System.Diagnostics.Debug.WriteLine(System.Object)
  - System.Diagnostics.Debug.WriteLine(System.Object,System.String)
  - System.Diagnostics.Debug.WriteLine(System.String)
  - System.Diagnostics.Debug.WriteLine(System.String,System.Object[])
  - System.Diagnostics.Debug.WriteLine(System.String,System.String)
  - System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)
  - System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)
  - System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)
  - System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)
  langs:
  - csharp
  - vb
  name: Debug
  nameWithType: Debug
  fullName: System.Diagnostics.Debug
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.Debug/src/System/Diagnostics/Debug.Public.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Debug
    path: src/System.Diagnostics.Debug/src/System/Diagnostics/Debug.Public.cs
    startLine: 7
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Provides a set of methods and properties that help debug your code.</p>\n"
  remarks: "\n<p>If you use methods in the <xref href=\"System.Diagnostics.Debug\" data-throw-if-not-resolved=\"false\"></xref> class to print debugging information and check your logic with assertions, you can make your code more robust without impacting the performance and code size of your shipping product.</p>\n<p>This class provides methods to display an <xref href=\"System.Diagnostics.Debug.Assert(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> dialog box, and to emit an assertion that will always fail. This class provides write methods in the following variations: <xref href=\"System.Diagnostics.Debug.Write(System.String)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Diagnostics.Debug.WriteLine(System.String)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <xref href=\"System.Diagnostics.BooleanSwitch\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Diagnostics.TraceSwitch\" data-throw-if-not-resolved=\"false\"></xref> classes provide means to dynamically control the tracing output. You can modify the values of these switches without recompiling your application. For information on using the configuration file to set a switch, see the <xref href=\"System.Diagnostics.Switch\" data-throw-if-not-resolved=\"false\"></xref> class and the Trace Switches topic.</p>\n<p>You can customize the tracing output's target by adding <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> instances to or removing instances from the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. The <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection is shared by both the <xref href=\"System.Diagnostics.Debug\" data-throw-if-not-resolved=\"false\"></xref> and the <xref href=\"System.Diagnostics.Trace\" data-throw-if-not-resolved=\"false\"></xref> classes; adding a trace listener to either class adds the listener to both. By default, the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> class emits trace output.</p>\n<p>Adding a trace listener to the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available. The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic. It may be useful to place calls to the <xref href=\"System.Diagnostics.Debug\" data-throw-if-not-resolved=\"false\"></xref> methods in <strong>try</strong>/<strong>catch</strong> blocks to detect and handle any exceptions from trace listeners.</p>\n<p>You can modify the level of indentation using the <xref href=\"System.Diagnostics.Debug.Indent\" data-throw-if-not-resolved=\"false\"></xref> method or the <xref href=\"System.Diagnostics.Debug.IndentLevel\" data-throw-if-not-resolved=\"false\"></xref> property. To modify the indent spacing, use the <xref href=\"System.Diagnostics.Debug.IndentSize\" data-throw-if-not-resolved=\"false\"></xref> property. You can specify whether to automatically flush the output buffer after each write by setting the <xref href=\"System.Diagnostics.Debug.AutoFlush\" data-throw-if-not-resolved=\"false\"></xref> property to <strong>true</strong>.</p>\n<p>To set the <xref href=\"System.Diagnostics.Debug.AutoFlush\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Diagnostics.Debug.IndentSize\" data-throw-if-not-resolved=\"false\"></xref> for <xref href=\"System.Diagnostics.Debug\" data-throw-if-not-resolved=\"false\"></xref>, you can edit the configuration file corresponding to the name of your application. The configuration file should be formatted as shown in the following example. </p>\n<pre><code><configuration>\n<system.diagnostics>\n<trace autoflush=\"true\" indentsize=\"7\" />\n</system.diagnostics>\n</configuration></code></pre>\n<p>The <xref href=\"System.Diagnostics.ConditionalAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute is applied to the methods of <xref href=\"System.Diagnostics.Debug\" data-throw-if-not-resolved=\"false\"></xref>. Compilers that support <xref href=\"System.Diagnostics.ConditionalAttribute\" data-throw-if-not-resolved=\"false\"></xref> ignore calls to these methods unless \"DEBUG\" is defined as a conditional compilation symbol. Refer to a compiler's documentation to determine whether <xref href=\"System.Diagnostics.ConditionalAttribute\" data-throw-if-not-resolved=\"false\"></xref> is supported and the syntax for defining a conditional compilation symbol.</p>\n<p>In Visual Studio C# and Visual Basic projects, by default, the \"DEBUG\" conditional compilation symbol is defined for debug builds, and the \"TRACE\" symbol is defined for both debug and release builds. For information about how to disable this behavior, see the Visual Studio documentation. For information about conditional debugging in Visual C++, see Debug Class (C++/CLI).</p>\n<p>To define the \"DEBUG\" conditional compilation symbol in C#, add the <strong>/d:DEBUG</strong> option to the compiler command line when you compile your code using a command line, or add <strong>#define DEBUG</strong> to the top of your file. In Visual Basic, add the <strong>/d:DEBUG=True</strong> option to the compiler command line or add <strong>#Const DEBUG=True</strong> to the file. </p>\n"
  syntax:
    content: public class Debug
    content.vb: Public Class Debug
  seealso:
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.Switch
    commentId: T:System.Diagnostics.Switch
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.EventLogTraceListener
    commentId: T:System.Diagnostics.EventLogTraceListener
  - type: System.Diagnostics.TraceListenerCollection
    commentId: T:System.Diagnostics.TraceListenerCollection
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Diagnostics.Debug.Assert(System.Boolean)
  commentId: M:System.Diagnostics.Debug.Assert(System.Boolean)
  id: Assert(System.Boolean)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: Assert(Boolean)
  nameWithType: Debug.Assert(Boolean)
  fullName: System.Diagnostics.Debug.Assert(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Assert
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 12
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Checks for a condition; if the condition is <strong>false</strong>, displays a message box that shows the call stack.</p>\n"
  remarks: "\n<p>By default, the <xref href=\"System.Diagnostics.Debug.Assert(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> method works only in debug builds. Use the <xref href=\"System.Diagnostics.Trace.Assert(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> method if you want to do assertions in release builds. For more information, see Assertions in Managed Code.</p>\n<p>The <strong>Assert</strong> methods are not available for Windows Store apps.</p>\n<p>Typically, the <xref href=\"System.Diagnostics.Debug.Assert(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> method is used to identify logic errors during program development. <xref href=\"System.Diagnostics.Debug.Assert(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> evaluates the condition. If the result is <strong>false</strong>, it sends a failure message to the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. You can customize this behavior by adding a <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> to, or removing one from, the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. </p>\n<p>When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: Abort, Retry, and Ignore. Clicking the Abort button terminates the application. Clicking Retry sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking Ignore continues with the next instruction in the code. </p>\n<p>Windows 8.x Store apps do not support modal dialog boxes, so they behave the same in user interface mode and non-user interface mode. The message is written to the active trace listeners in debugging mode, or no message is written in release mode.</p>\n<p>The display of the message box depends on the presence of the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>. If the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> is not in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, the message box is not displayed. The <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> can be removed by the <clear> Element for <listeners> for <trace>, the <remove> Element for <listeners> for <trace>, or by calling the <xref href=\"System.Diagnostics.TraceListenerCollection.Clear\" data-throw-if-not-resolved=\"false\"></xref> method on the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> property (<code>System.Diagnostics.Trace.Listeners.Clear()</code>).</p>\n<p>You can change the behavior of the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref href=\"System.Diagnostics.DefaultTraceListener.LogFileName\" data-throw-if-not-resolved=\"false\"></xref> property. The configuration file should be formatted as follows: </p>\n<pre><code><configuration>\n<system.diagnostics>\n<assert assertuienabled=\"true\" logfilename=\"c:\\\\myFile.log\" />\n</system.diagnostics>\n</configuration></code></pre>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void Assert(bool condition)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub Assert(condition As Boolean)
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>The conditional expression to evaluate. If the condition is <strong>true</strong>, a failure message is not sent and the message box is not displayed.</p>\n"
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.Assert(System.Boolean,System.String)
  commentId: M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)
  id: Assert(System.Boolean,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: Assert(Boolean, String)
  nameWithType: Debug.Assert(Boolean, String)
  fullName: System.Diagnostics.Debug.Assert(System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Assert
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 14
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Checks for a condition; if the condition is <strong>false</strong>, outputs a specified message and displays a message box that shows the call stack.</p>\n"
  remarks: "\n<p>By default, the <xref href=\"System.Diagnostics.Debug.Assert(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> method works only in debug builds. Use the <xref href=\"System.Diagnostics.Trace.Assert(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> method if you want to do assertions in release builds. For more information, see Assertions in Managed Code.</p>\n<p>Typically, the <xref href=\"System.Diagnostics.Debug.Assert(System.Boolean,System.String)\" data-throw-if-not-resolved=\"false\"></xref> method is used to identify logic errors during program development. <xref href=\"System.Diagnostics.Debug.Assert(System.Boolean,System.String)\" data-throw-if-not-resolved=\"false\"></xref> evaluates the condition. If the result is <strong>false</strong>, it sends the specified diagnostic message to the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. You can customize this behavior by adding a <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> to, or removing one from, the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n<p>When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: Abort, Retry, and Ignore. Clicking the Abort button terminates the application. Clicking Retry sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking Ignore continues with the next instruction in the code.</p>\n<p>The display of the message box depends on the presence of the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>. If the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> is not in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, the message box is not displayed. The <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> can be removed by the <clear> Element for <listeners> for <trace>, the <remove> Element for <listeners> for <trace>, or by calling the <xref href=\"System.Diagnostics.TraceListenerCollection.Clear\" data-throw-if-not-resolved=\"false\"></xref> method on the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> property (<code>System.Diagnostics.Trace.Listeners.Clear()</code>).</p>\n<p>You can change the behavior of the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref href=\"System.Diagnostics.DefaultTraceListener.LogFileName\" data-throw-if-not-resolved=\"false\"></xref> property. The configuration file should be formatted as follows: </p>\n<pre><code><configuration>\n<system.diagnostics>\n<assert assertuienabled=\"true\" logfilename=\"c:\\\\myFile.log\" />\n</system.diagnostics>\n</configuration></code></pre>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void Assert(bool condition, string message)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub Assert(condition As Boolean, message As String)
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>The conditional expression to evaluate. If the condition is <strong>true</strong>, the specified message is not sent and the message box is not displayed.  </p>\n"
    - id: message
      type: System.String
      description: "\n<p>The message to send to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. </p>\n"
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)
  commentId: M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)
  id: Assert(System.Boolean,System.String,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: Assert(Boolean, String, String)
  nameWithType: Debug.Assert(Boolean, String, String)
  fullName: System.Diagnostics.Debug.Assert(System.Boolean, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Assert
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 16
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Checks for a condition; if the condition is <strong>false</strong>, outputs two specified messages and displays a message box that shows the call stack.</p>\n"
  remarks: "\n<p>By default, the <xref href=\"System.Diagnostics.Debug.Assert(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> method works only in debug builds. Use the <xref href=\"System.Diagnostics.Trace.Assert(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> method if you want to do assertions in release builds. For more information, see Assertions in Managed Code.</p>\n<p>Typically, the <xref href=\"System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)\" data-throw-if-not-resolved=\"false\"></xref> method is used to identify logic errors during program development. <xref href=\"System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)\" data-throw-if-not-resolved=\"false\"></xref> evaluates the condition. If the result is <strong>false</strong>, it sends the specified diagnostic message and detailed message to the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. You can customize this behavior by adding a <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> to, or removing one from, the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n<p>When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: Abort, Retry, and Ignore. Clicking the Abort button terminates the application. Clicking Retry sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking Ignore continues with the next instruction in the code.</p>\n<p>The display of the message box depends on the presence of the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>. If the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> is not in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, the message box is not displayed. The <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> can be removed by the <clear> Element for <listeners> for <trace>, the <remove> Element for <listeners> for <trace>, or by calling the <xref href=\"System.Diagnostics.TraceListenerCollection.Clear\" data-throw-if-not-resolved=\"false\"></xref> method on the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> property (<code>System.Diagnostics.Trace.Listeners.Clear()</code>).</p>\n<p>You can change the behavior of the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref href=\"System.Diagnostics.DefaultTraceListener.LogFileName\" data-throw-if-not-resolved=\"false\"></xref> property. The configuration file should be formatted as follows: </p>\n<pre><code><configuration>\n<system.diagnostics>\n<assert assertuienabled=\"true\" logfilename=\"c:\\\\myFile.log\" />\n</system.diagnostics>\n</configuration></code></pre>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void Assert(bool condition, string message, string detailMessage)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub Assert(condition As Boolean, message As String, detailMessage As String)
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>The conditional expression to evaluate. If the condition is <strong>true</strong>, the specified messages are not sent and the message box is not displayed.  </p>\n"
    - id: message
      type: System.String
      description: "\n<p>The message to send to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. </p>\n"
    - id: detailMessage
      type: System.String
      description: "\n<p>The detailed message to send to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. </p>\n"
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])
  commentId: M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])
  id: Assert(System.Boolean,System.String,System.String,System.Object[])
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: Assert(Boolean, String, String, Object[])
  nameWithType: Debug.Assert(Boolean, String, String, Object[])
  fullName: System.Diagnostics.Debug.Assert(System.Boolean, System.String, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Assert
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 18
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Checks for a condition; if the condition is <strong>false</strong>, outputs two messages (simple and formatted) and displays a message box that shows the call stack.</p>\n"
  remarks: "\n<p>This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string. The resulting string is sent to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.  </p>\n<p>By default, the <xref href=\"System.Diagnostics.Debug.Assert(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> method works only in debug builds. Use the <xref href=\"System.Diagnostics.Trace.Assert(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> method if you want to do assertions in release builds. For more information, see Assertions in Managed Code.</p>\n<p>Typically, the <xref href=\"System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])\" data-throw-if-not-resolved=\"false\"></xref> method is used to identify logic errors during program development. <xref href=\"System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])\" data-throw-if-not-resolved=\"false\"></xref> evaluates the condition. If the result is <strong>false</strong>, The <xref href=\"System.String.Format(System.String,System.Object[])\" data-throw-if-not-resolved=\"false\"></xref> method is called and the <em>detailMessageFormat</em> string and <em>args</em> array are passed in as parameters. <xref href=\"System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])\" data-throw-if-not-resolved=\"false\"></xref> then sends the specified text message and the formatted text message to the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. You can customize this behavior by adding a <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> to, or removing one from, the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n<p>When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: Abort, Retry, and Ignore. Clicking the Abort button terminates the application. Clicking Retry sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking Ignore continues with the next instruction in the code.</p>\n<p>The display of the message box is dependent on the presence of the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>. If the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> is not in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, the message box is not displayed. The <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> can be removed by the <clear> Element for <listeners> for <trace>, the <remove> Element for <listeners> for <trace>, or by calling the <xref href=\"System.Diagnostics.TraceListenerCollection.Clear\" data-throw-if-not-resolved=\"false\"></xref> method on the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> property (<code>System.Diagnostics.Trace.Listeners.Clear()</code>).</p>\n<p>You can change the behavior of the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref href=\"System.Diagnostics.DefaultTraceListener.LogFileName\" data-throw-if-not-resolved=\"false\"></xref> property. The configuration file should be formatted as follows: </p>\n<pre><code><configuration>\n<system.diagnostics>\n<assert assertuienabled=\"true\" logfilename=\"c:\\\\myFile.log\" />\n</system.diagnostics>\n</configuration></code></pre>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void Assert(bool condition, string message, string detailMessageFormat, params object[] args)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub Assert(condition As Boolean, message As String, detailMessageFormat As String, ParamArray args As Object())
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>The conditional expression to evaluate. If the condition is <strong>true</strong>, the specified messages are not sent and the message box is not displayed.  </p>\n"
    - id: message
      type: System.String
      description: "\n<p>The message to send to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. </p>\n"
    - id: detailMessageFormat
      type: System.String
      description: "\n<p>The composite format string (see Remarks) to send to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. This message contains text intermixed with zero or more format items, which correspond to objects in the <em>args</em> array.</p>\n"
    - id: args
      type: System.Object[]
      description: "\n<p>An object array that contains zero or more objects to format.</p>\n"
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  nameWithType.vb: Debug.Assert(Boolean, String, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Diagnostics.Debug.Assert(System.Boolean, System.String, System.String, System.Object())
  name.vb: Assert(Boolean, String, String, Object())
- uid: System.Diagnostics.Debug.Fail(System.String)
  commentId: M:System.Diagnostics.Debug.Fail(System.String)
  id: Fail(System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: Fail(String)
  nameWithType: Debug.Fail(String)
  fullName: System.Diagnostics.Debug.Fail(System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Fail
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 20
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Emits the specified error message.</p>\n"
  remarks: "\n<p>The default behavior is that the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> outputs the message to a message box when the application is running in user interface mode and to the <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> instances in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. </p>\n<p>The display of the message box is dependent on the presence of the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>. If the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> is not in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, the message box is not displayed. The <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> can be removed by the <clear> Element for <listeners> for <trace>, the <remove> Element for <listeners> for <trace>, or by calling the <xref href=\"System.Diagnostics.TraceListenerCollection.Clear\" data-throw-if-not-resolved=\"false\"></xref> method on the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> property (<code>System.Diagnostics.Trace.Listeners.Clear()</code>).</p>\n<p>You can customize this behavior by adding a <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> to, or removing one from, the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void Fail(string message)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub Fail(message As String)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>A message to emit. </p>\n"
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.Fail(System.String,System.String)
  commentId: M:System.Diagnostics.Debug.Fail(System.String,System.String)
  id: Fail(System.String,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: Fail(String, String)
  nameWithType: Debug.Fail(String, String)
  fullName: System.Diagnostics.Debug.Fail(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Fail
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 22
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Emits an error message and a detailed error message.</p>\n"
  remarks: "\n<p>The default behavior is that the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> outputs the message to a message box when the application is running in user interface mode and to the <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> instances in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. </p>\n<p>The display of the message box is dependent on the presence of the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>. If the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> is not in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, the message box is not displayed. The <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> can be removed by the <clear> Element for <listeners> for <trace>, the <remove> Element for <listeners> for <trace>, or by calling the <xref href=\"System.Diagnostics.TraceListenerCollection.Clear\" data-throw-if-not-resolved=\"false\"></xref> method on the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> property (<code>System.Diagnostics.Trace.Listeners.Clear()</code>).</p>\n<p>You can customize this behavior by adding a <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> to, or removing one from, the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void Fail(string message, string detailMessage)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub Fail(message As String, detailMessage As String)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>A message to emit. </p>\n"
    - id: detailMessage
      type: System.String
      description: "\n<p>A detailed message to emit. </p>\n"
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.Write(System.Object)
  commentId: M:System.Diagnostics.Debug.Write(System.Object)
  id: Write(System.Object)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: Write(Object)
  nameWithType: Debug.Write(Object)
  fullName: System.Diagnostics.Debug.Write(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 24
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.Write(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void Write(object value)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub Write(value As Object)
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.Write(System.Object,System.String)
  commentId: M:System.Diagnostics.Debug.Write(System.Object,System.String)
  id: Write(System.Object,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: Write(Object, String)
  nameWithType: Debug.Write(Object, String)
  fullName: System.Diagnostics.Debug.Write(System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 26
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Use the <em>category</em> parameter to group output messages.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.Write(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void Write(object value, string category)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub Write(value As Object, category As String)
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
    - id: category
      type: System.String
      description: "\n<p>A category name used to organize the output. </p>\n"
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.Write(System.String)
  commentId: M:System.Diagnostics.Debug.Write(System.String)
  id: Write(System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: Write(String)
  nameWithType: Debug.Write(String)
  fullName: System.Diagnostics.Debug.Write(System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 28
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.Write(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void Write(string message)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub Write(message As String)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>A message to write. </p>\n"
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.Write(System.String,System.String)
  commentId: M:System.Diagnostics.Debug.Write(System.String,System.String)
  id: Write(System.String,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: Write(String, String)
  nameWithType: Debug.Write(String, String)
  fullName: System.Diagnostics.Debug.Write(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 30
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Use the <em>category</em> parameter to group output messages.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.Write(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void Write(string message, string category)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub Write(message As String, category As String)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>A message to write. </p>\n"
    - id: category
      type: System.String
      description: "\n<p>A category name used to organize the output. </p>\n"
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)
  commentId: M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)
  id: WriteIf(System.Boolean,System.Object)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteIf(Boolean, Object)
  nameWithType: Debug.WriteIf(Boolean, Object)
  fullName: System.Diagnostics.Debug.WriteIf(System.Boolean, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteIf
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 32
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.Write(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteIf(bool condition, object value)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteIf(condition As Boolean, value As Object)
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>The conditional expression to evaluate. If the condition is <strong>true</strong>, the value is written to the trace listeners in the collection.</p>\n"
    - id: value
      type: System.Object
      description: "\n<p>An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)
  commentId: M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)
  id: WriteIf(System.Boolean,System.Object,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteIf(Boolean, Object, String)
  nameWithType: Debug.WriteIf(Boolean, Object, String)
  fullName: System.Diagnostics.Debug.WriteIf(System.Boolean, System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteIf
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 34
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <em>category</em> parameter can be used to group output messages.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.Write(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteIf(bool condition, object value, string category)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteIf(condition As Boolean, value As Object, category As String)
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>The conditional expression to evaluate. If the condition is <strong>true</strong>, the category name and value are written to the trace listeners in the collection.</p>\n"
    - id: value
      type: System.Object
      description: "\n<p>An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
    - id: category
      type: System.String
      description: "\n<p>A category name used to organize the output. </p>\n"
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)
  commentId: M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)
  id: WriteIf(System.Boolean,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteIf(Boolean, String)
  nameWithType: Debug.WriteIf(Boolean, String)
  fullName: System.Diagnostics.Debug.WriteIf(System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteIf
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 36
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.Write(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteIf(bool condition, string message)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteIf(condition As Boolean, message As String)
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>The conditional expression to evaluate. If the condition is <strong>true</strong>, the message is written to the trace listeners in the collection.</p>\n"
    - id: message
      type: System.String
      description: "\n<p>A message to write. </p>\n"
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)
  commentId: M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)
  id: WriteIf(System.Boolean,System.String,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteIf(Boolean, String, String)
  nameWithType: Debug.WriteIf(Boolean, String, String)
  fullName: System.Diagnostics.Debug.WriteIf(System.Boolean, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteIf
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 38
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <em>category</em> parameter can be used to group output messages.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.Write(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteIf(bool condition, string message, string category)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteIf(condition As Boolean, message As String, category As String)
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>The conditional expression to evaluate. If the condition is <strong>true</strong>, the category name and message are written to the trace listeners in the collection.</p>\n"
    - id: message
      type: System.String
      description: "\n<p>A message to write. </p>\n"
    - id: category
      type: System.String
      description: "\n<p>A category name used to organize the output. </p>\n"
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteLine(System.Object)
  commentId: M:System.Diagnostics.Debug.WriteLine(System.Object)
  id: WriteLine(System.Object)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteLine(Object)
  nameWithType: Debug.WriteLine(Object)
  fullName: System.Diagnostics.Debug.WriteLine(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLine
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 40
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.WriteLine(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteLine(object value)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteLine(value As Object)
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteLine(System.Object,System.String)
  commentId: M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)
  id: WriteLine(System.Object,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteLine(Object, String)
  nameWithType: Debug.WriteLine(Object, String)
  fullName: System.Diagnostics.Debug.WriteLine(System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLine
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 42
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <em>category</em> parameter can be used to group output messages.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.WriteLine(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteLine(object value, string category)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteLine(value As Object, category As String)
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
    - id: category
      type: System.String
      description: "\n<p>A category name used to organize the output. </p>\n"
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteLine(System.String)
  commentId: M:System.Diagnostics.Debug.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteLine(String)
  nameWithType: Debug.WriteLine(String)
  fullName: System.Diagnostics.Debug.WriteLine(System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLine
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 44
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a message followed by a line terminator to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.WriteLine(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteLine(string message)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteLine(message As String)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>A message to write. </p>\n"
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteLine(System.String,System.Object[])
  commentId: M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])
  id: WriteLine(System.String,System.Object[])
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteLine(String, Object[])
  nameWithType: Debug.WriteLine(String, Object[])
  fullName: System.Diagnostics.Debug.WriteLine(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLine
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 46
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a formatted message followed by a line terminator to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  remarks: "\n<p>This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.  </p>\n<p>The  keyword in the syntax for this method implies that the object array can be a single value. The exception to this is the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> object. Explicit overloads take precedence, so an <em>arg</em> value of a single string will default to the <xref href=\"System.Diagnostics.Debug.WriteLine(System.String,System.String)\" data-throw-if-not-resolved=\"false\"></xref> overload.</p>\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.WriteLine(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteLine(string format, params object[] args)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteLine(format As String, ParamArray args As Object())
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A composite format string (see Remarks) that contains text intermixed with zero or more format items, which correspond to objects in the <em>args</em> array.</p>\n"
    - id: args
      type: System.Object[]
      description: "\n<p>An object array that contains zero or more objects to format. </p>\n"
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  nameWithType.vb: Debug.WriteLine(String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Diagnostics.Debug.WriteLine(System.String, System.Object())
  name.vb: WriteLine(String, Object())
- uid: System.Diagnostics.Debug.WriteLine(System.String,System.String)
  commentId: M:System.Diagnostics.Debug.WriteLine(System.String,System.String)
  id: WriteLine(System.String,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteLine(String, String)
  nameWithType: Debug.WriteLine(String, String)
  fullName: System.Diagnostics.Debug.WriteLine(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLine
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 48
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <em>category</em> parameter can be used to group output messages.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.WriteLine(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteLine(string message, string category)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteLine(message As String, category As String)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>A message to write. </p>\n"
    - id: category
      type: System.String
      description: "\n<p>A category name used to organize the output. </p>\n"
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)
  commentId: M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)
  id: WriteLineIf(System.Boolean,System.Object)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteLineIf(Boolean, Object)
  nameWithType: Debug.WriteLineIf(Boolean, Object)
  fullName: System.Diagnostics.Debug.WriteLineIf(System.Boolean, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLineIf
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 50
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.WriteLine(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteLineIf(bool condition, object value)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteLineIf(condition As Boolean, value As Object)
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>The conditional expression to evaluate. If the condition is <strong>true</strong>, the value is written to the trace listeners in the collection.</p>\n"
    - id: value
      type: System.Object
      description: "\n<p>An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)
  commentId: M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)
  id: WriteLineIf(System.Boolean,System.Object,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteLineIf(Boolean, Object, String)
  nameWithType: Debug.WriteLineIf(Boolean, Object, String)
  fullName: System.Diagnostics.Debug.WriteLineIf(System.Boolean, System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLineIf
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 52
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <em>category</em> parameter can be used to group output messages.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.WriteLine(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteLineIf(bool condition, object value, string category)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteLineIf(condition As Boolean, value As Object, category As String)
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>The conditional expression to evaluate. If the condition is <strong>true</strong>, the category name and value are written to the trace listeners in the collection.</p>\n"
    - id: value
      type: System.Object
      description: "\n<p>An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
    - id: category
      type: System.String
      description: "\n<p>A category name used to organize the output. </p>\n"
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)
  commentId: M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)
  id: WriteLineIf(System.Boolean,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteLineIf(Boolean, String)
  nameWithType: Debug.WriteLineIf(Boolean, String)
  fullName: System.Diagnostics.Debug.WriteLineIf(System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLineIf
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 54
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.WriteLine(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteLineIf(bool condition, string message)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteLineIf(condition As Boolean, message As String)
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>The conditional expression to evaluate. If the condition is <strong>true</strong>, the message is written to the trace listeners in the collection.</p>\n"
    - id: message
      type: System.String
      description: "\n<p>A message to write. </p>\n"
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)
  commentId: M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)
  id: WriteLineIf(System.Boolean,System.String,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteLineIf(Boolean, String, String)
  nameWithType: Debug.WriteLineIf(Boolean, String, String)
  fullName: System.Diagnostics.Debug.WriteLineIf(System.Boolean, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLineIf
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 56
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <em>category</em> parameter can be used to group output messages.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.WriteLine(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteLineIf(bool condition, string message, string category)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteLineIf(condition As Boolean, message As String, category As String)
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to cause a message to be written; otherwise, <strong>false</strong>. </p>\n"
    - id: message
      type: System.String
      description: "\n<p>A message to write. </p>\n"
    - id: category
      type: System.String
      description: "\n<p>A category name used to organize the output. </p>\n"
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  nameWithType: System.Diagnostics
  fullName: System.Diagnostics
  commentId: N:System.Diagnostics
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
  commentId: N:System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
  commentId: T:System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
  commentId: T:System.String
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
